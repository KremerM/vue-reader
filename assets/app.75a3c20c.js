function Qp(e,t){const n=Object.create(null),r=e.split(",");for(let a=0;a<r.length;a++)n[r[a]]=!0;return t?a=>!!n[a.toLowerCase()]:a=>!!n[a]}const ON="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt",RN=Qp(ON);function lt(e){if(et(e)){const t={};for(let n=0;n<e.length;n++){const r=e[n],a=Pt(r)?HN(r):lt(r);if(a)for(const l in a)t[l]=a[l]}return t}else{if(Pt(e))return e;if(Jt(e))return e}}const JN=/;(?![^(]*\))/g,FN=/:([^]+)/,zN=/\/\*.*?\*\//gs;function HN(e){const t={};return e.replace(zN,"").split(JN).forEach(n=>{if(n){const r=n.split(FN);r.length>1&&(t[r[0].trim()]=r[1].trim())}}),t}function q(e){let t="";if(Pt(e))t=e;else if(et(e))for(let n=0;n<e.length;n++){const r=q(e[n]);r&&(t+=r+" ")}else if(Jt(e))for(const n in e)e[n]&&(t+=n+" ");return t.trim()}function fa(e){if(!e)return null;let{class:t,style:n}=e;return t&&!Pt(t)&&(e.class=q(t)),n&&(e.style=lt(n)),e}const ZN="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",GN=Qp(ZN);function HA(e){return!!e||e===""}function CN(e,t){if(e.length!==t.length)return!1;let n=!0;for(let r=0;n&&r<e.length;r++)n=vo(e[r],t[r]);return n}function vo(e,t){if(e===t)return!0;let n=bi(e),r=bi(t);if(n||r)return n&&r?e.getTime()===t.getTime():!1;if(n=ic(e),r=ic(t),n||r)return e===t;if(n=et(e),r=et(t),n||r)return n&&r?CN(e,t):!1;if(n=Jt(e),r=Jt(t),n||r){if(!n||!r)return!1;const a=Object.keys(e).length,l=Object.keys(t).length;if(a!==l)return!1;for(const o in e){const i=e.hasOwnProperty(o),s=t.hasOwnProperty(o);if(i&&!s||!i&&s||!vo(e[o],t[o]))return!1}}return String(e)===String(t)}function _p(e,t){return e.findIndex(n=>vo(n,t))}const je=e=>Pt(e)?e:e==null?"":et(e)||Jt(e)&&(e.toString===GA||!ht(e.toString))?JSON.stringify(e,ZA,2):String(e),ZA=(e,t)=>t&&t.__v_isRef?ZA(e,t.value):bs(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((n,[r,a])=>(n[`${r} =>`]=a,n),{})}:xi(t)?{[`Set(${t.size})`]:[...t.values()]}:Jt(t)&&!et(t)&&!ep(t)?String(t):t,vn={},vs=[],en=()=>{},MN=()=>!1,DN=/^on[^a-z]/,Yc=e=>DN.test(e),h0=e=>e.startsWith("onUpdate:"),Rn=Object.assign,m0=(e,t)=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)},EN=Object.prototype.hasOwnProperty,Zt=(e,t)=>EN.call(e,t),et=Array.isArray,bs=e=>Qc(e)==="[object Map]",xi=e=>Qc(e)==="[object Set]",bi=e=>Qc(e)==="[object Date]",ht=e=>typeof e=="function",Pt=e=>typeof e=="string",ic=e=>typeof e=="symbol",Jt=e=>e!==null&&typeof e=="object",xs=e=>Jt(e)&&ht(e.then)&&ht(e.catch),GA=Object.prototype.toString,Qc=e=>GA.call(e),mf=e=>Qc(e).slice(8,-1),ep=e=>Qc(e)==="[object Object]",S0=e=>Pt(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,Ju=Qp(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),$p=e=>{const t=Object.create(null);return n=>t[n]||(t[n]=e(n))},IN=/-(\w)/g,Tr=$p(e=>e.replace(IN,(t,n)=>n?n.toUpperCase():"")),BN=/\B([A-Z])/g,ga=$p(e=>e.replace(BN,"-$1").toLowerCase()),tu=$p(e=>e.charAt(0).toUpperCase()+e.slice(1)),Fu=$p(e=>e?`on${tu(e)}`:""),Xs=(e,t)=>!Object.is(e,t),hs=(e,t)=>{for(let n=0;n<e.length;n++)e[n](t)},tp=(e,t,n)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:n})},xl=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let dS;const YN=()=>dS||(dS=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});let _r;class y0{constructor(t=!1){this.detached=t,this.active=!0,this.effects=[],this.cleanups=[],this.parent=_r,!t&&_r&&(this.index=(_r.scopes||(_r.scopes=[])).push(this)-1)}run(t){if(this.active){const n=_r;try{return _r=this,t()}finally{_r=n}}}on(){_r=this}off(){_r=this.parent}stop(t){if(this.active){let n,r;for(n=0,r=this.effects.length;n<r;n++)this.effects[n].stop();for(n=0,r=this.cleanups.length;n<r;n++)this.cleanups[n]();if(this.scopes)for(n=0,r=this.scopes.length;n<r;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!t){const a=this.parent.scopes.pop();a&&a!==this&&(this.parent.scopes[this.index]=a,a.index=this.index)}this.parent=void 0,this.active=!1}}}function ev(e){return new y0(e)}function CA(e,t=_r){t&&t.active&&t.effects.push(e)}function MA(){return _r}function A0(e){_r&&_r.cleanups.push(e)}const W0=e=>{const t=new Set(e);return t.w=0,t.n=0,t},DA=e=>(e.w&bo)>0,EA=e=>(e.n&bo)>0,QN=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=bo},_N=e=>{const{deps:t}=e;if(t.length){let n=0;for(let r=0;r<t.length;r++){const a=t[r];DA(a)&&!EA(a)?a.delete(e):t[n++]=a,a.w&=~bo,a.n&=~bo}t.length=n}},d1=new WeakMap;let ju=0,bo=1;const f1=30;let xa;const li=Symbol(""),p1=Symbol("");class _c{constructor(t,n=null,r){this.fn=t,this.scheduler=n,this.active=!0,this.deps=[],this.parent=void 0,CA(this,r)}run(){if(!this.active)return this.fn();let t=xa,n=co;for(;t;){if(t===this)return;t=t.parent}try{return this.parent=xa,xa=this,co=!0,bo=1<<++ju,ju<=f1?QN(this):fS(this),this.fn()}finally{ju<=f1&&_N(this),bo=1<<--ju,xa=this.parent,co=n,this.parent=void 0,this.deferStop&&this.stop()}}stop(){xa===this?this.deferStop=!0:this.active&&(fS(this),this.onStop&&this.onStop(),this.active=!1)}}function fS(e){const{deps:t}=e;if(t.length){for(let n=0;n<t.length;n++)t[n].delete(e);t.length=0}}function $N(e,t){e.effect&&(e=e.effect.fn);const n=new _c(e);t&&(Rn(n,t),t.scope&&CA(n,t.scope)),(!t||!t.lazy)&&n.run();const r=n.run.bind(n);return r.effect=n,r}function ex(e){e.effect.stop()}let co=!0;const IA=[];function nu(){IA.push(co),co=!1}function ru(){const e=IA.pop();co=e===void 0?!0:e}function ra(e,t,n){if(co&&xa){let r=d1.get(e);r||d1.set(e,r=new Map);let a=r.get(n);a||r.set(n,a=W0()),BA(a)}}function BA(e,t){let n=!1;ju<=f1?EA(e)||(e.n|=bo,n=!DA(e)):n=!e.has(xa),n&&(e.add(xa),xa.deps.push(e))}function Xl(e,t,n,r,a,l){const o=d1.get(e);if(!o)return;let i=[];if(t==="clear")i=[...o.values()];else if(n==="length"&&et(e)){const s=xl(r);o.forEach((u,d)=>{(d==="length"||d>=s)&&i.push(u)})}else switch(n!==void 0&&i.push(o.get(n)),t){case"add":et(e)?S0(n)&&i.push(o.get("length")):(i.push(o.get(li)),bs(e)&&i.push(o.get(p1)));break;case"delete":et(e)||(i.push(o.get(li)),bs(e)&&i.push(o.get(p1)));break;case"set":bs(e)&&i.push(o.get(li));break}if(i.length===1)i[0]&&v1(i[0]);else{const s=[];for(const u of i)u&&s.push(...u);v1(W0(s))}}function v1(e,t){const n=et(e)?e:[...e];for(const r of n)r.computed&&pS(r);for(const r of n)r.computed||pS(r)}function pS(e,t){(e!==xa||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const tx=Qp("__proto__,__v_isRef,__isVue"),YA=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(ic)),nx=tv(),rx=tv(!1,!0),ax=tv(!0),lx=tv(!0,!0),vS=ox();function ox(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...n){const r=_t(this);for(let l=0,o=this.length;l<o;l++)ra(r,"get",l+"");const a=r[t](...n);return a===-1||a===!1?r[t](...n.map(_t)):a}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...n){nu();const r=_t(this)[t].apply(this,n);return ru(),r}}),e}function tv(e=!1,t=!1){return function(r,a,l){if(a==="__v_isReactive")return!e;if(a==="__v_isReadonly")return e;if(a==="__v_isShallow")return t;if(a==="__v_raw"&&l===(e?t?r7:n7:t?t7:e7).get(r))return r;const o=et(r);if(!e&&o&&Zt(vS,a))return Reflect.get(vS,a,l);const i=Reflect.get(r,a,l);return(ic(a)?YA.has(a):tx(a))||(e||ra(r,"get",a),t)?i:Qt(i)?o&&S0(a)?i:i.value:Jt(i)?e?xo(i):Bt(i):i}}const ix=QA(),sx=QA(!0);function QA(e=!1){return function(n,r,a,l){let o=n[r];if(hi(o)&&Qt(o)&&!Qt(a))return!1;if(!e&&(!sc(a)&&!hi(a)&&(o=_t(o),a=_t(a)),!et(n)&&Qt(o)&&!Qt(a)))return o.value=a,!0;const i=et(n)&&S0(r)?Number(r)<n.length:Zt(n,r),s=Reflect.set(n,r,a,l);return n===_t(l)&&(i?Xs(a,o)&&Xl(n,"set",r,a):Xl(n,"add",r,a)),s}}function ux(e,t){const n=Zt(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&n&&Xl(e,"delete",t,void 0),r}function cx(e,t){const n=Reflect.has(e,t);return(!ic(t)||!YA.has(t))&&ra(e,"has",t),n}function dx(e){return ra(e,"iterate",et(e)?"length":li),Reflect.ownKeys(e)}const _A={get:nx,set:ix,deleteProperty:ux,has:cx,ownKeys:dx},$A={get:ax,set(e,t){return!0},deleteProperty(e,t){return!0}},fx=Rn({},_A,{get:rx,set:sx}),px=Rn({},$A,{get:lx}),k0=e=>e,nv=e=>Reflect.getPrototypeOf(e);function jd(e,t,n=!1,r=!1){e=e.__v_raw;const a=_t(e),l=_t(t);n||(t!==l&&ra(a,"get",t),ra(a,"get",l));const{has:o}=nv(a),i=r?k0:n?T0:uc;if(o.call(a,t))return i(e.get(t));if(o.call(a,l))return i(e.get(l));e!==a&&e.get(t)}function Ld(e,t=!1){const n=this.__v_raw,r=_t(n),a=_t(e);return t||(e!==a&&ra(r,"has",e),ra(r,"has",a)),e===a?n.has(e):n.has(e)||n.has(a)}function qd(e,t=!1){return e=e.__v_raw,!t&&ra(_t(e),"iterate",li),Reflect.get(e,"size",e)}function bS(e){e=_t(e);const t=_t(this);return nv(t).has.call(t,e)||(t.add(e),Xl(t,"add",e,e)),this}function hS(e,t){t=_t(t);const n=_t(this),{has:r,get:a}=nv(n);let l=r.call(n,e);l||(e=_t(e),l=r.call(n,e));const o=a.call(n,e);return n.set(e,t),l?Xs(t,o)&&Xl(n,"set",e,t):Xl(n,"add",e,t),this}function mS(e){const t=_t(this),{has:n,get:r}=nv(t);let a=n.call(t,e);a||(e=_t(e),a=n.call(t,e)),r&&r.call(t,e);const l=t.delete(e);return a&&Xl(t,"delete",e,void 0),l}function SS(){const e=_t(this),t=e.size!==0,n=e.clear();return t&&Xl(e,"clear",void 0,void 0),n}function Ud(e,t){return function(r,a){const l=this,o=l.__v_raw,i=_t(o),s=t?k0:e?T0:uc;return!e&&ra(i,"iterate",li),o.forEach((u,d)=>r.call(a,s(u),s(d),l))}}function Od(e,t,n){return function(...r){const a=this.__v_raw,l=_t(a),o=bs(l),i=e==="entries"||e===Symbol.iterator&&o,s=e==="keys"&&o,u=a[e](...r),d=n?k0:t?T0:uc;return!t&&ra(l,"iterate",s?p1:li),{next(){const{value:f,done:p}=u.next();return p?{value:f,done:p}:{value:i?[d(f[0]),d(f[1])]:d(f),done:p}},[Symbol.iterator](){return this}}}}function Ml(e){return function(...t){return e==="delete"?!1:this}}function vx(){const e={get(l){return jd(this,l)},get size(){return qd(this)},has:Ld,add:bS,set:hS,delete:mS,clear:SS,forEach:Ud(!1,!1)},t={get(l){return jd(this,l,!1,!0)},get size(){return qd(this)},has:Ld,add:bS,set:hS,delete:mS,clear:SS,forEach:Ud(!1,!0)},n={get(l){return jd(this,l,!0)},get size(){return qd(this,!0)},has(l){return Ld.call(this,l,!0)},add:Ml("add"),set:Ml("set"),delete:Ml("delete"),clear:Ml("clear"),forEach:Ud(!0,!1)},r={get(l){return jd(this,l,!0,!0)},get size(){return qd(this,!0)},has(l){return Ld.call(this,l,!0)},add:Ml("add"),set:Ml("set"),delete:Ml("delete"),clear:Ml("clear"),forEach:Ud(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(l=>{e[l]=Od(l,!1,!1),n[l]=Od(l,!0,!1),t[l]=Od(l,!1,!0),r[l]=Od(l,!0,!0)}),[e,n,t,r]}const[bx,hx,mx,Sx]=vx();function rv(e,t){const n=t?e?Sx:mx:e?hx:bx;return(r,a,l)=>a==="__v_isReactive"?!e:a==="__v_isReadonly"?e:a==="__v_raw"?r:Reflect.get(Zt(n,a)&&a in r?n:r,a,l)}const yx={get:rv(!1,!1)},Ax={get:rv(!1,!0)},Wx={get:rv(!0,!1)},kx={get:rv(!0,!0)},e7=new WeakMap,t7=new WeakMap,n7=new WeakMap,r7=new WeakMap;function Vx(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Px(e){return e.__v_skip||!Object.isExtensible(e)?0:Vx(mf(e))}function Bt(e){return hi(e)?e:av(e,!1,_A,yx,e7)}function V0(e){return av(e,!1,fx,Ax,t7)}function xo(e){return av(e,!0,$A,Wx,n7)}function Tx(e){return av(e,!0,px,kx,r7)}function av(e,t,n,r,a){if(!Jt(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const l=a.get(e);if(l)return l;const o=Px(e);if(o===0)return e;const i=new Proxy(e,o===2?r:n);return a.set(e,i),i}function Ba(e){return hi(e)?Ba(e.__v_raw):!!(e&&e.__v_isReactive)}function hi(e){return!!(e&&e.__v_isReadonly)}function sc(e){return!!(e&&e.__v_isShallow)}function P0(e){return Ba(e)||hi(e)}function _t(e){const t=e&&e.__v_raw;return t?_t(t):e}function kr(e){return tp(e,"__v_skip",!0),e}const uc=e=>Jt(e)?Bt(e):e,T0=e=>Jt(e)?xo(e):e;function K0(e){co&&xa&&(e=_t(e),BA(e.dep||(e.dep=W0())))}function lv(e,t){e=_t(e),e.dep&&v1(e.dep)}function Qt(e){return!!(e&&e.__v_isRef===!0)}function J(e){return a7(e,!1)}function nn(e){return a7(e,!0)}function a7(e,t){return Qt(e)?e:new Kx(e,t)}class Kx{constructor(t,n){this.__v_isShallow=n,this.dep=void 0,this.__v_isRef=!0,this._rawValue=n?t:_t(t),this._value=n?t:uc(t)}get value(){return K0(this),this._value}set value(t){const n=this.__v_isShallow||sc(t)||hi(t);t=n?t:_t(t),Xs(t,this._rawValue)&&(this._rawValue=t,this._value=n?t:uc(t),lv(this))}}function $i(e){lv(e)}function c(e){return Qt(e)?e.value:e}const Nx={get:(e,t,n)=>c(Reflect.get(e,t,n)),set:(e,t,n,r)=>{const a=e[t];return Qt(a)&&!Qt(n)?(a.value=n,!0):Reflect.set(e,t,n,r)}};function N0(e){return Ba(e)?e:new Proxy(e,Nx)}class xx{constructor(t){this.dep=void 0,this.__v_isRef=!0;const{get:n,set:r}=t(()=>K0(this),()=>lv(this));this._get=n,this._set=r}get value(){return this._get()}set value(t){this._set(t)}}function Xx(e){return new xx(e)}function Kn(e){const t=et(e)?new Array(e.length):{};for(const n in e)t[n]=bn(e,n);return t}class gx{constructor(t,n,r){this._object=t,this._key=n,this._defaultValue=r,this.__v_isRef=!0}get value(){const t=this._object[this._key];return t===void 0?this._defaultValue:t}set value(t){this._object[this._key]=t}}function bn(e,t,n){const r=e[t];return Qt(r)?r:new gx(e,t,n)}var l7;class wx{constructor(t,n,r,a){this._setter=n,this.dep=void 0,this.__v_isRef=!0,this[l7]=!1,this._dirty=!0,this.effect=new _c(t,()=>{this._dirty||(this._dirty=!0,lv(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!a,this.__v_isReadonly=r}get value(){const t=_t(this);return K0(t),(t._dirty||!t._cacheable)&&(t._dirty=!1,t._value=t.effect.run()),t._value}set value(t){this._setter(t)}}l7="__v_isReadonly";function o7(e,t,n=!1){let r,a;const l=ht(e);return l?(r=e,a=en):(r=e.get,a=e.set),new wx(r,a,l||!a,n)}function i7(e,...t){}function Pl(e,t,n,r){let a;try{a=r?e(...r):e()}catch(l){Xi(l,t,n)}return a}function na(e,t,n,r){if(ht(e)){const l=Pl(e,t,n,r);return l&&xs(l)&&l.catch(o=>{Xi(o,t,n)}),l}const a=[];for(let l=0;l<e.length;l++)a.push(na(e[l],t,n,r));return a}function Xi(e,t,n,r=!0){const a=t?t.vnode:null;if(t){let l=t.parent;const o=t.proxy,i=n;for(;l;){const u=l.ec;if(u){for(let d=0;d<u.length;d++)if(u[d](e,o,i)===!1)return}l=l.parent}const s=t.appContext.config.errorHandler;if(s){Pl(s,null,10,[e,o,i]);return}}jx(e,n,a,r)}function jx(e,t,n,r=!0){console.error(e)}let cc=!1,b1=!1;const dr=[];let Ca=0;const ms=[];let bl=null,Mo=0;const s7=Promise.resolve();let x0=null;function at(e){const t=x0||s7;return e?t.then(this?e.bind(this):e):t}function Lx(e){let t=Ca+1,n=dr.length;for(;t<n;){const r=t+n>>>1;dc(dr[r])<e?t=r+1:n=r}return t}function ov(e){(!dr.length||!dr.includes(e,cc&&e.allowRecurse?Ca+1:Ca))&&(e.id==null?dr.push(e):dr.splice(Lx(e.id),0,e),u7())}function u7(){!cc&&!b1&&(b1=!0,x0=s7.then(c7))}function qx(e){const t=dr.indexOf(e);t>Ca&&dr.splice(t,1)}function X0(e){et(e)?ms.push(...e):(!bl||!bl.includes(e,e.allowRecurse?Mo+1:Mo))&&ms.push(e),u7()}function yS(e,t=cc?Ca+1:0){for(;t<dr.length;t++){const n=dr[t];n&&n.pre&&(dr.splice(t,1),t--,n())}}function np(e){if(ms.length){const t=[...new Set(ms)];if(ms.length=0,bl){bl.push(...t);return}for(bl=t,bl.sort((n,r)=>dc(n)-dc(r)),Mo=0;Mo<bl.length;Mo++)bl[Mo]();bl=null,Mo=0}}const dc=e=>e.id==null?1/0:e.id,Ux=(e,t)=>{const n=dc(e)-dc(t);if(n===0){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return n};function c7(e){b1=!1,cc=!0,dr.sort(Ux);const t=en;try{for(Ca=0;Ca<dr.length;Ca++){const n=dr[Ca];n&&n.active!==!1&&Pl(n,null,14)}}finally{Ca=0,dr.length=0,np(),cc=!1,x0=null,(dr.length||ms.length)&&c7()}}let es,Rd=[];function d7(e,t){var n,r;es=e,es?(es.enabled=!0,Rd.forEach(({event:a,args:l})=>es.emit(a,...l)),Rd=[]):typeof window<"u"&&window.HTMLElement&&!(!((r=(n=window.navigator)===null||n===void 0?void 0:n.userAgent)===null||r===void 0)&&r.includes("jsdom"))?((t.__VUE_DEVTOOLS_HOOK_REPLAY__=t.__VUE_DEVTOOLS_HOOK_REPLAY__||[]).push(l=>{d7(l,t)}),setTimeout(()=>{es||(t.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Rd=[])},3e3)):Rd=[]}function Ox(e,t,...n){if(e.isUnmounted)return;const r=e.vnode.props||vn;let a=n;const l=t.startsWith("update:"),o=l&&t.slice(7);if(o&&o in r){const d=`${o==="modelValue"?"model":o}Modifiers`,{number:f,trim:p}=r[d]||vn;p&&(a=n.map(b=>Pt(b)?b.trim():b)),f&&(a=n.map(xl))}let i,s=r[i=Fu(t)]||r[i=Fu(Tr(t))];!s&&l&&(s=r[i=Fu(ga(t))]),s&&na(s,e,6,a);const u=r[i+"Once"];if(u){if(!e.emitted)e.emitted={};else if(e.emitted[i])return;e.emitted[i]=!0,na(u,e,6,a)}}function f7(e,t,n=!1){const r=t.emitsCache,a=r.get(e);if(a!==void 0)return a;const l=e.emits;let o={},i=!1;if(!ht(e)){const s=u=>{const d=f7(u,t,!0);d&&(i=!0,Rn(o,d))};!n&&t.mixins.length&&t.mixins.forEach(s),e.extends&&s(e.extends),e.mixins&&e.mixins.forEach(s)}return!l&&!i?(Jt(e)&&r.set(e,null),null):(et(l)?l.forEach(s=>o[s]=null):Rn(o,l),Jt(e)&&r.set(e,o),o)}function iv(e,t){return!e||!Yc(t)?!1:(t=t.slice(2).replace(/Once$/,""),Zt(e,t[0].toLowerCase()+t.slice(1))||Zt(e,ga(t))||Zt(e,t))}let pr=null,sv=null;function fc(e){const t=pr;return pr=e,sv=e&&e.type.__scopeId||null,t}function Mr(e){sv=e}function Dr(){sv=null}const Rx=e=>B;function B(e,t=pr,n){if(!t||e._n)return e;const r=(...a)=>{r._d&&k1(-1);const l=fc(t);let o;try{o=e(...a)}finally{fc(l),r._d&&k1(1)}return o};return r._n=!0,r._c=!0,r._d=!0,r}function Sf(e){const{type:t,vnode:n,proxy:r,withProxy:a,props:l,propsOptions:[o],slots:i,attrs:s,emit:u,render:d,renderCache:f,data:p,setupState:b,ctx:A,inheritAttrs:h}=e;let m,v;const S=fc(e);try{if(n.shapeFlag&4){const W=a||r;m=$r(d.call(W,W,f,l,b,p,A)),v=s}else{const W=t;m=$r(W.length>1?W(l,{attrs:s,slots:i,emit:u}):W(l,null)),v=t.props?s:Fx(s)}}catch(W){Zu.length=0,Xi(W,e,1),m=C(Qn)}let y=m;if(v&&h!==!1){const W=Object.keys(v),{shapeFlag:k}=y;W.length&&k&7&&(o&&W.some(h0)&&(v=zx(v,o)),y=Ua(y,v))}return n.dirs&&(y=Ua(y),y.dirs=y.dirs?y.dirs.concat(n.dirs):n.dirs),n.transition&&(y.transition=n.transition),m=y,fc(S),m}function Jx(e){let t;for(let n=0;n<e.length;n++){const r=e[n];if(cn(r)){if(r.type!==Qn||r.children==="v-if"){if(t)return;t=r}}else return}return t}const Fx=e=>{let t;for(const n in e)(n==="class"||n==="style"||Yc(n))&&((t||(t={}))[n]=e[n]);return t},zx=(e,t)=>{const n={};for(const r in e)(!h0(r)||!(r.slice(9)in t))&&(n[r]=e[r]);return n};function Hx(e,t,n){const{props:r,children:a,component:l}=e,{props:o,children:i,patchFlag:s}=t,u=l.emitsOptions;if(t.dirs||t.transition)return!0;if(n&&s>=0){if(s&1024)return!0;if(s&16)return r?AS(r,o,u):!!o;if(s&8){const d=t.dynamicProps;for(let f=0;f<d.length;f++){const p=d[f];if(o[p]!==r[p]&&!iv(u,p))return!0}}}else return(a||i)&&(!i||!i.$stable)?!0:r===o?!1:r?o?AS(r,o,u):!0:!!o;return!1}function AS(e,t,n){const r=Object.keys(t);if(r.length!==Object.keys(e).length)return!0;for(let a=0;a<r.length;a++){const l=r[a];if(t[l]!==e[l]&&!iv(n,l))return!0}return!1}function g0({vnode:e,parent:t},n){for(;t&&t.subTree===e;)(e=t.vnode).el=n,t=t.parent}const p7=e=>e.__isSuspense,Zx={name:"Suspense",__isSuspense:!0,process(e,t,n,r,a,l,o,i,s,u){e==null?Cx(t,n,r,a,l,o,i,s,u):Mx(e,t,n,r,a,o,i,s,u)},hydrate:Dx,create:w0,normalize:Ex},Gx=Zx;function pc(e,t){const n=e.props&&e.props[t];ht(n)&&n()}function Cx(e,t,n,r,a,l,o,i,s){const{p:u,o:{createElement:d}}=s,f=d("div"),p=e.suspense=w0(e,a,r,t,f,n,l,o,i,s);u(null,p.pendingBranch=e.ssContent,f,null,r,p,l,o),p.deps>0?(pc(e,"onPending"),pc(e,"onFallback"),u(null,e.ssFallback,t,n,r,null,l,o),Ss(p,e.ssFallback)):p.resolve()}function Mx(e,t,n,r,a,l,o,i,{p:s,um:u,o:{createElement:d}}){const f=t.suspense=e.suspense;f.vnode=t,t.el=e.el;const p=t.ssContent,b=t.ssFallback,{activeBranch:A,pendingBranch:h,isInFallback:m,isHydrating:v}=f;if(h)f.pendingBranch=p,Ma(p,h)?(s(h,p,f.hiddenContainer,null,a,f,l,o,i),f.deps<=0?f.resolve():m&&(s(A,b,n,r,a,null,l,o,i),Ss(f,b))):(f.pendingId++,v?(f.isHydrating=!1,f.activeBranch=h):u(h,a,f),f.deps=0,f.effects.length=0,f.hiddenContainer=d("div"),m?(s(null,p,f.hiddenContainer,null,a,f,l,o,i),f.deps<=0?f.resolve():(s(A,b,n,r,a,null,l,o,i),Ss(f,b))):A&&Ma(p,A)?(s(A,p,n,r,a,f,l,o,i),f.resolve(!0)):(s(null,p,f.hiddenContainer,null,a,f,l,o,i),f.deps<=0&&f.resolve()));else if(A&&Ma(p,A))s(A,p,n,r,a,f,l,o,i),Ss(f,p);else if(pc(t,"onPending"),f.pendingBranch=p,f.pendingId++,s(null,p,f.hiddenContainer,null,a,f,l,o,i),f.deps<=0)f.resolve();else{const{timeout:S,pendingId:y}=f;S>0?setTimeout(()=>{f.pendingId===y&&f.fallback(b)},S):S===0&&f.fallback(b)}}function w0(e,t,n,r,a,l,o,i,s,u,d=!1){const{p:f,m:p,um:b,n:A,o:{parentNode:h,remove:m}}=u,v=xl(e.props&&e.props.timeout),S={vnode:e,parent:t,parentComponent:n,isSVG:o,container:r,hiddenContainer:a,anchor:l,deps:0,pendingId:0,timeout:typeof v=="number"?v:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:d,isUnmounted:!1,effects:[],resolve(y=!1){const{vnode:W,activeBranch:k,pendingBranch:V,pendingId:T,effects:P,parentComponent:x,container:g}=S;if(S.isHydrating)S.isHydrating=!1;else if(!y){const w=k&&V.transition&&V.transition.mode==="out-in";w&&(k.transition.afterLeave=()=>{T===S.pendingId&&p(V,g,R,0)});let{anchor:R}=S;k&&(R=A(k),b(k,x,S,!0)),w||p(V,g,R,0)}Ss(S,V),S.pendingBranch=null,S.isInFallback=!1;let j=S.parent,L=!1;for(;j;){if(j.pendingBranch){j.effects.push(...P),L=!0;break}j=j.parent}L||X0(P),S.effects=[],pc(W,"onResolve")},fallback(y){if(!S.pendingBranch)return;const{vnode:W,activeBranch:k,parentComponent:V,container:T,isSVG:P}=S;pc(W,"onFallback");const x=A(k),g=()=>{!S.isInFallback||(f(null,y,T,x,V,null,P,i,s),Ss(S,y))},j=y.transition&&y.transition.mode==="out-in";j&&(k.transition.afterLeave=g),S.isInFallback=!0,b(k,V,null,!0),j||g()},move(y,W,k){S.activeBranch&&p(S.activeBranch,y,W,k),S.container=y},next(){return S.activeBranch&&A(S.activeBranch)},registerDep(y,W){const k=!!S.pendingBranch;k&&S.deps++;const V=y.vnode.el;y.asyncDep.catch(T=>{Xi(T,y,0)}).then(T=>{if(y.isUnmounted||S.isUnmounted||S.pendingId!==y.suspenseId)return;y.asyncResolved=!0;const{vnode:P}=y;V1(y,T,!1),V&&(P.el=V);const x=!V&&y.subTree.el;W(y,P,h(V||y.subTree.el),V?null:A(y.subTree),S,o,s),x&&m(x),g0(y,P.el),k&&--S.deps===0&&S.resolve()})},unmount(y,W){S.isUnmounted=!0,S.activeBranch&&b(S.activeBranch,n,y,W),S.pendingBranch&&b(S.pendingBranch,n,y,W)}};return S}function Dx(e,t,n,r,a,l,o,i,s){const u=t.suspense=w0(t,r,n,e.parentNode,document.createElement("div"),null,a,l,o,i,!0),d=s(e,u.pendingBranch=t.ssContent,n,u,l,o);return u.deps===0&&u.resolve(),d}function Ex(e){const{shapeFlag:t,children:n}=e,r=t&32;e.ssContent=WS(r?n.default:n),e.ssFallback=r?WS(n.fallback):C(Qn)}function WS(e){let t;if(ht(e)){const n=Si&&e._c;n&&(e._d=!1,K()),e=e(),n&&(e._d=!0,t=Jr,O7())}return et(e)&&(e=Jx(e)),e=$r(e),t&&!e.dynamicChildren&&(e.dynamicChildren=t.filter(n=>n!==e)),e}function v7(e,t){t&&t.pendingBranch?et(e)?t.effects.push(...e):t.effects.push(e):X0(e)}function Ss(e,t){e.activeBranch=t;const{vnode:n,parentComponent:r}=e,a=n.el=t.el;r&&r.subTree===n&&(r.vnode.el=a,g0(r,a))}function zt(e,t){if(Yn){let n=Yn.provides;const r=Yn.parent&&Yn.parent.provides;r===n&&(n=Yn.provides=Object.create(r)),n[e]=t}}function tt(e,t,n=!1){const r=Yn||pr;if(r){const a=r.parent==null?r.vnode.appContext&&r.vnode.appContext.provides:r.parent.provides;if(a&&e in a)return a[e];if(arguments.length>1)return n&&ht(t)?t.call(r.proxy):t}}function Dn(e,t){return $c(e,null,t)}function j0(e,t){return $c(e,null,{flush:"post"})}function Ix(e,t){return $c(e,null,{flush:"sync"})}const Jd={};function Ve(e,t,n){return $c(e,t,n)}function $c(e,t,{immediate:n,deep:r,flush:a,onTrack:l,onTrigger:o}=vn){const i=Yn;let s,u=!1,d=!1;if(Qt(e)?(s=()=>e.value,u=sc(e)):Ba(e)?(s=()=>e,r=!0):et(e)?(d=!0,u=e.some(y=>Ba(y)||sc(y)),s=()=>e.map(y=>{if(Qt(y))return y.value;if(Ba(y))return Qo(y);if(ht(y))return Pl(y,i,2)})):ht(e)?t?s=()=>Pl(e,i,2):s=()=>{if(!(i&&i.isUnmounted))return f&&f(),na(e,i,3,[p])}:s=en,t&&r){const y=s;s=()=>Qo(y())}let f,p=y=>{f=v.onStop=()=>{Pl(y,i,4)}},b;if(ws)if(p=en,t?n&&na(t,i,3,[s(),d?[]:void 0,p]):s(),a==="sync"){const y=E7();b=y.__watcherHandles||(y.__watcherHandles=[])}else return en;let A=d?new Array(e.length).fill(Jd):Jd;const h=()=>{if(!!v.active)if(t){const y=v.run();(r||u||(d?y.some((W,k)=>Xs(W,A[k])):Xs(y,A)))&&(f&&f(),na(t,i,3,[y,A===Jd?void 0:d&&A[0]===Jd?[]:A,p]),A=y)}else v.run()};h.allowRecurse=!!t;let m;a==="sync"?m=h:a==="post"?m=()=>ar(h,i&&i.suspense):(h.pre=!0,i&&(h.id=i.uid),m=()=>ov(h));const v=new _c(s,m);t?n?h():A=v.run():a==="post"?ar(v.run.bind(v),i&&i.suspense):v.run();const S=()=>{v.stop(),i&&i.scope&&m0(i.scope.effects,v)};return b&&b.push(S),S}function Bx(e,t,n){const r=this.proxy,a=Pt(e)?e.includes(".")?b7(r,e):()=>r[e]:e.bind(r,r);let l;ht(t)?l=t:(l=t.handler,n=t);const o=Yn;So(this);const i=$c(a,l.bind(r),n);return o?So(o):fo(),i}function b7(e,t){const n=t.split(".");return()=>{let r=e;for(let a=0;a<n.length&&r;a++)r=r[n[a]];return r}}function Qo(e,t){if(!Jt(e)||e.__v_skip||(t=t||new Set,t.has(e)))return e;if(t.add(e),Qt(e))Qo(e.value,t);else if(et(e))for(let n=0;n<e.length;n++)Qo(e[n],t);else if(xi(e)||bs(e))e.forEach(n=>{Qo(n,t)});else if(ep(e))for(const n in e)Qo(e[n],t);return e}function L0(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return At(()=>{e.isMounted=!0}),tn(()=>{e.isUnmounting=!0}),e}const sa=[Function,Array],Yx={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:sa,onEnter:sa,onAfterEnter:sa,onEnterCancelled:sa,onBeforeLeave:sa,onLeave:sa,onAfterLeave:sa,onLeaveCancelled:sa,onBeforeAppear:sa,onAppear:sa,onAfterAppear:sa,onAppearCancelled:sa},setup(e,{slots:t}){const n=Tt(),r=L0();let a;return()=>{const l=t.default&&uv(t.default(),!0);if(!l||!l.length)return;let o=l[0];if(l.length>1){for(const h of l)if(h.type!==Qn){o=h;break}}const i=_t(e),{mode:s}=i;if(r.isLeaving)return ub(o);const u=kS(o);if(!u)return ub(o);const d=gs(u,i,r,n);mi(u,d);const f=n.subTree,p=f&&kS(f);let b=!1;const{getTransitionKey:A}=u.type;if(A){const h=A();a===void 0?a=h:h!==a&&(a=h,b=!0)}if(p&&p.type!==Qn&&(!Ma(u,p)||b)){const h=gs(p,i,r,n);if(mi(p,h),s==="out-in")return r.isLeaving=!0,h.afterLeave=()=>{r.isLeaving=!1,n.update.active!==!1&&n.update()},ub(o);s==="in-out"&&u.type!==Qn&&(h.delayLeave=(m,v,S)=>{const y=h7(r,p);y[String(p.key)]=p,m._leaveCb=()=>{v(),m._leaveCb=void 0,delete d.delayedLeave},d.delayedLeave=S})}return o}}},q0=Yx;function h7(e,t){const{leavingVNodes:n}=e;let r=n.get(t.type);return r||(r=Object.create(null),n.set(t.type,r)),r}function gs(e,t,n,r){const{appear:a,mode:l,persisted:o=!1,onBeforeEnter:i,onEnter:s,onAfterEnter:u,onEnterCancelled:d,onBeforeLeave:f,onLeave:p,onAfterLeave:b,onLeaveCancelled:A,onBeforeAppear:h,onAppear:m,onAfterAppear:v,onAppearCancelled:S}=t,y=String(e.key),W=h7(n,e),k=(P,x)=>{P&&na(P,r,9,x)},V=(P,x)=>{const g=x[1];k(P,x),et(P)?P.every(j=>j.length<=1)&&g():P.length<=1&&g()},T={mode:l,persisted:o,beforeEnter(P){let x=i;if(!n.isMounted)if(a)x=h||i;else return;P._leaveCb&&P._leaveCb(!0);const g=W[y];g&&Ma(e,g)&&g.el._leaveCb&&g.el._leaveCb(),k(x,[P])},enter(P){let x=s,g=u,j=d;if(!n.isMounted)if(a)x=m||s,g=v||u,j=S||d;else return;let L=!1;const w=P._enterCb=R=>{L||(L=!0,R?k(j,[P]):k(g,[P]),T.delayedLeave&&T.delayedLeave(),P._enterCb=void 0)};x?V(x,[P,w]):w()},leave(P,x){const g=String(e.key);if(P._enterCb&&P._enterCb(!0),n.isUnmounting)return x();k(f,[P]);let j=!1;const L=P._leaveCb=w=>{j||(j=!0,x(),w?k(A,[P]):k(b,[P]),P._leaveCb=void 0,W[g]===e&&delete W[g])};W[g]=e,p?V(p,[P,L]):L()},clone(P){return gs(P,t,n,r)}};return T}function ub(e){if(ed(e))return e=Ua(e),e.children=null,e}function kS(e){return ed(e)?e.children?e.children[0]:void 0:e}function mi(e,t){e.shapeFlag&6&&e.component?mi(e.component.subTree,t):e.shapeFlag&128?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.transition=t}function uv(e,t=!1,n){let r=[],a=0;for(let l=0;l<e.length;l++){let o=e[l];const i=n==null?o.key:String(n)+String(o.key!=null?o.key:l);o.type===Qe?(o.patchFlag&128&&a++,r=r.concat(uv(o.children,t,i))):(t||o.type!==Qn)&&r.push(i!=null?Ua(o,{key:i}):o)}if(a>1)for(let l=0;l<r.length;l++)r[l].patchFlag=-2;return r}function $(e){return ht(e)?{setup:e,name:e.name}:e}const oi=e=>!!e.type.__asyncLoader;function Qx(e){ht(e)&&(e={loader:e});const{loader:t,loadingComponent:n,errorComponent:r,delay:a=200,timeout:l,suspensible:o=!0,onError:i}=e;let s=null,u,d=0;const f=()=>(d++,s=null,p()),p=()=>{let b;return s||(b=s=t().catch(A=>{if(A=A instanceof Error?A:new Error(String(A)),i)return new Promise((h,m)=>{i(A,()=>h(f()),()=>m(A),d+1)});throw A}).then(A=>b!==s&&s?s:(A&&(A.__esModule||A[Symbol.toStringTag]==="Module")&&(A=A.default),u=A,A)))};return $({name:"AsyncComponentWrapper",__asyncLoader:p,get __asyncResolved(){return u},setup(){const b=Yn;if(u)return()=>cb(u,b);const A=S=>{s=null,Xi(S,b,13,!r)};if(o&&b.suspense||ws)return p().then(S=>()=>cb(S,b)).catch(S=>(A(S),()=>r?C(r,{error:S}):null));const h=J(!1),m=J(),v=J(!!a);return a&&setTimeout(()=>{v.value=!1},a),l!=null&&setTimeout(()=>{if(!h.value&&!m.value){const S=new Error(`Async component timed out after ${l}ms.`);A(S),m.value=S}},l),p().then(()=>{h.value=!0,b.parent&&ed(b.parent.vnode)&&ov(b.parent.update)}).catch(S=>{A(S),m.value=S}),()=>{if(h.value&&u)return cb(u,b);if(m.value&&r)return C(r,{error:m.value});if(n&&!v.value)return C(n)}}})}function cb(e,{vnode:{ref:t,props:n,children:r,shapeFlag:a},parent:l}){const o=C(e,n,r);return o.ref=t,o}const ed=e=>e.type.__isKeepAlive,_x={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(e,{slots:t}){const n=Tt(),r=n.ctx;if(!r.renderer)return()=>{const S=t.default&&t.default();return S&&S.length===1?S[0]:S};const a=new Map,l=new Set;let o=null;const i=n.suspense,{renderer:{p:s,m:u,um:d,o:{createElement:f}}}=r,p=f("div");r.activate=(S,y,W,k,V)=>{const T=S.component;u(S,y,W,0,i),s(T.vnode,S,y,W,T,i,k,S.slotScopeIds,V),ar(()=>{T.isDeactivated=!1,T.a&&hs(T.a);const P=S.props&&S.props.onVnodeMounted;P&&Ur(P,T.parent,S)},i)},r.deactivate=S=>{const y=S.component;u(S,p,null,1,i),ar(()=>{y.da&&hs(y.da);const W=S.props&&S.props.onVnodeUnmounted;W&&Ur(W,y.parent,S),y.isDeactivated=!0},i)};function b(S){db(S),d(S,n,i,!0)}function A(S){a.forEach((y,W)=>{const k=T1(y.type);k&&(!S||!S(k))&&h(W)})}function h(S){const y=a.get(S);!o||y.type!==o.type?b(y):o&&db(o),a.delete(S),l.delete(S)}Ve(()=>[e.include,e.exclude],([S,y])=>{S&&A(W=>Lu(S,W)),y&&A(W=>!Lu(y,W))},{flush:"post",deep:!0});let m=null;const v=()=>{m!=null&&a.set(m,fb(n.subTree))};return At(v),la(v),tn(()=>{a.forEach(S=>{const{subTree:y,suspense:W}=n,k=fb(y);if(S.type===k.type){db(k);const V=k.component.da;V&&ar(V,W);return}b(S)})}),()=>{if(m=null,!t.default)return null;const S=t.default(),y=S[0];if(S.length>1)return o=null,S;if(!cn(y)||!(y.shapeFlag&4)&&!(y.shapeFlag&128))return o=null,y;let W=fb(y);const k=W.type,V=T1(oi(W)?W.type.__asyncResolved||{}:k),{include:T,exclude:P,max:x}=e;if(T&&(!V||!Lu(T,V))||P&&V&&Lu(P,V))return o=W,y;const g=W.key==null?k:W.key,j=a.get(g);return W.el&&(W=Ua(W),y.shapeFlag&128&&(y.ssContent=W)),m=g,j?(W.el=j.el,W.component=j.component,W.transition&&mi(W,W.transition),W.shapeFlag|=512,l.delete(g),l.add(g)):(l.add(g),x&&l.size>parseInt(x,10)&&h(l.values().next().value)),W.shapeFlag|=256,o=W,p7(y.type)?y:W}}},$x=_x;function Lu(e,t){return et(e)?e.some(n=>Lu(n,t)):Pt(e)?e.split(",").includes(t):e.test?e.test(t):!1}function m7(e,t){S7(e,"a",t)}function U0(e,t){S7(e,"da",t)}function S7(e,t,n=Yn){const r=e.__wdc||(e.__wdc=()=>{let a=n;for(;a;){if(a.isDeactivated)return;a=a.parent}return e()});if(cv(t,r,n),n){let a=n.parent;for(;a&&a.parent;)ed(a.parent.vnode)&&eX(r,t,n,a),a=a.parent}}function eX(e,t,n,r){const a=cv(t,e,r,!0);mr(()=>{m0(r[t],a)},n)}function db(e){let t=e.shapeFlag;t&256&&(t-=256),t&512&&(t-=512),e.shapeFlag=t}function fb(e){return e.shapeFlag&128?e.ssContent:e}function cv(e,t,n=Yn,r=!1){if(n){const a=n[e]||(n[e]=[]),l=t.__weh||(t.__weh=(...o)=>{if(n.isUnmounted)return;nu(),So(n);const i=na(t,n,e,o);return fo(),ru(),i});return r?a.unshift(l):a.push(l),l}}const zl=e=>(t,n=Yn)=>(!ws||e==="sp")&&cv(e,(...r)=>t(...r),n),td=zl("bm"),At=zl("m"),O0=zl("bu"),la=zl("u"),tn=zl("bum"),mr=zl("um"),y7=zl("sp"),A7=zl("rtg"),W7=zl("rtc");function k7(e,t=Yn){cv("ec",e,t)}function Vt(e,t){const n=pr;if(n===null)return e;const r=fv(n)||n.proxy,a=e.dirs||(e.dirs=[]);for(let l=0;l<t.length;l++){let[o,i,s,u=vn]=t[l];o&&(ht(o)&&(o={mounted:o,updated:o}),o.deep&&Qo(i),a.push({dir:o,instance:r,value:i,oldValue:void 0,arg:s,modifiers:u}))}return e}function Za(e,t,n,r){const a=e.dirs,l=t&&t.dirs;for(let o=0;o<a.length;o++){const i=a[o];l&&(i.oldValue=l[o].value);let s=i.dir[r];s&&(nu(),na(s,n,8,[e.el,i,e,t]),ru())}}const R0="components",tX="directives";function rt(e,t){return J0(R0,e,!0,t)||e}const V7=Symbol();function Ot(e){return Pt(e)?J0(R0,e,!1)||e:e||V7}function ho(e){return J0(tX,e)}function J0(e,t,n=!0,r=!1){const a=pr||Yn;if(a){const l=a.type;if(e===R0){const i=T1(l,!1);if(i&&(i===t||i===Tr(t)||i===tu(Tr(t))))return l}const o=VS(a[e]||l[e],t)||VS(a.appContext[e],t);return!o&&r?l:o}}function VS(e,t){return e&&(e[t]||e[Tr(t)]||e[tu(Tr(t))])}function Nt(e,t,n,r){let a;const l=n&&n[r];if(et(e)||Pt(e)){a=new Array(e.length);for(let o=0,i=e.length;o<i;o++)a[o]=t(e[o],o,void 0,l&&l[o])}else if(typeof e=="number"){a=new Array(e);for(let o=0;o<e;o++)a[o]=t(o+1,o,void 0,l&&l[o])}else if(Jt(e))if(e[Symbol.iterator])a=Array.from(e,(o,i)=>t(o,i,void 0,l&&l[i]));else{const o=Object.keys(e);a=new Array(o.length);for(let i=0,s=o.length;i<s;i++){const u=o[i];a[i]=t(e[u],u,i,l&&l[i])}}else a=[];return n&&(n[r]=a),a}function tl(e,t){for(let n=0;n<t.length;n++){const r=t[n];if(et(r))for(let a=0;a<r.length;a++)e[r[a].name]=r[a].fn;else r&&(e[r.name]=r.key?(...a)=>{const l=r.fn(...a);return l&&(l.key=r.key),l}:r.fn)}return e}function ue(e,t,n={},r,a){if(pr.isCE||pr.parent&&oi(pr.parent)&&pr.parent.isCE)return C("slot",t==="default"?null:{name:t},r&&r());let l=e[t];l&&l._c&&(l._d=!1),K();const o=l&&P7(l(n)),i=ie(Qe,{key:n.key||o&&o.key||`_${t}`},o||(r?r():[]),o&&e._===1?64:-2);return!a&&i.scopeId&&(i.slotScopeIds=[i.scopeId+"-s"]),l&&l._c&&(l._d=!0),i}function P7(e){return e.some(t=>cn(t)?!(t.type===Qn||t.type===Qe&&!P7(t.children)):!0)?e:null}function T7(e,t){const n={};for(const r in e)n[t&&/[A-Z]/.test(r)?`on:${r}`:Fu(r)]=e[r];return n}const h1=e=>e?H7(e)?fv(e)||e.proxy:h1(e.parent):null,zu=Rn(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>h1(e.parent),$root:e=>h1(e.root),$emit:e=>e.emit,$options:e=>F0(e),$forceUpdate:e=>e.f||(e.f=()=>ov(e.update)),$nextTick:e=>e.n||(e.n=at.bind(e.proxy)),$watch:e=>Bx.bind(e)}),m1={get({_:e},t){const{ctx:n,setupState:r,data:a,props:l,accessCache:o,type:i,appContext:s}=e;let u;if(t[0]!=="$"){const b=o[t];if(b!==void 0)switch(b){case 1:return r[t];case 2:return a[t];case 4:return n[t];case 3:return l[t]}else{if(r!==vn&&Zt(r,t))return o[t]=1,r[t];if(a!==vn&&Zt(a,t))return o[t]=2,a[t];if((u=e.propsOptions[0])&&Zt(u,t))return o[t]=3,l[t];if(n!==vn&&Zt(n,t))return o[t]=4,n[t];S1&&(o[t]=0)}}const d=zu[t];let f,p;if(d)return t==="$attrs"&&ra(e,"get",t),d(e);if((f=i.__cssModules)&&(f=f[t]))return f;if(n!==vn&&Zt(n,t))return o[t]=4,n[t];if(p=s.config.globalProperties,Zt(p,t))return p[t]},set({_:e},t,n){const{data:r,setupState:a,ctx:l}=e;return a!==vn&&Zt(a,t)?(a[t]=n,!0):r!==vn&&Zt(r,t)?(r[t]=n,!0):Zt(e.props,t)||t[0]==="$"&&t.slice(1)in e?!1:(l[t]=n,!0)},has({_:{data:e,setupState:t,accessCache:n,ctx:r,appContext:a,propsOptions:l}},o){let i;return!!n[o]||e!==vn&&Zt(e,o)||t!==vn&&Zt(t,o)||(i=l[0])&&Zt(i,o)||Zt(r,o)||Zt(zu,o)||Zt(a.config.globalProperties,o)},defineProperty(e,t,n){return n.get!=null?e._.accessCache[t]=0:Zt(n,"value")&&this.set(e,t,n.value,null),Reflect.defineProperty(e,t,n)}},nX=Rn({},m1,{get(e,t){if(t!==Symbol.unscopables)return m1.get(e,t,e)},has(e,t){return t[0]!=="_"&&!RN(t)}});let S1=!0;function rX(e){const t=F0(e),n=e.proxy,r=e.ctx;S1=!1,t.beforeCreate&&PS(t.beforeCreate,e,"bc");const{data:a,computed:l,methods:o,watch:i,provide:s,inject:u,created:d,beforeMount:f,mounted:p,beforeUpdate:b,updated:A,activated:h,deactivated:m,beforeDestroy:v,beforeUnmount:S,destroyed:y,unmounted:W,render:k,renderTracked:V,renderTriggered:T,errorCaptured:P,serverPrefetch:x,expose:g,inheritAttrs:j,components:L,directives:w,filters:R}=t;if(u&&aX(u,r,null,e.appContext.config.unwrapInjectedRef),o)for(const U in o){const H=o[U];ht(H)&&(r[U]=H.bind(n))}if(a){const U=a.call(n,n);Jt(U)&&(e.data=Bt(U))}if(S1=!0,l)for(const U in l){const H=l[U],O=ht(H)?H.bind(n,n):ht(H.get)?H.get.bind(n,n):en,D=!ht(H)&&ht(H.set)?H.set.bind(n):en,Y=X({get:O,set:D});Object.defineProperty(r,U,{enumerable:!0,configurable:!0,get:()=>Y.value,set:Q=>Y.value=Q})}if(i)for(const U in i)K7(i[U],r,n,U);if(s){const U=ht(s)?s.call(n):s;Reflect.ownKeys(U).forEach(H=>{zt(H,U[H])})}d&&PS(d,e,"c");function G(U,H){et(H)?H.forEach(O=>U(O.bind(n))):H&&U(H.bind(n))}if(G(td,f),G(At,p),G(O0,b),G(la,A),G(m7,h),G(U0,m),G(k7,P),G(W7,V),G(A7,T),G(tn,S),G(mr,W),G(y7,x),et(g))if(g.length){const U=e.exposed||(e.exposed={});g.forEach(H=>{Object.defineProperty(U,H,{get:()=>n[H],set:O=>n[H]=O})})}else e.exposed||(e.exposed={});k&&e.render===en&&(e.render=k),j!=null&&(e.inheritAttrs=j),L&&(e.components=L),w&&(e.directives=w)}function aX(e,t,n=en,r=!1){et(e)&&(e=y1(e));for(const a in e){const l=e[a];let o;Jt(l)?"default"in l?o=tt(l.from||a,l.default,!0):o=tt(l.from||a):o=tt(l),Qt(o)&&r?Object.defineProperty(t,a,{enumerable:!0,configurable:!0,get:()=>o.value,set:i=>o.value=i}):t[a]=o}}function PS(e,t,n){na(et(e)?e.map(r=>r.bind(t.proxy)):e.bind(t.proxy),t,n)}function K7(e,t,n,r){const a=r.includes(".")?b7(n,r):()=>n[r];if(Pt(e)){const l=t[e];ht(l)&&Ve(a,l)}else if(ht(e))Ve(a,e.bind(n));else if(Jt(e))if(et(e))e.forEach(l=>K7(l,t,n,r));else{const l=ht(e.handler)?e.handler.bind(n):t[e.handler];ht(l)&&Ve(a,l,e)}}function F0(e){const t=e.type,{mixins:n,extends:r}=t,{mixins:a,optionsCache:l,config:{optionMergeStrategies:o}}=e.appContext,i=l.get(t);let s;return i?s=i:!a.length&&!n&&!r?s=t:(s={},a.length&&a.forEach(u=>rp(s,u,o,!0)),rp(s,t,o)),Jt(t)&&l.set(t,s),s}function rp(e,t,n,r=!1){const{mixins:a,extends:l}=t;l&&rp(e,l,n,!0),a&&a.forEach(o=>rp(e,o,n,!0));for(const o in t)if(!(r&&o==="expose")){const i=lX[o]||n&&n[o];e[o]=i?i(e[o],t[o]):t[o]}return e}const lX={data:TS,props:Go,emits:Go,methods:Go,computed:Go,beforeCreate:Ar,created:Ar,beforeMount:Ar,mounted:Ar,beforeUpdate:Ar,updated:Ar,beforeDestroy:Ar,beforeUnmount:Ar,destroyed:Ar,unmounted:Ar,activated:Ar,deactivated:Ar,errorCaptured:Ar,serverPrefetch:Ar,components:Go,directives:Go,watch:iX,provide:TS,inject:oX};function TS(e,t){return t?e?function(){return Rn(ht(e)?e.call(this,this):e,ht(t)?t.call(this,this):t)}:t:e}function oX(e,t){return Go(y1(e),y1(t))}function y1(e){if(et(e)){const t={};for(let n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function Ar(e,t){return e?[...new Set([].concat(e,t))]:t}function Go(e,t){return e?Rn(Rn(Object.create(null),e),t):t}function iX(e,t){if(!e)return t;if(!t)return e;const n=Rn(Object.create(null),e);for(const r in t)n[r]=Ar(e[r],t[r]);return n}function sX(e,t,n,r=!1){const a={},l={};tp(l,dv,1),e.propsDefaults=Object.create(null),N7(e,t,a,l);for(const o in e.propsOptions[0])o in a||(a[o]=void 0);n?e.props=r?a:V0(a):e.type.props?e.props=a:e.props=l,e.attrs=l}function uX(e,t,n,r){const{props:a,attrs:l,vnode:{patchFlag:o}}=e,i=_t(a),[s]=e.propsOptions;let u=!1;if((r||o>0)&&!(o&16)){if(o&8){const d=e.vnode.dynamicProps;for(let f=0;f<d.length;f++){let p=d[f];if(iv(e.emitsOptions,p))continue;const b=t[p];if(s)if(Zt(l,p))b!==l[p]&&(l[p]=b,u=!0);else{const A=Tr(p);a[A]=A1(s,i,A,b,e,!1)}else b!==l[p]&&(l[p]=b,u=!0)}}}else{N7(e,t,a,l)&&(u=!0);let d;for(const f in i)(!t||!Zt(t,f)&&((d=ga(f))===f||!Zt(t,d)))&&(s?n&&(n[f]!==void 0||n[d]!==void 0)&&(a[f]=A1(s,i,f,void 0,e,!0)):delete a[f]);if(l!==i)for(const f in l)(!t||!Zt(t,f)&&!0)&&(delete l[f],u=!0)}u&&Xl(e,"set","$attrs")}function N7(e,t,n,r){const[a,l]=e.propsOptions;let o=!1,i;if(t)for(let s in t){if(Ju(s))continue;const u=t[s];let d;a&&Zt(a,d=Tr(s))?!l||!l.includes(d)?n[d]=u:(i||(i={}))[d]=u:iv(e.emitsOptions,s)||(!(s in r)||u!==r[s])&&(r[s]=u,o=!0)}if(l){const s=_t(n),u=i||vn;for(let d=0;d<l.length;d++){const f=l[d];n[f]=A1(a,s,f,u[f],e,!Zt(u,f))}}return o}function A1(e,t,n,r,a,l){const o=e[n];if(o!=null){const i=Zt(o,"default");if(i&&r===void 0){const s=o.default;if(o.type!==Function&&ht(s)){const{propsDefaults:u}=a;n in u?r=u[n]:(So(a),r=u[n]=s.call(null,t),fo())}else r=s}o[0]&&(l&&!i?r=!1:o[1]&&(r===""||r===ga(n))&&(r=!0))}return r}function x7(e,t,n=!1){const r=t.propsCache,a=r.get(e);if(a)return a;const l=e.props,o={},i=[];let s=!1;if(!ht(e)){const d=f=>{s=!0;const[p,b]=x7(f,t,!0);Rn(o,p),b&&i.push(...b)};!n&&t.mixins.length&&t.mixins.forEach(d),e.extends&&d(e.extends),e.mixins&&e.mixins.forEach(d)}if(!l&&!s)return Jt(e)&&r.set(e,vs),vs;if(et(l))for(let d=0;d<l.length;d++){const f=Tr(l[d]);KS(f)&&(o[f]=vn)}else if(l)for(const d in l){const f=Tr(d);if(KS(f)){const p=l[d],b=o[f]=et(p)||ht(p)?{type:p}:Object.assign({},p);if(b){const A=XS(Boolean,b.type),h=XS(String,b.type);b[0]=A>-1,b[1]=h<0||A<h,(A>-1||Zt(b,"default"))&&i.push(f)}}}const u=[o,i];return Jt(e)&&r.set(e,u),u}function KS(e){return e[0]!=="$"}function NS(e){const t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:e===null?"null":""}function xS(e,t){return NS(e)===NS(t)}function XS(e,t){return et(t)?t.findIndex(n=>xS(n,e)):ht(t)&&xS(t,e)?0:-1}const X7=e=>e[0]==="_"||e==="$stable",z0=e=>et(e)?e.map($r):[$r(e)],cX=(e,t,n)=>{if(t._n)return t;const r=B((...a)=>z0(t(...a)),n);return r._c=!1,r},g7=(e,t,n)=>{const r=e._ctx;for(const a in e){if(X7(a))continue;const l=e[a];if(ht(l))t[a]=cX(a,l,r);else if(l!=null){const o=z0(l);t[a]=()=>o}}},w7=(e,t)=>{const n=z0(t);e.slots.default=()=>n},dX=(e,t)=>{if(e.vnode.shapeFlag&32){const n=t._;n?(e.slots=_t(t),tp(t,"_",n)):g7(t,e.slots={})}else e.slots={},t&&w7(e,t);tp(e.slots,dv,1)},fX=(e,t,n)=>{const{vnode:r,slots:a}=e;let l=!0,o=vn;if(r.shapeFlag&32){const i=t._;i?n&&i===1?l=!1:(Rn(a,t),!n&&i===1&&delete a._):(l=!t.$stable,g7(t,a)),o=t}else t&&(w7(e,t),o={default:1});if(l)for(const i in a)!X7(i)&&!(i in o)&&delete a[i]};function j7(){return{app:null,config:{isNativeTag:MN,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let pX=0;function vX(e,t){return function(r,a=null){ht(r)||(r=Object.assign({},r)),a!=null&&!Jt(a)&&(a=null);const l=j7(),o=new Set;let i=!1;const s=l.app={_uid:pX++,_component:r,_props:a,_container:null,_context:l,_instance:null,version:pv,get config(){return l.config},set config(u){},use(u,...d){return o.has(u)||(u&&ht(u.install)?(o.add(u),u.install(s,...d)):ht(u)&&(o.add(u),u(s,...d))),s},mixin(u){return l.mixins.includes(u)||l.mixins.push(u),s},component(u,d){return d?(l.components[u]=d,s):l.components[u]},directive(u,d){return d?(l.directives[u]=d,s):l.directives[u]},mount(u,d,f){if(!i){const p=C(r,a);return p.appContext=l,d&&t?t(p,u):e(p,u,f),i=!0,s._container=u,u.__vue_app__=s,fv(p.component)||p.component.proxy}},unmount(){i&&(e(null,s._container),delete s._container.__vue_app__)},provide(u,d){return l.provides[u]=d,s}};return s}}function ap(e,t,n,r,a=!1){if(et(e)){e.forEach((p,b)=>ap(p,t&&(et(t)?t[b]:t),n,r,a));return}if(oi(r)&&!a)return;const l=r.shapeFlag&4?fv(r.component)||r.component.proxy:r.el,o=a?null:l,{i,r:s}=e,u=t&&t.r,d=i.refs===vn?i.refs={}:i.refs,f=i.setupState;if(u!=null&&u!==s&&(Pt(u)?(d[u]=null,Zt(f,u)&&(f[u]=null)):Qt(u)&&(u.value=null)),ht(s))Pl(s,i,12,[o,d]);else{const p=Pt(s),b=Qt(s);if(p||b){const A=()=>{if(e.f){const h=p?Zt(f,s)?f[s]:d[s]:s.value;a?et(h)&&m0(h,l):et(h)?h.includes(l)||h.push(l):p?(d[s]=[l],Zt(f,s)&&(f[s]=d[s])):(s.value=[l],e.k&&(d[e.k]=s.value))}else p?(d[s]=o,Zt(f,s)&&(f[s]=o)):b&&(s.value=o,e.k&&(d[e.k]=o))};o?(A.id=-1,ar(A,n)):A()}}}let Dl=!1;const Fd=e=>/svg/.test(e.namespaceURI)&&e.tagName!=="foreignObject",zd=e=>e.nodeType===8;function bX(e){const{mt:t,p:n,o:{patchProp:r,createText:a,nextSibling:l,parentNode:o,remove:i,insert:s,createComment:u}}=e,d=(v,S)=>{if(!S.hasChildNodes()){n(null,v,S),np(),S._vnode=v;return}Dl=!1,f(S.firstChild,v,null,null,null),np(),S._vnode=v,Dl&&console.error("Hydration completed but contains mismatches.")},f=(v,S,y,W,k,V=!1)=>{const T=zd(v)&&v.data==="[",P=()=>h(v,S,y,W,k,T),{type:x,ref:g,shapeFlag:j,patchFlag:L}=S;let w=v.nodeType;S.el=v,L===-2&&(V=!1,S.dynamicChildren=null);let R=null;switch(x){case mo:w!==3?S.children===""?(s(S.el=a(""),o(v),v),R=v):R=P():(v.data!==S.children&&(Dl=!0,v.data=S.children),R=l(v));break;case Qn:w!==8||T?R=P():R=l(v);break;case ii:if(T&&(v=l(v),w=v.nodeType),w===1||w===3){R=v;const Z=!S.children.length;for(let G=0;G<S.staticCount;G++)Z&&(S.children+=R.nodeType===1?R.outerHTML:R.data),G===S.staticCount-1&&(S.anchor=R),R=l(R);return T?l(R):R}else P();break;case Qe:T?R=A(v,S,y,W,k,V):R=P();break;default:if(j&1)w!==1||S.type.toLowerCase()!==v.tagName.toLowerCase()?R=P():R=p(v,S,y,W,k,V);else if(j&6){S.slotScopeIds=k;const Z=o(v);if(t(S,Z,null,y,W,Fd(Z),V),R=T?m(v):l(v),R&&zd(R)&&R.data==="teleport end"&&(R=l(R)),oi(S)){let G;T?(G=C(Qe),G.anchor=R?R.previousSibling:Z.lastChild):G=v.nodeType===3?Xt(""):C("div"),G.el=v,S.component.subTree=G}}else j&64?w!==8?R=P():R=S.type.hydrate(v,S,y,W,k,V,e,b):j&128&&(R=S.type.hydrate(v,S,y,W,Fd(o(v)),k,V,e,f))}return g!=null&&ap(g,null,W,S),R},p=(v,S,y,W,k,V)=>{V=V||!!S.dynamicChildren;const{type:T,props:P,patchFlag:x,shapeFlag:g,dirs:j}=S,L=T==="input"&&j||T==="option";if(L||x!==-1){if(j&&Za(S,null,y,"created"),P)if(L||!V||x&48)for(const R in P)(L&&R.endsWith("value")||Yc(R)&&!Ju(R))&&r(v,R,null,P[R],!1,void 0,y);else P.onClick&&r(v,"onClick",null,P.onClick,!1,void 0,y);let w;if((w=P&&P.onVnodeBeforeMount)&&Ur(w,y,S),j&&Za(S,null,y,"beforeMount"),((w=P&&P.onVnodeMounted)||j)&&v7(()=>{w&&Ur(w,y,S),j&&Za(S,null,y,"mounted")},W),g&16&&!(P&&(P.innerHTML||P.textContent))){let R=b(v.firstChild,S,v,y,W,k,V);for(;R;){Dl=!0;const Z=R;R=R.nextSibling,i(Z)}}else g&8&&v.textContent!==S.children&&(Dl=!0,v.textContent=S.children)}return v.nextSibling},b=(v,S,y,W,k,V,T)=>{T=T||!!S.dynamicChildren;const P=S.children,x=P.length;for(let g=0;g<x;g++){const j=T?P[g]:P[g]=$r(P[g]);if(v)v=f(v,j,W,k,V,T);else{if(j.type===mo&&!j.children)continue;Dl=!0,n(null,j,y,null,W,k,Fd(y),V)}}return v},A=(v,S,y,W,k,V)=>{const{slotScopeIds:T}=S;T&&(k=k?k.concat(T):T);const P=o(v),x=b(l(v),S,P,y,W,k,V);return x&&zd(x)&&x.data==="]"?l(S.anchor=x):(Dl=!0,s(S.anchor=u("]"),P,x),x)},h=(v,S,y,W,k,V)=>{if(Dl=!0,S.el=null,V){const x=m(v);for(;;){const g=l(v);if(g&&g!==x)i(g);else break}}const T=l(v),P=o(v);return i(v),n(null,S,P,T,y,W,Fd(P),k),T},m=v=>{let S=0;for(;v;)if(v=l(v),v&&zd(v)&&(v.data==="["&&S++,v.data==="]")){if(S===0)return l(v);S--}return v};return[d,f]}const ar=v7;function L7(e){return U7(e)}function q7(e){return U7(e,bX)}function U7(e,t){const n=YN();n.__VUE__=!0;const{insert:r,remove:a,patchProp:l,createElement:o,createText:i,createComment:s,setText:u,setElementText:d,parentNode:f,nextSibling:p,setScopeId:b=en,insertStaticContent:A}=e,h=(_,re,ye,ge=null,Fe=null,Ae=null,Ze=!1,Ue=null,Pe=!!re.dynamicChildren)=>{if(_===re)return;_&&!Ma(_,re)&&(ge=me(_),Q(_,Fe,Ae,!0),_=null),re.patchFlag===-2&&(Pe=!1,re.dynamicChildren=null);const{type:qe,ref:De,shapeFlag:Me}=re;switch(qe){case mo:m(_,re,ye,ge);break;case Qn:v(_,re,ye,ge);break;case ii:_==null&&S(re,ye,ge,Ze);break;case Qe:L(_,re,ye,ge,Fe,Ae,Ze,Ue,Pe);break;default:Me&1?k(_,re,ye,ge,Fe,Ae,Ze,Ue,Pe):Me&6?w(_,re,ye,ge,Fe,Ae,Ze,Ue,Pe):(Me&64||Me&128)&&qe.process(_,re,ye,ge,Fe,Ae,Ze,Ue,Pe,Le)}De!=null&&Fe&&ap(De,_&&_.ref,Ae,re||_,!re)},m=(_,re,ye,ge)=>{if(_==null)r(re.el=i(re.children),ye,ge);else{const Fe=re.el=_.el;re.children!==_.children&&u(Fe,re.children)}},v=(_,re,ye,ge)=>{_==null?r(re.el=s(re.children||""),ye,ge):re.el=_.el},S=(_,re,ye,ge)=>{[_.el,_.anchor]=A(_.children,re,ye,ge,_.el,_.anchor)},y=({el:_,anchor:re},ye,ge)=>{let Fe;for(;_&&_!==re;)Fe=p(_),r(_,ye,ge),_=Fe;r(re,ye,ge)},W=({el:_,anchor:re})=>{let ye;for(;_&&_!==re;)ye=p(_),a(_),_=ye;a(re)},k=(_,re,ye,ge,Fe,Ae,Ze,Ue,Pe)=>{Ze=Ze||re.type==="svg",_==null?V(re,ye,ge,Fe,Ae,Ze,Ue,Pe):x(_,re,Fe,Ae,Ze,Ue,Pe)},V=(_,re,ye,ge,Fe,Ae,Ze,Ue)=>{let Pe,qe;const{type:De,props:Me,shapeFlag:_e,transition:Re,dirs:$e}=_;if(Pe=_.el=o(_.type,Ae,Me&&Me.is,Me),_e&8?d(Pe,_.children):_e&16&&P(_.children,Pe,null,ge,Fe,Ae&&De!=="foreignObject",Ze,Ue),$e&&Za(_,null,ge,"created"),Me){for(const yt in Me)yt!=="value"&&!Ju(yt)&&l(Pe,yt,null,Me[yt],Ae,_.children,ge,Fe,pe);"value"in Me&&l(Pe,"value",null,Me.value),(qe=Me.onVnodeBeforeMount)&&Ur(qe,ge,_)}T(Pe,_,_.scopeId,Ze,ge),$e&&Za(_,null,ge,"beforeMount");const dt=(!Fe||Fe&&!Fe.pendingBranch)&&Re&&!Re.persisted;dt&&Re.beforeEnter(Pe),r(Pe,re,ye),((qe=Me&&Me.onVnodeMounted)||dt||$e)&&ar(()=>{qe&&Ur(qe,ge,_),dt&&Re.enter(Pe),$e&&Za(_,null,ge,"mounted")},Fe)},T=(_,re,ye,ge,Fe)=>{if(ye&&b(_,ye),ge)for(let Ae=0;Ae<ge.length;Ae++)b(_,ge[Ae]);if(Fe){let Ae=Fe.subTree;if(re===Ae){const Ze=Fe.vnode;T(_,Ze,Ze.scopeId,Ze.slotScopeIds,Fe.parent)}}},P=(_,re,ye,ge,Fe,Ae,Ze,Ue,Pe=0)=>{for(let qe=Pe;qe<_.length;qe++){const De=_[qe]=Ue?to(_[qe]):$r(_[qe]);h(null,De,re,ye,ge,Fe,Ae,Ze,Ue)}},x=(_,re,ye,ge,Fe,Ae,Ze)=>{const Ue=re.el=_.el;let{patchFlag:Pe,dynamicChildren:qe,dirs:De}=re;Pe|=_.patchFlag&16;const Me=_.props||vn,_e=re.props||vn;let Re;ye&&Fo(ye,!1),(Re=_e.onVnodeBeforeUpdate)&&Ur(Re,ye,re,_),De&&Za(re,_,ye,"beforeUpdate"),ye&&Fo(ye,!0);const $e=Fe&&re.type!=="foreignObject";if(qe?g(_.dynamicChildren,qe,Ue,ye,ge,$e,Ae):Ze||H(_,re,Ue,null,ye,ge,$e,Ae,!1),Pe>0){if(Pe&16)j(Ue,re,Me,_e,ye,ge,Fe);else if(Pe&2&&Me.class!==_e.class&&l(Ue,"class",null,_e.class,Fe),Pe&4&&l(Ue,"style",Me.style,_e.style,Fe),Pe&8){const dt=re.dynamicProps;for(let yt=0;yt<dt.length;yt++){const gt=dt[yt],ot=Me[gt],ke=_e[gt];(ke!==ot||gt==="value")&&l(Ue,gt,ot,ke,Fe,_.children,ye,ge,pe)}}Pe&1&&_.children!==re.children&&d(Ue,re.children)}else!Ze&&qe==null&&j(Ue,re,Me,_e,ye,ge,Fe);((Re=_e.onVnodeUpdated)||De)&&ar(()=>{Re&&Ur(Re,ye,re,_),De&&Za(re,_,ye,"updated")},ge)},g=(_,re,ye,ge,Fe,Ae,Ze)=>{for(let Ue=0;Ue<re.length;Ue++){const Pe=_[Ue],qe=re[Ue],De=Pe.el&&(Pe.type===Qe||!Ma(Pe,qe)||Pe.shapeFlag&70)?f(Pe.el):ye;h(Pe,qe,De,null,ge,Fe,Ae,Ze,!0)}},j=(_,re,ye,ge,Fe,Ae,Ze)=>{if(ye!==ge){if(ye!==vn)for(const Ue in ye)!Ju(Ue)&&!(Ue in ge)&&l(_,Ue,ye[Ue],null,Ze,re.children,Fe,Ae,pe);for(const Ue in ge){if(Ju(Ue))continue;const Pe=ge[Ue],qe=ye[Ue];Pe!==qe&&Ue!=="value"&&l(_,Ue,qe,Pe,Ze,re.children,Fe,Ae,pe)}"value"in ge&&l(_,"value",ye.value,ge.value)}},L=(_,re,ye,ge,Fe,Ae,Ze,Ue,Pe)=>{const qe=re.el=_?_.el:i(""),De=re.anchor=_?_.anchor:i("");let{patchFlag:Me,dynamicChildren:_e,slotScopeIds:Re}=re;Re&&(Ue=Ue?Ue.concat(Re):Re),_==null?(r(qe,ye,ge),r(De,ye,ge),P(re.children,ye,De,Fe,Ae,Ze,Ue,Pe)):Me>0&&Me&64&&_e&&_.dynamicChildren?(g(_.dynamicChildren,_e,ye,Fe,Ae,Ze,Ue),(re.key!=null||Fe&&re===Fe.subTree)&&H0(_,re,!0)):H(_,re,ye,De,Fe,Ae,Ze,Ue,Pe)},w=(_,re,ye,ge,Fe,Ae,Ze,Ue,Pe)=>{re.slotScopeIds=Ue,_==null?re.shapeFlag&512?Fe.ctx.activate(re,ye,ge,Ze,Pe):R(re,ye,ge,Fe,Ae,Ze,Pe):Z(_,re,Pe)},R=(_,re,ye,ge,Fe,Ae,Ze)=>{const Ue=_.component=z7(_,ge,Fe);if(ed(_)&&(Ue.ctx.renderer=Le),Z7(Ue),Ue.asyncDep){if(Fe&&Fe.registerDep(Ue,G),!_.el){const Pe=Ue.subTree=C(Qn);v(null,Pe,re,ye)}return}G(Ue,_,re,ye,Fe,Ae,Ze)},Z=(_,re,ye)=>{const ge=re.component=_.component;if(Hx(_,re,ye))if(ge.asyncDep&&!ge.asyncResolved){U(ge,re,ye);return}else ge.next=re,qx(ge.update),ge.update();else re.el=_.el,ge.vnode=re},G=(_,re,ye,ge,Fe,Ae,Ze)=>{const Ue=()=>{if(_.isMounted){let{next:De,bu:Me,u:_e,parent:Re,vnode:$e}=_,dt=De,yt;Fo(_,!1),De?(De.el=$e.el,U(_,De,Ze)):De=$e,Me&&hs(Me),(yt=De.props&&De.props.onVnodeBeforeUpdate)&&Ur(yt,Re,De,$e),Fo(_,!0);const gt=Sf(_),ot=_.subTree;_.subTree=gt,h(ot,gt,f(ot.el),me(ot),_,Fe,Ae),De.el=gt.el,dt===null&&g0(_,gt.el),_e&&ar(_e,Fe),(yt=De.props&&De.props.onVnodeUpdated)&&ar(()=>Ur(yt,Re,De,$e),Fe)}else{let De;const{el:Me,props:_e}=re,{bm:Re,m:$e,parent:dt}=_,yt=oi(re);if(Fo(_,!1),Re&&hs(Re),!yt&&(De=_e&&_e.onVnodeBeforeMount)&&Ur(De,dt,re),Fo(_,!0),Me&&xe){const gt=()=>{_.subTree=Sf(_),xe(Me,_.subTree,_,Fe,null)};yt?re.type.__asyncLoader().then(()=>!_.isUnmounted&&gt()):gt()}else{const gt=_.subTree=Sf(_);h(null,gt,ye,ge,_,Fe,Ae),re.el=gt.el}if($e&&ar($e,Fe),!yt&&(De=_e&&_e.onVnodeMounted)){const gt=re;ar(()=>Ur(De,dt,gt),Fe)}(re.shapeFlag&256||dt&&oi(dt.vnode)&&dt.vnode.shapeFlag&256)&&_.a&&ar(_.a,Fe),_.isMounted=!0,re=ye=ge=null}},Pe=_.effect=new _c(Ue,()=>ov(qe),_.scope),qe=_.update=()=>Pe.run();qe.id=_.uid,Fo(_,!0),qe()},U=(_,re,ye)=>{re.component=_;const ge=_.vnode.props;_.vnode=re,_.next=null,uX(_,re.props,ge,ye),fX(_,re.children,ye),nu(),yS(),ru()},H=(_,re,ye,ge,Fe,Ae,Ze,Ue,Pe=!1)=>{const qe=_&&_.children,De=_?_.shapeFlag:0,Me=re.children,{patchFlag:_e,shapeFlag:Re}=re;if(_e>0){if(_e&128){D(qe,Me,ye,ge,Fe,Ae,Ze,Ue,Pe);return}else if(_e&256){O(qe,Me,ye,ge,Fe,Ae,Ze,Ue,Pe);return}}Re&8?(De&16&&pe(qe,Fe,Ae),Me!==qe&&d(ye,Me)):De&16?Re&16?D(qe,Me,ye,ge,Fe,Ae,Ze,Ue,Pe):pe(qe,Fe,Ae,!0):(De&8&&d(ye,""),Re&16&&P(Me,ye,ge,Fe,Ae,Ze,Ue,Pe))},O=(_,re,ye,ge,Fe,Ae,Ze,Ue,Pe)=>{_=_||vs,re=re||vs;const qe=_.length,De=re.length,Me=Math.min(qe,De);let _e;for(_e=0;_e<Me;_e++){const Re=re[_e]=Pe?to(re[_e]):$r(re[_e]);h(_[_e],Re,ye,null,Fe,Ae,Ze,Ue,Pe)}qe>De?pe(_,Fe,Ae,!0,!1,Me):P(re,ye,ge,Fe,Ae,Ze,Ue,Pe,Me)},D=(_,re,ye,ge,Fe,Ae,Ze,Ue,Pe)=>{let qe=0;const De=re.length;let Me=_.length-1,_e=De-1;for(;qe<=Me&&qe<=_e;){const Re=_[qe],$e=re[qe]=Pe?to(re[qe]):$r(re[qe]);if(Ma(Re,$e))h(Re,$e,ye,null,Fe,Ae,Ze,Ue,Pe);else break;qe++}for(;qe<=Me&&qe<=_e;){const Re=_[Me],$e=re[_e]=Pe?to(re[_e]):$r(re[_e]);if(Ma(Re,$e))h(Re,$e,ye,null,Fe,Ae,Ze,Ue,Pe);else break;Me--,_e--}if(qe>Me){if(qe<=_e){const Re=_e+1,$e=Re<De?re[Re].el:ge;for(;qe<=_e;)h(null,re[qe]=Pe?to(re[qe]):$r(re[qe]),ye,$e,Fe,Ae,Ze,Ue,Pe),qe++}}else if(qe>_e)for(;qe<=Me;)Q(_[qe],Fe,Ae,!0),qe++;else{const Re=qe,$e=qe,dt=new Map;for(qe=$e;qe<=_e;qe++){const ne=re[qe]=Pe?to(re[qe]):$r(re[qe]);ne.key!=null&&dt.set(ne.key,qe)}let yt,gt=0;const ot=_e-$e+1;let ke=!1,be=0;const fe=new Array(ot);for(qe=0;qe<ot;qe++)fe[qe]=0;for(qe=Re;qe<=Me;qe++){const ne=_[qe];if(gt>=ot){Q(ne,Fe,Ae,!0);continue}let M;if(ne.key!=null)M=dt.get(ne.key);else for(yt=$e;yt<=_e;yt++)if(fe[yt-$e]===0&&Ma(ne,re[yt])){M=yt;break}M===void 0?Q(ne,Fe,Ae,!0):(fe[M-$e]=qe+1,M>=be?be=M:ke=!0,h(ne,re[M],ye,null,Fe,Ae,Ze,Ue,Pe),gt++)}const Xe=ke?hX(fe):vs;for(yt=Xe.length-1,qe=ot-1;qe>=0;qe--){const ne=$e+qe,M=re[ne],Oe=ne+1<De?re[ne+1].el:ge;fe[qe]===0?h(null,M,ye,Oe,Fe,Ae,Ze,Ue,Pe):ke&&(yt<0||qe!==Xe[yt]?Y(M,ye,Oe,2):yt--)}}},Y=(_,re,ye,ge,Fe=null)=>{const{el:Ae,type:Ze,transition:Ue,children:Pe,shapeFlag:qe}=_;if(qe&6){Y(_.component.subTree,re,ye,ge);return}if(qe&128){_.suspense.move(re,ye,ge);return}if(qe&64){Ze.move(_,re,ye,Le);return}if(Ze===Qe){r(Ae,re,ye);for(let Me=0;Me<Pe.length;Me++)Y(Pe[Me],re,ye,ge);r(_.anchor,re,ye);return}if(Ze===ii){y(_,re,ye);return}if(ge!==2&&qe&1&&Ue)if(ge===0)Ue.beforeEnter(Ae),r(Ae,re,ye),ar(()=>Ue.enter(Ae),Fe);else{const{leave:Me,delayLeave:_e,afterLeave:Re}=Ue,$e=()=>r(Ae,re,ye),dt=()=>{Me(Ae,()=>{$e(),Re&&Re()})};_e?_e(Ae,$e,dt):dt()}else r(Ae,re,ye)},Q=(_,re,ye,ge=!1,Fe=!1)=>{const{type:Ae,props:Ze,ref:Ue,children:Pe,dynamicChildren:qe,shapeFlag:De,patchFlag:Me,dirs:_e}=_;if(Ue!=null&&ap(Ue,null,ye,_,!0),De&256){re.ctx.deactivate(_);return}const Re=De&1&&_e,$e=!oi(_);let dt;if($e&&(dt=Ze&&Ze.onVnodeBeforeUnmount)&&Ur(dt,re,_),De&6)Ne(_.component,ye,ge);else{if(De&128){_.suspense.unmount(ye,ge);return}Re&&Za(_,null,re,"beforeUnmount"),De&64?_.type.remove(_,re,ye,Fe,Le,ge):qe&&(Ae!==Qe||Me>0&&Me&64)?pe(qe,re,ye,!1,!0):(Ae===Qe&&Me&384||!Fe&&De&16)&&pe(Pe,re,ye),ge&&ee(_)}($e&&(dt=Ze&&Ze.onVnodeUnmounted)||Re)&&ar(()=>{dt&&Ur(dt,re,_),Re&&Za(_,null,re,"unmounted")},ye)},ee=_=>{const{type:re,el:ye,anchor:ge,transition:Fe}=_;if(re===Qe){oe(ye,ge);return}if(re===ii){W(_);return}const Ae=()=>{a(ye),Fe&&!Fe.persisted&&Fe.afterLeave&&Fe.afterLeave()};if(_.shapeFlag&1&&Fe&&!Fe.persisted){const{leave:Ze,delayLeave:Ue}=Fe,Pe=()=>Ze(ye,Ae);Ue?Ue(_.el,Ae,Pe):Pe()}else Ae()},oe=(_,re)=>{let ye;for(;_!==re;)ye=p(_),a(_),_=ye;a(re)},Ne=(_,re,ye)=>{const{bum:ge,scope:Fe,update:Ae,subTree:Ze,um:Ue}=_;ge&&hs(ge),Fe.stop(),Ae&&(Ae.active=!1,Q(Ze,_,re,ye)),Ue&&ar(Ue,re),ar(()=>{_.isUnmounted=!0},re),re&&re.pendingBranch&&!re.isUnmounted&&_.asyncDep&&!_.asyncResolved&&_.suspenseId===re.pendingId&&(re.deps--,re.deps===0&&re.resolve())},pe=(_,re,ye,ge=!1,Fe=!1,Ae=0)=>{for(let Ze=Ae;Ze<_.length;Ze++)Q(_[Ze],re,ye,ge,Fe)},me=_=>_.shapeFlag&6?me(_.component.subTree):_.shapeFlag&128?_.suspense.next():p(_.anchor||_.el),ce=(_,re,ye)=>{_==null?re._vnode&&Q(re._vnode,null,null,!0):h(re._vnode||null,_,re,null,null,null,ye),yS(),np(),re._vnode=_},Le={p:h,um:Q,m:Y,r:ee,mt:R,mc:P,pc:H,pbc:g,n:me,o:e};let Te,xe;return t&&([Te,xe]=t(Le)),{render:ce,hydrate:Te,createApp:vX(ce,Te)}}function Fo({effect:e,update:t},n){e.allowRecurse=t.allowRecurse=n}function H0(e,t,n=!1){const r=e.children,a=t.children;if(et(r)&&et(a))for(let l=0;l<r.length;l++){const o=r[l];let i=a[l];i.shapeFlag&1&&!i.dynamicChildren&&((i.patchFlag<=0||i.patchFlag===32)&&(i=a[l]=to(a[l]),i.el=o.el),n||H0(o,i))}}function hX(e){const t=e.slice(),n=[0];let r,a,l,o,i;const s=e.length;for(r=0;r<s;r++){const u=e[r];if(u!==0){if(a=n[n.length-1],e[a]<u){t[r]=a,n.push(r);continue}for(l=0,o=n.length-1;l<o;)i=l+o>>1,e[n[i]]<u?l=i+1:o=i;u<e[n[l]]&&(l>0&&(t[r]=n[l-1]),n[l]=r)}}for(l=n.length,o=n[l-1];l-- >0;)n[l]=o,o=t[o];return n}const mX=e=>e.__isTeleport,Hu=e=>e&&(e.disabled||e.disabled===""),gS=e=>typeof SVGElement<"u"&&e instanceof SVGElement,W1=(e,t)=>{const n=e&&e.to;return Pt(n)?t?t(n):null:n},SX={__isTeleport:!0,process(e,t,n,r,a,l,o,i,s,u){const{mc:d,pc:f,pbc:p,o:{insert:b,querySelector:A,createText:h,createComment:m}}=u,v=Hu(t.props);let{shapeFlag:S,children:y,dynamicChildren:W}=t;if(e==null){const k=t.el=h(""),V=t.anchor=h("");b(k,n,r),b(V,n,r);const T=t.target=W1(t.props,A),P=t.targetAnchor=h("");T&&(b(P,T),o=o||gS(T));const x=(g,j)=>{S&16&&d(y,g,j,a,l,o,i,s)};v?x(n,V):T&&x(T,P)}else{t.el=e.el;const k=t.anchor=e.anchor,V=t.target=e.target,T=t.targetAnchor=e.targetAnchor,P=Hu(e.props),x=P?n:V,g=P?k:T;if(o=o||gS(V),W?(p(e.dynamicChildren,W,x,a,l,o,i),H0(e,t,!0)):s||f(e,t,x,g,a,l,o,i,!1),v)P||Hd(t,n,k,u,1);else if((t.props&&t.props.to)!==(e.props&&e.props.to)){const j=t.target=W1(t.props,A);j&&Hd(t,j,null,u,0)}else P&&Hd(t,V,T,u,1)}},remove(e,t,n,r,{um:a,o:{remove:l}},o){const{shapeFlag:i,children:s,anchor:u,targetAnchor:d,target:f,props:p}=e;if(f&&l(d),(o||!Hu(p))&&(l(u),i&16))for(let b=0;b<s.length;b++){const A=s[b];a(A,t,n,!0,!!A.dynamicChildren)}},move:Hd,hydrate:yX};function Hd(e,t,n,{o:{insert:r},m:a},l=2){l===0&&r(e.targetAnchor,t,n);const{el:o,anchor:i,shapeFlag:s,children:u,props:d}=e,f=l===2;if(f&&r(o,t,n),(!f||Hu(d))&&s&16)for(let p=0;p<u.length;p++)a(u[p],t,n,2);f&&r(i,t,n)}function yX(e,t,n,r,a,l,{o:{nextSibling:o,parentNode:i,querySelector:s}},u){const d=t.target=W1(t.props,s);if(d){const f=d._lpa||d.firstChild;if(t.shapeFlag&16)if(Hu(t.props))t.anchor=u(o(e),t,i(e),n,r,a,l),t.targetAnchor=f;else{t.anchor=o(e);let p=f;for(;p;)if(p=o(p),p&&p.nodeType===8&&p.data==="teleport anchor"){t.targetAnchor=p,d._lpa=t.targetAnchor&&o(t.targetAnchor);break}u(f,t,d,n,r,a,l)}}return t.anchor&&o(t.anchor)}const au=SX,Qe=Symbol(void 0),mo=Symbol(void 0),Qn=Symbol(void 0),ii=Symbol(void 0),Zu=[];let Jr=null;function K(e=!1){Zu.push(Jr=e?null:[])}function O7(){Zu.pop(),Jr=Zu[Zu.length-1]||null}let Si=1;function k1(e){Si+=e}function R7(e){return e.dynamicChildren=Si>0?Jr||vs:null,O7(),Si>0&&Jr&&Jr.push(e),e}function F(e,t,n,r,a,l){return R7(z(e,t,n,r,a,l,!0))}function ie(e,t,n,r,a){return R7(C(e,t,n,r,a,!0))}function cn(e){return e?e.__v_isVNode===!0:!1}function Ma(e,t){return e.type===t.type&&e.key===t.key}function AX(e){}const dv="__vInternal",J7=({key:e})=>e!=null?e:null,yf=({ref:e,ref_key:t,ref_for:n})=>e!=null?Pt(e)||Qt(e)||ht(e)?{i:pr,r:e,k:t,f:!!n}:e:null;function z(e,t=null,n=null,r=0,a=null,l=e===Qe?0:1,o=!1,i=!1){const s={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&J7(t),ref:t&&yf(t),scopeId:sv,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:l,patchFlag:r,dynamicProps:a,dynamicChildren:null,appContext:null};return i?(Z0(s,n),l&128&&e.normalize(s)):n&&(s.shapeFlag|=Pt(n)?8:16),Si>0&&!o&&Jr&&(s.patchFlag>0||l&6)&&s.patchFlag!==32&&Jr.push(s),s}const C=WX;function WX(e,t=null,n=null,r=0,a=null,l=!1){if((!e||e===V7)&&(e=Qn),cn(e)){const i=Ua(e,t,!0);return n&&Z0(i,n),Si>0&&!l&&Jr&&(i.shapeFlag&6?Jr[Jr.indexOf(e)]=i:Jr.push(i)),i.patchFlag|=-2,i}if(xX(e)&&(e=e.__vccOpts),t){t=nd(t);let{class:i,style:s}=t;i&&!Pt(i)&&(t.class=q(i)),Jt(s)&&(P0(s)&&!et(s)&&(s=Rn({},s)),t.style=lt(s))}const o=Pt(e)?1:p7(e)?128:mX(e)?64:Jt(e)?4:ht(e)?2:0;return z(e,t,n,r,a,o,l,!0)}function nd(e){return e?P0(e)||dv in e?Rn({},e):e:null}function Ua(e,t,n=!1){const{props:r,ref:a,patchFlag:l,children:o}=e,i=t?Ut(r||{},t):r;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:i,key:i&&J7(i),ref:t&&t.ref?n&&a?et(a)?a.concat(yf(t)):[a,yf(t)]:yf(t):a,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:o,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==Qe?l===-1?16:l|16:l,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&Ua(e.ssContent),ssFallback:e.ssFallback&&Ua(e.ssFallback),el:e.el,anchor:e.anchor}}function Xt(e=" ",t=0){return C(mo,null,e,t)}function F7(e,t){const n=C(ii,null,e);return n.staticCount=t,n}function ae(e="",t=!1){return t?(K(),ie(Qn,null,e)):C(Qn,null,e)}function $r(e){return e==null||typeof e=="boolean"?C(Qn):et(e)?C(Qe,null,e.slice()):typeof e=="object"?to(e):C(mo,null,String(e))}function to(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:Ua(e)}function Z0(e,t){let n=0;const{shapeFlag:r}=e;if(t==null)t=null;else if(et(t))n=16;else if(typeof t=="object")if(r&65){const a=t.default;a&&(a._c&&(a._d=!1),Z0(e,a()),a._c&&(a._d=!0));return}else{n=32;const a=t._;!a&&!(dv in t)?t._ctx=pr:a===3&&pr&&(pr.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else ht(t)?(t={default:t,_ctx:pr},n=32):(t=String(t),r&64?(n=16,t=[Xt(t)]):n=8);e.children=t,e.shapeFlag|=n}function Ut(...e){const t={};for(let n=0;n<e.length;n++){const r=e[n];for(const a in r)if(a==="class")t.class!==r.class&&(t.class=q([t.class,r.class]));else if(a==="style")t.style=lt([t.style,r.style]);else if(Yc(a)){const l=t[a],o=r[a];o&&l!==o&&!(et(l)&&l.includes(o))&&(t[a]=l?[].concat(l,o):o)}else a!==""&&(t[a]=r[a])}return t}function Ur(e,t,n,r=null){na(e,t,7,[n,r])}const kX=j7();let VX=0;function z7(e,t,n){const r=e.type,a=(t?t.appContext:e.appContext)||kX,l={uid:VX++,vnode:e,type:r,parent:t,appContext:a,root:null,next:null,subTree:null,effect:null,update:null,scope:new y0(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(a.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:x7(r,a),emitsOptions:f7(r,a),emit:null,emitted:null,propsDefaults:vn,inheritAttrs:r.inheritAttrs,ctx:vn,data:vn,props:vn,attrs:vn,slots:vn,refs:vn,setupState:vn,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return l.ctx={_:l},l.root=t?t.root:l,l.emit=Ox.bind(null,l),e.ce&&e.ce(l),l}let Yn=null;const Tt=()=>Yn||pr,So=e=>{Yn=e,e.scope.on()},fo=()=>{Yn&&Yn.scope.off(),Yn=null};function H7(e){return e.vnode.shapeFlag&4}let ws=!1;function Z7(e,t=!1){ws=t;const{props:n,children:r}=e.vnode,a=H7(e);sX(e,n,a,t),dX(e,r);const l=a?PX(e,t):void 0;return ws=!1,l}function PX(e,t){const n=e.type;e.accessCache=Object.create(null),e.proxy=kr(new Proxy(e.ctx,m1));const{setup:r}=n;if(r){const a=e.setupContext=r.length>1?C7(e):null;So(e),nu();const l=Pl(r,e,0,[e.props,a]);if(ru(),fo(),xs(l)){if(l.then(fo,fo),t)return l.then(o=>{V1(e,o,t)}).catch(o=>{Xi(o,e,0)});e.asyncDep=l}else V1(e,l,t)}else G7(e,t)}function V1(e,t,n){ht(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:Jt(t)&&(e.setupState=N0(t)),G7(e,n)}let lp,P1;function TX(e){lp=e,P1=t=>{t.render._rc&&(t.withProxy=new Proxy(t.ctx,nX))}}const KX=()=>!lp;function G7(e,t,n){const r=e.type;if(!e.render){if(!t&&lp&&!r.render){const a=r.template||F0(e).template;if(a){const{isCustomElement:l,compilerOptions:o}=e.appContext.config,{delimiters:i,compilerOptions:s}=r,u=Rn(Rn({isCustomElement:l,delimiters:i},o),s);r.render=lp(a,u)}}e.render=r.render||en,P1&&P1(e)}So(e),nu(),rX(e),ru(),fo()}function NX(e){return new Proxy(e.attrs,{get(t,n){return ra(e,"get","$attrs"),t[n]}})}function C7(e){const t=r=>{e.exposed=r||{}};let n;return{get attrs(){return n||(n=NX(e))},slots:e.slots,emit:e.emit,expose:t}}function fv(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(N0(kr(e.exposed)),{get(t,n){if(n in t)return t[n];if(n in zu)return zu[n](e)},has(t,n){return n in t||n in zu}}))}function T1(e,t=!0){return ht(e)?e.displayName||e.name:e.name||t&&e.__name}function xX(e){return ht(e)&&"__vccOpts"in e}const X=(e,t)=>o7(e,t,ws);function XX(){return null}function gX(){return null}function wX(e){}function jX(e,t){return null}function er(){return M7().slots}function Xo(){return M7().attrs}function M7(){const e=Tt();return e.setupContext||(e.setupContext=C7(e))}function LX(e,t){const n=et(e)?e.reduce((r,a)=>(r[a]={},r),{}):e;for(const r in t){const a=n[r];a?et(a)||ht(a)?n[r]={type:a,default:t[r]}:a.default=t[r]:a===null&&(n[r]={default:t[r]})}return n}function qX(e,t){const n={};for(const r in e)t.includes(r)||Object.defineProperty(n,r,{enumerable:!0,get:()=>e[r]});return n}function UX(e){const t=Tt();let n=e();return fo(),xs(n)&&(n=n.catch(r=>{throw So(t),r})),[n,()=>So(t)]}function st(e,t,n){const r=arguments.length;return r===2?Jt(t)&&!et(t)?cn(t)?C(e,null,[t]):C(e,t):C(e,null,t):(r>3?n=Array.prototype.slice.call(arguments,2):r===3&&cn(n)&&(n=[n]),C(e,t,n))}const D7=Symbol(""),E7=()=>tt(D7);function OX(){}function RX(e,t,n,r){const a=n[r];if(a&&I7(a,e))return a;const l=t();return l.memo=e.slice(),n[r]=l}function I7(e,t){const n=e.memo;if(n.length!=t.length)return!1;for(let r=0;r<n.length;r++)if(Xs(n[r],t[r]))return!1;return Si>0&&Jr&&Jr.push(e),!0}const pv="3.2.44",JX={createComponentInstance:z7,setupComponent:Z7,renderComponentRoot:Sf,setCurrentRenderingInstance:fc,isVNode:cn,normalizeVNode:$r},FX=JX,zX=null,HX=null,ZX="http://www.w3.org/2000/svg",Do=typeof document<"u"?document:null,wS=Do&&Do.createElement("template"),GX={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,n,r)=>{const a=t?Do.createElementNS(ZX,e):Do.createElement(e,n?{is:n}:void 0);return e==="select"&&r&&r.multiple!=null&&a.setAttribute("multiple",r.multiple),a},createText:e=>Do.createTextNode(e),createComment:e=>Do.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>Do.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},insertStaticContent(e,t,n,r,a,l){const o=n?n.previousSibling:t.lastChild;if(a&&(a===l||a.nextSibling))for(;t.insertBefore(a.cloneNode(!0),n),!(a===l||!(a=a.nextSibling)););else{wS.innerHTML=r?`<svg>${e}</svg>`:e;const i=wS.content;if(r){const s=i.firstChild;for(;s.firstChild;)i.appendChild(s.firstChild);i.removeChild(s)}t.insertBefore(i,n)}return[o?o.nextSibling:t.firstChild,n?n.previousSibling:t.lastChild]}};function CX(e,t,n){const r=e._vtc;r&&(t=(t?[t,...r]:[...r]).join(" ")),t==null?e.removeAttribute("class"):n?e.setAttribute("class",t):e.className=t}function MX(e,t,n){const r=e.style,a=Pt(n);if(n&&!a){for(const l in n)K1(r,l,n[l]);if(t&&!Pt(t))for(const l in t)n[l]==null&&K1(r,l,"")}else{const l=r.display;a?t!==n&&(r.cssText=n):t&&e.removeAttribute("style"),"_vod"in e&&(r.display=l)}}const jS=/\s*!important$/;function K1(e,t,n){if(et(n))n.forEach(r=>K1(e,t,r));else if(n==null&&(n=""),t.startsWith("--"))e.setProperty(t,n);else{const r=DX(e,t);jS.test(n)?e.setProperty(ga(r),n.replace(jS,""),"important"):e[r]=n}}const LS=["Webkit","Moz","ms"],pb={};function DX(e,t){const n=pb[t];if(n)return n;let r=Tr(t);if(r!=="filter"&&r in e)return pb[t]=r;r=tu(r);for(let a=0;a<LS.length;a++){const l=LS[a]+r;if(l in e)return pb[t]=l}return t}const qS="http://www.w3.org/1999/xlink";function EX(e,t,n,r,a){if(r&&t.startsWith("xlink:"))n==null?e.removeAttributeNS(qS,t.slice(6,t.length)):e.setAttributeNS(qS,t,n);else{const l=GN(t);n==null||l&&!HA(n)?e.removeAttribute(t):e.setAttribute(t,l?"":n)}}function IX(e,t,n,r,a,l,o){if(t==="innerHTML"||t==="textContent"){r&&o(r,a,l),e[t]=n==null?"":n;return}if(t==="value"&&e.tagName!=="PROGRESS"&&!e.tagName.includes("-")){e._value=n;const s=n==null?"":n;(e.value!==s||e.tagName==="OPTION")&&(e.value=s),n==null&&e.removeAttribute(t);return}let i=!1;if(n===""||n==null){const s=typeof e[t];s==="boolean"?n=HA(n):n==null&&s==="string"?(n="",i=!0):s==="number"&&(n=0,i=!0)}try{e[t]=n}catch{}i&&e.removeAttribute(t)}function Sl(e,t,n,r){e.addEventListener(t,n,r)}function BX(e,t,n,r){e.removeEventListener(t,n,r)}function YX(e,t,n,r,a=null){const l=e._vei||(e._vei={}),o=l[t];if(r&&o)o.value=r;else{const[i,s]=QX(t);if(r){const u=l[t]=e6(r,a);Sl(e,i,u,s)}else o&&(BX(e,i,o,s),l[t]=void 0)}}const US=/(?:Once|Passive|Capture)$/;function QX(e){let t;if(US.test(e)){t={};let r;for(;r=e.match(US);)e=e.slice(0,e.length-r[0].length),t[r[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):ga(e.slice(2)),t]}let vb=0;const _X=Promise.resolve(),$X=()=>vb||(_X.then(()=>vb=0),vb=Date.now());function e6(e,t){const n=r=>{if(!r._vts)r._vts=Date.now();else if(r._vts<=n.attached)return;na(t6(r,n.value),t,5,[r])};return n.value=e,n.attached=$X(),n}function t6(e,t){if(et(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},t.map(r=>a=>!a._stopped&&r&&r(a))}else return t}const OS=/^on[a-z]/,n6=(e,t,n,r,a=!1,l,o,i,s)=>{t==="class"?CX(e,r,a):t==="style"?MX(e,n,r):Yc(t)?h0(t)||YX(e,t,n,r,o):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):r6(e,t,r,a))?IX(e,t,r,l,o,i,s):(t==="true-value"?e._trueValue=r:t==="false-value"&&(e._falseValue=r),EX(e,t,r,a))};function r6(e,t,n,r){return r?!!(t==="innerHTML"||t==="textContent"||t in e&&OS.test(t)&&ht(n)):t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&e.tagName==="INPUT"||t==="type"&&e.tagName==="TEXTAREA"||OS.test(t)&&Pt(n)?!1:t in e}function B7(e,t){const n=$(e);class r extends vv{constructor(l){super(n,l,t)}}return r.def=n,r}const a6=e=>B7(e,cW),l6=typeof HTMLElement<"u"?HTMLElement:class{};class vv extends l6{constructor(t,n={},r){super(),this._def=t,this._props=n,this._instance=null,this._connected=!1,this._resolved=!1,this._numberProps=null,this.shadowRoot&&r?r(this._createVNode(),this.shadowRoot):this.attachShadow({mode:"open"})}connectedCallback(){this._connected=!0,this._instance||this._resolveDef()}disconnectedCallback(){this._connected=!1,at(()=>{this._connected||(gl(null,this.shadowRoot),this._instance=null)})}_resolveDef(){if(this._resolved)return;this._resolved=!0;for(let r=0;r<this.attributes.length;r++)this._setAttr(this.attributes[r].name);new MutationObserver(r=>{for(const a of r)this._setAttr(a.attributeName)}).observe(this,{attributes:!0});const t=r=>{const{props:a={},styles:l}=r,o=!et(a),i=a?o?Object.keys(a):a:[];let s;if(o)for(const u in this._props){const d=a[u];(d===Number||d&&d.type===Number)&&(this._props[u]=xl(this._props[u]),(s||(s=Object.create(null)))[u]=!0)}this._numberProps=s;for(const u of Object.keys(this))u[0]!=="_"&&this._setProp(u,this[u],!0,!1);for(const u of i.map(Tr))Object.defineProperty(this,u,{get(){return this._getProp(u)},set(d){this._setProp(u,d)}});this._applyStyles(l),this._update()},n=this._def.__asyncLoader;n?n().then(t):t(this._def)}_setAttr(t){let n=this.getAttribute(t);const r=Tr(t);this._numberProps&&this._numberProps[r]&&(n=xl(n)),this._setProp(r,n,!1)}_getProp(t){return this._props[t]}_setProp(t,n,r=!0,a=!0){n!==this._props[t]&&(this._props[t]=n,a&&this._instance&&this._update(),r&&(n===!0?this.setAttribute(ga(t),""):typeof n=="string"||typeof n=="number"?this.setAttribute(ga(t),n+""):n||this.removeAttribute(ga(t))))}_update(){gl(this._createVNode(),this.shadowRoot)}_createVNode(){const t=C(this._def,Rn({},this._props));return this._instance||(t.ce=n=>{this._instance=n,n.isCE=!0,n.emit=(a,...l)=>{this.dispatchEvent(new CustomEvent(a,{detail:l}))};let r=this;for(;r=r&&(r.parentNode||r.host);)if(r instanceof vv){n.parent=r._instance;break}}),t}_applyStyles(t){t&&t.forEach(n=>{const r=document.createElement("style");r.textContent=n,this.shadowRoot.appendChild(r)})}}function o6(e="$style"){{const t=Tt();if(!t)return vn;const n=t.type.__cssModules;if(!n)return vn;const r=n[e];return r||vn}}function Y7(e){const t=Tt();if(!t)return;const n=()=>N1(t.subTree,e(t.proxy));j0(n),At(()=>{const r=new MutationObserver(n);r.observe(t.subTree.el.parentNode,{childList:!0}),mr(()=>r.disconnect())})}function N1(e,t){if(e.shapeFlag&128){const n=e.suspense;e=n.activeBranch,n.pendingBranch&&!n.isHydrating&&n.effects.push(()=>{N1(n.activeBranch,t)})}for(;e.component;)e=e.component.subTree;if(e.shapeFlag&1&&e.el)RS(e.el,t);else if(e.type===Qe)e.children.forEach(n=>N1(n,t));else if(e.type===ii){let{el:n,anchor:r}=e;for(;n&&(RS(n,t),n!==r);)n=n.nextSibling}}function RS(e,t){if(e.nodeType===1){const n=e.style;for(const r in t)n.setProperty(`--${r}`,t[r])}}const El="transition",yu="animation",fn=(e,{slots:t})=>st(q0,_7(e),t);fn.displayName="Transition";const Q7={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},i6=fn.props=Rn({},q0.props,Q7),zo=(e,t=[])=>{et(e)?e.forEach(n=>n(...t)):e&&e(...t)},JS=e=>e?et(e)?e.some(t=>t.length>1):e.length>1:!1;function _7(e){const t={};for(const L in e)L in Q7||(t[L]=e[L]);if(e.css===!1)return t;const{name:n="v",type:r,duration:a,enterFromClass:l=`${n}-enter-from`,enterActiveClass:o=`${n}-enter-active`,enterToClass:i=`${n}-enter-to`,appearFromClass:s=l,appearActiveClass:u=o,appearToClass:d=i,leaveFromClass:f=`${n}-leave-from`,leaveActiveClass:p=`${n}-leave-active`,leaveToClass:b=`${n}-leave-to`}=e,A=s6(a),h=A&&A[0],m=A&&A[1],{onBeforeEnter:v,onEnter:S,onEnterCancelled:y,onLeave:W,onLeaveCancelled:k,onBeforeAppear:V=v,onAppear:T=S,onAppearCancelled:P=y}=t,x=(L,w,R)=>{Yl(L,w?d:i),Yl(L,w?u:o),R&&R()},g=(L,w)=>{L._isLeaving=!1,Yl(L,f),Yl(L,b),Yl(L,p),w&&w()},j=L=>(w,R)=>{const Z=L?T:S,G=()=>x(w,L,R);zo(Z,[w,G]),FS(()=>{Yl(w,L?s:l),pl(w,L?d:i),JS(Z)||zS(w,r,h,G)})};return Rn(t,{onBeforeEnter(L){zo(v,[L]),pl(L,l),pl(L,o)},onBeforeAppear(L){zo(V,[L]),pl(L,s),pl(L,u)},onEnter:j(!1),onAppear:j(!0),onLeave(L,w){L._isLeaving=!0;const R=()=>g(L,w);pl(L,f),eW(),pl(L,p),FS(()=>{!L._isLeaving||(Yl(L,f),pl(L,b),JS(W)||zS(L,r,m,R))}),zo(W,[L,R])},onEnterCancelled(L){x(L,!1),zo(y,[L])},onAppearCancelled(L){x(L,!0),zo(P,[L])},onLeaveCancelled(L){g(L),zo(k,[L])}})}function s6(e){if(e==null)return null;if(Jt(e))return[bb(e.enter),bb(e.leave)];{const t=bb(e);return[t,t]}}function bb(e){return xl(e)}function pl(e,t){t.split(/\s+/).forEach(n=>n&&e.classList.add(n)),(e._vtc||(e._vtc=new Set)).add(t)}function Yl(e,t){t.split(/\s+/).forEach(r=>r&&e.classList.remove(r));const{_vtc:n}=e;n&&(n.delete(t),n.size||(e._vtc=void 0))}function FS(e){requestAnimationFrame(()=>{requestAnimationFrame(e)})}let u6=0;function zS(e,t,n,r){const a=e._endId=++u6,l=()=>{a===e._endId&&r()};if(n)return setTimeout(l,n);const{type:o,timeout:i,propCount:s}=$7(e,t);if(!o)return r();const u=o+"end";let d=0;const f=()=>{e.removeEventListener(u,p),l()},p=b=>{b.target===e&&++d>=s&&f()};setTimeout(()=>{d<s&&f()},i+1),e.addEventListener(u,p)}function $7(e,t){const n=window.getComputedStyle(e),r=A=>(n[A]||"").split(", "),a=r(`${El}Delay`),l=r(`${El}Duration`),o=HS(a,l),i=r(`${yu}Delay`),s=r(`${yu}Duration`),u=HS(i,s);let d=null,f=0,p=0;t===El?o>0&&(d=El,f=o,p=l.length):t===yu?u>0&&(d=yu,f=u,p=s.length):(f=Math.max(o,u),d=f>0?o>u?El:yu:null,p=d?d===El?l.length:s.length:0);const b=d===El&&/\b(transform|all)(,|$)/.test(r(`${El}Property`).toString());return{type:d,timeout:f,propCount:p,hasTransform:b}}function HS(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max(...t.map((n,r)=>ZS(n)+ZS(e[r])))}function ZS(e){return Number(e.slice(0,-1).replace(",","."))*1e3}function eW(){return document.body.offsetHeight}const tW=new WeakMap,nW=new WeakMap,c6={name:"TransitionGroup",props:Rn({},i6,{tag:String,moveClass:String}),setup(e,{slots:t}){const n=Tt(),r=L0();let a,l;return la(()=>{if(!a.length)return;const o=e.moveClass||`${e.name||"v"}-move`;if(!v6(a[0].el,n.vnode.el,o))return;a.forEach(d6),a.forEach(f6);const i=a.filter(p6);eW(),i.forEach(s=>{const u=s.el,d=u.style;pl(u,o),d.transform=d.webkitTransform=d.transitionDuration="";const f=u._moveCb=p=>{p&&p.target!==u||(!p||/transform$/.test(p.propertyName))&&(u.removeEventListener("transitionend",f),u._moveCb=null,Yl(u,o))};u.addEventListener("transitionend",f)})}),()=>{const o=_t(e),i=_7(o);let s=o.tag||Qe;a=l,l=t.default?uv(t.default()):[];for(let u=0;u<l.length;u++){const d=l[u];d.key!=null&&mi(d,gs(d,i,r,n))}if(a)for(let u=0;u<a.length;u++){const d=a[u];mi(d,gs(d,i,r,n)),tW.set(d,d.el.getBoundingClientRect())}return C(s,null,l)}}},bv=c6;function d6(e){const t=e.el;t._moveCb&&t._moveCb(),t._enterCb&&t._enterCb()}function f6(e){nW.set(e,e.el.getBoundingClientRect())}function p6(e){const t=tW.get(e),n=nW.get(e),r=t.left-n.left,a=t.top-n.top;if(r||a){const l=e.el.style;return l.transform=l.webkitTransform=`translate(${r}px,${a}px)`,l.transitionDuration="0s",e}}function v6(e,t,n){const r=e.cloneNode();e._vtc&&e._vtc.forEach(o=>{o.split(/\s+/).forEach(i=>i&&r.classList.remove(i))}),n.split(/\s+/).forEach(o=>o&&r.classList.add(o)),r.style.display="none";const a=t.nodeType===1?t:t.parentNode;a.appendChild(r);const{hasTransform:l}=$7(r);return a.removeChild(r),l}const yo=e=>{const t=e.props["onUpdate:modelValue"]||!1;return et(t)?n=>hs(t,n):t};function b6(e){e.target.composing=!0}function GS(e){const t=e.target;t.composing&&(t.composing=!1,t.dispatchEvent(new Event("input")))}const yi={created(e,{modifiers:{lazy:t,trim:n,number:r}},a){e._assign=yo(a);const l=r||a.props&&a.props.type==="number";Sl(e,t?"change":"input",o=>{if(o.target.composing)return;let i=e.value;n&&(i=i.trim()),l&&(i=xl(i)),e._assign(i)}),n&&Sl(e,"change",()=>{e.value=e.value.trim()}),t||(Sl(e,"compositionstart",b6),Sl(e,"compositionend",GS),Sl(e,"change",GS))},mounted(e,{value:t}){e.value=t==null?"":t},beforeUpdate(e,{value:t,modifiers:{lazy:n,trim:r,number:a}},l){if(e._assign=yo(l),e.composing||document.activeElement===e&&e.type!=="range"&&(n||r&&e.value.trim()===t||(a||e.type==="number")&&xl(e.value)===t))return;const o=t==null?"":t;e.value!==o&&(e.value=o)}},Ai={deep:!0,created(e,t,n){e._assign=yo(n),Sl(e,"change",()=>{const r=e._modelValue,a=js(e),l=e.checked,o=e._assign;if(et(r)){const i=_p(r,a),s=i!==-1;if(l&&!s)o(r.concat(a));else if(!l&&s){const u=[...r];u.splice(i,1),o(u)}}else if(xi(r)){const i=new Set(r);l?i.add(a):i.delete(a),o(i)}else o(aW(e,l))})},mounted:CS,beforeUpdate(e,t,n){e._assign=yo(n),CS(e,t,n)}};function CS(e,{value:t,oldValue:n},r){e._modelValue=t,et(t)?e.checked=_p(t,r.props.value)>-1:xi(t)?e.checked=t.has(r.props.value):t!==n&&(e.checked=vo(t,aW(e,!0)))}const rd={created(e,{value:t},n){e.checked=vo(t,n.props.value),e._assign=yo(n),Sl(e,"change",()=>{e._assign(js(e))})},beforeUpdate(e,{value:t,oldValue:n},r){e._assign=yo(r),t!==n&&(e.checked=vo(t,r.props.value))}},rW={deep:!0,created(e,{value:t,modifiers:{number:n}},r){const a=xi(t);Sl(e,"change",()=>{const l=Array.prototype.filter.call(e.options,o=>o.selected).map(o=>n?xl(js(o)):js(o));e._assign(e.multiple?a?new Set(l):l:l[0])}),e._assign=yo(r)},mounted(e,{value:t}){MS(e,t)},beforeUpdate(e,t,n){e._assign=yo(n)},updated(e,{value:t}){MS(e,t)}};function MS(e,t){const n=e.multiple;if(!(n&&!et(t)&&!xi(t))){for(let r=0,a=e.options.length;r<a;r++){const l=e.options[r],o=js(l);if(n)et(t)?l.selected=_p(t,o)>-1:l.selected=t.has(o);else if(vo(js(l),t)){e.selectedIndex!==r&&(e.selectedIndex=r);return}}!n&&e.selectedIndex!==-1&&(e.selectedIndex=-1)}}function js(e){return"_value"in e?e._value:e.value}function aW(e,t){const n=t?"_trueValue":"_falseValue";return n in e?e[n]:t}const lW={created(e,t,n){Zd(e,t,n,null,"created")},mounted(e,t,n){Zd(e,t,n,null,"mounted")},beforeUpdate(e,t,n,r){Zd(e,t,n,r,"beforeUpdate")},updated(e,t,n,r){Zd(e,t,n,r,"updated")}};function oW(e,t){switch(e){case"SELECT":return rW;case"TEXTAREA":return yi;default:switch(t){case"checkbox":return Ai;case"radio":return rd;default:return yi}}}function Zd(e,t,n,r,a){const o=oW(e.tagName,n.props&&n.props.type)[a];o&&o(e,t,n,r)}function h6(){yi.getSSRProps=({value:e})=>({value:e}),rd.getSSRProps=({value:e},t)=>{if(t.props&&vo(t.props.value,e))return{checked:!0}},Ai.getSSRProps=({value:e},t)=>{if(et(e)){if(t.props&&_p(e,t.props.value)>-1)return{checked:!0}}else if(xi(e)){if(t.props&&e.has(t.props.value))return{checked:!0}}else if(e)return{checked:!0}},lW.getSSRProps=(e,t)=>{if(typeof t.type!="string")return;const n=oW(t.type.toUpperCase(),t.props&&t.props.type);if(n.getSSRProps)return n.getSSRProps(e,t)}}const m6=["ctrl","shift","alt","meta"],S6={stop:e=>e.stopPropagation(),prevent:e=>e.preventDefault(),self:e=>e.target!==e.currentTarget,ctrl:e=>!e.ctrlKey,shift:e=>!e.shiftKey,alt:e=>!e.altKey,meta:e=>!e.metaKey,left:e=>"button"in e&&e.button!==0,middle:e=>"button"in e&&e.button!==1,right:e=>"button"in e&&e.button!==2,exact:(e,t)=>m6.some(n=>e[`${n}Key`]&&!t.includes(n))},pt=(e,t)=>(n,...r)=>{for(let a=0;a<t.length;a++){const l=S6[t[a]];if(l&&l(n,t))return}return e(n,...r)},y6={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},Dt=(e,t)=>n=>{if(!("key"in n))return;const r=ga(n.key);if(t.some(a=>a===r||y6[a]===r))return e(n)},Ct={beforeMount(e,{value:t},{transition:n}){e._vod=e.style.display==="none"?"":e.style.display,n&&t?n.beforeEnter(e):Au(e,t)},mounted(e,{value:t},{transition:n}){n&&t&&n.enter(e)},updated(e,{value:t,oldValue:n},{transition:r}){!t!=!n&&(r?t?(r.beforeEnter(e),Au(e,!0),r.enter(e)):r.leave(e,()=>{Au(e,!1)}):Au(e,t))},beforeUnmount(e,{value:t}){Au(e,t)}};function Au(e,t){e.style.display=t?e._vod:"none"}function A6(){Ct.getSSRProps=({value:e})=>{if(!e)return{style:{display:"none"}}}}const iW=Rn({patchProp:n6},GX);let Gu,DS=!1;function sW(){return Gu||(Gu=L7(iW))}function uW(){return Gu=DS?Gu:q7(iW),DS=!0,Gu}const gl=(...e)=>{sW().render(...e)},cW=(...e)=>{uW().hydrate(...e)},G0=(...e)=>{const t=sW().createApp(...e),{mount:n}=t;return t.mount=r=>{const a=fW(r);if(!a)return;const l=t._component;!ht(l)&&!l.render&&!l.template&&(l.template=a.innerHTML),a.innerHTML="";const o=n(a,!1,a instanceof SVGElement);return a instanceof Element&&(a.removeAttribute("v-cloak"),a.setAttribute("data-v-app","")),o},t},dW=(...e)=>{const t=uW().createApp(...e),{mount:n}=t;return t.mount=r=>{const a=fW(r);if(a)return n(a,!0,a instanceof SVGElement)},t};function fW(e){return Pt(e)?document.querySelector(e):e}let ES=!1;const W6=()=>{ES||(ES=!0,h6(),A6())},k6=()=>{},xye=Object.freeze(Object.defineProperty({__proto__:null,compile:k6,EffectScope:y0,ReactiveEffect:_c,customRef:Xx,effect:$N,effectScope:ev,getCurrentScope:MA,isProxy:P0,isReactive:Ba,isReadonly:hi,isRef:Qt,isShallow:sc,markRaw:kr,onScopeDispose:A0,proxyRefs:N0,reactive:Bt,readonly:xo,ref:J,shallowReactive:V0,shallowReadonly:Tx,shallowRef:nn,stop:ex,toRaw:_t,toRef:bn,toRefs:Kn,triggerRef:$i,unref:c,camelize:Tr,capitalize:tu,normalizeClass:q,normalizeProps:fa,normalizeStyle:lt,toDisplayString:je,toHandlerKey:Fu,BaseTransition:q0,Comment:Qn,Fragment:Qe,KeepAlive:$x,Static:ii,Suspense:Gx,Teleport:au,Text:mo,callWithAsyncErrorHandling:na,callWithErrorHandling:Pl,cloneVNode:Ua,compatUtils:HX,computed:X,createBlock:ie,createCommentVNode:ae,createElementBlock:F,createElementVNode:z,createHydrationRenderer:q7,createPropsRestProxy:qX,createRenderer:L7,createSlots:tl,createStaticVNode:F7,createTextVNode:Xt,createVNode:C,defineAsyncComponent:Qx,defineComponent:$,defineEmits:gX,defineExpose:wX,defineProps:XX,get devtools(){return es},getCurrentInstance:Tt,getTransitionRawChildren:uv,guardReactiveProps:nd,h:st,handleError:Xi,initCustomFormatter:OX,inject:tt,isMemoSame:I7,isRuntimeOnly:KX,isVNode:cn,mergeDefaults:LX,mergeProps:Ut,nextTick:at,onActivated:m7,onBeforeMount:td,onBeforeUnmount:tn,onBeforeUpdate:O0,onDeactivated:U0,onErrorCaptured:k7,onMounted:At,onRenderTracked:W7,onRenderTriggered:A7,onServerPrefetch:y7,onUnmounted:mr,onUpdated:la,openBlock:K,popScopeId:Dr,provide:zt,pushScopeId:Mr,queuePostFlushCb:X0,registerRuntimeCompiler:TX,renderList:Nt,renderSlot:ue,resolveComponent:rt,resolveDirective:ho,resolveDynamicComponent:Ot,resolveFilter:zX,resolveTransitionHooks:gs,setBlockTracking:k1,setDevtoolsHook:d7,setTransitionHooks:mi,ssrContextKey:D7,ssrUtils:FX,toHandlers:T7,transformVNodeArgs:AX,useAttrs:Xo,useSSRContext:E7,useSlots:er,useTransitionState:L0,version:pv,warn:i7,watch:Ve,watchEffect:Dn,watchPostEffect:j0,watchSyncEffect:Ix,withAsyncContext:UX,withCtx:B,withDefaults:jX,withDirectives:Vt,withMemo:RX,withScopeId:Rx,Transition:fn,TransitionGroup:bv,VueElement:vv,createApp:G0,createSSRApp:dW,defineCustomElement:B7,defineSSRCustomElement:a6,hydrate:cW,initDirectivesForSSR:W6,render:gl,useCssModule:o6,useCssVars:Y7,vModelCheckbox:Ai,vModelDynamic:lW,vModelRadio:rd,vModelSelect:rW,vModelText:yi,vShow:Ct,withKeys:Dt,withModifiers:pt},Symbol.toStringTag,{value:"Module"})),xt=(e,t)=>{const n=e.__vccOpts||e;for(const[r,a]of t)n[r]=a;return n},V6="modulepreload",P6=function(e){return"/vue-reader/"+e},IS={},pW=function(t,n,r){if(!n||n.length===0)return t();const a=document.getElementsByTagName("link");return Promise.all(n.map(l=>{if(l=P6(l),l in IS)return;IS[l]=!0;const o=l.endsWith(".css"),i=o?'[rel="stylesheet"]':"";if(!!r)for(let d=a.length-1;d>=0;d--){const f=a[d];if(f.href===l&&(!o||f.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${l}"]${i}`))return;const u=document.createElement("link");if(u.rel=o?"stylesheet":V6,o||(u.as="script",u.crossOrigin=""),u.href=l,document.head.appendChild(u),o)return new Promise((d,f)=>{u.addEventListener("load",d),u.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${l}`)))})})).then(()=>t())};const T6=$({__name:"VPBadge",props:{text:null,type:null},setup(e){return(t,n)=>{var r;return K(),F("span",{class:q(["VPBadge",(r=e.type)!=null?r:"tip"])},[ue(t.$slots,"default",{},()=>[Xt(je(e.text),1)],!0)],2)}}});const K6=xt(T6,[["__scopeId","data-v-350d3852"]]),N6=JSON.parse('{"lang":"en-US","title":"vue-reader","description":"vue-reader document","base":"/vue-reader/","head":[],"appearance":true,"themeConfig":{"nav":[{"text":"Reader","link":"/reader"}],"socialLinks":[{"icon":"github","link":"https://github.com/jinhuan138/vue-reader"}]},"locales":{"root":{"label":"English","lang":"en"},"zh":{"label":"\u4E2D\u6587","lang":"zh"}},"langs":{},"scrollOffset":90,"cleanUrls":true}'),hv=/^[a-z]+:/i,BS="vitepress-theme-appearance",Or=typeof window<"u",vW={relativePath:"",title:"404",description:"Not Found",headers:[],frontmatter:{sidebar:!1,layout:"page"},lastUpdated:0};function x6(e,t){t.sort((n,r)=>{const a=r.split("/").length-n.split("/").length;return a!==0?a:r.length-n.length});for(const n of t)if(e.startsWith(n))return n}function YS(e,t){const n=x6(t,Object.keys(e));return n?e[n]:void 0}function X6(e){const{locales:t}=e.themeConfig||{},n=e.locales;return t&&n?Object.keys(t).reduce((r,a)=>(r[a]={label:t[a].label,lang:n[a].lang},r),{}):{}}function g6(e,t){t=j6(e,t);const n=YS(e.locales||{},t),r=YS(e.themeConfig.locales||{},t);return Object.assign({},e,n,{themeConfig:Object.assign({},e.themeConfig,r,{locales:{}}),lang:(n||e).lang,locales:{},langs:X6(e)})}function bW(e,t){var l;const n=t.title||e.title,r=(l=t.titleTemplate)!=null?l:e.titleTemplate;if(typeof r=="string"&&r.includes(":title"))return r.replace(/:title/g,n);const a=w6(e.title,r);return`${n}${a}`}function w6(e,t){return t===!1?"":t===!0||t===void 0?` | ${e}`:e===t?"":` | ${t}`}function j6(e,t){if(!Or)return t;const n=e.base,r=n.endsWith("/")?n.slice(0,-1):n;return t.slice(r.length)}function L6(e,t){const[n,r]=t;if(n!=="meta")return!1;const a=Object.entries(r)[0];return a==null?!1:e.some(([l,o])=>l===n&&o[a[0]]===a[1])}function q6(e,t){return[...e.filter(n=>!L6(t,n)),...t]}const U6=/[\u0000-\u001F"#$&*+,:;<=>?[\]^`{|}\u007F]/g,O6=/^[a-z]:/i;function QS(e){const t=O6.exec(e),n=t?t[0]:"";return n+e.slice(n.length).replace(U6,"_").replace(/(^|\/)_+(?=[^/]*$)/,"$1")}function R6(e,t){return`${e}${t}`.replace(/\/+/g,"/")}function vc(e){return hv.test(e)?e:R6(Ls.value.base,e)}function hW(e){let t=e.replace(/\.html$/,"");if(t=decodeURIComponent(t),t.endsWith("/")&&(t+="index"),Or){const n="/vue-reader/";t=QS(t.slice(n.length).replace(/\//g,"_")||"index")+".md";const r=__VP_HASH_MAP__[t.toLowerCase()];t=`${n}assets/${t}.${r}.js`}else t=`./${QS(t.slice(1).replace(/\//g,"_"))}.md.js`;return t}const mW=Symbol(),Ls=nn(N6);function J6(e){const t=X(()=>g6(Ls.value,e.path));return{site:t,theme:X(()=>t.value.themeConfig),page:X(()=>e.data),frontmatter:X(()=>e.data.frontmatter),lang:X(()=>t.value.lang),localePath:X(()=>{const{langs:n,lang:r}=t.value,a=Object.keys(n).find(l=>n[l].lang===r);return vc(a||"/")}),title:X(()=>bW(t.value,e.data)),description:X(()=>e.data.description||t.value.description),isDark:J(!1)}}function dn(){const e=tt(mW);if(!e)throw new Error("vitepress data not properly injected in app");return e}const SW=Symbol(),_S="http://a.com",F6=()=>({path:"/",component:null,data:vW});function z6(e,t){const n=Bt(F6()),r={route:n,go:a};async function a(i=Or?location.href:"/"){var u,d;await((u=r.onBeforeRouteChange)==null?void 0:u.call(r,i));const s=new URL(i,_S);Ls.value.cleanUrls==="disabled"&&!s.pathname.endsWith("/")&&!s.pathname.endsWith(".html")&&(s.pathname+=".html",i=s.pathname+s.search+s.hash),Or&&(history.replaceState({scrollPosition:window.scrollY},document.title),history.pushState(null,"",i)),await o(i),await((d=r.onAfterRouteChanged)==null?void 0:d.call(r,i))}let l=null;async function o(i,s=0,u=!1){const d=new URL(i,_S),f=l=d.pathname;try{let p=await e(f);if(l===f){l=null;const{default:b,__pageData:A}=p;if(!b)throw new Error(`Invalid route component: ${b}`);n.path=Or?f:vc(f),n.component=kr(b),n.data=kr(A),Or&&at(()=>{if(d.hash&&!s){let h=null;try{h=document.querySelector(decodeURIComponent(d.hash))}catch(m){console.warn(m)}if(h){$S(h,d.hash);return}}window.scrollTo(0,s)})}}catch(p){if(!/fetch/.test(p.message)&&!/^\/404(\.html|\/)?$/.test(i)&&console.error(p),!u)try{const b=await fetch(Ls.value.base+"hashmap.json");window.__VP_HASH_MAP__=await b.json(),await o(i,s,!0);return}catch{}l===f&&(l=null,n.path=Or?f:vc(f),n.component=t?kr(t):null,n.data=vW)}}return Or&&(window.addEventListener("click",i=>{if(i.target.closest("button"))return;const u=i.target.closest("a");if(u&&!u.closest(".vp-raw")&&!u.download){const{href:d,origin:f,pathname:p,hash:b,search:A,target:h}=u,m=window.location,v=p.match(/\.\w+$/);!i.ctrlKey&&!i.shiftKey&&!i.altKey&&!i.metaKey&&h!=="_blank"&&f===m.origin&&!(v&&v[0]!==".html")&&(i.preventDefault(),p===m.pathname&&A===m.search?b&&b!==m.hash&&(history.pushState(null,"",b),window.dispatchEvent(new Event("hashchange")),$S(u,b,u.classList.contains("header-anchor"))):a(d))}},{capture:!0}),window.addEventListener("popstate",i=>{o(location.href,i.state&&i.state.scrollPosition||0)}),window.addEventListener("hashchange",i=>{i.preventDefault()})),r}function H6(){const e=tt(SW);if(!e)throw new Error("useRouter() is called without provider.");return e}function Hl(){return H6().route}function $S(e,t,n=!1){let r=null;try{r=e.classList.contains("header-anchor")?e:document.querySelector(decodeURIComponent(t))}catch(a){console.warn(a)}if(r){let a=Ls.value.scrollOffset;typeof a=="string"&&(a=document.querySelector(a).getBoundingClientRect().bottom+24);const l=parseInt(window.getComputedStyle(r).paddingTop,10),o=window.scrollY+r.getBoundingClientRect().top-a+l;!n||Math.abs(o-window.scrollY)>window.innerHeight?window.scrollTo(0,o):window.scrollTo({left:0,top:o,behavior:"smooth"})}}const Z6=$({name:"VitePressContent",props:{onContentUpdated:Function},setup(e){const t=Hl();return la(()=>{var n;(n=e.onContentUpdated)==null||n.call(e)}),()=>st("div",{style:{position:"relative"}},[t.component?st(t.component):null])}}),yW=/#.*$/,G6=/(index)?\.(md|html)$/,C6=typeof window<"u",M6=J(C6?location.hash:"");function D6(e){return hv.test(e)}function E6(e,t){let n,r=!1;return()=>{n&&clearTimeout(n),r?n=setTimeout(e,t):(e(),r=!0,setTimeout(()=>{r=!1},t))}}function lu(e,t,n=!1){if(t===void 0)return!1;if(e=ty(`/${e}`),n)return new RegExp(t).test(e);if(ty(t)!==e)return!1;const r=t.match(yW);return r?M6.value===r[0]:!0}function ey(e){return/^\//.test(e)?e:`/${e}`}function ty(e){return decodeURI(e).replace(yW,"").replace(G6,"")}function op(e){if(D6(e))return e;const{site:t}=dn(),{pathname:n,search:r,hash:a}=new URL(e,"http://example.com"),l=n.endsWith("/")||n.endsWith(".html")?e:`${n.replace(/(\.md)?$/,t.value.cleanUrls==="disabled"?".html":"")}${r}${a}`;return vc(l)}function AW(e,t){if(Array.isArray(e))return e;if(e==null)return[];t=ey(t);const n=Object.keys(e).sort((r,a)=>a.split("/").length-r.split("/").length).find(r=>t.startsWith(ey(r)));return n?e[n]:[]}function I6(e){const t=[];function n(r){for(const a of r)a.link&&t.push({...a,link:a.link}),"items"in a&&n(a.items)}for(const r of e)n(r.items);return t}function ol(){const e=Hl(),{theme:t,frontmatter:n}=dn(),r=J(!1),a=X(()=>{const d=t.value.sidebar,f=e.data.relativePath;return d?AW(d,f):[]}),l=X(()=>n.value.sidebar!==!1&&a.value.length>0&&n.value.layout!=="home"),o=X(()=>n.value.layout!=="home"&&n.value.aside!==!1);function i(){r.value=!0}function s(){r.value=!1}function u(){r.value?s():i()}return{isOpen:r,sidebar:a,hasSidebar:l,hasAside:o,open:i,close:s,toggle:u}}function B6(e,t){let n;Dn(()=>{n=e.value?document.activeElement:void 0}),At(()=>{window.addEventListener("keyup",r)}),mr(()=>{window.removeEventListener("keyup",r)});function r(a){a.key==="Escape"&&e.value&&(t(),n==null||n.focus())}}const Y6=$({__name:"VPSkipLink",setup(e){const t=Hl(),n=J();Ve(()=>t.path,()=>n.value.focus());function r({target:a}){const l=document.querySelector(a.hash);if(l){const o=()=>{l.removeAttribute("tabindex"),l.removeEventListener("blur",o)};l.setAttribute("tabindex","-1"),l.addEventListener("blur",o),l.focus(),window.scrollTo(0,0)}}return(a,l)=>(K(),F(Qe,null,[z("span",{ref_key:"backToTop",ref:n,tabindex:"-1"},null,512),z("a",{href:"#VPContent",class:"VPSkipLink visually-hidden",onClick:r}," Skip to content ")],64))}});const Q6=xt(Y6,[["__scopeId","data-v-151f2593"]]),_6={key:0,class:"VPBackdrop"},$6=$({__name:"VPBackdrop",props:{show:{type:Boolean}},setup(e){return(t,n)=>(K(),ie(fn,{name:"fade"},{default:B(()=>[e.show?(K(),F("div",_6)):ae("",!0)]),_:1}))}});const eg=xt($6,[["__scopeId","data-v-c7c65b34"]]);function tg(){const e=J(!1);function t(){e.value=!0,window.addEventListener("resize",a)}function n(){e.value=!1,window.removeEventListener("resize",a)}function r(){e.value?n():t()}function a(){window.outerWidth>=768&&n()}const l=Hl();return Ve(()=>l.path,n),{isScreenOpen:e,openScreen:t,closeScreen:n,toggleScreen:r}}const ng=["src","alt"],rg={inheritAttrs:!1},ag=$({...rg,__name:"VPImage",props:{image:null,alt:null},setup(e){return(t,n)=>{var a;const r=rt("VPImage",!0);return e.image?(K(),F(Qe,{key:0},[typeof e.image=="string"||"src"in e.image?(K(),F("img",Ut({key:0,class:"VPImage"},typeof e.image=="string"?t.$attrs:{...e.image,...t.$attrs},{src:c(vc)(typeof e.image=="string"?e.image:e.image.src),alt:(a=e.alt)!=null?a:typeof e.image=="string"?"":e.image.alt||""}),null,16,ng)):(K(),F(Qe,{key:1},[C(r,Ut({class:"dark",image:e.image.dark,alt:typeof e.image.dark=="string"?e.image.alt:e.image.dark.alt||e.image.alt},t.$attrs),null,16,["image","alt"]),C(r,Ut({class:"light",image:e.image.light,alt:typeof e.image.light=="string"?e.image.alt:e.image.light.alt||e.image.alt},t.$attrs),null,16,["image","alt"])],64))],64)):ae("",!0)}}});const WW=xt(ag,[["__scopeId","data-v-b7ac6bd3"]]),lg=["href"],og=$({__name:"VPNavBarTitle",setup(e){const{site:t,theme:n}=dn(),{hasSidebar:r}=ol();return(a,l)=>(K(),F("div",{class:q(["VPNavBarTitle",{"has-sidebar":c(r)}])},[z("a",{class:"title",href:c(t).base},[ue(a.$slots,"nav-bar-title-before",{},void 0,!0),C(WW,{class:"logo",image:c(n).logo},null,8,["image"]),c(n).siteTitle?(K(),F(Qe,{key:0},[Xt(je(c(n).siteTitle),1)],64)):c(n).siteTitle===void 0?(K(),F(Qe,{key:1},[Xt(je(c(t).title),1)],64)):ae("",!0),ue(a.$slots,"nav-bar-title-after",{},void 0,!0)],8,lg)],2))}});const ig=xt(og,[["__scopeId","data-v-d5925166"]]);const sg={key:0,class:"VPNavBarSearch"},ug={type:"button",class:"DocSearch DocSearch-Button","aria-label":"Search"},cg={class:"DocSearch-Button-Container"},dg=z("svg",{class:"DocSearch-Search-Icon",width:"20",height:"20",viewBox:"0 0 20 20"},[z("path",{d:"M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z",stroke:"currentColor",fill:"none","fill-rule":"evenodd","stroke-linecap":"round","stroke-linejoin":"round"})],-1),fg={class:"DocSearch-Button-Placeholder"},pg=z("span",{class:"DocSearch-Button-Keys"},[z("kbd",{class:"DocSearch-Button-Key"}),z("kbd",{class:"DocSearch-Button-Key"},"K")],-1),vg=$({__name:"VPNavBarSearch",setup(e){Y7(o=>({"5943dbe8":a.value}));const t=()=>null,{theme:n}=dn(),r=J(!1),a=J("'Meta'");At(()=>{if(!n.value.algolia)return;a.value=/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform)?"'\u2318'":"'Ctrl'";const o=s=>{s.key==="k"&&(s.ctrlKey||s.metaKey)&&(s.preventDefault(),l(),i())},i=()=>{window.removeEventListener("keydown",o)};window.addEventListener("keydown",o),mr(i)});function l(){r.value||(r.value=!0)}return(o,i)=>{var s;return c(n).algolia?(K(),F("div",sg,[r.value?(K(),ie(c(t),{key:0})):(K(),F("div",{key:1,id:"docsearch",onClick:l},[z("button",ug,[z("span",cg,[dg,z("span",fg,je(((s=c(n).algolia)==null?void 0:s.buttonText)||"Search"),1)]),pg])]))])):ae("",!0)}}});const bg={},hg={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",height:"24px",viewBox:"0 0 24 24",width:"24px"},mg=z("path",{d:"M0 0h24v24H0V0z",fill:"none"},null,-1),Sg=z("path",{d:"M9 5v2h6.59L4 18.59 5.41 20 17 8.41V15h2V5H9z"},null,-1),yg=[mg,Sg];function Ag(e,t){return K(),F("svg",hg,yg)}const Wg=xt(bg,[["render",Ag]]),kg=$({__name:"VPLink",props:{href:null,noIcon:{type:Boolean}},setup(e){const t=e,n=X(()=>t.href&&hv.test(t.href));return(r,a)=>(K(),ie(Ot(e.href?"a":"span"),{class:q(["VPLink",{link:e.href}]),href:e.href?c(op)(e.href):void 0,target:c(n)?"_blank":void 0,rel:c(n)?"noreferrer":void 0},{default:B(()=>[ue(r.$slots,"default",{},void 0,!0),c(n)&&!e.noIcon?(K(),ie(Wg,{key:0,class:"icon"})):ae("",!0)]),_:3},8,["class","href","target","rel"]))}});const gi=xt(kg,[["__scopeId","data-v-3c355974"]]),Vg=$({__name:"VPNavBarMenuLink",props:{item:null},setup(e){const{page:t}=dn();return(n,r)=>(K(),ie(gi,{class:q({VPNavBarMenuLink:!0,active:c(lu)(c(t).relativePath,e.item.activeMatch||e.item.link,!!e.item.activeMatch)}),href:e.item.link,noIcon:!0},{default:B(()=>[Xt(je(e.item.text),1)]),_:1},8,["class","href"]))}});const Pg=xt(Vg,[["__scopeId","data-v-47a2263e"]]),C0=J();let kW=!1,hb=0;function Tg(e){const t=J(!1);if(typeof window<"u"){!kW&&Kg(),hb++;const n=Ve(C0,r=>{var a,l,o;r===e.el.value||((a=e.el.value)==null?void 0:a.contains(r))?(t.value=!0,(l=e.onFocus)==null||l.call(e)):(t.value=!1,(o=e.onBlur)==null||o.call(e))});mr(()=>{n(),hb--,hb||Ng()})}return xo(t)}function Kg(){document.addEventListener("focusin",VW),kW=!0,C0.value=document.activeElement}function Ng(){document.removeEventListener("focusin",VW)}function VW(){C0.value=document.activeElement}const xg={},Xg={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},gg=z("path",{d:"M12,16c-0.3,0-0.5-0.1-0.7-0.3l-6-6c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l5.3,5.3l5.3-5.3c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4l-6,6C12.5,15.9,12.3,16,12,16z"},null,-1),wg=[gg];function jg(e,t){return K(),F("svg",Xg,wg)}const PW=xt(xg,[["render",jg]]),Lg={},qg={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},Ug=z("circle",{cx:"12",cy:"12",r:"2"},null,-1),Og=z("circle",{cx:"19",cy:"12",r:"2"},null,-1),Rg=z("circle",{cx:"5",cy:"12",r:"2"},null,-1),Jg=[Ug,Og,Rg];function Fg(e,t){return K(),F("svg",qg,Jg)}const zg=xt(Lg,[["render",Fg]]),Hg={class:"VPMenuLink"},Zg=$({__name:"VPMenuLink",props:{item:null},setup(e){const{page:t}=dn();return(n,r)=>(K(),F("div",Hg,[C(gi,{class:q({active:c(lu)(c(t).relativePath,e.item.activeMatch||e.item.link)}),href:e.item.link},{default:B(()=>[Xt(je(e.item.text),1)]),_:1},8,["class","href"])]))}});const mv=xt(Zg,[["__scopeId","data-v-e8e0fb1d"]]),Gg={class:"VPMenuGroup"},Cg={key:0,class:"title"},Mg=$({__name:"VPMenuGroup",props:{text:null,items:null},setup(e){return(t,n)=>(K(),F("div",Gg,[e.text?(K(),F("p",Cg,je(e.text),1)):ae("",!0),(K(!0),F(Qe,null,Nt(e.items,r=>(K(),F(Qe,null,["link"in r?(K(),ie(mv,{key:0,item:r},null,8,["item"])):ae("",!0)],64))),256))]))}});const Dg=xt(Mg,[["__scopeId","data-v-9ca52130"]]),Eg={class:"VPMenu"},Ig={key:0,class:"items"},Bg=$({__name:"VPMenu",props:{items:null},setup(e){return(t,n)=>(K(),F("div",Eg,[e.items?(K(),F("div",Ig,[(K(!0),F(Qe,null,Nt(e.items,r=>(K(),F(Qe,{key:r.text},["link"in r?(K(),ie(mv,{key:0,item:r},null,8,["item"])):(K(),ie(Dg,{key:1,text:r.text,items:r.items},null,8,["text","items"]))],64))),128))])):ae("",!0),ue(t.$slots,"default",{},void 0,!0)]))}});const Yg=xt(Bg,[["__scopeId","data-v-1c5d0cfc"]]),Qg=["aria-expanded","aria-label"],_g={key:0,class:"text"},$g={class:"menu"},ew=$({__name:"VPFlyout",props:{icon:null,button:null,label:null,items:null},setup(e){const t=J(!1),n=J();Tg({el:n,onBlur:r});function r(){t.value=!1}return(a,l)=>(K(),F("div",{class:"VPFlyout",ref_key:"el",ref:n,onMouseenter:l[1]||(l[1]=o=>t.value=!0),onMouseleave:l[2]||(l[2]=o=>t.value=!1)},[z("button",{type:"button",class:"button","aria-haspopup":"true","aria-expanded":t.value,"aria-label":e.label,onClick:l[0]||(l[0]=o=>t.value=!t.value)},[e.button||e.icon?(K(),F("span",_g,[e.icon?(K(),ie(Ot(e.icon),{key:0,class:"option-icon"})):ae("",!0),Xt(" "+je(e.button)+" ",1),C(PW,{class:"text-icon"})])):(K(),ie(zg,{key:1,class:"icon"}))],8,Qg),z("div",$g,[C(Yg,{items:e.items},{default:B(()=>[ue(a.$slots,"default",{},void 0,!0)]),_:3},8,["items"])])],544))}});const M0=xt(ew,[["__scopeId","data-v-6ffb57d3"]]),tw=$({__name:"VPNavBarMenuGroup",props:{item:null},setup(e){const{page:t}=dn();return(n,r)=>(K(),ie(M0,{class:q({VPNavBarMenuGroup:!0,active:c(lu)(c(t).relativePath,e.item.activeMatch,!!e.item.activeMatch)}),button:e.item.text,items:e.item.items},null,8,["class","button","items"]))}}),nw=e=>(Mr("data-v-f83db6ba"),e=e(),Dr(),e),rw={key:0,"aria-labelledby":"main-nav-aria-label",class:"VPNavBarMenu"},aw=nw(()=>z("span",{id:"main-nav-aria-label",class:"visually-hidden"},"Main Navigation",-1)),lw=$({__name:"VPNavBarMenu",setup(e){const{theme:t}=dn();return(n,r)=>c(t).nav?(K(),F("nav",rw,[aw,(K(!0),F(Qe,null,Nt(c(t).nav,a=>(K(),F(Qe,{key:a.text},["link"in a?(K(),ie(Pg,{key:0,item:a},null,8,["item"])):(K(),ie(tw,{key:1,item:a},null,8,["item"]))],64))),128))])):ae("",!0)}});const ow=xt(lw,[["__scopeId","data-v-f83db6ba"]]),iw={},sw={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},uw=z("path",{d:"M0 0h24v24H0z",fill:"none"},null,-1),cw=z("path",{d:" M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z ",class:"css-c4d79v"},null,-1),dw=[uw,cw];function fw(e,t){return K(),F("svg",sw,dw)}const TW=xt(iw,[["render",fw]]),pw={class:"items"},vw={class:"title"},bw=$({__name:"VPNavBarTranslations",setup(e){const{theme:t}=dn();return(n,r)=>c(t).localeLinks?(K(),ie(M0,{key:0,class:"VPNavBarTranslations",icon:TW},{default:B(()=>[z("div",pw,[z("p",vw,je(c(t).localeLinks.text),1),(K(!0),F(Qe,null,Nt(c(t).localeLinks.items,a=>(K(),ie(mv,{key:a.link,item:a},null,8,["item"]))),128))])]),_:1})):ae("",!0)}});const hw=xt(bw,[["__scopeId","data-v-db824e91"]]);const mw={},Sw={class:"VPSwitch",type:"button",role:"switch"},yw={class:"check"},Aw={key:0,class:"icon"};function Ww(e,t){return K(),F("button",Sw,[z("span",yw,[e.$slots.default?(K(),F("span",Aw,[ue(e.$slots,"default",{},void 0,!0)])):ae("",!0)])])}const kw=xt(mw,[["render",Ww],["__scopeId","data-v-eba7420e"]]),Vw={},Pw={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},Tw=F7('<path d="M12,18c-3.3,0-6-2.7-6-6s2.7-6,6-6s6,2.7,6,6S15.3,18,12,18zM12,8c-2.2,0-4,1.8-4,4c0,2.2,1.8,4,4,4c2.2,0,4-1.8,4-4C16,9.8,14.2,8,12,8z"></path><path d="M12,4c-0.6,0-1-0.4-1-1V1c0-0.6,0.4-1,1-1s1,0.4,1,1v2C13,3.6,12.6,4,12,4z"></path><path d="M12,24c-0.6,0-1-0.4-1-1v-2c0-0.6,0.4-1,1-1s1,0.4,1,1v2C13,23.6,12.6,24,12,24z"></path><path d="M5.6,6.6c-0.3,0-0.5-0.1-0.7-0.3L3.5,4.9c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l1.4,1.4c0.4,0.4,0.4,1,0,1.4C6.2,6.5,5.9,6.6,5.6,6.6z"></path><path d="M19.8,20.8c-0.3,0-0.5-0.1-0.7-0.3l-1.4-1.4c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l1.4,1.4c0.4,0.4,0.4,1,0,1.4C20.3,20.7,20,20.8,19.8,20.8z"></path><path d="M3,13H1c-0.6,0-1-0.4-1-1s0.4-1,1-1h2c0.6,0,1,0.4,1,1S3.6,13,3,13z"></path><path d="M23,13h-2c-0.6,0-1-0.4-1-1s0.4-1,1-1h2c0.6,0,1,0.4,1,1S23.6,13,23,13z"></path><path d="M4.2,20.8c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l1.4-1.4c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4l-1.4,1.4C4.7,20.7,4.5,20.8,4.2,20.8z"></path><path d="M18.4,6.6c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l1.4-1.4c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4l-1.4,1.4C18.9,6.5,18.6,6.6,18.4,6.6z"></path>',9),Kw=[Tw];function Nw(e,t){return K(),F("svg",Pw,Kw)}const xw=xt(Vw,[["render",Nw]]),Xw={},gw={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},ww=z("path",{d:"M12.1,22c-0.3,0-0.6,0-0.9,0c-5.5-0.5-9.5-5.4-9-10.9c0.4-4.8,4.2-8.6,9-9c0.4,0,0.8,0.2,1,0.5c0.2,0.3,0.2,0.8-0.1,1.1c-2,2.7-1.4,6.4,1.3,8.4c2.1,1.6,5,1.6,7.1,0c0.3-0.2,0.7-0.3,1.1-0.1c0.3,0.2,0.5,0.6,0.5,1c-0.2,2.7-1.5,5.1-3.6,6.8C16.6,21.2,14.4,22,12.1,22zM9.3,4.4c-2.9,1-5,3.6-5.2,6.8c-0.4,4.4,2.8,8.3,7.2,8.7c2.1,0.2,4.2-0.4,5.8-1.8c1.1-0.9,1.9-2.1,2.4-3.4c-2.5,0.9-5.3,0.5-7.5-1.1C9.2,11.4,8.1,7.7,9.3,4.4z"},null,-1),jw=[ww];function Lw(e,t){return K(),F("svg",gw,jw)}const qw=xt(Xw,[["render",Lw]]),Uw=$({__name:"VPSwitchAppearance",setup(e){const{site:t,isDark:n}=dn(),r=J(!1),a=typeof localStorage<"u"?l():()=>{};At(()=>{r.value=document.documentElement.classList.contains("dark")});function l(){const o=window.matchMedia("(prefers-color-scheme: dark)"),i=document.documentElement.classList;let s=localStorage.getItem(BS),u=t.value.appearance==="dark"&&s==null||(s==="auto"||s==null?o.matches:s==="dark");o.onchange=p=>{s==="auto"&&f(u=p.matches)};function d(){f(u=!u),s=u?o.matches?"auto":"dark":o.matches?"light":"auto",localStorage.setItem(BS,s)}function f(p){const b=document.createElement("style");b.type="text/css",b.appendChild(document.createTextNode(`:not(.VPSwitchAppearance):not(.VPSwitchAppearance *) {
  -webkit-transition: none !important;
  -moz-transition: none !important;
  -o-transition: none !important;
  -ms-transition: none !important;
  transition: none !important;
}`)),document.head.appendChild(b),r.value=p,i[p?"add":"remove"]("dark"),window.getComputedStyle(b).opacity,document.head.removeChild(b)}return d}return Ve(r,o=>{n.value=o}),(o,i)=>(K(),ie(kw,{class:"VPSwitchAppearance","aria-label":"toggle dark mode","aria-checked":r.value,onClick:c(a)},{default:B(()=>[C(xw,{class:"sun"}),C(qw,{class:"moon"})]),_:1},8,["aria-checked","onClick"]))}});const D0=xt(Uw,[["__scopeId","data-v-481098f9"]]),Ow={key:0,class:"VPNavBarAppearance"},Rw=$({__name:"VPNavBarAppearance",setup(e){const{site:t}=dn();return(n,r)=>c(t).appearance?(K(),F("div",Ow,[C(D0)])):ae("",!0)}});const Jw=xt(Rw,[["__scopeId","data-v-a3e7452b"]]),Fw={discord:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Discord</title><path d="M20.317 4.3698a19.7913 19.7913 0 00-4.8851-1.5152.0741.0741 0 00-.0785.0371c-.211.3753-.4447.8648-.6083 1.2495-1.8447-.2762-3.68-.2762-5.4868 0-.1636-.3933-.4058-.8742-.6177-1.2495a.077.077 0 00-.0785-.037 19.7363 19.7363 0 00-4.8852 1.515.0699.0699 0 00-.0321.0277C.5334 9.0458-.319 13.5799.0992 18.0578a.0824.0824 0 00.0312.0561c2.0528 1.5076 4.0413 2.4228 5.9929 3.0294a.0777.0777 0 00.0842-.0276c.4616-.6304.8731-1.2952 1.226-1.9942a.076.076 0 00-.0416-.1057c-.6528-.2476-1.2743-.5495-1.8722-.8923a.077.077 0 01-.0076-.1277c.1258-.0943.2517-.1923.3718-.2914a.0743.0743 0 01.0776-.0105c3.9278 1.7933 8.18 1.7933 12.0614 0a.0739.0739 0 01.0785.0095c.1202.099.246.1981.3728.2924a.077.077 0 01-.0066.1276 12.2986 12.2986 0 01-1.873.8914.0766.0766 0 00-.0407.1067c.3604.698.7719 1.3628 1.225 1.9932a.076.076 0 00.0842.0286c1.961-.6067 3.9495-1.5219 6.0023-3.0294a.077.077 0 00.0313-.0552c.5004-5.177-.8382-9.6739-3.5485-13.6604a.061.061 0 00-.0312-.0286zM8.02 15.3312c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9555-2.4189 2.157-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.9555 2.4189-2.1569 2.4189zm7.9748 0c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9554-2.4189 2.1569-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.946 2.4189-2.1568 2.4189Z"/></svg>',facebook:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Facebook</title><path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/></svg>',github:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>GitHub</title><path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg>',instagram:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Instagram</title><path d="M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z"/></svg>',linkedin:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>LinkedIn</title><path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/></svg>',slack:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Slack</title><path d="M5.042 15.165a2.528 2.528 0 0 1-2.52 2.523A2.528 2.528 0 0 1 0 15.165a2.527 2.527 0 0 1 2.522-2.52h2.52v2.52zM6.313 15.165a2.527 2.527 0 0 1 2.521-2.52 2.527 2.527 0 0 1 2.521 2.52v6.313A2.528 2.528 0 0 1 8.834 24a2.528 2.528 0 0 1-2.521-2.522v-6.313zM8.834 5.042a2.528 2.528 0 0 1-2.521-2.52A2.528 2.528 0 0 1 8.834 0a2.528 2.528 0 0 1 2.521 2.522v2.52H8.834zM8.834 6.313a2.528 2.528 0 0 1 2.521 2.521 2.528 2.528 0 0 1-2.521 2.521H2.522A2.528 2.528 0 0 1 0 8.834a2.528 2.528 0 0 1 2.522-2.521h6.312zM18.956 8.834a2.528 2.528 0 0 1 2.522-2.521A2.528 2.528 0 0 1 24 8.834a2.528 2.528 0 0 1-2.522 2.521h-2.522V8.834zM17.688 8.834a2.528 2.528 0 0 1-2.523 2.521 2.527 2.527 0 0 1-2.52-2.521V2.522A2.527 2.527 0 0 1 15.165 0a2.528 2.528 0 0 1 2.523 2.522v6.312zM15.165 18.956a2.528 2.528 0 0 1 2.523 2.522A2.528 2.528 0 0 1 15.165 24a2.527 2.527 0 0 1-2.52-2.522v-2.522h2.52zM15.165 17.688a2.527 2.527 0 0 1-2.52-2.523 2.526 2.526 0 0 1 2.52-2.52h6.313A2.527 2.527 0 0 1 24 15.165a2.528 2.528 0 0 1-2.522 2.523h-6.313z"/></svg>',twitter:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Twitter</title><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg>',youtube:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>YouTube</title><path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/></svg>'},zw=["href","innerHTML"],Hw=$({__name:"VPSocialLink",props:{icon:null,link:null},setup(e){const t=e,n=X(()=>typeof t.icon=="object"?t.icon.svg:Fw[t.icon]);return(r,a)=>(K(),F("a",{class:"VPSocialLink",href:e.link,target:"_blank",rel:"noopener",innerHTML:c(n)},null,8,zw))}});const Zw=xt(Hw,[["__scopeId","data-v-e57698f6"]]),Gw={class:"VPSocialLinks"},Cw=$({__name:"VPSocialLinks",props:{links:null},setup(e){return(t,n)=>(K(),F("div",Gw,[(K(!0),F(Qe,null,Nt(e.links,({link:r,icon:a})=>(K(),ie(Zw,{key:r,icon:a,link:r},null,8,["icon","link"]))),128))]))}});const E0=xt(Cw,[["__scopeId","data-v-f6988cfb"]]),Mw=$({__name:"VPNavBarSocialLinks",setup(e){const{theme:t}=dn();return(n,r)=>c(t).socialLinks?(K(),ie(E0,{key:0,class:"VPNavBarSocialLinks",links:c(t).socialLinks},null,8,["links"])):ae("",!0)}});const Dw=xt(Mw,[["__scopeId","data-v-738bef5a"]]),Ew=e=>(Mr("data-v-e4361c82"),e=e(),Dr(),e),Iw={key:0,class:"group"},Bw={class:"trans-title"},Yw={key:1,class:"group"},Qw={class:"item appearance"},_w=Ew(()=>z("p",{class:"label"},"Appearance",-1)),$w={class:"appearance-action"},ej={key:2,class:"group"},tj={class:"item social-links"},nj=$({__name:"VPNavBarExtra",setup(e){const{site:t,theme:n}=dn(),r=X(()=>n.value.localeLinks||t.value.appearance||n.value.socialLinks);return(a,l)=>c(r)?(K(),ie(M0,{key:0,class:"VPNavBarExtra",label:"extra navigation"},{default:B(()=>[c(n).localeLinks?(K(),F("div",Iw,[z("p",Bw,je(c(n).localeLinks.text),1),(K(!0),F(Qe,null,Nt(c(n).localeLinks.items,o=>(K(),ie(mv,{key:o.link,item:o},null,8,["item"]))),128))])):ae("",!0),c(t).appearance?(K(),F("div",Yw,[z("div",Qw,[_w,z("div",$w,[C(D0)])])])):ae("",!0),c(n).socialLinks?(K(),F("div",ej,[z("div",tj,[C(E0,{class:"social-links-list",links:c(n).socialLinks},null,8,["links"])])])):ae("",!0)]),_:1})):ae("",!0)}});const rj=xt(nj,[["__scopeId","data-v-e4361c82"]]),aj=e=>(Mr("data-v-e5dd9c1c"),e=e(),Dr(),e),lj=["aria-expanded"],oj=aj(()=>z("span",{class:"container"},[z("span",{class:"top"}),z("span",{class:"middle"}),z("span",{class:"bottom"})],-1)),ij=[oj],sj=$({__name:"VPNavBarHamburger",props:{active:{type:Boolean}},emits:["click"],setup(e){return(t,n)=>(K(),F("button",{type:"button",class:q(["VPNavBarHamburger",{active:e.active}]),"aria-label":"mobile navigation","aria-expanded":e.active,"aria-controls":"VPNavScreen",onClick:n[0]||(n[0]=r=>t.$emit("click"))},ij,10,lj))}});const uj=xt(sj,[["__scopeId","data-v-e5dd9c1c"]]),cj={class:"container"},dj={class:"content"},fj=$({__name:"VPNavBar",props:{isScreenOpen:{type:Boolean}},emits:["toggle-screen"],setup(e){const{hasSidebar:t}=ol();return(n,r)=>(K(),F("div",{class:q(["VPNavBar",{"has-sidebar":c(t)}])},[z("div",cj,[C(ig,null,{"nav-bar-title-before":B(()=>[ue(n.$slots,"nav-bar-title-before",{},void 0,!0)]),"nav-bar-title-after":B(()=>[ue(n.$slots,"nav-bar-title-after",{},void 0,!0)]),_:3}),z("div",dj,[ue(n.$slots,"nav-bar-content-before",{},void 0,!0),C(vg,{class:"search"}),C(ow,{class:"menu"}),C(hw,{class:"translations"}),C(Jw,{class:"appearance"}),C(Dw,{class:"social-links"}),C(rj,{class:"extra"}),ue(n.$slots,"nav-bar-content-after",{},void 0,!0),C(uj,{class:"hamburger",active:e.isScreenOpen,onClick:r[0]||(r[0]=a=>n.$emit("toggle-screen"))},null,8,["active"])])])],2))}});const pj=xt(fj,[["__scopeId","data-v-1bbed88e"]]);function vj(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}else return Array.from(e)}var I0=!1;if(typeof window<"u"){var ny={get passive(){I0=!0}};window.addEventListener("testPassive",null,ny),window.removeEventListener("testPassive",null,ny)}var ip=typeof window<"u"&&window.navigator&&window.navigator.platform&&(/iP(ad|hone|od)/.test(window.navigator.platform)||window.navigator.platform==="MacIntel"&&window.navigator.maxTouchPoints>1),ys=[],sp=!1,B0=-1,Cu=void 0,Eo=void 0,Mu=void 0,KW=function(t){return ys.some(function(n){return!!(n.options.allowTouchMove&&n.options.allowTouchMove(t))})},up=function(t){var n=t||window.event;return KW(n.target)||n.touches.length>1?!0:(n.preventDefault&&n.preventDefault(),!1)},bj=function(t){if(Mu===void 0){var n=!!t&&t.reserveScrollBarGap===!0,r=window.innerWidth-document.documentElement.clientWidth;if(n&&r>0){var a=parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right"),10);Mu=document.body.style.paddingRight,document.body.style.paddingRight=a+r+"px"}}Cu===void 0&&(Cu=document.body.style.overflow,document.body.style.overflow="hidden")},hj=function(){Mu!==void 0&&(document.body.style.paddingRight=Mu,Mu=void 0),Cu!==void 0&&(document.body.style.overflow=Cu,Cu=void 0)},mj=function(){return window.requestAnimationFrame(function(){if(Eo===void 0){Eo={position:document.body.style.position,top:document.body.style.top,left:document.body.style.left};var t=window,n=t.scrollY,r=t.scrollX,a=t.innerHeight;document.body.style.position="fixed",document.body.style.top=-n,document.body.style.left=-r,setTimeout(function(){return window.requestAnimationFrame(function(){var l=a-window.innerHeight;l&&n>=a&&(document.body.style.top=-(n+l))})},300)}})},Sj=function(){if(Eo!==void 0){var t=-parseInt(document.body.style.top,10),n=-parseInt(document.body.style.left,10);document.body.style.position=Eo.position,document.body.style.top=Eo.top,document.body.style.left=Eo.left,window.scrollTo(n,t),Eo=void 0}},yj=function(t){return t?t.scrollHeight-t.scrollTop<=t.clientHeight:!1},Aj=function(t,n){var r=t.targetTouches[0].clientY-B0;return KW(t.target)?!1:n&&n.scrollTop===0&&r>0||yj(n)&&r<0?up(t):(t.stopPropagation(),!0)},NW=function(t,n){if(!t){console.error("disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.");return}if(!ys.some(function(a){return a.targetElement===t})){var r={targetElement:t,options:n||{}};ys=[].concat(vj(ys),[r]),ip?mj():bj(n),ip&&(t.ontouchstart=function(a){a.targetTouches.length===1&&(B0=a.targetTouches[0].clientY)},t.ontouchmove=function(a){a.targetTouches.length===1&&Aj(a,t)},sp||(document.addEventListener("touchmove",up,I0?{passive:!1}:void 0),sp=!0))}},xW=function(){ip&&(ys.forEach(function(t){t.targetElement.ontouchstart=null,t.targetElement.ontouchmove=null}),sp&&(document.removeEventListener("touchmove",up,I0?{passive:!1}:void 0),sp=!1),B0=-1),ip?Sj():hj(),ys=[]};const Wj=$({__name:"VPNavScreenMenuLink",props:{text:null,link:null},setup(e){const t=tt("close-screen");return(n,r)=>(K(),ie(gi,{class:"VPNavScreenMenuLink",href:e.link,onClick:c(t)},{default:B(()=>[Xt(je(e.text),1)]),_:1},8,["href","onClick"]))}});const kj=xt(Wj,[["__scopeId","data-v-b7098508"]]),Vj={},Pj={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},Tj=z("path",{d:"M18.9,10.9h-6v-6c0-0.6-0.4-1-1-1s-1,0.4-1,1v6h-6c-0.6,0-1,0.4-1,1s0.4,1,1,1h6v6c0,0.6,0.4,1,1,1s1-0.4,1-1v-6h6c0.6,0,1-0.4,1-1S19.5,10.9,18.9,10.9z"},null,-1),Kj=[Tj];function Nj(e,t){return K(),F("svg",Pj,Kj)}const xj=xt(Vj,[["render",Nj]]),Xj=$({__name:"VPNavScreenMenuGroupLink",props:{text:null,link:null},setup(e){const t=tt("close-screen");return(n,r)=>(K(),ie(gi,{class:"VPNavScreenMenuGroupLink",href:e.link,onClick:c(t)},{default:B(()=>[Xt(je(e.text),1)]),_:1},8,["href","onClick"]))}});const XW=xt(Xj,[["__scopeId","data-v-7f173864"]]),gj={class:"VPNavScreenMenuGroupSection"},wj={key:0,class:"title"},jj=$({__name:"VPNavScreenMenuGroupSection",props:{text:null,items:null},setup(e){return(t,n)=>(K(),F("div",gj,[e.text?(K(),F("p",wj,je(e.text),1)):ae("",!0),(K(!0),F(Qe,null,Nt(e.items,r=>(K(),ie(XW,{key:r.text,text:r.text,link:r.link},null,8,["text","link"]))),128))]))}});const Lj=xt(jj,[["__scopeId","data-v-7478538b"]]),qj=["aria-controls","aria-expanded"],Uj={class:"button-text"},Oj=["id"],Rj={key:1,class:"group"},Jj=$({__name:"VPNavScreenMenuGroup",props:{text:null,items:null},setup(e){const t=e,n=J(!1),r=X(()=>`NavScreenGroup-${t.text.replace(" ","-").toLowerCase()}`);function a(){n.value=!n.value}return(l,o)=>(K(),F("div",{class:q(["VPNavScreenMenuGroup",{open:n.value}])},[z("button",{class:"button","aria-controls":c(r),"aria-expanded":n.value,onClick:a},[z("span",Uj,je(e.text),1),C(xj,{class:"button-icon"})],8,qj),z("div",{id:c(r),class:"items"},[(K(!0),F(Qe,null,Nt(e.items,i=>(K(),F(Qe,{key:i.text},["link"in i?(K(),F("div",{key:i.text,class:"item"},[C(XW,{text:i.text,link:i.link},null,8,["text","link"])])):(K(),F("div",Rj,[C(Lj,{text:i.text,items:i.items},null,8,["text","items"])]))],64))),128))],8,Oj)],2))}});const Fj=xt(Jj,[["__scopeId","data-v-5bc84358"]]),zj={key:0,class:"VPNavScreenMenu"},Hj=$({__name:"VPNavScreenMenu",setup(e){const{theme:t}=dn();return(n,r)=>c(t).nav?(K(),F("nav",zj,[(K(!0),F(Qe,null,Nt(c(t).nav,a=>(K(),F(Qe,{key:a.text},["link"in a?(K(),ie(kj,{key:0,text:a.text,link:a.link},null,8,["text","link"])):(K(),ie(Fj,{key:1,text:a.text||"",items:a.items},null,8,["text","items"]))],64))),128))])):ae("",!0)}}),Zj=e=>(Mr("data-v-7bc19822"),e=e(),Dr(),e),Gj={key:0,class:"VPNavScreenAppearance"},Cj=Zj(()=>z("p",{class:"text"},"Appearance",-1)),Mj=$({__name:"VPNavScreenAppearance",setup(e){const{site:t}=dn();return(n,r)=>c(t).appearance?(K(),F("div",Gj,[Cj,C(D0)])):ae("",!0)}});const Dj=xt(Mj,[["__scopeId","data-v-7bc19822"]]),Ej={class:"list"},Ij=["href"],Bj=$({__name:"VPNavScreenTranslations",setup(e){const{theme:t}=dn(),n=J(!1);function r(){n.value=!n.value}return(a,l)=>c(t).localeLinks?(K(),F("div",{key:0,class:q(["VPNavScreenTranslations",{open:n.value}])},[z("button",{class:"title",onClick:r},[C(TW,{class:"icon lang"}),Xt(" "+je(c(t).localeLinks.text)+" ",1),C(PW,{class:"icon chevron"})]),z("ul",Ej,[(K(!0),F(Qe,null,Nt(c(t).localeLinks.items,o=>(K(),F("li",{key:o.link,class:"item"},[z("a",{class:"link",href:o.link},je(o.text),9,Ij)]))),128))])],2)):ae("",!0)}});const Yj=xt(Bj,[["__scopeId","data-v-6bfcad30"]]),Qj=$({__name:"VPNavScreenSocialLinks",setup(e){const{theme:t}=dn();return(n,r)=>c(t).socialLinks?(K(),ie(E0,{key:0,class:"VPNavScreenSocialLinks",links:c(t).socialLinks},null,8,["links"])):ae("",!0)}}),_j={class:"container"},$j=$({__name:"VPNavScreen",props:{open:{type:Boolean}},setup(e){const t=J(null);function n(){NW(t.value,{reserveScrollBarGap:!0})}function r(){xW()}return(a,l)=>(K(),ie(fn,{name:"fade",onEnter:n,onAfterLeave:r},{default:B(()=>[e.open?(K(),F("div",{key:0,class:"VPNavScreen",ref_key:"screen",ref:t},[z("div",_j,[ue(a.$slots,"nav-screen-content-before",{},void 0,!0),C(Hj,{class:"menu"}),C(Yj,{class:"translations"}),C(Dj,{class:"appearance"}),C(Qj,{class:"social-links"}),ue(a.$slots,"nav-screen-content-after",{},void 0,!0)])],512)):ae("",!0)]),_:3}))}});const e5=xt($j,[["__scopeId","data-v-4a289eba"]]),t5=$({__name:"VPNav",setup(e){const{isScreenOpen:t,closeScreen:n,toggleScreen:r}=tg(),{hasSidebar:a}=ol();return zt("close-screen",n),(l,o)=>(K(),F("header",{class:q(["VPNav",{"no-sidebar":!c(a)}])},[C(pj,{"is-screen-open":c(t),onToggleScreen:c(r)},{"nav-bar-title-before":B(()=>[ue(l.$slots,"nav-bar-title-before",{},void 0,!0)]),"nav-bar-title-after":B(()=>[ue(l.$slots,"nav-bar-title-after",{},void 0,!0)]),"nav-bar-content-before":B(()=>[ue(l.$slots,"nav-bar-content-before",{},void 0,!0)]),"nav-bar-content-after":B(()=>[ue(l.$slots,"nav-bar-content-after",{},void 0,!0)]),_:3},8,["is-screen-open","onToggleScreen"]),C(e5,{open:c(t)},{"nav-screen-content-before":B(()=>[ue(l.$slots,"nav-screen-content-before",{},void 0,!0)]),"nav-screen-content-after":B(()=>[ue(l.$slots,"nav-screen-content-after",{},void 0,!0)]),_:3},8,["open"])],2))}});const n5=xt(t5,[["__scopeId","data-v-8c0a9870"]]),r5={},a5={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},l5=z("path",{d:"M17,11H3c-0.6,0-1-0.4-1-1s0.4-1,1-1h14c0.6,0,1,0.4,1,1S17.6,11,17,11z"},null,-1),o5=z("path",{d:"M21,7H3C2.4,7,2,6.6,2,6s0.4-1,1-1h18c0.6,0,1,0.4,1,1S21.6,7,21,7z"},null,-1),i5=z("path",{d:"M21,15H3c-0.6,0-1-0.4-1-1s0.4-1,1-1h18c0.6,0,1,0.4,1,1S21.6,15,21,15z"},null,-1),s5=z("path",{d:"M17,19H3c-0.6,0-1-0.4-1-1s0.4-1,1-1h14c0.6,0,1,0.4,1,1S17.6,19,17,19z"},null,-1),u5=[l5,o5,i5,s5];function c5(e,t){return K(),F("svg",a5,u5)}const d5=xt(r5,[["render",c5]]),f5=e=>(Mr("data-v-b6162a8b"),e=e(),Dr(),e),p5={key:0,class:"VPLocalNav"},v5=["aria-expanded"],b5=f5(()=>z("span",{class:"menu-text"},"Menu",-1)),h5=$({__name:"VPLocalNav",props:{open:{type:Boolean}},emits:["open-menu"],setup(e){const{hasSidebar:t}=ol();function n(){window.scrollTo({top:0,left:0,behavior:"smooth"})}return(r,a)=>c(t)?(K(),F("div",p5,[z("button",{class:"menu","aria-expanded":e.open,"aria-controls":"VPSidebarNav",onClick:a[0]||(a[0]=l=>r.$emit("open-menu"))},[C(d5,{class:"menu-icon"}),b5],8,v5),z("a",{class:"top-link",href:"#",onClick:n}," Return to top ")])):ae("",!0)}});const m5=xt(h5,[["__scopeId","data-v-b6162a8b"]]),S5={},y5={version:"1.1",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},A5=z("path",{d:"M19,2H5C3.3,2,2,3.3,2,5v14c0,1.7,1.3,3,3,3h14c1.7,0,3-1.3,3-3V5C22,3.3,20.7,2,19,2z M20,19c0,0.6-0.4,1-1,1H5c-0.6,0-1-0.4-1-1V5c0-0.6,0.4-1,1-1h14c0.6,0,1,0.4,1,1V19z"},null,-1),W5=z("path",{d:"M16,11h-3V8c0-0.6-0.4-1-1-1s-1,0.4-1,1v3H8c-0.6,0-1,0.4-1,1s0.4,1,1,1h3v3c0,0.6,0.4,1,1,1s1-0.4,1-1v-3h3c0.6,0,1-0.4,1-1S16.6,11,16,11z"},null,-1),k5=[A5,W5];function V5(e,t){return K(),F("svg",y5,k5)}const P5=xt(S5,[["render",V5]]),T5={},K5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},N5=z("path",{d:"M19,2H5C3.3,2,2,3.3,2,5v14c0,1.7,1.3,3,3,3h14c1.7,0,3-1.3,3-3V5C22,3.3,20.7,2,19,2zM20,19c0,0.6-0.4,1-1,1H5c-0.6,0-1-0.4-1-1V5c0-0.6,0.4-1,1-1h14c0.6,0,1,0.4,1,1V19z"},null,-1),x5=z("path",{d:"M16,11H8c-0.6,0-1,0.4-1,1s0.4,1,1,1h8c0.6,0,1-0.4,1-1S16.6,11,16,11z"},null,-1),X5=[N5,x5];function g5(e,t){return K(),F("svg",K5,X5)}const w5=xt(T5,[["render",g5]]),j5=["innerHTML"],L5=$({__name:"VPSidebarLink",props:{item:null,depth:{default:1}},setup(e){const{page:t,frontmatter:n}=dn(),r=X(()=>n.value.sidebarDepth||1/0),a=tt("close-sidebar");return(l,o)=>{const i=rt("VPSidebarLink",!0);return K(),F(Qe,null,[C(gi,{class:q(["link",{active:c(lu)(c(t).relativePath,e.item.link)}]),style:lt({paddingLeft:16*(e.depth-1)+"px"}),href:e.item.link,onClick:c(a)},{default:B(()=>[z("span",{innerHTML:e.item.text,class:q(["link-text",{light:e.depth>1}])},null,10,j5)]),_:1},8,["class","style","href","onClick"]),"items"in e.item&&e.depth<c(r)?(K(!0),F(Qe,{key:0},Nt(e.item.items,s=>(K(),ie(i,{key:s.link,item:s,depth:e.depth+1},null,8,["item","depth"]))),128)):ae("",!0)],64)}}});const q5=xt(L5,[["__scopeId","data-v-36b976d1"]]),U5=["role"],O5=["innerHTML"],R5={class:"action"},J5={class:"items"},F5=$({__name:"VPSidebarGroup",props:{text:null,items:null,collapsible:{type:Boolean},collapsed:{type:Boolean}},setup(e){const t=e,n=J(!1);Dn(()=>{n.value=!!(t.collapsible&&t.collapsed)});const{page:r}=dn();Dn(()=>{t.items.some(l=>lu(r.value.relativePath,l.link))&&(n.value=!1)});function a(){t.collapsible&&(n.value=!n.value)}return(l,o)=>(K(),F("section",{class:q(["VPSidebarGroup",{collapsible:e.collapsible,collapsed:n.value}])},[e.text?(K(),F("div",{key:0,class:"title",role:e.collapsible?"button":void 0,onClick:a},[z("h2",{innerHTML:e.text,class:"title-text"},null,8,O5),z("div",R5,[C(w5,{class:"icon minus"}),C(P5,{class:"icon plus"})])],8,U5)):ae("",!0),z("div",J5,[(K(!0),F(Qe,null,Nt(e.items,i=>(K(),ie(q5,{key:i.link,item:i},null,8,["item"]))),128))])],2))}});const z5=xt(F5,[["__scopeId","data-v-6e45c352"]]),H5=e=>(Mr("data-v-a186aa16"),e=e(),Dr(),e),Z5={class:"nav",id:"VPSidebarNav","aria-labelledby":"sidebar-aria-label",tabindex:"-1"},G5=H5(()=>z("span",{class:"visually-hidden",id:"sidebar-aria-label"}," Sidebar Navigation ",-1)),C5=$({__name:"VPSidebar",props:{open:{type:Boolean}},setup(e){const t=e,{sidebar:n,hasSidebar:r}=ol();let a=J(null);function l(){NW(a.value,{reserveScrollBarGap:!0})}function o(){xW()}return j0(async()=>{var i;t.open?(l(),(i=a.value)==null||i.focus()):o()}),(i,s)=>c(r)?(K(),F("aside",{key:0,class:q(["VPSidebar",{open:e.open}]),ref_key:"navEl",ref:a,onClick:s[0]||(s[0]=pt(()=>{},["stop"]))},[z("nav",Z5,[G5,ue(i.$slots,"sidebar-nav-before",{},void 0,!0),(K(!0),F(Qe,null,Nt(c(n),u=>(K(),F("div",{key:u.text,class:"group"},[C(z5,{text:u.text,items:u.items,collapsible:u.collapsible,collapsed:u.collapsed},null,8,["text","items","collapsible","collapsed"])]))),128)),ue(i.$slots,"sidebar-nav-after",{},void 0,!0)])],2)):ae("",!0)}});const M5=xt(C5,[["__scopeId","data-v-a186aa16"]]),D5={},E5={class:"VPPage"};function I5(e,t){const n=rt("Content");return K(),F("div",E5,[C(n)])}const B5=xt(D5,[["render",I5]]),Y5=$({__name:"VPButton",props:{tag:null,size:null,theme:null,text:null,href:null},setup(e){const t=e,n=X(()=>{var l,o;return[(l=t.size)!=null?l:"medium",(o=t.theme)!=null?o:"brand"]}),r=X(()=>t.href&&hv.test(t.href)),a=X(()=>t.tag?t.tag:t.href?"a":"button");return(l,o)=>(K(),ie(Ot(c(a)),{class:q(["VPButton",c(n)]),href:e.href?c(op)(e.href):void 0,target:c(r)?"_blank":void 0,rel:c(r)?"noreferrer":void 0},{default:B(()=>[Xt(je(e.text),1)]),_:1},8,["class","href","target","rel"]))}});const Q5=xt(Y5,[["__scopeId","data-v-53dbb8eb"]]),_5=e=>(Mr("data-v-0a0d4301"),e=e(),Dr(),e),$5={class:"container"},e9={class:"main"},t9={key:0,class:"name"},n9={class:"clip"},r9={key:1,class:"text"},a9={key:2,class:"tagline"},l9={key:3,class:"actions"},o9={key:0,class:"image"},i9={class:"image-container"},s9=_5(()=>z("div",{class:"image-bg"},null,-1)),u9=$({__name:"VPHero",props:{name:null,text:null,tagline:null,image:null,actions:null},setup(e){return(t,n)=>(K(),F("div",{class:q(["VPHero",{"has-image":e.image}])},[z("div",$5,[z("div",e9,[e.name?(K(),F("h1",t9,[z("span",n9,je(e.name),1)])):ae("",!0),e.text?(K(),F("p",r9,je(e.text),1)):ae("",!0),e.tagline?(K(),F("p",a9,je(e.tagline),1)):ae("",!0),e.actions?(K(),F("div",l9,[(K(!0),F(Qe,null,Nt(e.actions,r=>(K(),F("div",{key:r.link,class:"action"},[C(Q5,{tag:"a",size:"medium",theme:r.theme,text:r.text,href:r.link},null,8,["theme","text","href"])]))),128))])):ae("",!0)]),e.image?(K(),F("div",o9,[z("div",i9,[s9,C(WW,{class:"image-src",image:e.image},null,8,["image"])])])):ae("",!0)])],2))}});const c9=xt(u9,[["__scopeId","data-v-0a0d4301"]]),d9=$({__name:"VPHomeHero",setup(e){const{frontmatter:t}=dn();return(n,r)=>c(t).hero?(K(),ie(c9,{key:0,class:"VPHomeHero",name:c(t).hero.name,text:c(t).hero.text,tagline:c(t).hero.tagline,image:c(t).hero.image,actions:c(t).hero.actions},null,8,["name","text","tagline","image","actions"])):ae("",!0)}}),f9={},p9={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},v9=z("path",{d:"M19.9,12.4c0.1-0.2,0.1-0.5,0-0.8c-0.1-0.1-0.1-0.2-0.2-0.3l-7-7c-0.4-0.4-1-0.4-1.4,0s-0.4,1,0,1.4l5.3,5.3H5c-0.6,0-1,0.4-1,1s0.4,1,1,1h11.6l-5.3,5.3c-0.4,0.4-0.4,1,0,1.4c0.2,0.2,0.5,0.3,0.7,0.3s0.5-0.1,0.7-0.3l7-7C19.8,12.6,19.9,12.5,19.9,12.4z"},null,-1),b9=[v9];function h9(e,t){return K(),F("svg",p9,b9)}const m9=xt(f9,[["render",h9]]),S9={class:"box"},y9={key:0,class:"icon"},A9={class:"title"},W9={class:"details"},k9={key:1,class:"link-text"},V9={class:"link-text-value"},P9=$({__name:"VPFeature",props:{icon:null,title:null,details:null,link:null,linkText:null},setup(e){return(t,n)=>(K(),ie(gi,{class:"VPFeature",href:e.link,"no-icon":!0},{default:B(()=>[z("article",S9,[e.icon?(K(),F("div",y9,je(e.icon),1)):ae("",!0),z("h2",A9,je(e.title),1),z("p",W9,je(e.details),1),e.linkText?(K(),F("div",k9,[z("p",V9,[Xt(je(e.linkText)+" ",1),C(m9,{class:"link-text-icon"})])])):ae("",!0)])]),_:1},8,["href"]))}});const T9=xt(P9,[["__scopeId","data-v-b8147458"]]),K9={key:0,class:"VPFeatures"},N9={class:"container"},x9={class:"items"},X9=$({__name:"VPFeatures",props:{features:null},setup(e){const t=e,n=X(()=>{const r=t.features.length;if(r){if(r===2)return"grid-2";if(r===3)return"grid-3";if(r%3===0)return"grid-6";if(r%2===0)return"grid-4"}else return});return(r,a)=>e.features?(K(),F("div",K9,[z("div",N9,[z("div",x9,[(K(!0),F(Qe,null,Nt(e.features,l=>(K(),F("div",{key:l.title,class:q(["item",[c(n)]])},[C(T9,{icon:l.icon,title:l.title,details:l.details,link:l.link,"link-text":l.linkText},null,8,["icon","title","details","link","link-text"])],2))),128))])])])):ae("",!0)}});const g9=xt(X9,[["__scopeId","data-v-69662dc1"]]),w9=$({__name:"VPHomeFeatures",setup(e){const{frontmatter:t}=dn();return(n,r)=>c(t).features?(K(),ie(g9,{key:0,class:"VPHomeFeatures",features:c(t).features},null,8,["features"])):ae("",!0)}}),j9={class:"VPHome"},L9=$({__name:"VPHome",setup(e){return(t,n)=>{const r=rt("Content");return K(),F("div",j9,[ue(t.$slots,"home-hero-before",{},void 0,!0),C(d9),ue(t.$slots,"home-hero-after",{},void 0,!0),ue(t.$slots,"home-features-before",{},void 0,!0),C(w9),ue(t.$slots,"home-features-after",{},void 0,!0),C(r)])}}});const q9=xt(L9,[["__scopeId","data-v-1db23833"]]);var U9=!1,O9=Object.defineProperty,R9=Object.defineProperties,J9=Object.getOwnPropertyDescriptors,ry=Object.getOwnPropertySymbols,F9=Object.prototype.hasOwnProperty,z9=Object.prototype.propertyIsEnumerable,ay=(e,t,n)=>t in e?O9(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,H9=(e,t)=>{for(var n in t||(t={}))F9.call(t,n)&&ay(e,n,t[n]);if(ry)for(var n of ry(t))z9.call(t,n)&&ay(e,n,t[n]);return e},Z9=(e,t)=>R9(e,J9(t));function ly(e,t){var n;const r=nn();return Dn(()=>{r.value=e()},Z9(H9({},t),{flush:(n=t==null?void 0:t.flush)!=null?n:"sync"})),xo(r)}var oy;const Mt=typeof window<"u",G9=e=>typeof e<"u",C9=e=>typeof e=="function",M9=e=>typeof e=="string",qs=()=>{},gW=Mt&&((oy=window==null?void 0:window.navigator)==null?void 0:oy.userAgent)&&/iP(ad|hone|od)/.test(window.navigator.userAgent);function wl(e){return typeof e=="function"?e():c(e)}function wW(e,t){function n(...r){return new Promise((a,l)=>{Promise.resolve(e(()=>t.apply(this,r),{fn:t,thisArg:this,args:r})).then(a).catch(l)})}return n}function D9(e,t={}){let n,r,a=qs;const l=i=>{clearTimeout(i),a(),a=qs};return i=>{const s=wl(e),u=wl(t.maxWait);return n&&l(n),s<=0||u!==void 0&&u<=0?(r&&(l(r),r=null),Promise.resolve(i())):new Promise((d,f)=>{a=t.rejectOnCancel?f:d,u&&!r&&(r=setTimeout(()=>{n&&l(n),r=null,d(i())},u)),n=setTimeout(()=>{r&&l(r),r=null,d(i())},s)})}}function E9(e,t=!0,n=!0,r=!1){let a=0,l,o=!0,i=qs,s;const u=()=>{l&&(clearTimeout(l),l=void 0,i(),i=qs)};return f=>{const p=wl(e),b=Date.now()-a,A=()=>s=f();return u(),p<=0?(a=Date.now(),A()):(b>p&&(n||!o)?(a=Date.now(),A()):t&&(s=new Promise((h,m)=>{i=r?m:h,l=setTimeout(()=>{a=Date.now(),o=!0,h(A()),u()},Math.max(0,p-b))})),!n&&!l&&(l=setTimeout(()=>o=!0,p)),o=!1,s)}}function I9(e){return e}function ou(e){return MA()?(A0(e),!0):!1}function B9(e,t=200,n={}){return wW(D9(t,n),e)}function Y9(e,t=200,n={}){const r=J(e.value),a=B9(()=>{r.value=e.value},t,n);return Ve(e,()=>a()),r}function Y0(e,t=200,n=!1,r=!0,a=!1){return wW(E9(t,n,r,a),e)}function Q9(e){return typeof e=="function"?X(e):J(e)}function Q0(e,t=!0){Tt()?At(e):t?e():at(e)}function Ao(e,t,n={}){const{immediate:r=!0}=n,a=J(!1);let l=null;function o(){l&&(clearTimeout(l),l=null)}function i(){a.value=!1,o()}function s(...u){o(),a.value=!0,l=setTimeout(()=>{a.value=!1,l=null,e(...u)},wl(t))}return r&&(a.value=!0,Mt&&s()),ou(i),{isPending:xo(a),start:s,stop:i}}function Fr(e){var t;const n=wl(e);return(t=n==null?void 0:n.$el)!=null?t:n}const go=Mt?window:void 0,_9=Mt?window.document:void 0,$9=Mt?window.navigator:void 0;function hn(...e){let t,n,r,a;if(M9(e[0])||Array.isArray(e[0])?([n,r,a]=e,t=go):[t,n,r,a]=e,!t)return qs;Array.isArray(n)||(n=[n]),Array.isArray(r)||(r=[r]);const l=[],o=()=>{l.forEach(d=>d()),l.length=0},i=(d,f,p,b)=>(d.addEventListener(f,p,b),()=>d.removeEventListener(f,p,b)),s=Ve(()=>[Fr(t),wl(a)],([d,f])=>{o(),d&&l.push(...n.flatMap(p=>r.map(b=>i(d,p,b,f))))},{immediate:!0,flush:"post"}),u=()=>{s(),o()};return ou(u),u}let iy=!1;function _0(e,t,n={}){const{window:r=go,ignore:a=[],capture:l=!0,detectIframe:o=!1}=n;if(!r)return;gW&&!iy&&(iy=!0,Array.from(r.document.body.children).forEach(p=>p.addEventListener("click",qs)));let i=!0;const s=p=>a.some(b=>{if(typeof b=="string")return Array.from(r.document.querySelectorAll(b)).some(A=>A===p.target||p.composedPath().includes(A));{const A=Fr(b);return A&&(p.target===A||p.composedPath().includes(A))}}),d=[hn(r,"click",p=>{const b=Fr(e);if(!(!b||b===p.target||p.composedPath().includes(b))){if(p.detail===0&&(i=!s(p)),!i){i=!0;return}t(p)}},{passive:!0,capture:l}),hn(r,"pointerdown",p=>{const b=Fr(e);b&&(i=!p.composedPath().includes(b)&&!s(p))},{passive:!0}),o&&hn(r,"blur",p=>{var b;const A=Fr(e);((b=r.document.activeElement)==null?void 0:b.tagName)==="IFRAME"&&!(A!=null&&A.contains(r.document.activeElement))&&t(p)})].filter(Boolean);return()=>d.forEach(p=>p())}function Sv(e,t=!1){const n=J(),r=()=>n.value=Boolean(e());return r(),Q0(r,t),n}function sy(e,t={}){const{window:n=go}=t,r=Sv(()=>n&&"matchMedia"in n&&typeof n.matchMedia=="function");let a;const l=J(!1),o=()=>{!a||("removeEventListener"in a?a.removeEventListener("change",i):a.removeListener(i))},i=()=>{!r.value||(o(),a=n.matchMedia(Q9(e).value),l.value=a.matches,"addEventListener"in a?a.addEventListener("change",i):a.addListener(i))};return Dn(i),ou(()=>o()),l}function eL(e={}){const{navigator:t=$9,read:n=!1,source:r,copiedDuring:a=1500,legacy:l=!1}=e,o=["copy","cut"],i=Sv(()=>t&&"clipboard"in t),s=X(()=>i.value||l),u=J(""),d=J(!1),f=Ao(()=>d.value=!1,a);function p(){i.value?t.clipboard.readText().then(m=>{u.value=m}):u.value=h()}if(s.value&&n)for(const m of o)hn(m,p);async function b(m=wl(r)){s.value&&m!=null&&(i.value?await t.clipboard.writeText(m):A(m),u.value=m,d.value=!0,f.start())}function A(m){const v=document.createElement("textarea");v.value=m!=null?m:"",v.style.position="absolute",v.style.opacity="0",document.body.appendChild(v),v.select(),document.execCommand("copy"),v.remove()}function h(){var m,v,S;return(S=(v=(m=document==null?void 0:document.getSelection)==null?void 0:m.call(document))==null?void 0:v.toString())!=null?S:""}return{isSupported:s,text:u,copied:d,copy:b}}function tL(e){return JSON.parse(JSON.stringify(e))}const x1=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},X1="__vueuse_ssr_handlers__";x1[X1]=x1[X1]||{};x1[X1];function nL(e,t,{window:n=go,initialValue:r=""}={}){const a=J(r),l=X(()=>{var o;return Fr(t)||((o=n==null?void 0:n.document)==null?void 0:o.documentElement)});return Ve([l,()=>wl(e)],([o,i])=>{var s;if(o&&n){const u=(s=n.getComputedStyle(o).getPropertyValue(i))==null?void 0:s.trim();a.value=u||r}},{immediate:!0}),Ve(a,o=>{var i;(i=l.value)!=null&&i.style&&l.value.style.setProperty(wl(e),o)}),a}function rL({document:e=_9}={}){if(!e)return J("visible");const t=J(e.visibilityState);return hn(e,"visibilitychange",()=>{t.value=e.visibilityState}),t}var uy=Object.getOwnPropertySymbols,aL=Object.prototype.hasOwnProperty,lL=Object.prototype.propertyIsEnumerable,oL=(e,t)=>{var n={};for(var r in e)aL.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&uy)for(var r of uy(e))t.indexOf(r)<0&&lL.call(e,r)&&(n[r]=e[r]);return n};function hr(e,t,n={}){const r=n,{window:a=go}=r,l=oL(r,["window"]);let o;const i=Sv(()=>a&&"ResizeObserver"in a),s=()=>{o&&(o.disconnect(),o=void 0)},u=Ve(()=>Fr(e),f=>{s(),i.value&&a&&f&&(o=new ResizeObserver(t),o.observe(f,l))},{immediate:!0,flush:"post"}),d=()=>{s(),u()};return ou(d),{isSupported:i,stop:d}}function cy(e,t={}){const{reset:n=!0,windowResize:r=!0,windowScroll:a=!0,immediate:l=!0}=t,o=J(0),i=J(0),s=J(0),u=J(0),d=J(0),f=J(0),p=J(0),b=J(0);function A(){const h=Fr(e);if(!h){n&&(o.value=0,i.value=0,s.value=0,u.value=0,d.value=0,f.value=0,p.value=0,b.value=0);return}const m=h.getBoundingClientRect();o.value=m.height,i.value=m.bottom,s.value=m.left,u.value=m.right,d.value=m.top,f.value=m.width,p.value=m.x,b.value=m.y}return hr(e,A),Ve(()=>Fr(e),h=>!h&&A()),a&&hn("scroll",A,{capture:!0,passive:!0}),r&&hn("resize",A,{passive:!0}),Q0(()=>{l&&A()}),{height:o,bottom:i,left:s,right:u,top:d,width:f,x:p,y:b,update:A}}var dy=Object.getOwnPropertySymbols,iL=Object.prototype.hasOwnProperty,sL=Object.prototype.propertyIsEnumerable,uL=(e,t)=>{var n={};for(var r in e)iL.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&dy)for(var r of dy(e))t.indexOf(r)<0&&sL.call(e,r)&&(n[r]=e[r]);return n};function cL(e,t,n={}){const r=n,{window:a=go}=r,l=uL(r,["window"]);let o;const i=Sv(()=>a&&"MutationObserver"in a),s=()=>{o&&(o.disconnect(),o=void 0)},u=Ve(()=>Fr(e),f=>{s(),i.value&&a&&f&&(o=new MutationObserver(t),o.observe(f,l))},{immediate:!0}),d=()=>{s(),u()};return ou(d),{isSupported:i,stop:d}}var fy;(function(e){e.UP="UP",e.RIGHT="RIGHT",e.DOWN="DOWN",e.LEFT="LEFT",e.NONE="NONE"})(fy||(fy={}));var dL=Object.defineProperty,py=Object.getOwnPropertySymbols,fL=Object.prototype.hasOwnProperty,pL=Object.prototype.propertyIsEnumerable,vy=(e,t,n)=>t in e?dL(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,vL=(e,t)=>{for(var n in t||(t={}))fL.call(t,n)&&vy(e,n,t[n]);if(py)for(var n of py(t))pL.call(t,n)&&vy(e,n,t[n]);return e};const bL={easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]};vL({linear:I9},bL);function hL(e,t,n,r={}){var a,l,o;const{clone:i=!1,passive:s=!1,eventName:u,deep:d=!1,defaultValue:f}=r,p=Tt(),b=n||(p==null?void 0:p.emit)||((a=p==null?void 0:p.$emit)==null?void 0:a.bind(p))||((o=(l=p==null?void 0:p.proxy)==null?void 0:l.$emit)==null?void 0:o.bind(p==null?void 0:p.proxy));let A=u;t||(t="modelValue"),A=u||A||`update:${t.toString()}`;const h=v=>i?C9(i)?i(v):tL(v):v,m=()=>G9(e[t])?h(e[t]):f;if(s){const v=m(),S=J(v);return Ve(()=>e[t],y=>S.value=h(y)),Ve(S,y=>{(y!==e[t]||d)&&b(A,y)},{deep:d}),S}else return X({get(){return m()},set(v){b(A,v)}})}function mL({window:e=go}={}){if(!e)return J(!1);const t=J(e.document.hasFocus());return hn(e,"blur",()=>{t.value=!1}),hn(e,"focus",()=>{t.value=!0}),t}function SL(e={}){const{window:t=go,initialWidth:n=1/0,initialHeight:r=1/0,listenOrientation:a=!0,includeScrollbar:l=!0}=e,o=J(n),i=J(r),s=()=>{t&&(l?(o.value=t.innerWidth,i.value=t.innerHeight):(o.value=t.document.documentElement.clientWidth,i.value=t.document.documentElement.clientHeight))};return s(),Q0(s),hn("resize",s,{passive:!0}),a&&hn("orientationchange",s,{passive:!0}),{width:o,height:i}}function yL(){const{hasSidebar:e}=ol(),t=sy("(min-width: 960px)"),n=sy("(min-width: 1280px)");return{isAsideEnabled:X(()=>!n.value&&!t.value?!1:e.value?n.value:t.value)}}const AL=71;function WL(e){if(e===!1)return[];let t=[];return document.querySelectorAll("h2, h3, h4, h5, h6").forEach(n=>{n.textContent&&n.id&&t.push({level:Number(n.tagName[1]),title:n.innerText.replace(/\s+#\s*$/,""),link:`#${n.id}`})}),kL(t,e)}function kL(e,t=2){return VL(e,typeof t=="number"?[t,t]:t==="deep"?[2,6]:t)}function VL(e,t){const n=[];return e=e.map(r=>({...r})),e.forEach((r,a)=>{r.level>=t[0]&&r.level<=t[1]&&PL(a,e,t)&&n.push(r)}),n}function PL(e,t,n){if(e===0)return!0;const r=t[e];for(let a=e-1;a>=0;a--){const l=t[a];if(l.level<r.level&&l.level>=n[0]&&l.level<=n[1])return l.children==null&&(l.children=[]),l.children.push(r),!1}return!0}function TL(e,t){const{isAsideEnabled:n}=yL(),r=E6(l,100);let a=null;At(()=>{requestAnimationFrame(l),window.addEventListener("scroll",r)}),la(()=>{o(location.hash)}),mr(()=>{window.removeEventListener("scroll",r)});function l(){if(!n.value)return;const i=[].slice.call(e.value.querySelectorAll(".outline-link")),s=[].slice.call(document.querySelectorAll(".content .header-anchor")).filter(b=>i.some(A=>A.hash===b.hash&&b.offsetParent!==null)),u=window.scrollY,d=window.innerHeight,f=document.body.offsetHeight,p=Math.abs(u+d-f)<1;if(s.length&&p){o(s[s.length-1].hash);return}for(let b=0;b<s.length;b++){const A=s[b],h=s[b+1],[m,v]=KL(b,A,h);if(m){o(v);return}}}function o(i){a&&a.classList.remove("active"),i!==null&&(a=e.value.querySelector(`a[href="${decodeURIComponent(i)}"]`));const s=a;s?(s.classList.add("active"),t.value.style.top=s.offsetTop+33+"px",t.value.style.opacity="1"):(t.value.style.top="33px",t.value.style.opacity="0")}}function by(e){return e.parentElement.offsetTop-AL}function KL(e,t,n){const r=window.scrollY;return e===0&&r===0?[!0,null]:r<by(t)?[!1,null]:!n||r<by(n)?[!0,t.hash]:[!1,null]}const NL=["href"],xL=$({__name:"VPDocAsideOutlineItem",props:{headers:null,onClick:null,root:{type:Boolean}},setup(e){return(t,n)=>{const r=rt("VPDocAsideOutlineItem",!0);return K(),F("ul",{class:q(e.root?"root":"nested")},[(K(!0),F(Qe,null,Nt(e.headers,({children:a,link:l,title:o})=>(K(),F("li",null,[z("a",{class:"outline-link",href:l,onClick:n[0]||(n[0]=(...i)=>e.onClick&&e.onClick(...i))},je(o),9,NL),a!=null&&a.length?(K(),ie(r,{key:0,headers:a,onClick:e.onClick},null,8,["headers","onClick"])):ae("",!0)]))),256))],2)}}});const XL=xt(xL,[["__scopeId","data-v-1188541a"]]),gL=e=>(Mr("data-v-2865c0b0"),e=e(),Dr(),e),wL={class:"content"},jL={class:"outline-title"},LL={"aria-labelledby":"doc-outline-aria-label"},qL=gL(()=>z("span",{class:"visually-hidden",id:"doc-outline-aria-label"}," Table of Contents for current page ",-1)),UL=$({__name:"VPDocAsideOutline",setup(e){const{frontmatter:t,theme:n}=dn(),r=X(()=>{var d;return(d=t.value.outline)!=null?d:n.value.outline}),a=tt("onContentUpdated");a.value=()=>{l.value=WL(r.value)};const l=J([]),o=X(()=>l.value.length>0),i=J(),s=J();TL(i,s);function u({target:d}){const f="#"+d.href.split("#")[1],p=document.querySelector(decodeURIComponent(f));p==null||p.focus()}return(d,f)=>(K(),F("div",{class:q(["VPDocAsideOutline",{"has-outline":c(o)}]),ref_key:"container",ref:i},[z("div",wL,[z("div",{class:"outline-marker",ref_key:"marker",ref:s},null,512),z("div",jL,je(c(n).outlineTitle||"On this page"),1),z("nav",LL,[qL,C(XL,{headers:l.value,root:!0,onClick:u},null,8,["headers"])])])],2))}});const OL=xt(UL,[["__scopeId","data-v-2865c0b0"]]),RL={class:"VPDocAsideCarbonAds"},JL=$({__name:"VPDocAsideCarbonAds",setup(e){const t=()=>null;return(n,r)=>(K(),F("div",RL,[C(c(t))]))}}),FL=e=>(Mr("data-v-afc4c1a1"),e=e(),Dr(),e),zL={class:"VPDocAside"},HL=FL(()=>z("div",{class:"spacer"},null,-1)),ZL=$({__name:"VPDocAside",setup(e){const{theme:t}=dn();return(n,r)=>(K(),F("div",zL,[ue(n.$slots,"aside-top",{},void 0,!0),ue(n.$slots,"aside-outline-before",{},void 0,!0),C(OL),ue(n.$slots,"aside-outline-after",{},void 0,!0),HL,ue(n.$slots,"aside-ads-before",{},void 0,!0),c(t).carbonAds?(K(),ie(JL,{key:0})):ae("",!0),ue(n.$slots,"aside-ads-after",{},void 0,!0),ue(n.$slots,"aside-bottom",{},void 0,!0)]))}});const GL=xt(ZL,[["__scopeId","data-v-afc4c1a1"]]);function CL(){const{theme:e,page:t}=dn();return X(()=>{const{text:n="Edit this page",pattern:r}=e.value.editLink||{},{relativePath:a}=t.value;return{url:r.replace(/:path/g,a),text:n}})}function ML(){const{page:e,theme:t,frontmatter:n}=dn();return X(()=>{const r=AW(t.value.sidebar,e.value.relativePath),a=I6(r),l=a.findIndex(o=>lu(e.value.relativePath,o.link));return{prev:n.value.prev?{...a[l-1],text:n.value.prev}:a[l-1],next:n.value.next?{...a[l+1],text:n.value.next}:a[l+1]}})}const DL={},EL={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},IL=z("path",{d:"M18,23H4c-1.7,0-3-1.3-3-3V6c0-1.7,1.3-3,3-3h7c0.6,0,1,0.4,1,1s-0.4,1-1,1H4C3.4,5,3,5.4,3,6v14c0,0.6,0.4,1,1,1h14c0.6,0,1-0.4,1-1v-7c0-0.6,0.4-1,1-1s1,0.4,1,1v7C21,21.7,19.7,23,18,23z"},null,-1),BL=z("path",{d:"M8,17c-0.3,0-0.5-0.1-0.7-0.3C7,16.5,6.9,16.1,7,15.8l1-4c0-0.2,0.1-0.3,0.3-0.5l9.5-9.5c1.2-1.2,3.2-1.2,4.4,0c1.2,1.2,1.2,3.2,0,4.4l-9.5,9.5c-0.1,0.1-0.3,0.2-0.5,0.3l-4,1C8.2,17,8.1,17,8,17zM9.9,12.5l-0.5,2.1l2.1-0.5l9.3-9.3c0.4-0.4,0.4-1.1,0-1.6c-0.4-0.4-1.2-0.4-1.6,0l0,0L9.9,12.5z M18.5,2.5L18.5,2.5L18.5,2.5z"},null,-1),YL=[IL,BL];function QL(e,t){return K(),F("svg",EL,YL)}const _L=xt(DL,[["render",QL]]),$L={class:"VPLastUpdated"},eq=["datetime"],tq=$({__name:"VPDocFooterLastUpdated",setup(e){const{theme:t,page:n}=dn(),r=X(()=>new Date(n.value.lastUpdated)),a=X(()=>r.value.toISOString()),l=J("");return At(()=>{Dn(()=>{l.value=r.value.toLocaleString(window.navigator.language)})}),(o,i)=>{var s;return K(),F("p",$L,[Xt(je((s=c(t).lastUpdatedText)!=null?s:"Last updated")+": ",1),z("time",{datetime:c(a)},je(l.value),9,eq)])}}});const nq=xt(tq,[["__scopeId","data-v-18fe8fc2"]]),rq={key:0,class:"VPDocFooter"},aq={key:0,class:"edit-info"},lq={key:0,class:"edit-link"},oq={key:1,class:"last-updated"},iq={key:1,class:"prev-next"},sq={class:"pager"},uq=["href"],cq=["innerHTML"],dq=["innerHTML"],fq=["href"],pq=["innerHTML"],vq=["innerHTML"],bq=$({__name:"VPDocFooter",setup(e){const{theme:t,page:n,frontmatter:r}=dn(),a=CL(),l=ML(),o=X(()=>t.value.editLink&&r.value.editLink!==!1),i=X(()=>n.value.lastUpdated&&r.value.lastUpdated!==!1),s=X(()=>o.value||i.value||l.value.prev||l.value.next);return(u,d)=>{var f,p,b,A;return c(s)?(K(),F("footer",rq,[c(o)||c(i)?(K(),F("div",aq,[c(o)?(K(),F("div",lq,[C(gi,{class:"edit-link-button",href:c(a).url,"no-icon":!0},{default:B(()=>[C(_L,{class:"edit-link-icon"}),Xt(" "+je(c(a).text),1)]),_:1},8,["href"])])):ae("",!0),c(i)?(K(),F("div",oq,[C(nq)])):ae("",!0)])):ae("",!0),c(l).prev||c(l).next?(K(),F("div",iq,[z("div",sq,[c(l).prev?(K(),F("a",{key:0,class:"pager-link prev",href:c(op)(c(l).prev.link)},[z("span",{class:"desc",innerHTML:(p=(f=c(t).docFooter)==null?void 0:f.prev)!=null?p:"Previous page"},null,8,cq),z("span",{class:"title",innerHTML:c(l).prev.text},null,8,dq)],8,uq)):ae("",!0)]),z("div",{class:q(["pager",{"has-prev":c(l).prev}])},[c(l).next?(K(),F("a",{key:0,class:"pager-link next",href:c(op)(c(l).next.link)},[z("span",{class:"desc",innerHTML:(A=(b=c(t).docFooter)==null?void 0:b.next)!=null?A:"Next page"},null,8,pq),z("span",{class:"title",innerHTML:c(l).next.text},null,8,vq)],8,fq)):ae("",!0)],2)])):ae("",!0)])):ae("",!0)}}});const hq=xt(bq,[["__scopeId","data-v-21f75714"]]),mq=e=>(Mr("data-v-cfb513e0"),e=e(),Dr(),e),Sq={class:"container"},yq={key:0,class:"aside"},Aq=mq(()=>z("div",{class:"aside-curtain"},null,-1)),Wq={class:"aside-container"},kq={class:"aside-content"},Vq={class:"content"},Pq={class:"content-container"},Tq={class:"main"},Kq=$({__name:"VPDoc",setup(e){const t=Hl(),{hasSidebar:n,hasAside:r}=ol(),a=X(()=>t.path.replace(/[./]+/g,"_").replace(/_html$/,"")),l=J();return zt("onContentUpdated",l),(o,i)=>{const s=rt("Content");return K(),F("div",{class:q(["VPDoc",{"has-sidebar":c(n),"has-aside":c(r)}])},[z("div",Sq,[c(r)?(K(),F("div",yq,[Aq,z("div",Wq,[z("div",kq,[C(GL,null,{"aside-top":B(()=>[ue(o.$slots,"aside-top",{},void 0,!0)]),"aside-bottom":B(()=>[ue(o.$slots,"aside-bottom",{},void 0,!0)]),"aside-outline-before":B(()=>[ue(o.$slots,"aside-outline-before",{},void 0,!0)]),"aside-outline-after":B(()=>[ue(o.$slots,"aside-outline-after",{},void 0,!0)]),"aside-ads-before":B(()=>[ue(o.$slots,"aside-ads-before",{},void 0,!0)]),"aside-ads-after":B(()=>[ue(o.$slots,"aside-ads-after",{},void 0,!0)]),_:3})])])])):ae("",!0),z("div",Vq,[z("div",Pq,[ue(o.$slots,"doc-before",{},void 0,!0),z("main",Tq,[C(s,{class:q(["vp-doc",c(a)]),onContentUpdated:l.value},null,8,["class","onContentUpdated"])]),ue(o.$slots,"doc-footer-before",{},void 0,!0),C(hq),ue(o.$slots,"doc-after",{},void 0,!0)])])])],2)}}});const Nq=xt(Kq,[["__scopeId","data-v-cfb513e0"]]),xq=$({__name:"VPContent",setup(e){const t=Hl(),{frontmatter:n}=dn(),{hasSidebar:r}=ol(),a=tt("NotFound");return(l,o)=>(K(),F("div",{class:q(["VPContent",{"has-sidebar":c(r),"is-home":c(n).layout==="home"}]),id:"VPContent"},[c(t).component===c(a)?(K(),ie(c(a),{key:0})):c(n).layout==="page"?(K(),ie(B5,{key:1})):c(n).layout==="home"?(K(),ie(q9,{key:2},{"home-hero-before":B(()=>[ue(l.$slots,"home-hero-before",{},void 0,!0)]),"home-hero-after":B(()=>[ue(l.$slots,"home-hero-after",{},void 0,!0)]),"home-features-before":B(()=>[ue(l.$slots,"home-features-before",{},void 0,!0)]),"home-features-after":B(()=>[ue(l.$slots,"home-features-after",{},void 0,!0)]),_:3})):(K(),ie(Nq,{key:3},{"doc-footer-before":B(()=>[ue(l.$slots,"doc-footer-before",{},void 0,!0)]),"doc-before":B(()=>[ue(l.$slots,"doc-before",{},void 0,!0)]),"doc-after":B(()=>[ue(l.$slots,"doc-after",{},void 0,!0)]),"aside-top":B(()=>[ue(l.$slots,"aside-top",{},void 0,!0)]),"aside-outline-before":B(()=>[ue(l.$slots,"aside-outline-before",{},void 0,!0)]),"aside-outline-after":B(()=>[ue(l.$slots,"aside-outline-after",{},void 0,!0)]),"aside-ads-before":B(()=>[ue(l.$slots,"aside-ads-before",{},void 0,!0)]),"aside-ads-after":B(()=>[ue(l.$slots,"aside-ads-after",{},void 0,!0)]),"aside-bottom":B(()=>[ue(l.$slots,"aside-bottom",{},void 0,!0)]),_:3}))],2))}});const Xq=xt(xq,[["__scopeId","data-v-d981fe29"]]),gq={class:"container"},wq=["innerHTML"],jq=["innerHTML"],Lq=$({__name:"VPFooter",setup(e){const{theme:t}=dn(),{hasSidebar:n}=ol();return(r,a)=>c(t).footer?(K(),F("footer",{key:0,class:q(["VPFooter",{"has-sidebar":c(n)}])},[z("div",gq,[c(t).footer.message?(K(),F("p",{key:0,class:"message",innerHTML:c(t).footer.message},null,8,wq)):ae("",!0),c(t).footer.copyright?(K(),F("p",{key:1,class:"copyright",innerHTML:c(t).footer.copyright},null,8,jq)):ae("",!0)])],2)):ae("",!0)}});const qq=xt(Lq,[["__scopeId","data-v-9f24cc86"]]),Uq={key:0,class:"Layout"},Oq=$({__name:"Layout",setup(e){const{isOpen:t,open:n,close:r}=ol(),a=Hl();Ve(()=>a.path,r),B6(t,r),zt("close-sidebar",r);const{frontmatter:l}=dn();return(o,i)=>{const s=rt("Content");return c(l).layout!==!1?(K(),F("div",Uq,[ue(o.$slots,"layout-top",{},void 0,!0),C(Q6),C(eg,{class:"backdrop",show:c(t),onClick:c(r)},null,8,["show","onClick"]),C(n5,null,{"nav-bar-title-before":B(()=>[ue(o.$slots,"nav-bar-title-before",{},void 0,!0)]),"nav-bar-title-after":B(()=>[ue(o.$slots,"nav-bar-title-after",{},void 0,!0)]),"nav-bar-content-before":B(()=>[ue(o.$slots,"nav-bar-content-before",{},void 0,!0)]),"nav-bar-content-after":B(()=>[ue(o.$slots,"nav-bar-content-after",{},void 0,!0)]),"nav-screen-content-before":B(()=>[ue(o.$slots,"nav-screen-content-before",{},void 0,!0)]),"nav-screen-content-after":B(()=>[ue(o.$slots,"nav-screen-content-after",{},void 0,!0)]),_:3}),C(m5,{open:c(t),onOpenMenu:c(n)},null,8,["open","onOpenMenu"]),C(M5,{open:c(t)},{"sidebar-nav-before":B(()=>[ue(o.$slots,"sidebar-nav-before",{},void 0,!0)]),"sidebar-nav-after":B(()=>[ue(o.$slots,"sidebar-nav-after",{},void 0,!0)]),_:3},8,["open"]),C(Xq,null,{"home-hero-before":B(()=>[ue(o.$slots,"home-hero-before",{},void 0,!0)]),"home-hero-after":B(()=>[ue(o.$slots,"home-hero-after",{},void 0,!0)]),"home-features-before":B(()=>[ue(o.$slots,"home-features-before",{},void 0,!0)]),"home-features-after":B(()=>[ue(o.$slots,"home-features-after",{},void 0,!0)]),"doc-footer-before":B(()=>[ue(o.$slots,"doc-footer-before",{},void 0,!0)]),"doc-before":B(()=>[ue(o.$slots,"doc-before",{},void 0,!0)]),"doc-after":B(()=>[ue(o.$slots,"doc-after",{},void 0,!0)]),"aside-top":B(()=>[ue(o.$slots,"aside-top",{},void 0,!0)]),"aside-bottom":B(()=>[ue(o.$slots,"aside-bottom",{},void 0,!0)]),"aside-outline-before":B(()=>[ue(o.$slots,"aside-outline-before",{},void 0,!0)]),"aside-outline-after":B(()=>[ue(o.$slots,"aside-outline-after",{},void 0,!0)]),"aside-ads-before":B(()=>[ue(o.$slots,"aside-ads-before",{},void 0,!0)]),"aside-ads-after":B(()=>[ue(o.$slots,"aside-ads-after",{},void 0,!0)]),_:3}),C(qq),ue(o.$slots,"layout-bottom",{},void 0,!0)])):(K(),ie(s,{key:1}))}}});const Rq=xt(Oq,[["__scopeId","data-v-f44a984a"]]),yv=e=>(Mr("data-v-95656537"),e=e(),Dr(),e),Jq={class:"NotFound"},Fq=yv(()=>z("p",{class:"code"},"404",-1)),zq=yv(()=>z("h1",{class:"title"},"PAGE NOT FOUND",-1)),Hq=yv(()=>z("div",{class:"divider"},null,-1)),Zq=yv(()=>z("blockquote",{class:"quote"}," But if you don't change your direction, and if you keep looking, you may end up where you are heading. ",-1)),Gq={class:"action"},Cq=["href"],Mq=$({__name:"NotFound",setup(e){const{site:t}=dn();return(n,r)=>(K(),F("div",Jq,[Fq,zq,Hq,Zq,z("div",Gq,[z("a",{class:"link",href:c(t).base,"aria-label":"go to home"}," Take me home ",8,Cq)])]))}});const Dq=xt(Mq,[["__scopeId","data-v-95656537"]]);const hy={Layout:Rq,NotFound:Dq,enhanceApp:({app:e})=>{e.component("Badge",K6)}};let Eq=0;function Iq(){return"message_"+Eq++}const Bq=$({setup(){const e=J([]);function t(r){const a=Iq(),l={name:a,...r};e.value.push(l);const o=r.duration;setTimeout(()=>{n(a)},o*1e3)}function n(r){for(const[a,l]of e.value.entries())if(l.name===r){e.value.splice(a,1);break}}return{messages:e,add:t,remove:n}}}),Yq={class:"demoblock-message-content"};function Qq(e,t,n,r,a,l){return K(),ie(bv,{name:"demoblock-fade",tag:"div",class:"demoblock-message-wrap"},{default:B(()=>[(K(!0),F(Qe,null,Nt(e.messages,o=>(K(),F("div",{key:o.name,class:q(["demoblock-message",o.type?`demoblock-message-${o.type}`:""])},[z("div",Yq,je(o.content),1)],2))),128))]),_:1})}const g1=xt(Bq,[["render",Qq],["__scopeId","data-v-113231ea"]]);g1.newInstance=(e={})=>{const t=document.createElement("div"),a=G0({render(){return st(g1,{...e,ref:"messageRef"})}}).mount(t).$refs.messageRef;return document.body.appendChild(t.firstElementChild),{add(l){a.add(l)},remove(l){a.remove(l)}}};let mb;function _q(){return mb=mb||g1.newInstance(),mb}function my(e,{duration:t=3,type:n=""}){_q().add({content:e,duration:t,type:n})}const Sy={info(e,t){return my(e,{...t})},error(e,t){return my(e,{...t,type:"error"})}};const $q={name:"Demo",props:{customClass:String,sourceCode:String},setup(e){const{copy:t}=eL(),n=dn(),r=Hl(),a=J(!1),l=J(!1),o=J(!1),i=J(null),s=J(null),u=J(null),d=J(null),f=J(null);Ve(o,P=>{if(u.value.style.height=P?`${V.value+1}px`:"0",!P){l.value=!1,d.value.style.left="0",d.value.style.width="auto",A();return}setTimeout(()=>{window.addEventListener("scroll",b),window.addEventListener("resize",b),p()},300)}),At(()=>{at(()=>{s.value||(i.value.style.width="100%")})}),tn(()=>{A()});const p=()=>{const{top:P,bottom:x,left:g}=u.value.getBoundingClientRect(),j=window.innerHeight||document.body.clientHeight;l.value=x>j&&P+44<=j,d.value.style.left=l.value?`${g}px`:"0";const L=l.value?1:2;d.value.style.width=`${f.value.offsetWidth-L}px`},b=Y0(p,200),A=()=>{window.removeEventListener("scroll",b),window.removeEventListener("resize",b)};Ve(()=>r.path,P=>{h.value=P.split("/")});const h=J(r.path.split("/")),m=X(()=>h.value[h.value.length-1].split(".")[0]),v=X(()=>`demo-${m.value}`);Bt({});const S=()=>{},y=()=>{o.value=!o.value,a.value=o.value},W=X(()=>{var P,x;return(x=(P=n.theme.value.demoblock)==null?void 0:P[n.localePath.value])!=null?x:{"hide-text":"\u9690\u85CF\u4EE3\u7801","show-text":"\u663E\u793A\u4EE3\u7801","copy-button-text":"\u590D\u5236\u4EE3\u7801\u7247\u6BB5","copy-success-text":"\u590D\u5236\u6210\u529F"}}),k=X(()=>o.value?W.value["hide-text"]:W.value["show-text"]),V=X(()=>s.value?s.value.clientHeight+i.value.clientHeight+20:i.value.clientHeight);return{blockClass:v,hover:a,fixedControl:l,isExpanded:o,locale:W,controlText:k,onClickControl:y,highlight:i,description:s,meta:u,control:d,onCopy:async()=>{try{t(e.sourceCode),Sy.info(W.value["copy-success-text"])}catch{Sy.error(W.value["copy-success-text"])}},goCodepen:S,demoBlock:f}}},eU={class:"source"},tU={ref:"meta",class:"meta"},nU={key:0,ref:"description",class:"description"},rU={ref:"highlight",class:"highlight"},aU={class:"control-button-wrap"};function lU(e,t,n,r,a,l){return K(),F("div",{ref:"demoBlock",class:q(["demo-block",r.blockClass,n.customClass?n.customClass:"",{hover:r.hover}]),onMouseenter:t[2]||(t[2]=o=>r.hover=!0),onMouseleave:t[3]||(t[3]=o=>r.hover=!1)},[z("div",eU,[ue(e.$slots,"default",{},void 0,!0)]),z("div",tU,[e.$slots.description?(K(),F("div",nU,[ue(e.$slots,"description",{},void 0,!0)],512)):ae("",!0),z("div",rU,[ue(e.$slots,"highlight",{},void 0,!0)],512)],512),z("div",{ref:"control",class:q(["demo-block-control",{"is-fixed":r.fixedControl,"is-expanded":r.isExpanded}]),onClick:t[1]||(t[1]=(...o)=>r.onClickControl&&r.onClickControl(...o))},[C(fn,{name:"arrow-slide"},{default:B(()=>[z("i",{class:q(["control-icon",{"icon-caret-down":!r.isExpanded,"icon-caret-up":r.isExpanded,hovering:r.hover}])},null,2)]),_:1}),C(fn,{name:"text-slide"},{default:B(()=>[Vt(z("span",{class:"control-text"},je(r.controlText),513),[[Ct,r.hover]])]),_:1}),z("div",aU,[C(fn,{name:"text-slide"},{default:B(()=>[Vt(z("span",{class:"control-button copy-button",onClick:t[0]||(t[0]=pt((...o)=>r.onCopy&&r.onCopy(...o),["stop"]))},je(r.locale&&r.locale["copy-button-text"]),513),[[Ct,r.isExpanded]])]),_:1})])],2)],34)}const oU=xt($q,[["render",lU],["__scopeId","data-v-b8649709"]]);const iU=$({name:"DemoBlock",props:{customClass:String}}),sU={class:"source"};function uU(e,t,n,r,a,l){return K(),F("div",{class:q(["demo-block",[e.customClass?e.customClass:""]])},[z("div",sU,[ue(e.$slots,"default",{},void 0,!0)])],2)}const cU=xt(iU,[["render",uU],["__scopeId","data-v-d3a119a6"]]);var Tn=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},w1={exports:{}},jW={exports:{}},dU=void 0,LW=function(e){return e!==dU&&e!==null},fU=LW,pU={object:!0,function:!0,undefined:!0},vU=function(e){return fU(e)?hasOwnProperty.call(pU,typeof e):!1},bU=vU,hU=function(e){if(!bU(e))return!1;try{return e.constructor?e.constructor.prototype===e:!1}catch{return!1}},mU=hU,SU=function(e){if(typeof e!="function"||!hasOwnProperty.call(e,"length"))return!1;try{if(typeof e.length!="number"||typeof e.call!="function"||typeof e.apply!="function")return!1}catch{return!1}return!mU(e)},yU=SU,AU=/^\s*class[\s{/}]/,WU=Function.prototype.toString,kU=function(e){return!(!yU(e)||AU.test(WU.call(e)))},VU=function(){var e=Object.assign,t;return typeof e!="function"?!1:(t={foo:"raz"},e(t,{bar:"dwa"},{trzy:"trzy"}),t.foo+t.bar+t.trzy==="razdwatrzy")},Sb,yy;function PU(){return yy||(yy=1,Sb=function(){try{return Object.keys("primitive"),!0}catch{return!1}}),Sb}var TU=function(){},KU=TU(),$0=function(e){return e!==KU&&e!==null},yb,Ay;function NU(){if(Ay)return yb;Ay=1;var e=$0,t=Object.keys;return yb=function(n){return t(e(n)?Object(n):n)},yb}var Ab,Wy;function xU(){return Wy||(Wy=1,Ab=PU()()?Object.keys:NU()),Ab}var Wb,ky;function XU(){if(ky)return Wb;ky=1;var e=$0;return Wb=function(t){if(!e(t))throw new TypeError("Cannot use null or undefined");return t},Wb}var kb,Vy;function gU(){if(Vy)return kb;Vy=1;var e=xU(),t=XU(),n=Math.max;return kb=function(r,a){var l,o,i=n(arguments.length,2),s;for(r=Object(t(r)),s=function(u){try{r[u]=a[u]}catch(d){l||(l=d)}},o=1;o<i;++o)a=arguments[o],e(a).forEach(s);if(l!==void 0)throw l;return r},kb}var wU=VU()?Object.assign:gU(),jU=$0,LU=Array.prototype.forEach,qU=Object.create,UU=function(e,t){var n;for(n in e)t[n]=e[n]},OU=function(e){var t=qU(null);return LU.call(arguments,function(n){!jU(n)||UU(Object(n),t)}),t},Vb="razdwatrzy",RU=function(){return typeof Vb.contains!="function"?!1:Vb.contains("dwa")===!0&&Vb.contains("foo")===!1},Pb,Py;function JU(){if(Py)return Pb;Py=1;var e=String.prototype.indexOf;return Pb=function(t){return e.call(this,t,arguments[1])>-1},Pb}var FU=RU()?String.prototype.contains:JU(),Af=LW,Ty=kU,qW=wU,UW=OU,Du=FU,zU=jW.exports=function(e,t){var n,r,a,l,o;return arguments.length<2||typeof e!="string"?(l=t,t=e,e=null):l=arguments[2],Af(e)?(n=Du.call(e,"c"),r=Du.call(e,"e"),a=Du.call(e,"w")):(n=a=!0,r=!1),o={value:t,configurable:n,enumerable:r,writable:a},l?qW(UW(l),o):o};zU.gs=function(e,t,n){var r,a,l,o;return typeof e!="string"?(l=n,n=t,t=e,e=null):l=arguments[3],Af(t)?Ty(t)?Af(n)?Ty(n)||(l=n,n=void 0):n=void 0:(l=t,t=n=void 0):t=void 0,Af(e)?(r=Du.call(e,"c"),a=Du.call(e,"e")):(r=!0,a=!1),o={get:t,set:n,configurable:r,enumerable:a},l?qW(UW(l),o):o};var HU=function(e){if(typeof e!="function")throw new TypeError(e+" is not a function");return e};(function(e,t){var n=jW.exports,r=HU,a=Function.prototype.apply,l=Function.prototype.call,o=Object.create,i=Object.defineProperty,s=Object.defineProperties,u=Object.prototype.hasOwnProperty,d={configurable:!0,enumerable:!1,writable:!0},f,p,b,A,h,m,v;f=function(S,y){var W;return r(y),u.call(this,"__ee__")?W=this.__ee__:(W=d.value=o(null),i(this,"__ee__",d),d.value=null),W[S]?typeof W[S]=="object"?W[S].push(y):W[S]=[W[S],y]:W[S]=y,this},p=function(S,y){var W,k;return r(y),k=this,f.call(this,S,W=function(){b.call(k,S,W),a.call(y,this,arguments)}),W.__eeOnceListener__=y,this},b=function(S,y){var W,k,V,T;if(r(y),!u.call(this,"__ee__"))return this;if(W=this.__ee__,!W[S])return this;if(k=W[S],typeof k=="object")for(T=0;V=k[T];++T)(V===y||V.__eeOnceListener__===y)&&(k.length===2?W[S]=k[T?0:1]:k.splice(T,1));else(k===y||k.__eeOnceListener__===y)&&delete W[S];return this},A=function(S){var y,W,k,V,T;if(!!u.call(this,"__ee__")&&(V=this.__ee__[S],!!V))if(typeof V=="object"){for(W=arguments.length,T=new Array(W-1),y=1;y<W;++y)T[y-1]=arguments[y];for(V=V.slice(),y=0;k=V[y];++y)a.call(k,this,T)}else switch(arguments.length){case 1:l.call(V,this);break;case 2:l.call(V,this,arguments[1]);break;case 3:l.call(V,this,arguments[1],arguments[2]);break;default:for(W=arguments.length,T=new Array(W-1),y=1;y<W;++y)T[y-1]=arguments[y];a.call(V,this,T)}},h={on:f,once:p,off:b,emit:A},m={on:n(f),once:n(p),off:n(b),emit:n(A)},v=s({},m),e.exports=t=function(S){return S==null?o(v):s(Object(S),m)},t.methods=h})(w1,w1.exports);const il=w1.exports;var wo={},jo={};function ZU(e,t,n){if(n===void 0&&(n=Array.prototype),e&&typeof n.find=="function")return n.find.call(e,t);for(var r=0;r<e.length;r++)if(Object.prototype.hasOwnProperty.call(e,r)){var a=e[r];if(t.call(void 0,a,r,e))return a}}function em(e,t){return t===void 0&&(t=Object),t&&typeof t.freeze=="function"?t.freeze(e):e}var OW=em({HTML:"text/html",isHTML:function(e){return e===OW.HTML},XML_APPLICATION:"application/xml",XML_TEXT:"text/xml",XML_XHTML_APPLICATION:"application/xhtml+xml",XML_SVG_IMAGE:"image/svg+xml"}),RW=em({HTML:"http://www.w3.org/1999/xhtml",isHTML:function(e){return e===RW.HTML},SVG:"http://www.w3.org/2000/svg",XML:"http://www.w3.org/XML/1998/namespace",XMLNS:"http://www.w3.org/2000/xmlns/"});jo.find=ZU;jo.freeze=em;jo.MIME_TYPE=OW;jo.NAMESPACE=RW;var JW=jo,Ya=JW.find,bc=JW.NAMESPACE;function GU(e){return e!==""}function CU(e){return e?e.split(/[\t\n\f\r ]+/).filter(GU):[]}function MU(e,t){return e.hasOwnProperty(t)||(e[t]=!0),e}function Ky(e){if(!e)return[];var t=CU(e);return Object.keys(t.reduce(MU,{}))}function DU(e){return function(t){return e&&e.indexOf(t)!==-1}}function ad(e,t){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])}function Er(e,t){var n=e.prototype;if(!(n instanceof t)){let r=function(){};r.prototype=t.prototype,r=new r,ad(n,r),e.prototype=n=r}n.constructor!=e&&(typeof e!="function"&&console.error("unknown Class:"+e),n.constructor=e)}var Ir={},wa=Ir.ELEMENT_NODE=1,Us=Ir.ATTRIBUTE_NODE=2,cp=Ir.TEXT_NODE=3,FW=Ir.CDATA_SECTION_NODE=4,zW=Ir.ENTITY_REFERENCE_NODE=5,EU=Ir.ENTITY_NODE=6,HW=Ir.PROCESSING_INSTRUCTION_NODE=7,ZW=Ir.COMMENT_NODE=8,GW=Ir.DOCUMENT_NODE=9,CW=Ir.DOCUMENT_TYPE_NODE=10,jl=Ir.DOCUMENT_FRAGMENT_NODE=11,IU=Ir.NOTATION_NODE=12,Sr={},rr={};Sr.INDEX_SIZE_ERR=(rr[1]="Index size error",1);Sr.DOMSTRING_SIZE_ERR=(rr[2]="DOMString size error",2);var Rr=Sr.HIERARCHY_REQUEST_ERR=(rr[3]="Hierarchy request error",3);Sr.WRONG_DOCUMENT_ERR=(rr[4]="Wrong document",4);Sr.INVALID_CHARACTER_ERR=(rr[5]="Invalid character",5);Sr.NO_DATA_ALLOWED_ERR=(rr[6]="No data allowed",6);Sr.NO_MODIFICATION_ALLOWED_ERR=(rr[7]="No modification allowed",7);var MW=Sr.NOT_FOUND_ERR=(rr[8]="Not found",8);Sr.NOT_SUPPORTED_ERR=(rr[9]="Not supported",9);var Ny=Sr.INUSE_ATTRIBUTE_ERR=(rr[10]="Attribute in use",10);Sr.INVALID_STATE_ERR=(rr[11]="Invalid state",11);Sr.SYNTAX_ERR=(rr[12]="Syntax error",12);Sr.INVALID_MODIFICATION_ERR=(rr[13]="Invalid modification",13);Sr.NAMESPACE_ERR=(rr[14]="Invalid namespace",14);Sr.INVALID_ACCESS_ERR=(rr[15]="Invalid access",15);function zn(e,t){if(t instanceof Error)var n=t;else n=this,Error.call(this,rr[e]),this.message=rr[e],Error.captureStackTrace&&Error.captureStackTrace(this,zn);return n.code=e,t&&(this.message=this.message+": "+t),n}zn.prototype=Error.prototype;ad(Sr,zn);function Tl(){}Tl.prototype={length:0,item:function(e){return this[e]||null},toString:function(e,t){for(var n=[],r=0;r<this.length;r++)us(this[r],n,e,t);return n.join("")},filter:function(e){return Array.prototype.filter.call(this,e)},indexOf:function(e){return Array.prototype.indexOf.call(this,e)}};function Os(e,t){this._node=e,this._refresh=t,tm(this)}function tm(e){var t=e._node._inc||e._node.ownerDocument._inc;if(e._inc!=t){var n=e._refresh(e._node);r4(e,"length",n.length),ad(n,e),e._inc=t}}Os.prototype.item=function(e){return tm(this),this[e]};Er(Os,Tl);function dp(){}function DW(e,t){for(var n=e.length;n--;)if(e[n]===t)return n}function xy(e,t,n,r){if(r?t[DW(t,r)]=n:t[t.length++]=n,e){n.ownerElement=e;var a=e.ownerDocument;a&&(r&&BW(a,e,r),BU(a,e,n))}}function Xy(e,t,n){var r=DW(t,n);if(r>=0){for(var a=t.length-1;r<a;)t[r]=t[++r];if(t.length=a,e){var l=e.ownerDocument;l&&(BW(l,e,n),n.ownerElement=null)}}else throw new zn(MW,new Error(e.tagName+"@"+n))}dp.prototype={length:0,item:Tl.prototype.item,getNamedItem:function(e){for(var t=this.length;t--;){var n=this[t];if(n.nodeName==e)return n}},setNamedItem:function(e){var t=e.ownerElement;if(t&&t!=this._ownerElement)throw new zn(Ny);var n=this.getNamedItem(e.nodeName);return xy(this._ownerElement,this,e,n),n},setNamedItemNS:function(e){var t=e.ownerElement,n;if(t&&t!=this._ownerElement)throw new zn(Ny);return n=this.getNamedItemNS(e.namespaceURI,e.localName),xy(this._ownerElement,this,e,n),n},removeNamedItem:function(e){var t=this.getNamedItem(e);return Xy(this._ownerElement,this,t),t},removeNamedItemNS:function(e,t){var n=this.getNamedItemNS(e,t);return Xy(this._ownerElement,this,n),n},getNamedItemNS:function(e,t){for(var n=this.length;n--;){var r=this[n];if(r.localName==t&&r.namespaceURI==e)return r}return null}};function EW(){}EW.prototype={hasFeature:function(e,t){return!0},createDocument:function(e,t,n){var r=new ld;if(r.implementation=this,r.childNodes=new Tl,r.doctype=n||null,n&&r.appendChild(n),t){var a=r.createElementNS(e,t);r.appendChild(a)}return r},createDocumentType:function(e,t,n){var r=new Av;return r.name=e,r.nodeName=e,r.publicId=t||"",r.systemId=n||"",r}};function yn(){}yn.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(e,t){return fp(this,e,t)},replaceChild:function(e,t){fp(this,e,t,QW),t&&this.removeChild(t)},removeChild:function(e){return YW(this,e)},appendChild:function(e){return this.insertBefore(e,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(e){return j1(this.ownerDocument||this,this,e)},normalize:function(){for(var e=this.firstChild;e;){var t=e.nextSibling;t&&t.nodeType==cp&&e.nodeType==cp?(this.removeChild(t),e.appendData(t.data)):(e.normalize(),e=t)}},isSupported:function(e,t){return this.ownerDocument.implementation.hasFeature(e,t)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(e){for(var t=this;t;){var n=t._nsMap;if(n){for(var r in n)if(Object.prototype.hasOwnProperty.call(n,r)&&n[r]===e)return r}t=t.nodeType==Us?t.ownerDocument:t.parentNode}return null},lookupNamespaceURI:function(e){for(var t=this;t;){var n=t._nsMap;if(n&&e in n&&Object.prototype.hasOwnProperty.call(n,e))return n[e];t=t.nodeType==Us?t.ownerDocument:t.parentNode}return null},isDefaultNamespace:function(e){var t=this.lookupPrefix(e);return t==null}};function IW(e){return e=="<"&&"&lt;"||e==">"&&"&gt;"||e=="&"&&"&amp;"||e=='"'&&"&quot;"||"&#"+e.charCodeAt()+";"}ad(Ir,yn);ad(Ir,yn.prototype);function hc(e,t){if(t(e))return!0;if(e=e.firstChild)do if(hc(e,t))return!0;while(e=e.nextSibling)}function ld(){this.ownerDocument=this}function BU(e,t,n){e&&e._inc++;var r=n.namespaceURI;r===bc.XMLNS&&(t._nsMap[n.prefix?n.localName:""]=n.value)}function BW(e,t,n,r){e&&e._inc++;var a=n.namespaceURI;a===bc.XMLNS&&delete t._nsMap[n.prefix?n.localName:""]}function nm(e,t,n){if(e&&e._inc){e._inc++;var r=t.childNodes;if(n)r[r.length++]=n;else{for(var a=t.firstChild,l=0;a;)r[l++]=a,a=a.nextSibling;r.length=l,delete r[r.length]}}}function YW(e,t){var n=t.previousSibling,r=t.nextSibling;return n?n.nextSibling=r:e.firstChild=r,r?r.previousSibling=n:e.lastChild=n,t.parentNode=null,t.previousSibling=null,t.nextSibling=null,nm(e.ownerDocument,e),t}function YU(e){return e&&(e.nodeType===yn.DOCUMENT_NODE||e.nodeType===yn.DOCUMENT_FRAGMENT_NODE||e.nodeType===yn.ELEMENT_NODE)}function QU(e){return e&&(Qa(e)||rm(e)||Ll(e)||e.nodeType===yn.DOCUMENT_FRAGMENT_NODE||e.nodeType===yn.COMMENT_NODE||e.nodeType===yn.PROCESSING_INSTRUCTION_NODE)}function Ll(e){return e&&e.nodeType===yn.DOCUMENT_TYPE_NODE}function Qa(e){return e&&e.nodeType===yn.ELEMENT_NODE}function rm(e){return e&&e.nodeType===yn.TEXT_NODE}function gy(e,t){var n=e.childNodes||[];if(Ya(n,Qa)||Ll(t))return!1;var r=Ya(n,Ll);return!(t&&r&&n.indexOf(r)>n.indexOf(t))}function wy(e,t){var n=e.childNodes||[];function r(l){return Qa(l)&&l!==t}if(Ya(n,r))return!1;var a=Ya(n,Ll);return!(t&&a&&n.indexOf(a)>n.indexOf(t))}function _U(e,t,n){if(!YU(e))throw new zn(Rr,"Unexpected parent node type "+e.nodeType);if(n&&n.parentNode!==e)throw new zn(MW,"child not in parent");if(!QU(t)||Ll(t)&&e.nodeType!==yn.DOCUMENT_NODE)throw new zn(Rr,"Unexpected node type "+t.nodeType+" for parent node type "+e.nodeType)}function $U(e,t,n){var r=e.childNodes||[],a=t.childNodes||[];if(t.nodeType===yn.DOCUMENT_FRAGMENT_NODE){var l=a.filter(Qa);if(l.length>1||Ya(a,rm))throw new zn(Rr,"More than one element or text in fragment");if(l.length===1&&!gy(e,n))throw new zn(Rr,"Element in fragment can not be inserted before doctype")}if(Qa(t)&&!gy(e,n))throw new zn(Rr,"Only one element can be added and only after doctype");if(Ll(t)){if(Ya(r,Ll))throw new zn(Rr,"Only one doctype is allowed");var o=Ya(r,Qa);if(n&&r.indexOf(o)<r.indexOf(n))throw new zn(Rr,"Doctype can only be inserted before an element");if(!n&&o)throw new zn(Rr,"Doctype can not be appended since element is present")}}function QW(e,t,n){var r=e.childNodes||[],a=t.childNodes||[];if(t.nodeType===yn.DOCUMENT_FRAGMENT_NODE){var l=a.filter(Qa);if(l.length>1||Ya(a,rm))throw new zn(Rr,"More than one element or text in fragment");if(l.length===1&&!wy(e,n))throw new zn(Rr,"Element in fragment can not be inserted before doctype")}if(Qa(t)&&!wy(e,n))throw new zn(Rr,"Only one element can be added and only after doctype");if(Ll(t)){if(Ya(r,function(s){return Ll(s)&&s!==n}))throw new zn(Rr,"Only one doctype is allowed");var o=Ya(r,Qa);if(n&&r.indexOf(o)<r.indexOf(n))throw new zn(Rr,"Doctype can only be inserted before an element")}}function fp(e,t,n,r){_U(e,t,n),e.nodeType===yn.DOCUMENT_NODE&&(r||$U)(e,t,n);var a=t.parentNode;if(a&&a.removeChild(t),t.nodeType===jl){var l=t.firstChild;if(l==null)return t;var o=t.lastChild}else l=o=t;var i=n?n.previousSibling:e.lastChild;l.previousSibling=i,o.nextSibling=n,i?i.nextSibling=l:e.firstChild=l,n==null?e.lastChild=o:n.previousSibling=o;do l.parentNode=e;while(l!==o&&(l=l.nextSibling));return nm(e.ownerDocument||e,e),t.nodeType==jl&&(t.firstChild=t.lastChild=null),t}function eO(e,t){return t.parentNode&&t.parentNode.removeChild(t),t.parentNode=e,t.previousSibling=e.lastChild,t.nextSibling=null,t.previousSibling?t.previousSibling.nextSibling=t:e.firstChild=t,e.lastChild=t,nm(e.ownerDocument,e,t),t}ld.prototype={nodeName:"#document",nodeType:GW,doctype:null,documentElement:null,_inc:1,insertBefore:function(e,t){if(e.nodeType==jl){for(var n=e.firstChild;n;){var r=n.nextSibling;this.insertBefore(n,t),n=r}return e}return fp(this,e,t),e.ownerDocument=this,this.documentElement===null&&e.nodeType===wa&&(this.documentElement=e),e},removeChild:function(e){return this.documentElement==e&&(this.documentElement=null),YW(this,e)},replaceChild:function(e,t){fp(this,e,t,QW),e.ownerDocument=this,t&&this.removeChild(t),Qa(e)&&(this.documentElement=e)},importNode:function(e,t){return n4(this,e,t)},getElementById:function(e){var t=null;return hc(this.documentElement,function(n){if(n.nodeType==wa&&n.getAttribute("id")==e)return t=n,!0}),t},getElementsByClassName:function(e){var t=Ky(e);return new Os(this,function(n){var r=[];return t.length>0&&hc(n.documentElement,function(a){if(a!==n&&a.nodeType===wa){var l=a.getAttribute("class");if(l){var o=e===l;if(!o){var i=Ky(l);o=t.every(DU(i))}o&&r.push(a)}}}),r})},createElement:function(e){var t=new Wi;t.ownerDocument=this,t.nodeName=e,t.tagName=e,t.localName=e,t.childNodes=new Tl;var n=t.attributes=new dp;return n._ownerElement=t,t},createDocumentFragment:function(){var e=new Wv;return e.ownerDocument=this,e.childNodes=new Tl,e},createTextNode:function(e){var t=new am;return t.ownerDocument=this,t.appendData(e),t},createComment:function(e){var t=new lm;return t.ownerDocument=this,t.appendData(e),t},createCDATASection:function(e){var t=new om;return t.ownerDocument=this,t.appendData(e),t},createProcessingInstruction:function(e,t){var n=new sm;return n.ownerDocument=this,n.tagName=n.target=e,n.nodeValue=n.data=t,n},createAttribute:function(e){var t=new pp;return t.ownerDocument=this,t.name=e,t.nodeName=e,t.localName=e,t.specified=!0,t},createEntityReference:function(e){var t=new im;return t.ownerDocument=this,t.nodeName=e,t},createElementNS:function(e,t){var n=new Wi,r=t.split(":"),a=n.attributes=new dp;return n.childNodes=new Tl,n.ownerDocument=this,n.nodeName=t,n.tagName=t,n.namespaceURI=e,r.length==2?(n.prefix=r[0],n.localName=r[1]):n.localName=t,a._ownerElement=n,n},createAttributeNS:function(e,t){var n=new pp,r=t.split(":");return n.ownerDocument=this,n.nodeName=t,n.name=t,n.namespaceURI=e,n.specified=!0,r.length==2?(n.prefix=r[0],n.localName=r[1]):n.localName=t,n}};Er(ld,yn);function Wi(){this._nsMap={}}Wi.prototype={nodeType:wa,hasAttribute:function(e){return this.getAttributeNode(e)!=null},getAttribute:function(e){var t=this.getAttributeNode(e);return t&&t.value||""},getAttributeNode:function(e){return this.attributes.getNamedItem(e)},setAttribute:function(e,t){var n=this.ownerDocument.createAttribute(e);n.value=n.nodeValue=""+t,this.setAttributeNode(n)},removeAttribute:function(e){var t=this.getAttributeNode(e);t&&this.removeAttributeNode(t)},appendChild:function(e){return e.nodeType===jl?this.insertBefore(e,null):eO(this,e)},setAttributeNode:function(e){return this.attributes.setNamedItem(e)},setAttributeNodeNS:function(e){return this.attributes.setNamedItemNS(e)},removeAttributeNode:function(e){return this.attributes.removeNamedItem(e.nodeName)},removeAttributeNS:function(e,t){var n=this.getAttributeNodeNS(e,t);n&&this.removeAttributeNode(n)},hasAttributeNS:function(e,t){return this.getAttributeNodeNS(e,t)!=null},getAttributeNS:function(e,t){var n=this.getAttributeNodeNS(e,t);return n&&n.value||""},setAttributeNS:function(e,t,n){var r=this.ownerDocument.createAttributeNS(e,t);r.value=r.nodeValue=""+n,this.setAttributeNode(r)},getAttributeNodeNS:function(e,t){return this.attributes.getNamedItemNS(e,t)},getElementsByTagName:function(e){return new Os(this,function(t){var n=[];return hc(t,function(r){r!==t&&r.nodeType==wa&&(e==="*"||r.tagName==e)&&n.push(r)}),n})},getElementsByTagNameNS:function(e,t){return new Os(this,function(n){var r=[];return hc(n,function(a){a!==n&&a.nodeType===wa&&(e==="*"||a.namespaceURI===e)&&(t==="*"||a.localName==t)&&r.push(a)}),r})}};ld.prototype.getElementsByTagName=Wi.prototype.getElementsByTagName;ld.prototype.getElementsByTagNameNS=Wi.prototype.getElementsByTagNameNS;Er(Wi,yn);function pp(){}pp.prototype.nodeType=Us;Er(pp,yn);function od(){}od.prototype={data:"",substringData:function(e,t){return this.data.substring(e,e+t)},appendData:function(e){e=this.data+e,this.nodeValue=this.data=e,this.length=e.length},insertData:function(e,t){this.replaceData(e,0,t)},appendChild:function(e){throw new Error(rr[Rr])},deleteData:function(e,t){this.replaceData(e,t,"")},replaceData:function(e,t,n){var r=this.data.substring(0,e),a=this.data.substring(e+t);n=r+n+a,this.nodeValue=this.data=n,this.length=n.length}};Er(od,yn);function am(){}am.prototype={nodeName:"#text",nodeType:cp,splitText:function(e){var t=this.data,n=t.substring(e);t=t.substring(0,e),this.data=this.nodeValue=t,this.length=t.length;var r=this.ownerDocument.createTextNode(n);return this.parentNode&&this.parentNode.insertBefore(r,this.nextSibling),r}};Er(am,od);function lm(){}lm.prototype={nodeName:"#comment",nodeType:ZW};Er(lm,od);function om(){}om.prototype={nodeName:"#cdata-section",nodeType:FW};Er(om,od);function Av(){}Av.prototype.nodeType=CW;Er(Av,yn);function _W(){}_W.prototype.nodeType=IU;Er(_W,yn);function $W(){}$W.prototype.nodeType=EU;Er($W,yn);function im(){}im.prototype.nodeType=zW;Er(im,yn);function Wv(){}Wv.prototype.nodeName="#document-fragment";Wv.prototype.nodeType=jl;Er(Wv,yn);function sm(){}sm.prototype.nodeType=HW;Er(sm,yn);function e4(){}e4.prototype.serializeToString=function(e,t,n){return t4.call(e,t,n)};yn.prototype.toString=t4;function t4(e,t){var n=[],r=this.nodeType==9&&this.documentElement||this,a=r.prefix,l=r.namespaceURI;if(l&&a==null){var a=r.lookupPrefix(l);if(a==null)var o=[{namespace:l,prefix:null}]}return us(this,n,e,t,o),n.join("")}function jy(e,t,n){var r=e.prefix||"",a=e.namespaceURI;if(!a||r==="xml"&&a===bc.XML||a===bc.XMLNS)return!1;for(var l=n.length;l--;){var o=n[l];if(o.prefix===r)return o.namespace!==a}return!0}function Tb(e,t,n){e.push(" ",t,'="',n.replace(/[<&"]/g,IW),'"')}function us(e,t,n,r,a){if(a||(a=[]),r)if(e=r(e),e){if(typeof e=="string"){t.push(e);return}}else return;switch(e.nodeType){case wa:var l=e.attributes,o=l.length,v=e.firstChild,i=e.tagName;n=bc.isHTML(e.namespaceURI)||n;var s=i;if(!n&&!e.prefix&&e.namespaceURI){for(var u,d=0;d<l.length;d++)if(l.item(d).name==="xmlns"){u=l.item(d).value;break}if(!u)for(var f=a.length-1;f>=0;f--){var p=a[f];if(p.prefix===""&&p.namespace===e.namespaceURI){u=p.namespace;break}}if(u!==e.namespaceURI)for(var f=a.length-1;f>=0;f--){var p=a[f];if(p.namespace===e.namespaceURI){p.prefix&&(s=p.prefix+":"+i);break}}}t.push("<",s);for(var b=0;b<o;b++){var A=l.item(b);A.prefix=="xmlns"?a.push({prefix:A.localName,namespace:A.value}):A.nodeName=="xmlns"&&a.push({prefix:"",namespace:A.value})}for(var b=0;b<o;b++){var A=l.item(b);if(jy(A,n,a)){var h=A.prefix||"",m=A.namespaceURI;Tb(t,h?"xmlns:"+h:"xmlns",m),a.push({prefix:h,namespace:m})}us(A,t,n,r,a)}if(i===s&&jy(e,n,a)){var h=e.prefix||"",m=e.namespaceURI;Tb(t,h?"xmlns:"+h:"xmlns",m),a.push({prefix:h,namespace:m})}if(v||n&&!/^(?:meta|link|img|br|hr|input)$/i.test(i)){if(t.push(">"),n&&/^script$/i.test(i))for(;v;)v.data?t.push(v.data):us(v,t,n,r,a.slice()),v=v.nextSibling;else for(;v;)us(v,t,n,r,a.slice()),v=v.nextSibling;t.push("</",s,">")}else t.push("/>");return;case GW:case jl:for(var v=e.firstChild;v;)us(v,t,n,r,a.slice()),v=v.nextSibling;return;case Us:return Tb(t,e.name,e.value);case cp:return t.push(e.data.replace(/[<&]/g,IW).replace(/]]>/g,"]]&gt;"));case FW:return t.push("<![CDATA[",e.data,"]]>");case ZW:return t.push("<!--",e.data,"-->");case CW:var S=e.publicId,y=e.systemId;if(t.push("<!DOCTYPE ",e.name),S)t.push(" PUBLIC ",S),y&&y!="."&&t.push(" ",y),t.push(">");else if(y&&y!=".")t.push(" SYSTEM ",y,">");else{var W=e.internalSubset;W&&t.push(" [",W,"]"),t.push(">")}return;case HW:return t.push("<?",e.target," ",e.data,"?>");case zW:return t.push("&",e.nodeName,";");default:t.push("??",e.nodeName)}}function n4(e,t,n){var r;switch(t.nodeType){case wa:r=t.cloneNode(!1),r.ownerDocument=e;case jl:break;case Us:n=!0;break}if(r||(r=t.cloneNode(!1)),r.ownerDocument=e,r.parentNode=null,n)for(var a=t.firstChild;a;)r.appendChild(n4(e,a,n)),a=a.nextSibling;return r}function j1(e,t,n){var r=new t.constructor;for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)){var l=t[a];typeof l!="object"&&l!=r[a]&&(r[a]=l)}switch(t.childNodes&&(r.childNodes=new Tl),r.ownerDocument=e,r.nodeType){case wa:var o=t.attributes,i=r.attributes=new dp,s=o.length;i._ownerElement=r;for(var u=0;u<s;u++)r.setAttributeNode(j1(e,o.item(u),!0));break;case Us:n=!0}if(n)for(var d=t.firstChild;d;)r.appendChild(j1(e,d,n)),d=d.nextSibling;return r}function r4(e,t,n){e[t]=n}try{if(Object.defineProperty){let e=function(t){switch(t.nodeType){case wa:case jl:var n=[];for(t=t.firstChild;t;)t.nodeType!==7&&t.nodeType!==8&&n.push(e(t)),t=t.nextSibling;return n.join("");default:return t.nodeValue}};Object.defineProperty(Os.prototype,"length",{get:function(){return tm(this),this.$$length}}),Object.defineProperty(yn.prototype,"textContent",{get:function(){return e(this)},set:function(t){switch(this.nodeType){case wa:case jl:for(;this.firstChild;)this.removeChild(this.firstChild);(t||String(t))&&this.appendChild(this.ownerDocument.createTextNode(t));break;default:this.data=t,this.value=t,this.nodeValue=t}}}),r4=function(t,n,r){t["$$"+n]=r}}}catch{}wo.DocumentType=Av;wo.DOMException=zn;wo.DOMImplementation=EW;wo.Element=Wi;wo.Node=yn;wo.NodeList=Tl;wo.XMLSerializer=e4;var id={},a4={};(function(e){var t=jo.freeze;e.XML_ENTITIES=t({amp:"&",apos:"'",gt:">",lt:"<",quot:'"'}),e.HTML_ENTITIES=t({lt:"<",gt:">",amp:"&",quot:'"',apos:"'",Agrave:"\xC0",Aacute:"\xC1",Acirc:"\xC2",Atilde:"\xC3",Auml:"\xC4",Aring:"\xC5",AElig:"\xC6",Ccedil:"\xC7",Egrave:"\xC8",Eacute:"\xC9",Ecirc:"\xCA",Euml:"\xCB",Igrave:"\xCC",Iacute:"\xCD",Icirc:"\xCE",Iuml:"\xCF",ETH:"\xD0",Ntilde:"\xD1",Ograve:"\xD2",Oacute:"\xD3",Ocirc:"\xD4",Otilde:"\xD5",Ouml:"\xD6",Oslash:"\xD8",Ugrave:"\xD9",Uacute:"\xDA",Ucirc:"\xDB",Uuml:"\xDC",Yacute:"\xDD",THORN:"\xDE",szlig:"\xDF",agrave:"\xE0",aacute:"\xE1",acirc:"\xE2",atilde:"\xE3",auml:"\xE4",aring:"\xE5",aelig:"\xE6",ccedil:"\xE7",egrave:"\xE8",eacute:"\xE9",ecirc:"\xEA",euml:"\xEB",igrave:"\xEC",iacute:"\xED",icirc:"\xEE",iuml:"\xEF",eth:"\xF0",ntilde:"\xF1",ograve:"\xF2",oacute:"\xF3",ocirc:"\xF4",otilde:"\xF5",ouml:"\xF6",oslash:"\xF8",ugrave:"\xF9",uacute:"\xFA",ucirc:"\xFB",uuml:"\xFC",yacute:"\xFD",thorn:"\xFE",yuml:"\xFF",nbsp:"\xA0",iexcl:"\xA1",cent:"\xA2",pound:"\xA3",curren:"\xA4",yen:"\xA5",brvbar:"\xA6",sect:"\xA7",uml:"\xA8",copy:"\xA9",ordf:"\xAA",laquo:"\xAB",not:"\xAC",shy:"\xAD\xAD",reg:"\xAE",macr:"\xAF",deg:"\xB0",plusmn:"\xB1",sup2:"\xB2",sup3:"\xB3",acute:"\xB4",micro:"\xB5",para:"\xB6",middot:"\xB7",cedil:"\xB8",sup1:"\xB9",ordm:"\xBA",raquo:"\xBB",frac14:"\xBC",frac12:"\xBD",frac34:"\xBE",iquest:"\xBF",times:"\xD7",divide:"\xF7",forall:"\u2200",part:"\u2202",exist:"\u2203",empty:"\u2205",nabla:"\u2207",isin:"\u2208",notin:"\u2209",ni:"\u220B",prod:"\u220F",sum:"\u2211",minus:"\u2212",lowast:"\u2217",radic:"\u221A",prop:"\u221D",infin:"\u221E",ang:"\u2220",and:"\u2227",or:"\u2228",cap:"\u2229",cup:"\u222A",int:"\u222B",there4:"\u2234",sim:"\u223C",cong:"\u2245",asymp:"\u2248",ne:"\u2260",equiv:"\u2261",le:"\u2264",ge:"\u2265",sub:"\u2282",sup:"\u2283",nsub:"\u2284",sube:"\u2286",supe:"\u2287",oplus:"\u2295",otimes:"\u2297",perp:"\u22A5",sdot:"\u22C5",Alpha:"\u0391",Beta:"\u0392",Gamma:"\u0393",Delta:"\u0394",Epsilon:"\u0395",Zeta:"\u0396",Eta:"\u0397",Theta:"\u0398",Iota:"\u0399",Kappa:"\u039A",Lambda:"\u039B",Mu:"\u039C",Nu:"\u039D",Xi:"\u039E",Omicron:"\u039F",Pi:"\u03A0",Rho:"\u03A1",Sigma:"\u03A3",Tau:"\u03A4",Upsilon:"\u03A5",Phi:"\u03A6",Chi:"\u03A7",Psi:"\u03A8",Omega:"\u03A9",alpha:"\u03B1",beta:"\u03B2",gamma:"\u03B3",delta:"\u03B4",epsilon:"\u03B5",zeta:"\u03B6",eta:"\u03B7",theta:"\u03B8",iota:"\u03B9",kappa:"\u03BA",lambda:"\u03BB",mu:"\u03BC",nu:"\u03BD",xi:"\u03BE",omicron:"\u03BF",pi:"\u03C0",rho:"\u03C1",sigmaf:"\u03C2",sigma:"\u03C3",tau:"\u03C4",upsilon:"\u03C5",phi:"\u03C6",chi:"\u03C7",psi:"\u03C8",omega:"\u03C9",thetasym:"\u03D1",upsih:"\u03D2",piv:"\u03D6",OElig:"\u0152",oelig:"\u0153",Scaron:"\u0160",scaron:"\u0161",Yuml:"\u0178",fnof:"\u0192",circ:"\u02C6",tilde:"\u02DC",ensp:"\u2002",emsp:"\u2003",thinsp:"\u2009",zwnj:"\u200C",zwj:"\u200D",lrm:"\u200E",rlm:"\u200F",ndash:"\u2013",mdash:"\u2014",lsquo:"\u2018",rsquo:"\u2019",sbquo:"\u201A",ldquo:"\u201C",rdquo:"\u201D",bdquo:"\u201E",dagger:"\u2020",Dagger:"\u2021",bull:"\u2022",hellip:"\u2026",permil:"\u2030",prime:"\u2032",Prime:"\u2033",lsaquo:"\u2039",rsaquo:"\u203A",oline:"\u203E",euro:"\u20AC",trade:"\u2122",larr:"\u2190",uarr:"\u2191",rarr:"\u2192",darr:"\u2193",harr:"\u2194",crarr:"\u21B5",lceil:"\u2308",rceil:"\u2309",lfloor:"\u230A",rfloor:"\u230B",loz:"\u25CA",spades:"\u2660",clubs:"\u2663",hearts:"\u2665",diams:"\u2666"}),e.entityMap=e.HTML_ENTITIES})(a4);var um={},mc=jo.NAMESPACE,L1=/[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/,Ly=new RegExp("[\\-\\.0-9"+L1.source.slice(1,-1)+"\\u00B7\\u0300-\\u036F\\u203F-\\u2040]"),qy=new RegExp("^"+L1.source+Ly.source+"*(?::"+L1.source+Ly.source+"*)?$"),Wu=0,Il=1,Hi=2,ku=3,Zi=4,Gi=5,Vu=6,Gd=7;function Rs(e,t){this.message=e,this.locator=t,Error.captureStackTrace&&Error.captureStackTrace(this,Rs)}Rs.prototype=new Error;Rs.prototype.name=Rs.name;function l4(){}l4.prototype={parse:function(e,t,n){var r=this.domBuilder;r.startDocument(),o4(t,t={}),tO(e,t,n,r,this.errorHandler),r.endDocument()}};function tO(e,t,n,r,a){function l(G){if(G>65535){G-=65536;var U=55296+(G>>10),H=56320+(G&1023);return String.fromCharCode(U,H)}else return String.fromCharCode(G)}function o(G){var U=G.slice(1,-1);return U in n?n[U]:U.charAt(0)==="#"?l(parseInt(U.substr(1).replace("x","0x"))):(a.error("entity not found:"+G),G)}function i(G){if(G>h){var U=e.substring(h,G).replace(/&#?\w+;/g,o);p&&s(h),r.characters(U,0,G-h),h=G}}function s(G,U){for(;G>=d&&(U=f.exec(e));)u=U.index,d=u+U[0].length,p.lineNumber++;p.columnNumber=G-u+1}for(var u=0,d=0,f=/.*(?:\r\n?|\n)|.*$/g,p=r.locator,b=[{currentNSMap:t}],A={},h=0;;){try{var m=e.indexOf("<",h);if(m<0){if(!e.substr(h).match(/^\s*$/)){var v=r.doc,S=v.createTextNode(e.substr(h));v.appendChild(S),r.currentElement=S}return}switch(m>h&&i(m),e.charAt(m+1)){case"/":var j=e.indexOf(">",m+3),y=e.substring(m+2,j).replace(/[ \t\n\r]+$/g,""),W=b.pop();j<0?(y=e.substring(m+2).replace(/[\s<].*/,""),a.error("end tag name: "+y+" is not complete:"+W.tagName),j=m+1+y.length):y.match(/\s</)&&(y=y.replace(/[\s<].*/,""),a.error("end tag name: "+y+" maybe not complete"),j=m+1+y.length);var k=W.localNSMap,V=W.tagName==y,T=V||W.tagName&&W.tagName.toLowerCase()==y.toLowerCase();if(T){if(r.endElement(W.uri,W.localName,y),k)for(var P in k)Object.prototype.hasOwnProperty.call(k,P)&&r.endPrefixMapping(P);V||a.fatalError("end tag name: "+y+" is not match the current start tagName:"+W.tagName)}else b.push(W);j++;break;case"?":p&&s(m),j=oO(e,m,r);break;case"!":p&&s(m),j=lO(e,m,r,a);break;default:p&&s(m);var x=new i4,g=b[b.length-1].currentNSMap,j=nO(e,m,x,g,o,a),L=x.length;if(!x.closed&&aO(e,j,x.tagName,A)&&(x.closed=!0,n.nbsp||a.warning("unclosed xml attribute")),p&&L){for(var w=Uy(p,{}),R=0;R<L;R++){var Z=x[R];s(Z.offset),Z.locator=Uy(p,{})}r.locator=w,Oy(x,r,g)&&b.push(x),r.locator=p}else Oy(x,r,g)&&b.push(x);mc.isHTML(x.uri)&&!x.closed?j=rO(e,j,x.tagName,o,r):j++}}catch(G){if(G instanceof Rs)throw G;a.error("element parse error: "+G),j=-1}j>h?h=j:i(Math.max(m,h)+1)}}function Uy(e,t){return t.lineNumber=e.lineNumber,t.columnNumber=e.columnNumber,t}function nO(e,t,n,r,a,l){function o(p,b,A){n.attributeNames.hasOwnProperty(p)&&l.fatalError("Attribute "+p+" redefined"),n.addValue(p,b,A)}for(var i,s,u=++t,d=Wu;;){var f=e.charAt(u);switch(f){case"=":if(d===Il)i=e.slice(t,u),d=ku;else if(d===Hi)d=ku;else throw new Error("attribute equal must after attrName");break;case"'":case'"':if(d===ku||d===Il)if(d===Il&&(l.warning('attribute value must after "="'),i=e.slice(t,u)),t=u+1,u=e.indexOf(f,t),u>0)s=e.slice(t,u).replace(/&#?\w+;/g,a),o(i,s,t-1),d=Gi;else throw new Error("attribute value no end '"+f+"' match");else if(d==Zi)s=e.slice(t,u).replace(/&#?\w+;/g,a),o(i,s,t),l.warning('attribute "'+i+'" missed start quot('+f+")!!"),t=u+1,d=Gi;else throw new Error('attribute value must after "="');break;case"/":switch(d){case Wu:n.setTagName(e.slice(t,u));case Gi:case Vu:case Gd:d=Gd,n.closed=!0;case Zi:case Il:break;case Hi:n.closed=!0;break;default:throw new Error("attribute invalid close char('/')")}break;case"":return l.error("unexpected end of input"),d==Wu&&n.setTagName(e.slice(t,u)),u;case">":switch(d){case Wu:n.setTagName(e.slice(t,u));case Gi:case Vu:case Gd:break;case Zi:case Il:s=e.slice(t,u),s.slice(-1)==="/"&&(n.closed=!0,s=s.slice(0,-1));case Hi:d===Hi&&(s=i),d==Zi?(l.warning('attribute "'+s+'" missed quot(")!'),o(i,s.replace(/&#?\w+;/g,a),t)):((!mc.isHTML(r[""])||!s.match(/^(?:disabled|checked|selected)$/i))&&l.warning('attribute "'+s+'" missed value!! "'+s+'" instead!!'),o(s,s,t));break;case ku:throw new Error("attribute value missed!!")}return u;case"\x80":f=" ";default:if(f<=" ")switch(d){case Wu:n.setTagName(e.slice(t,u)),d=Vu;break;case Il:i=e.slice(t,u),d=Hi;break;case Zi:var s=e.slice(t,u).replace(/&#?\w+;/g,a);l.warning('attribute "'+s+'" missed quot(")!!'),o(i,s,t);case Gi:d=Vu;break}else switch(d){case Hi:n.tagName,(!mc.isHTML(r[""])||!i.match(/^(?:disabled|checked|selected)$/i))&&l.warning('attribute "'+i+'" missed value!! "'+i+'" instead2!!'),o(i,i,t),t=u,d=Il;break;case Gi:l.warning('attribute space is required"'+i+'"!!');case Vu:d=Il,t=u;break;case ku:d=Zi,t=u;break;case Gd:throw new Error("elements closed character '/' and '>' must be connected to")}}u++}}function Oy(e,t,n){for(var r=e.tagName,a=null,f=e.length;f--;){var l=e[f],o=l.qName,i=l.value,p=o.indexOf(":");if(p>0)var s=l.prefix=o.slice(0,p),u=o.slice(p+1),d=s==="xmlns"&&u;else u=o,s=null,d=o==="xmlns"&&"";l.localName=u,d!==!1&&(a==null&&(a={},o4(n,n={})),n[d]=a[d]=i,l.uri=mc.XMLNS,t.startPrefixMapping(d,i))}for(var f=e.length;f--;){l=e[f];var s=l.prefix;s&&(s==="xml"&&(l.uri=mc.XML),s!=="xmlns"&&(l.uri=n[s||""]))}var p=r.indexOf(":");p>0?(s=e.prefix=r.slice(0,p),u=e.localName=r.slice(p+1)):(s=null,u=e.localName=r);var b=e.uri=n[s||""];if(t.startElement(b,u,r,e),e.closed){if(t.endElement(b,u,r),a)for(s in a)Object.prototype.hasOwnProperty.call(a,s)&&t.endPrefixMapping(s)}else return e.currentNSMap=n,e.localNSMap=a,!0}function rO(e,t,n,r,a){if(/^(?:script|textarea)$/i.test(n)){var l=e.indexOf("</"+n+">",t),o=e.substring(t+1,l);if(/[&<]/.test(o))return/^script$/i.test(n)?(a.characters(o,0,o.length),l):(o=o.replace(/&#?\w+;/g,r),a.characters(o,0,o.length),l)}return t+1}function aO(e,t,n,r){var a=r[n];return a==null&&(a=e.lastIndexOf("</"+n+">"),a<t&&(a=e.lastIndexOf("</"+n)),r[n]=a),a<t}function o4(e,t){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])}function lO(e,t,n,r){var a=e.charAt(t+2);switch(a){case"-":if(e.charAt(t+3)==="-"){var l=e.indexOf("-->",t+4);return l>t?(n.comment(e,t+4,l-t-4),l+3):(r.error("Unclosed comment"),-1)}else return-1;default:if(e.substr(t+3,6)=="CDATA["){var l=e.indexOf("]]>",t+9);return n.startCDATA(),n.characters(e,t+9,l-t-9),n.endCDATA(),l+3}var o=iO(e,t),i=o.length;if(i>1&&/!doctype/i.test(o[0][0])){var s=o[1][0],u=!1,d=!1;i>3&&(/^public$/i.test(o[2][0])?(u=o[3][0],d=i>4&&o[4][0]):/^system$/i.test(o[2][0])&&(d=o[3][0]));var f=o[i-1];return n.startDTD(s,u,d),n.endDTD(),f.index+f[0].length}}return-1}function oO(e,t,n){var r=e.indexOf("?>",t);if(r){var a=e.substring(t,r).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);return a?(a[0].length,n.processingInstruction(a[1],a[2]),r+2):-1}return-1}function i4(){this.attributeNames={}}i4.prototype={setTagName:function(e){if(!qy.test(e))throw new Error("invalid tagName:"+e);this.tagName=e},addValue:function(e,t,n){if(!qy.test(e))throw new Error("invalid attribute:"+e);this.attributeNames[e]=this.length,this[this.length++]={qName:e,value:t,offset:n}},length:0,getLocalName:function(e){return this[e].localName},getLocator:function(e){return this[e].locator},getQName:function(e){return this[e].qName},getURI:function(e){return this[e].uri},getValue:function(e){return this[e].value}};function iO(e,t){var n,r=[],a=/'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;for(a.lastIndex=t,a.exec(e);n=a.exec(e);)if(r.push(n),n[1])return r}um.XMLReader=l4;um.ParseError=Rs;var sO=jo,cm=wo,Ry=a4,s4=um,uO=cm.DOMImplementation,Jy=sO.NAMESPACE,cO=s4.ParseError,dO=s4.XMLReader;function u4(e){this.options=e||{locator:{}}}u4.prototype.parseFromString=function(e,t){var n=this.options,r=new dO,a=n.domBuilder||new sd,l=n.errorHandler,o=n.locator,i=n.xmlns||{},s=/\/x?html?$/.test(t),u=s?Ry.HTML_ENTITIES:Ry.XML_ENTITIES;return o&&a.setDocumentLocator(o),r.errorHandler=fO(l,a,o),r.domBuilder=n.domBuilder||a,s&&(i[""]=Jy.HTML),i.xml=i.xml||Jy.XML,e&&typeof e=="string"?r.parse(e,i,u):r.errorHandler.error("invalid doc source"),a.doc};function fO(e,t,n){if(!e){if(t instanceof sd)return t;e=t}var r={},a=e instanceof Function;n=n||{};function l(o){var i=e[o];!i&&a&&(i=e.length==2?function(s){e(o,s)}:e),r[o]=i&&function(s){i("[xmldom "+o+"]	"+s+q1(n))}||function(){}}return l("warning"),l("error"),l("fatalError"),r}function sd(){this.cdata=!1}function Ci(e,t){t.lineNumber=e.lineNumber,t.columnNumber=e.columnNumber}sd.prototype={startDocument:function(){this.doc=new uO().createDocument(null,null,null),this.locator&&(this.doc.documentURI=this.locator.systemId)},startElement:function(e,t,n,r){var a=this.doc,l=a.createElementNS(e,n||t),o=r.length;Cd(this,l),this.currentElement=l,this.locator&&Ci(this.locator,l);for(var i=0;i<o;i++){var e=r.getURI(i),s=r.getValue(i),n=r.getQName(i),u=a.createAttributeNS(e,n);this.locator&&Ci(r.getLocator(i),u),u.value=u.nodeValue=s,l.setAttributeNode(u)}},endElement:function(e,t,n){var r=this.currentElement;r.tagName,this.currentElement=r.parentNode},startPrefixMapping:function(e,t){},endPrefixMapping:function(e){},processingInstruction:function(e,t){var n=this.doc.createProcessingInstruction(e,t);this.locator&&Ci(this.locator,n),Cd(this,n)},ignorableWhitespace:function(e,t,n){},characters:function(e,t,n){if(e=Fy.apply(this,arguments),e){if(this.cdata)var r=this.doc.createCDATASection(e);else var r=this.doc.createTextNode(e);this.currentElement?this.currentElement.appendChild(r):/^\s*$/.test(e)&&this.doc.appendChild(r),this.locator&&Ci(this.locator,r)}},skippedEntity:function(e){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(e){(this.locator=e)&&(e.lineNumber=0)},comment:function(e,t,n){e=Fy.apply(this,arguments);var r=this.doc.createComment(e);this.locator&&Ci(this.locator,r),Cd(this,r)},startCDATA:function(){this.cdata=!0},endCDATA:function(){this.cdata=!1},startDTD:function(e,t,n){var r=this.doc.implementation;if(r&&r.createDocumentType){var a=r.createDocumentType(e,t,n);this.locator&&Ci(this.locator,a),Cd(this,a),this.doc.doctype=a}},warning:function(e){console.warn("[xmldom warning]	"+e,q1(this.locator))},error:function(e){console.error("[xmldom error]	"+e,q1(this.locator))},fatalError:function(e){throw new cO(e,this.locator)}};function q1(e){if(e)return`
@`+(e.systemId||"")+"#[line:"+e.lineNumber+",col:"+e.columnNumber+"]"}function Fy(e,t,n){return typeof e=="string"?e.substr(t,n):e.length>=t+n||t?new java.lang.String(e,t,n)+"":e}"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g,function(e){sd.prototype[e]=function(){return null}});function Cd(e,t){e.currentElement?e.currentElement.appendChild(t):e.doc.appendChild(t)}id.__DOMHandler=sd;id.DOMParser=u4;id.DOMImplementation=cm.DOMImplementation;id.XMLSerializer=cm.XMLSerializer;var c4=id.DOMParser;const dm=typeof window<"u"?window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame:!1,pO=1,vO=3,d4=typeof URL<"u"?URL:typeof window<"u"?window.URL||window.webkitURL||window.mozURL:void 0;function kv(){var e=new Date().getTime(),t="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){var r=(e+Math.random()*16)%16|0;return e=Math.floor(e/16),(n=="x"?r:r&7|8).toString(16)});return t}function bO(){return Math.max(document.documentElement.clientHeight,document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight)}function f4(e){return!!(e&&e.nodeType==1)}function Un(e){return!isNaN(parseFloat(e))&&isFinite(e)}function p4(e){let t=parseFloat(e);return Un(e)===!1?!1:typeof e=="string"&&e.indexOf(".")>-1?!0:Math.floor(t)!==t}function ts(e){var t=["Webkit","webkit","Moz","O","ms"],n=["-webkit-","-webkit-","-moz-","-o-","-ms-"],r=e.toLowerCase(),a=t.length;if(typeof document>"u"||typeof document.body.style[r]<"u")return e;for(var l=0;l<a;l++)if(typeof document.body.style[n[l]+r]<"u")return n[l]+r;return e}function v4(e){for(var t=1,n=arguments.length;t<n;t++){var r=arguments[t];for(var a in r)e[a]===void 0&&(e[a]=r[a])}return e}function or(e){var t=[].slice.call(arguments,1);return t.forEach(function(n){!n||Object.getOwnPropertyNames(n).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))})}),e}function hO(e,t,n){var r=Js(e,t,n);return t.splice(r,0,e),r}function Js(e,t,n,r,a){var l=r||0,o=a||t.length,i=parseInt(l+(o-l)/2),s;return n||(n=function(u,d){if(u>d)return 1;if(u<d)return-1;if(u==d)return 0}),o-l<=0?i:(s=n(t[i],e),o-l===1?s>=0?i:i+1:s===0?i:s===-1?Js(e,t,n,i,o):Js(e,t,n,l,i))}function vp(e,t,n,r,a){var l=r||0,o=a||t.length,i=parseInt(l+(o-l)/2),s;return n||(n=function(u,d){if(u>d)return 1;if(u<d)return-1;if(u==d)return 0}),o-l<=0?-1:(s=n(t[i],e),o-l===1?s===0?i:-1:s===0?i:s===-1?vp(e,t,n,i,o):vp(e,t,n,l,i))}function Wf(e){var t=window.getComputedStyle(e),n=["width","paddingRight","paddingLeft","marginRight","marginLeft","borderRightWidth","borderLeftWidth"],r=["height","paddingTop","paddingBottom","marginTop","marginBottom","borderTopWidth","borderBottomWidth"],a=0,l=0;return n.forEach(function(o){a+=parseFloat(t[o])||0}),r.forEach(function(o){l+=parseFloat(t[o])||0}),{height:l,width:a}}function bp(e){var t=window.getComputedStyle(e),n=["paddingRight","paddingLeft","marginRight","marginLeft","borderRightWidth","borderLeftWidth"],r=["paddingTop","paddingBottom","marginTop","marginBottom","borderTopWidth","borderBottomWidth"],a=0,l=0;return n.forEach(function(o){a+=parseFloat(t[o])||0}),r.forEach(function(o){l+=parseFloat(t[o])||0}),{height:l,width:a}}function U1(e){let t,n=e.ownerDocument;if(e.nodeType==Node.TEXT_NODE){let r=n.createRange();r.selectNodeContents(e),t=r.getBoundingClientRect()}else t=e.getBoundingClientRect();return t}function hp(){var e=window.innerWidth,t=window.innerHeight;return{top:0,left:0,right:e,bottom:t,width:e,height:t}}function fm(e,t){for(var n=e.parentNode,r=n.childNodes,a,l=-1,o=0;o<r.length&&(a=r[o],a.nodeType===t&&l++,a!=e);o++);return l}function mO(e){return fm(e,vO)}function b4(e){return fm(e,pO)}function Sc(e){return["xml","opf","ncx"].indexOf(e)>-1}function h4(e,t){return new Blob([e],{type:t})}function mp(e,t){var n,r=h4(e,t);return n=d4.createObjectURL(r),n}function m4(e){return d4.revokeObjectURL(e)}function O1(e,t){var n,r;if(typeof e=="string")return n=btoa(e),r="data:"+t+";base64,"+n,r}function S4(e){return Object.prototype.toString.call(e).slice(8,-1)}function _a(e,t,n){var r,a;return typeof DOMParser>"u"||n?a=c4:a=DOMParser,e.charCodeAt(0)===65279&&(e=e.slice(1)),r=new a().parseFromString(e,t),r}function Wn(e,t){var n;if(!e)throw new Error("No Element Provided");if(typeof e.querySelector<"u")return e.querySelector(t);if(n=e.getElementsByTagName(t),n.length)return n[0]}function ql(e,t){return typeof e.querySelector<"u"?e.querySelectorAll(t):e.getElementsByTagName(t)}function ns(e,t,n){var r,a;if(typeof e.querySelector<"u"){t+="[";for(var l in n)t+=l+"~='"+n[l]+"'";return t+="]",e.querySelector(t)}else if(r=e.getElementsByTagName(t),a=Array.prototype.slice.call(r,0).filter(function(o){for(var i in n)if(o.getAttribute(i)===n[i])return!0;return!1}),a)return a[0]}function Sp(e,t){var n=e.ownerDocument||e;typeof n.createTreeWalker<"u"?y4(e,t,NodeFilter.SHOW_TEXT):pm(e,function(r){r&&r.nodeType===3&&t(r)})}function y4(e,t,n){var r=document.createTreeWalker(e,n,null,!1);let a;for(;a=r.nextNode();)t(a)}function pm(e,t){if(t(e))return!0;if(e=e.firstChild,e)do{if(pm(e,t))return!0;e=e.nextSibling}while(e)}function A4(e){return new Promise(function(t,n){var r=new FileReader;r.readAsDataURL(e),r.onloadend=function(){t(r.result)}})}function on(){this.resolve=null,this.reject=null,this.id=kv(),this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t}),Object.freeze(this)}function yp(e,t,n){var r;if(typeof e.querySelector<"u"&&(r=e.querySelector(`${t}[*|type="${n}"]`)),!r||r.length===0){r=ql(e,t);for(var a=0;a<r.length;a++)if(r[a].getAttributeNS("http://www.idpf.org/2007/ops","type")===n||r[a].getAttribute("epub:type")===n)return r[a]}else return r}function R1(e){for(var t=[],n=e.childNodes,r=0;r<n.length;r++){let a=n[r];a.nodeType===1&&t.push(a)}return t}function J1(e){for(var t=[e];e;e=e.parentNode)t.unshift(e);return t}function rs(e,t,n){for(var r=[],a=e.childNodes,l=0;l<a.length;l++){let o=a[l];if(o.nodeType===1&&o.nodeName.toLowerCase()===t){if(n)return o;r.push(o)}}if(!n)return r}function SO(e,t){let n;if(!(e===null||t===""))for(n=e.parentNode;n.nodeType===1;){if(n.tagName.toLowerCase()===t)return n;n=n.parentNode}}class W4{constructor(){this.collapsed=!1,this.commonAncestorContainer=void 0,this.endContainer=void 0,this.endOffset=void 0,this.startContainer=void 0,this.startOffset=void 0}setStart(t,n){this.startContainer=t,this.startOffset=n,this.endContainer?this.commonAncestorContainer=this._commonAncestorContainer():this.collapse(!0),this._checkCollapsed()}setEnd(t,n){this.endContainer=t,this.endOffset=n,this.startContainer?(this.collapsed=!1,this.commonAncestorContainer=this._commonAncestorContainer()):this.collapse(!1),this._checkCollapsed()}collapse(t){this.collapsed=!0,t?(this.endContainer=this.startContainer,this.endOffset=this.startOffset,this.commonAncestorContainer=this.startContainer.parentNode):(this.startContainer=this.endContainer,this.startOffset=this.endOffset,this.commonAncestorContainer=this.endOffset.parentNode)}selectNode(t){let n=t.parentNode,r=Array.prototype.indexOf.call(n.childNodes,t);this.setStart(n,r),this.setEnd(n,r+1)}selectNodeContents(t){t.childNodes[t.childNodes-1];let n=t.nodeType===3?t.textContent.length:parent.childNodes.length;this.setStart(t,0),this.setEnd(t,n)}_commonAncestorContainer(t,n){var r=J1(t||this.startContainer),a=J1(n||this.endContainer);if(r[0]==a[0]){for(var l=0;l<r.length;l++)if(r[l]!=a[l])return r[l-1]}}_checkCollapsed(){this.startContainer===this.endContainer&&this.startOffset===this.endOffset?this.collapsed=!0:this.collapsed=!1}toString(){}}const yO=Object.freeze(Object.defineProperty({__proto__:null,requestAnimationFrame:dm,uuid:kv,documentHeight:bO,isElement:f4,isNumber:Un,isFloat:p4,prefixed:ts,defaults:v4,extend:or,insert:hO,locationOf:Js,indexOfSorted:vp,bounds:Wf,borders:bp,nodeBounds:U1,windowBounds:hp,indexOfNode:fm,indexOfTextNode:mO,indexOfElementNode:b4,isXml:Sc,createBlob:h4,createBlobUrl:mp,revokeBlobUrl:m4,createBase64Url:O1,type:S4,parse:_a,qs:Wn,qsa:ql,qsp:ns,sprint:Sp,treeWalker:y4,walk:pm,blob2base64:A4,defer:on,querySelectorByType:yp,findChildren:R1,parents:J1,filterChildren:rs,getParentByTagName:SO,RangeObject:W4},Symbol.toStringTag,{value:"Module"}));if(!k4)var k4={cwd:function(){return"/"}};function Ha(e){if(typeof e!="string")throw new TypeError("Path must be a string. Received "+e)}function zy(e,t){for(var n="",r=-1,a=0,l,o=0;o<=e.length;++o){if(o<e.length)l=e.charCodeAt(o);else{if(l===47)break;l=47}if(l===47){if(!(r===o-1||a===1))if(r!==o-1&&a===2){if(n.length<2||n.charCodeAt(n.length-1)!==46||n.charCodeAt(n.length-2)!==46){if(n.length>2){for(var i=n.length-1,s=i;s>=0&&n.charCodeAt(s)!==47;--s);if(s!==i){s===-1?n="":n=n.slice(0,s),r=o,a=0;continue}}else if(n.length===2||n.length===1){n="",r=o,a=0;continue}}t&&(n.length>0?n+="/..":n="..")}else n.length>0?n+="/"+e.slice(r+1,o):n=e.slice(r+1,o);r=o,a=0}else l===46&&a!==-1?++a:a=-1}return n}function AO(e,t){var n=t.dir||t.root,r=t.base||(t.name||"")+(t.ext||"");return n?n===t.root?n+r:n+e+r:r}var kf={resolve:function(){for(var t="",n=!1,r,a=arguments.length-1;a>=-1&&!n;a--){var l;a>=0?l=arguments[a]:(r===void 0&&(r=k4.cwd()),l=r),Ha(l),l.length!==0&&(t=l+"/"+t,n=l.charCodeAt(0)===47)}return t=zy(t,!n),n?t.length>0?"/"+t:"/":t.length>0?t:"."},normalize:function(t){if(Ha(t),t.length===0)return".";var n=t.charCodeAt(0)===47,r=t.charCodeAt(t.length-1)===47;return t=zy(t,!n),t.length===0&&!n&&(t="."),t.length>0&&r&&(t+="/"),n?"/"+t:t},isAbsolute:function(t){return Ha(t),t.length>0&&t.charCodeAt(0)===47},join:function(){if(arguments.length===0)return".";for(var t,n=0;n<arguments.length;++n){var r=arguments[n];Ha(r),r.length>0&&(t===void 0?t=r:t+="/"+r)}return t===void 0?".":kf.normalize(t)},relative:function(t,n){if(Ha(t),Ha(n),t===n||(t=kf.resolve(t),n=kf.resolve(n),t===n))return"";for(var r=1;r<t.length&&t.charCodeAt(r)===47;++r);for(var a=t.length,l=a-r,o=1;o<n.length&&n.charCodeAt(o)===47;++o);for(var i=n.length,s=i-o,u=l<s?l:s,d=-1,f=0;f<=u;++f){if(f===u){if(s>u){if(n.charCodeAt(o+f)===47)return n.slice(o+f+1);if(f===0)return n.slice(o+f)}else l>u&&(t.charCodeAt(r+f)===47?d=f:f===0&&(d=0));break}var p=t.charCodeAt(r+f),b=n.charCodeAt(o+f);if(p!==b)break;p===47&&(d=f)}var A="";for(f=r+d+1;f<=a;++f)(f===a||t.charCodeAt(f)===47)&&(A.length===0?A+="..":A+="/..");return A.length>0?A+n.slice(o+d):(o+=d,n.charCodeAt(o)===47&&++o,n.slice(o))},_makeLong:function(t){return t},dirname:function(t){if(Ha(t),t.length===0)return".";for(var n=t.charCodeAt(0),r=n===47,a=-1,l=!0,o=t.length-1;o>=1;--o)if(n=t.charCodeAt(o),n===47){if(!l){a=o;break}}else l=!1;return a===-1?r?"/":".":r&&a===1?"//":t.slice(0,a)},basename:function(t,n){if(n!==void 0&&typeof n!="string")throw new TypeError('"ext" argument must be a string');Ha(t);var r=0,a=-1,l=!0,o;if(n!==void 0&&n.length>0&&n.length<=t.length){if(n.length===t.length&&n===t)return"";var i=n.length-1,s=-1;for(o=t.length-1;o>=0;--o){var u=t.charCodeAt(o);if(u===47){if(!l){r=o+1;break}}else s===-1&&(l=!1,s=o+1),i>=0&&(u===n.charCodeAt(i)?--i===-1&&(a=o):(i=-1,a=s))}return r===a?a=s:a===-1&&(a=t.length),t.slice(r,a)}else{for(o=t.length-1;o>=0;--o)if(t.charCodeAt(o)===47){if(!l){r=o+1;break}}else a===-1&&(l=!1,a=o+1);return a===-1?"":t.slice(r,a)}},extname:function(t){Ha(t);for(var n=-1,r=0,a=-1,l=!0,o=0,i=t.length-1;i>=0;--i){var s=t.charCodeAt(i);if(s===47){if(!l){r=i+1;break}continue}a===-1&&(l=!1,a=i+1),s===46?n===-1?n=i:o!==1&&(o=1):n!==-1&&(o=-1)}return n===-1||a===-1||o===0||o===1&&n===a-1&&n===r+1?"":t.slice(n,a)},format:function(t){if(t===null||typeof t!="object")throw new TypeError('Parameter "pathObject" must be an object, not '+typeof t);return AO("/",t)},parse:function(t){Ha(t);var n={root:"",dir:"",base:"",ext:"",name:""};if(t.length===0)return n;var r=t.charCodeAt(0),a=r===47,l;a?(n.root="/",l=1):l=0;for(var o=-1,i=0,s=-1,u=!0,d=t.length-1,f=0;d>=l;--d){if(r=t.charCodeAt(d),r===47){if(!u){i=d+1;break}continue}s===-1&&(u=!1,s=d+1),r===46?o===-1?o=d:f!==1&&(f=1):o!==-1&&(f=-1)}return o===-1||s===-1||f===0||f===1&&o===s-1&&o===i+1?s!==-1&&(i===0&&a?n.base=n.name=t.slice(1,s):n.base=n.name=t.slice(i,s)):(i===0&&a?(n.name=t.slice(1,o),n.base=t.slice(1,s)):(n.name=t.slice(i,o),n.base=t.slice(i,s)),n.ext=t.slice(o,s)),i>0?n.dir=t.slice(0,i-1):a&&(n.dir="/"),n},sep:"/",delimiter:":",posix:null},lo=kf;class Ul{constructor(t){var n,r;n=t.indexOf("://"),n>-1&&(t=new URL(t).pathname),r=this.parse(t),this.path=t,this.isDirectory(t)?this.directory=t:this.directory=r.dir+"/",this.filename=r.base,this.extension=r.ext.slice(1)}parse(t){return lo.parse(t)}isAbsolute(t){return lo.isAbsolute(t||this.path)}isDirectory(t){return t.charAt(t.length-1)==="/"}resolve(t){return lo.resolve(this.directory,t)}relative(t){var n=t&&t.indexOf("://")>-1;return n?t:lo.relative(this.directory,t)}splitPath(t){return this.splitPathRe.exec(t).slice(1)}toString(){return this.path}}class Ta{constructor(t,n){var r=t.indexOf("://")>-1,a=t,l;if(this.Url=void 0,this.href=t,this.protocol="",this.origin="",this.hash="",this.hash="",this.search="",this.base=n,!r&&n!==!1&&typeof n!="string"&&window&&window.location&&(this.base=window.location.href),r||this.base)try{this.base?this.Url=new URL(t,this.base):this.Url=new URL(t),this.href=this.Url.href,this.protocol=this.Url.protocol,this.origin=this.Url.origin,this.hash=this.Url.hash,this.search=this.Url.search,a=this.Url.pathname+(this.Url.search?this.Url.search:"")}catch{this.Url=void 0,this.base&&(l=new Ul(this.base),a=l.resolve(a))}this.Path=new Ul(a),this.directory=this.Path.directory,this.filename=this.Path.filename,this.extension=this.Path.extension}path(){return this.Path}resolve(t){var n=t.indexOf("://")>-1,r;return n?t:(r=lo.resolve(this.directory,t),this.origin+r)}relative(t){return lo.relative(t,this.directory)}toString(){return this.href}}const Mi=1,ua=3,WO=9;class sn{constructor(t,n,r){var a;if(this.str="",this.base={},this.spinePos=0,this.range=!1,this.path={},this.start=null,this.end=null,!(this instanceof sn))return new sn(t,n,r);if(typeof n=="string"?this.base=this.parseComponent(n):typeof n=="object"&&n.steps&&(this.base=n),a=this.checkType(t),a==="string")return this.str=t,or(this,this.parse(t));if(a==="range")return or(this,this.fromRange(t,this.base,r));if(a==="node")return or(this,this.fromNode(t,this.base,r));if(a==="EpubCFI"&&t.path)return t;if(t)throw new TypeError("not a valid argument for EpubCFI");return this}checkType(t){return this.isCfiString(t)?"string":t&&typeof t=="object"&&(S4(t)==="Range"||typeof t.startContainer<"u")?"range":t&&typeof t=="object"&&typeof t.nodeType<"u"?"node":t&&typeof t=="object"&&t instanceof sn?"EpubCFI":!1}parse(t){var n={spinePos:-1,range:!1,base:{},path:{},start:null,end:null},r,a,l;return typeof t!="string"?{spinePos:-1}:(t.indexOf("epubcfi(")===0&&t[t.length-1]===")"&&(t=t.slice(8,t.length-1)),r=this.getChapterComponent(t),r?(n.base=this.parseComponent(r),a=this.getPathComponent(t),n.path=this.parseComponent(a),l=this.getRange(t),l&&(n.range=!0,n.start=this.parseComponent(l[0]),n.end=this.parseComponent(l[1])),n.spinePos=n.base.steps[1].index,n):{spinePos:-1})}parseComponent(t){var n={steps:[],terminal:{offset:null,assertion:null}},r=t.split(":"),a=r[0].split("/"),l;return r.length>1&&(l=r[1],n.terminal=this.parseTerminal(l)),a[0]===""&&a.shift(),n.steps=a.map(function(o){return this.parseStep(o)}.bind(this)),n}parseStep(t){var n,r,a,l,o;if(l=t.match(/\[(.*)\]/),l&&l[1]&&(o=l[1]),r=parseInt(t),!isNaN(r))return r%2===0?(n="element",a=r/2-1):(n="text",a=(r-1)/2),{type:n,index:a,id:o||null}}parseTerminal(t){var n,r,a=t.match(/\[(.*)\]/);return a&&a[1]?(n=parseInt(t.split("[")[0]),r=a[1]):n=parseInt(t),Un(n)||(n=null),{offset:n,assertion:r}}getChapterComponent(t){var n=t.split("!");return n[0]}getPathComponent(t){var n=t.split("!");if(n[1])return n[1].split(",")[0]}getRange(t){var n=t.split(",");return n.length===3?[n[1],n[2]]:!1}getCharecterOffsetComponent(t){var n=t.split(":");return n[1]||""}joinSteps(t){return t?t.map(function(n){var r="";return n.type==="element"&&(r+=(n.index+1)*2),n.type==="text"&&(r+=1+2*n.index),n.id&&(r+="["+n.id+"]"),r}).join("/"):""}segmentString(t){var n="/";return n+=this.joinSteps(t.steps),t.terminal&&t.terminal.offset!=null&&(n+=":"+t.terminal.offset),t.terminal&&t.terminal.assertion!=null&&(n+="["+t.terminal.assertion+"]"),n}toString(){var t="epubcfi(";return t+=this.segmentString(this.base),t+="!",t+=this.segmentString(this.path),this.range&&this.start&&(t+=",",t+=this.segmentString(this.start)),this.range&&this.end&&(t+=",",t+=this.segmentString(this.end)),t+=")",t}compare(t,n){var r,a,l,o;if(typeof t=="string"&&(t=new sn(t)),typeof n=="string"&&(n=new sn(n)),t.spinePos>n.spinePos)return 1;if(t.spinePos<n.spinePos)return-1;t.range?(r=t.path.steps.concat(t.start.steps),l=t.start.terminal):(r=t.path.steps,l=t.path.terminal),n.range?(a=n.path.steps.concat(n.start.steps),o=n.start.terminal):(a=n.path.steps,o=n.path.terminal);for(var i=0;i<r.length;i++){if(!r[i])return-1;if(!a[i]||r[i].index>a[i].index)return 1;if(r[i].index<a[i].index)return-1}return r.length<a.length?-1:l.offset>o.offset?1:l.offset<o.offset?-1:0}step(t){var n=t.nodeType===ua?"text":"element";return{id:t.id,tagName:t.tagName,type:n,index:this.position(t)}}filteredStep(t,n){var r=this.filter(t,n),a;if(!!r)return a=r.nodeType===ua?"text":"element",{id:r.id,tagName:r.tagName,type:a,index:this.filteredPosition(r,n)}}pathTo(t,n,r){for(var a={steps:[],terminal:{offset:null,assertion:null}},l=t,o;l&&l.parentNode&&l.parentNode.nodeType!=WO;)r?o=this.filteredStep(l,r):o=this.step(l),o&&a.steps.unshift(o),l=l.parentNode;return n!=null&&n>=0&&(a.terminal.offset=n,a.steps[a.steps.length-1].type!="text"&&a.steps.push({type:"text",index:0})),a}equalStep(t,n){return!t||!n?!1:t.index===n.index&&t.id===n.id&&t.type===n.type}fromRange(t,n,r){var a={range:!1,base:{},path:{},start:null,end:null},l=t.startContainer,o=t.endContainer,i=t.startOffset,s=t.endOffset,u=!1;if(r&&(u=l.ownerDocument.querySelector("."+r)!=null),typeof n=="string"?(a.base=this.parseComponent(n),a.spinePos=a.base.steps[1].index):typeof n=="object"&&(a.base=n),t.collapsed)u&&(i=this.patchOffset(l,i,r)),a.path=this.pathTo(l,i,r);else{a.range=!0,u&&(i=this.patchOffset(l,i,r)),a.start=this.pathTo(l,i,r),u&&(s=this.patchOffset(o,s,r)),a.end=this.pathTo(o,s,r),a.path={steps:[],terminal:null};var d=a.start.steps.length,f;for(f=0;f<d&&this.equalStep(a.start.steps[f],a.end.steps[f]);f++)f===d-1?a.start.terminal===a.end.terminal&&(a.path.steps.push(a.start.steps[f]),a.range=!1):a.path.steps.push(a.start.steps[f]);a.start.steps=a.start.steps.slice(a.path.steps.length),a.end.steps=a.end.steps.slice(a.path.steps.length)}return a}fromNode(t,n,r){var a={range:!1,base:{},path:{},start:null,end:null};return typeof n=="string"?(a.base=this.parseComponent(n),a.spinePos=a.base.steps[1].index):typeof n=="object"&&(a.base=n),a.path=this.pathTo(t,null,r),a}filter(t,n){var r,a,l,o,i,s=!1;return t.nodeType===ua?(s=!0,l=t.parentNode,r=t.parentNode.classList.contains(n)):(s=!1,r=t.classList.contains(n)),r&&s?(o=l.previousSibling,i=l.nextSibling,o&&o.nodeType===ua?a=o:i&&i.nodeType===ua&&(a=i),a||t):r&&!s?!1:t}patchOffset(t,n,r){if(t.nodeType!=ua)throw new Error("Anchor must be a text node");var a=t,l=n;for(t.parentNode.classList.contains(r)&&(a=t.parentNode);a.previousSibling;){if(a.previousSibling.nodeType===Mi)if(a.previousSibling.classList.contains(r))l+=a.previousSibling.textContent.length;else break;else l+=a.previousSibling.textContent.length;a=a.previousSibling}return l}normalizedMap(t,n,r){var a={},l=-1,o,i=t.length,s,u;for(o=0;o<i;o++)s=t[o].nodeType,s===Mi&&t[o].classList.contains(r)&&(s=ua),o>0&&s===ua&&u===ua?a[o]=l:n===s&&(l=l+1,a[o]=l),u=s;return a}position(t){var n,r;return t.nodeType===Mi?(n=t.parentNode.children,n||(n=R1(t.parentNode)),r=Array.prototype.indexOf.call(n,t)):(n=this.textNodes(t.parentNode),r=n.indexOf(t)),r}filteredPosition(t,n){var r,a,l;return t.nodeType===Mi?(r=t.parentNode.children,l=this.normalizedMap(r,Mi,n)):(r=t.parentNode.childNodes,t.parentNode.classList.contains(n)&&(t=t.parentNode,r=t.parentNode.childNodes),l=this.normalizedMap(r,ua,n)),a=Array.prototype.indexOf.call(r,t),l[a]}stepsToXpath(t){var n=[".","*"];return t.forEach(function(r){var a=r.index+1;r.id?n.push("*[position()="+a+" and @id='"+r.id+"']"):r.type==="text"?n.push("text()["+a+"]"):n.push("*["+a+"]")}),n.join("/")}stepsToQuerySelector(t){var n=["html"];return t.forEach(function(r){var a=r.index+1;r.id?n.push("#"+r.id):r.type==="text"||n.push("*:nth-child("+a+")")}),n.join(">")}textNodes(t,n){return Array.prototype.slice.call(t.childNodes).filter(function(r){return r.nodeType===ua?!0:!!(n&&r.classList.contains(n))})}walkToNode(t,n,r){var a=n||document,l=a.documentElement,o,i,s=t.length,u;for(u=0;u<s&&(i=t[u],i.type==="element"?i.id?l=a.getElementById(i.id):(o=l.children||R1(l),l=o[i.index]):i.type==="text"&&(l=this.textNodes(l,r)[i.index]),!!l);u++);return l}findNode(t,n,r){var a=n||document,l,o;return!r&&typeof a.evaluate<"u"?(o=this.stepsToXpath(t),l=a.evaluate(o,a,null,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue):r?l=this.walkToNode(t,a,r):l=this.walkToNode(t,a),l}fixMiss(t,n,r,a){var l=this.findNode(t.slice(0,-1),r,a),o=l.childNodes,i=this.normalizedMap(o,ua,a),s,u,d=t[t.length-1].index;for(let f in i){if(!i.hasOwnProperty(f))return;if(i[f]===d)if(s=o[f],u=s.textContent.length,n>u)n=n-u;else{s.nodeType===Mi?l=s.childNodes[0]:l=s;break}}return{container:l,offset:n}}toRange(t,n){var r=t||document,a,l,o,i,s,u=this,d,f,p=n?r.querySelector("."+n)!=null:!1,b;if(typeof r.createRange<"u"?a=r.createRange():a=new W4,u.range?(l=u.start,d=u.path.steps.concat(l.steps),i=this.findNode(d,r,p?n:null),o=u.end,f=u.path.steps.concat(o.steps),s=this.findNode(f,r,p?n:null)):(l=u.path,d=u.path.steps,i=this.findNode(u.path.steps,r,p?n:null)),i)try{l.terminal.offset!=null?a.setStart(i,l.terminal.offset):a.setStart(i,0)}catch{b=this.fixMiss(d,l.terminal.offset,r,p?n:null),a.setStart(b.container,b.offset)}else return console.log("No startContainer found for",this.toString()),null;if(s)try{o.terminal.offset!=null?a.setEnd(s,o.terminal.offset):a.setEnd(s,0)}catch{b=this.fixMiss(f,u.end.terminal.offset,r,p?n:null),a.setEnd(b.container,b.offset)}return a}isCfiString(t){return typeof t=="string"&&t.indexOf("epubcfi(")===0&&t[t.length-1]===")"}generateChapterComponent(t,n,r){var a=parseInt(n),l=(t+1)*2,o="/"+l+"/";return o+=(a+1)*2,r&&(o+="["+r+"]"),o}collapse(t){!this.range||(this.range=!1,t?(this.path.steps=this.path.steps.concat(this.start.steps),this.path.terminal=this.start.terminal):(this.path.steps=this.path.steps.concat(this.end.steps),this.path.terminal=this.end.terminal))}}class Ka{constructor(t){this.context=t||this,this.hooks=[]}register(){for(var t=0;t<arguments.length;++t)if(typeof arguments[t]=="function")this.hooks.push(arguments[t]);else for(var n=0;n<arguments[t].length;++n)this.hooks.push(arguments[t][n])}deregister(t){let n;for(let r=0;r<this.hooks.length;r++)if(n=this.hooks[r],n===t){this.hooks.splice(r,1);break}}trigger(){var t=arguments,n=this.context,r=[];return this.hooks.forEach(function(a){try{var l=a.apply(n,t)}catch(o){console.log(o)}l&&typeof l.then=="function"&&r.push(l)}),Promise.all(r)}list(){return this.hooks}clear(){return this.hooks=[]}}function V4(e,t){var n,r,a=t.url,l=a.indexOf("://")>-1;!e||(r=Wn(e,"head"),n=Wn(r,"base"),n||(n=e.createElement("base"),r.insertBefore(n,r.firstChild)),!l&&window&&window.location&&(a=window.location.origin+a),n.setAttribute("href",a))}function kO(e,t){var n,r,a=t.canonical;!e||(n=Wn(e,"head"),r=Wn(n,"link[rel='canonical']"),r?r.setAttribute("href",a):(r=e.createElement("link"),r.setAttribute("rel","canonical"),r.setAttribute("href",a),n.appendChild(r)))}function VO(e,t){var n,r,a=t.idref;!e||(n=Wn(e,"head"),r=Wn(n,"link[property='dc.identifier']"),r?r.setAttribute("content",a):(r=e.createElement("meta"),r.setAttribute("name","dc.identifier"),r.setAttribute("content",a),n.appendChild(r)))}function PO(e,t){var n=e.querySelectorAll("a[href]");if(!!n.length)for(var r=Wn(e.ownerDocument,"base"),a=r?r.getAttribute("href"):void 0,l=function(i){var s=i.getAttribute("href");if(s.indexOf("mailto:")!==0){var u=s.indexOf("://")>-1;if(u)i.setAttribute("target","_blank");else{var d;try{d=new Ta(s,a)}catch{}i.onclick=function(){return d&&d.hash?t(d.Path.path+d.hash):t(d?d.Path.path:s),!1}}}}.bind(this),o=0;o<n.length;o++)l(n[o])}function Hy(e,t,n){return t.forEach(function(r,a){r&&n[a]&&(r=r.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),e=e.replace(new RegExp(r,"g"),n[a]))}),e}function yc(e,t,n,r){var a=typeof window<"u"?window.URL:!1,l=a?"blob":"arraybuffer",o=new on,i=new XMLHttpRequest,s=XMLHttpRequest.prototype,u;"overrideMimeType"in s||Object.defineProperty(s,"overrideMimeType",{value:function(){}}),n&&(i.withCredentials=!0),i.onreadystatechange=f,i.onerror=d,i.open("GET",e,!0);for(u in r)i.setRequestHeader(u,r[u]);t=="json"&&i.setRequestHeader("Accept","application/json"),t||(t=new Ul(e).extension),t=="blob"&&(i.responseType=l),Sc(t)&&i.overrideMimeType("text/xml"),t=="binary"&&(i.responseType="arraybuffer"),i.send();function d(p){o.reject(p)}function f(){if(this.readyState===XMLHttpRequest.DONE){var p=!1;if((this.responseType===""||this.responseType==="document")&&(p=this.responseXML),this.status===200||this.status===0||p){var b;if(!this.response&&!p)return o.reject({status:this.status,message:"Empty Response",stack:new Error().stack}),o.promise;if(this.status===403)return o.reject({status:this.status,response:this.response,message:"Forbidden",stack:new Error().stack}),o.promise;p?b=this.responseXML:Sc(t)?b=_a(this.response,"text/xml"):t=="xhtml"?b=_a(this.response,"application/xhtml+xml"):t=="html"||t=="htm"?b=_a(this.response,"text/html"):t=="json"?b=JSON.parse(this.response):t=="blob"?a?b=this.response:b=new Blob([this.response]):b=this.response,o.resolve(b)}else o.reject({status:this.status,message:this.response,stack:new Error().stack})}}return o.promise}class TO{constructor(t,n){this.idref=t.idref,this.linear=t.linear==="yes",this.properties=t.properties,this.index=t.index,this.href=t.href,this.url=t.url,this.canonical=t.canonical,this.next=t.next,this.prev=t.prev,this.cfiBase=t.cfiBase,n?this.hooks=n:(this.hooks={},this.hooks.serialize=new Ka(this),this.hooks.content=new Ka(this)),this.document=void 0,this.contents=void 0,this.output=void 0}load(t){var n=t||this.request||yc,r=new on,a=r.promise;return this.contents?r.resolve(this.contents):n(this.url).then(function(l){return this.document=l,this.contents=l.documentElement,this.hooks.content.trigger(this.document,this)}.bind(this)).then(function(){r.resolve(this.contents)}.bind(this)).catch(function(l){r.reject(l)}),a}base(){return V4(this.document,this)}render(t){var n=new on,r=n.promise;return this.output,this.load(t).then(function(a){var l=typeof navigator<"u"&&navigator.userAgent||"",o=l.indexOf("Trident")>=0,i;typeof XMLSerializer>"u"||o?i=c4:i=XMLSerializer;var s=new i;return this.output=s.serializeToString(a),this.output}.bind(this)).then(function(){return this.hooks.serialize.trigger(this.output,this)}.bind(this)).then(function(){n.resolve(this.output)}.bind(this)).catch(function(a){n.reject(a)}),r}find(t){var n=this,r=[],a=t.toLowerCase(),l=function(o){for(var i=o.textContent.toLowerCase(),s=n.document.createRange(),u,d,f=-1,p,b=150;d!=-1;)d=i.indexOf(a,f+1),d!=-1&&(s=n.document.createRange(),s.setStart(o,d),s.setEnd(o,d+a.length),u=n.cfiFromRange(s),o.textContent.length<b?p=o.textContent:(p=o.textContent.substring(d-b/2,d+b/2),p="..."+p+"..."),r.push({cfi:u,excerpt:p})),f=d};return Sp(n.document,function(o){l(o)}),r}search(t,n=5){if(typeof document.createTreeWalker>"u")return this.find(t);let r=[];const a=150,l=this,o=t.toLowerCase(),i=function(f){const A=f.reduce((h,m)=>h+m.textContent,"").toLowerCase().indexOf(o);if(A!=-1){const m=A+o.length;let v=0,S=0;if(A<f[0].length){let y;for(;v<f.length-1&&(S+=f[v].length,!(m<=S));)v+=1;let W=f[0],k=f[v],V=l.document.createRange();V.setStart(W,A);let T=f.slice(0,v).reduce((x,g)=>x+g.textContent.length,0);V.setEnd(k,T>m?m:m-T),y=l.cfiFromRange(V);let P=f.slice(0,v+1).reduce((x,g)=>x+g.textContent,"");P.length>a&&(P=P.substring(A-a/2,A+a/2),P="..."+P+"..."),r.push({cfi:y,excerpt:P})}}},s=document.createTreeWalker(l.document,NodeFilter.SHOW_TEXT,null,!1);let u,d=[];for(;u=s.nextNode();)d.push(u),d.length==n&&(i(d.slice(0,n)),d=d.slice(1,n));return d.length>0&&i(d),r}reconcileLayoutSettings(t){var n={layout:t.layout,spread:t.spread,orientation:t.orientation};return this.properties.forEach(function(r){var a=r.replace("rendition:",""),l=a.indexOf("-"),o,i;l!=-1&&(o=a.slice(0,l),i=a.slice(l+1),n[o]=i)}),n}cfiFromRange(t){return new sn(t,this.cfiBase).toString()}cfiFromElement(t){return new sn(t,this.cfiBase).toString()}unload(){this.document=void 0,this.contents=void 0,this.output=void 0}destroy(){this.unload(),this.hooks.serialize.clear(),this.hooks.content.clear(),this.hooks=void 0,this.idref=void 0,this.linear=void 0,this.properties=void 0,this.index=void 0,this.href=void 0,this.url=void 0,this.next=void 0,this.prev=void 0,this.cfiBase=void 0}}class KO{constructor(){this.spineItems=[],this.spineByHref={},this.spineById={},this.hooks={},this.hooks.serialize=new Ka,this.hooks.content=new Ka,this.hooks.content.register(V4),this.hooks.content.register(kO),this.hooks.content.register(VO),this.epubcfi=new sn,this.loaded=!1,this.items=void 0,this.manifest=void 0,this.spineNodeIndex=void 0,this.baseUrl=void 0,this.length=void 0}unpack(t,n,r){this.items=t.spine,this.manifest=t.manifest,this.spineNodeIndex=t.spineNodeIndex,this.baseUrl=t.baseUrl||t.basePath||"",this.length=this.items.length,this.items.forEach((a,l)=>{var o=this.manifest[a.idref],i;a.index=l,a.cfiBase=this.epubcfi.generateChapterComponent(this.spineNodeIndex,a.index,a.id),a.href&&(a.url=n(a.href,!0),a.canonical=r(a.href)),o&&(a.href=o.href,a.url=n(a.href,!0),a.canonical=r(a.href),o.properties.length&&a.properties.push.apply(a.properties,o.properties)),a.linear==="yes"?(a.prev=function(){let s=a.index;for(;s>0;){let u=this.get(s-1);if(u&&u.linear)return u;s-=1}}.bind(this),a.next=function(){let s=a.index;for(;s<this.spineItems.length-1;){let u=this.get(s+1);if(u&&u.linear)return u;s+=1}}.bind(this)):(a.prev=function(){},a.next=function(){}),i=new TO(a,this.hooks),this.append(i)}),this.loaded=!0}get(t){var n=0;if(typeof t>"u")for(;n<this.spineItems.length;){let r=this.spineItems[n];if(r&&r.linear)break;n+=1}else this.epubcfi.isCfiString(t)?n=new sn(t).spinePos:typeof t=="number"||isNaN(t)===!1?n=t:typeof t=="string"&&t.indexOf("#")===0?n=this.spineById[t.substring(1)]:typeof t=="string"&&(t=t.split("#")[0],n=this.spineByHref[t]||this.spineByHref[encodeURI(t)]);return this.spineItems[n]||null}append(t){var n=this.spineItems.length;return t.index=n,this.spineItems.push(t),this.spineByHref[decodeURI(t.href)]=n,this.spineByHref[encodeURI(t.href)]=n,this.spineByHref[t.href]=n,this.spineById[t.idref]=n,n}prepend(t){return this.spineByHref[t.href]=0,this.spineById[t.idref]=0,this.spineItems.forEach(function(n,r){n.index=r}),0}remove(t){var n=this.spineItems.indexOf(t);if(n>-1)return delete this.spineByHref[t.href],delete this.spineById[t.idref],this.spineItems.splice(n,1)}each(){return this.spineItems.forEach.apply(this.spineItems,arguments)}first(){let t=0;do{let n=this.get(t);if(n&&n.linear)return n;t+=1}while(t<this.spineItems.length)}last(){let t=this.spineItems.length-1;do{let n=this.get(t);if(n&&n.linear)return n;t-=1}while(t>=0)}destroy(){this.each(t=>t.destroy()),this.spineItems=void 0,this.spineByHref=void 0,this.spineById=void 0,this.hooks.serialize.clear(),this.hooks.content.clear(),this.hooks=void 0,this.epubcfi=void 0,this.loaded=!1,this.items=void 0,this.manifest=void 0,this.spineNodeIndex=void 0,this.baseUrl=void 0,this.length=void 0}}class vm{constructor(t){this._q=[],this.context=t,this.tick=dm,this.running=!1,this.paused=!1}enqueue(){var t,n,r,a=[].shift.call(arguments),l=arguments;if(!a)throw new Error("No Task Provided");return typeof a=="function"?(t=new on,n=t.promise,r={task:a,args:l,deferred:t,promise:n}):r={promise:a},this._q.push(r),this.paused==!1&&!this.running&&this.run(),r.promise}dequeue(){var t,n,r;if(this._q.length&&!this.paused){if(t=this._q.shift(),n=t.task,n)return r=n.apply(this.context,t.args),r&&typeof r.then=="function"?r.then(function(){t.deferred.resolve.apply(this.context,arguments)}.bind(this),function(){t.deferred.reject.apply(this.context,arguments)}.bind(this)):(t.deferred.resolve.apply(this.context,r),t.promise);if(t.promise)return t.promise}else return t=new on,t.deferred.resolve(),t.promise}dump(){for(;this._q.length;)this.dequeue()}run(){return this.running||(this.running=!0,this.defered=new on),this.tick.call(window,()=>{this._q.length?this.dequeue().then(function(){this.run()}.bind(this)):(this.defered.resolve(),this.running=void 0)}),this.paused==!0&&(this.paused=!1),this.defered.promise}flush(){if(this.running)return this.running;if(this._q.length)return this.running=this.dequeue().then(function(){return this.running=void 0,this.flush()}.bind(this)),this.running}clear(){this._q=[]}length(){return this._q.length}pause(){this.paused=!0}stop(){this._q=[],this.running=!1,this.paused=!0}}const Vv="0.3",Vf=["keydown","keyup","keypressed","mouseup","mousedown","mousemove","click","touchend","touchstart","touchmove"],Kt={BOOK:{OPEN_FAILED:"openFailed"},CONTENTS:{EXPAND:"expand",RESIZE:"resize",SELECTED:"selected",SELECTED_RANGE:"selectedRange",LINK_CLICKED:"linkClicked"},LOCATIONS:{CHANGED:"changed"},MANAGERS:{RESIZE:"resize",RESIZED:"resized",ORIENTATION_CHANGE:"orientationchange",ADDED:"added",SCROLL:"scroll",SCROLLED:"scrolled",REMOVED:"removed"},VIEWS:{AXIS:"axis",WRITING_MODE:"writingMode",LOAD_ERROR:"loaderror",RENDERED:"rendered",RESIZED:"resized",DISPLAYED:"displayed",SHOWN:"shown",HIDDEN:"hidden",MARK_CLICKED:"markClicked"},RENDITION:{STARTED:"started",ATTACHED:"attached",DISPLAYED:"displayed",DISPLAY_ERROR:"displayerror",RENDERED:"rendered",REMOVED:"removed",RESIZED:"resized",ORIENTATION_CHANGE:"orientationchange",LOCATION_CHANGED:"locationChanged",RELOCATED:"relocated",MARK_CLICKED:"markClicked",SELECTED:"selected",LAYOUT:"layout"},LAYOUT:{UPDATED:"updated"},ANNOTATION:{ATTACH:"attach",DETACH:"detach"}};class P4{constructor(t,n,r){this.spine=t,this.request=n,this.pause=r||100,this.q=new vm(this),this.epubcfi=new sn,this._locations=[],this._locationsWords=[],this.total=0,this.break=150,this._current=0,this._wordCounter=0,this.currentLocation="",this._currentCfi="",this.processingTimeout=void 0}generate(t){return t&&(this.break=t),this.q.pause(),this.spine.each(function(n){n.linear&&this.q.enqueue(this.process.bind(this),n)}.bind(this)),this.q.run().then(function(){return this.total=this._locations.length-1,this._currentCfi&&(this.currentLocation=this._currentCfi),this._locations}.bind(this))}createRange(){return{startContainer:void 0,startOffset:void 0,endContainer:void 0,endOffset:void 0}}process(t){return t.load(this.request).then(function(n){var r=new on,a=this.parse(n,t.cfiBase);return this._locations=this._locations.concat(a),t.unload(),this.processingTimeout=setTimeout(()=>r.resolve(a),this.pause),r.promise}.bind(this))}parse(t,n,r){var a=[],l,o=t.ownerDocument,i=Wn(o,"body"),s=0,u,d=r||this.break,f=function(p){var b=p.length,A,h=0;if(p.textContent.trim().length===0)return!1;for(s==0&&(l=this.createRange(),l.startContainer=p,l.startOffset=0),A=d-s,A>b&&(s+=b,h=b);h<b;)if(A=d-s,s===0&&(h+=1,l=this.createRange(),l.startContainer=p,l.startOffset=h),h+A>=b)s+=b-h,h=b;else{h+=A,l.endContainer=p,l.endOffset=h;let m=new sn(l,n).toString();a.push(m),s=0}u=p};if(Sp(i,f.bind(this)),l&&l.startContainer&&u){l.endContainer=u,l.endOffset=u.length;let p=new sn(l,n).toString();a.push(p),s=0}return a}generateFromWords(t,n,r){var a=t?new sn(t):void 0;return this.q.pause(),this._locationsWords=[],this._wordCounter=0,this.spine.each(function(l){l.linear&&(a?l.index>=a.spinePos&&this.q.enqueue(this.processWords.bind(this),l,n,a,r):this.q.enqueue(this.processWords.bind(this),l,n,a,r))}.bind(this)),this.q.run().then(function(){return this._currentCfi&&(this.currentLocation=this._currentCfi),this._locationsWords}.bind(this))}processWords(t,n,r,a){return a&&this._locationsWords.length>=a?Promise.resolve():t.load(this.request).then(function(l){var o=new on,i=this.parseWords(l,t,n,r),s=a-this._locationsWords.length;return this._locationsWords=this._locationsWords.concat(i.length>=a?i.slice(0,s):i),t.unload(),this.processingTimeout=setTimeout(()=>o.resolve(i),this.pause),o.promise}.bind(this))}countWords(t){return t=t.replace(/(^\s*)|(\s*$)/gi,""),t=t.replace(/[ ]{2,}/gi," "),t=t.replace(/\n /,`
`),t.split(" ").length}parseWords(t,n,r,a){var l=n.cfiBase,o=[],i=t.ownerDocument,s=Wn(i,"body"),u=r,d=a?a.spinePos!==n.index:!0,f;a&&n.index===a.spinePos&&(f=a.findNode(a.range?a.path.steps.concat(a.start.steps):a.path.steps,t.ownerDocument));var p=function(b){if(!d)if(b===f)d=!0;else return!1;if(b.textContent.length<10&&b.textContent.trim().length===0)return!1;var A=this.countWords(b.textContent),h,m=0;if(A===0)return!1;for(h=u-this._wordCounter,h>A&&(this._wordCounter+=A,m=A);m<A;)if(h=u-this._wordCounter,m+h>=A)this._wordCounter+=A-m,m=A;else{m+=h;let v=new sn(b,l);o.push({cfi:v.toString(),wordCount:this._wordCounter}),this._wordCounter=0}};return Sp(s,p.bind(this)),o}locationFromCfi(t){let n;return sn.prototype.isCfiString(t)&&(t=new sn(t)),this._locations.length===0?-1:(n=Js(t,this._locations,this.epubcfi.compare),n>this.total?this.total:n)}percentageFromCfi(t){if(this._locations.length===0)return null;var n=this.locationFromCfi(t);return this.percentageFromLocation(n)}percentageFromLocation(t){return!t||!this.total?0:t/this.total}cfiFromLocation(t){var n=-1;return typeof t!="number"&&(t=parseInt(t)),t>=0&&t<this._locations.length&&(n=this._locations[t]),n}cfiFromPercentage(t){let n;if(t>1&&console.warn("Normalize cfiFromPercentage value to between 0 - 1"),t>=1){let r=new sn(this._locations[this.total]);return r.collapse(),r.toString()}return n=Math.ceil(this.total*t),this.cfiFromLocation(n)}load(t){return typeof t=="string"?this._locations=JSON.parse(t):this._locations=t,this.total=this._locations.length-1,this._locations}save(){return JSON.stringify(this._locations)}getCurrent(){return this._current}setCurrent(t){var n;if(typeof t=="string")this._currentCfi=t;else if(typeof t=="number")this._current=t;else return;this._locations.length!==0&&(typeof t=="string"?(n=this.locationFromCfi(t),this._current=n):n=t,this.emit(Kt.LOCATIONS.CHANGED,{percentage:this.percentageFromLocation(n)}))}get currentLocation(){return this._current}set currentLocation(t){this.setCurrent(t)}length(){return this._locations.length}destroy(){this.spine=void 0,this.request=void 0,this.pause=void 0,this.q.stop(),this.q=void 0,this.epubcfi=void 0,this._locations=void 0,this.total=void 0,this.break=void 0,this._current=void 0,this.currentLocation=void 0,this._currentCfi=void 0,clearTimeout(this.processingTimeout)}}il(P4.prototype);class NO{constructor(t){this.packagePath="",this.directory="",this.encoding="",t&&this.parse(t)}parse(t){var n;if(!t)throw new Error("Container File Not Found");if(n=Wn(t,"rootfile"),!n)throw new Error("No RootFile Found");this.packagePath=n.getAttribute("full-path"),this.directory=lo.dirname(this.packagePath),this.encoding=t.xmlEncoding}destroy(){this.packagePath=void 0,this.directory=void 0,this.encoding=void 0}}class Zy{constructor(t){this.manifest={},this.navPath="",this.ncxPath="",this.coverPath="",this.spineNodeIndex=0,this.spine=[],this.metadata={},t&&this.parse(t)}parse(t){var n,r,a;if(!t)throw new Error("Package File Not Found");if(n=Wn(t,"metadata"),!n)throw new Error("No Metadata Found");if(r=Wn(t,"manifest"),!r)throw new Error("No Manifest Found");if(a=Wn(t,"spine"),!a)throw new Error("No Spine Found");return this.manifest=this.parseManifest(r),this.navPath=this.findNavPath(r),this.ncxPath=this.findNcxPath(r,a),this.coverPath=this.findCoverPath(t),this.spineNodeIndex=b4(a),this.spine=this.parseSpine(a,this.manifest),this.uniqueIdentifier=this.findUniqueIdentifier(t),this.metadata=this.parseMetadata(n),this.metadata.direction=a.getAttribute("page-progression-direction"),{metadata:this.metadata,spine:this.spine,manifest:this.manifest,navPath:this.navPath,ncxPath:this.ncxPath,coverPath:this.coverPath,spineNodeIndex:this.spineNodeIndex}}parseMetadata(t){var n={};return n.title=this.getElementText(t,"title"),n.creator=this.getElementText(t,"creator"),n.description=this.getElementText(t,"description"),n.pubdate=this.getElementText(t,"date"),n.publisher=this.getElementText(t,"publisher"),n.identifier=this.getElementText(t,"identifier"),n.language=this.getElementText(t,"language"),n.rights=this.getElementText(t,"rights"),n.modified_date=this.getPropertyText(t,"dcterms:modified"),n.layout=this.getPropertyText(t,"rendition:layout"),n.orientation=this.getPropertyText(t,"rendition:orientation"),n.flow=this.getPropertyText(t,"rendition:flow"),n.viewport=this.getPropertyText(t,"rendition:viewport"),n.media_active_class=this.getPropertyText(t,"media:active-class"),n.spread=this.getPropertyText(t,"rendition:spread"),n}parseManifest(t){var n={},r=ql(t,"item"),a=Array.prototype.slice.call(r);return a.forEach(function(l){var o=l.getAttribute("id"),i=l.getAttribute("href")||"",s=l.getAttribute("media-type")||"",u=l.getAttribute("media-overlay")||"",d=l.getAttribute("properties")||"";n[o]={href:i,type:s,overlay:u,properties:d.length?d.split(" "):[]}}),n}parseSpine(t,n){var r=[],a=ql(t,"itemref"),l=Array.prototype.slice.call(a);return l.forEach(function(o,i){var s=o.getAttribute("idref"),u=o.getAttribute("properties")||"",d=u.length?u.split(" "):[],f={id:o.getAttribute("id"),idref:s,linear:o.getAttribute("linear")||"yes",properties:d,index:i};r.push(f)}),r}findUniqueIdentifier(t){var n=t.documentElement.getAttribute("unique-identifier");if(!n)return"";var r=t.getElementById(n);return r&&r.localName==="identifier"&&r.namespaceURI==="http://purl.org/dc/elements/1.1/"&&r.childNodes.length>0?r.childNodes[0].nodeValue.trim():""}findNavPath(t){var n=ns(t,"item",{properties:"nav"});return n?n.getAttribute("href"):!1}findNcxPath(t,n){var r=ns(t,"item",{"media-type":"application/x-dtbncx+xml"}),a;return r||(a=n.getAttribute("toc"),a&&(r=t.querySelector(`#${a}`))),r?r.getAttribute("href"):!1}findCoverPath(t){var n=Wn(t,"package");n.getAttribute("version");var r=ns(t,"item",{properties:"cover-image"});if(r)return r.getAttribute("href");var a=ns(t,"meta",{name:"cover"});if(a){var l=a.getAttribute("content"),o=t.getElementById(l);return o?o.getAttribute("href"):""}else return!1}getElementText(t,n){var r=t.getElementsByTagNameNS("http://purl.org/dc/elements/1.1/",n),a;return!r||r.length===0?"":(a=r[0],a.childNodes.length?a.childNodes[0].nodeValue:"")}getPropertyText(t,n){var r=ns(t,"meta",{property:n});return r&&r.childNodes.length?r.childNodes[0].nodeValue:""}load(t){this.metadata=t.metadata;let n=t.readingOrder||t.spine;return this.spine=n.map((r,a)=>(r.index=a,r.linear=r.linear||"yes",r)),t.resources.forEach((r,a)=>{this.manifest[a]=r,r.rel&&r.rel[0]==="cover"&&(this.coverPath=r.href)}),this.spineNodeIndex=0,this.toc=t.toc.map((r,a)=>(r.label=r.title,r)),{metadata:this.metadata,spine:this.spine,manifest:this.manifest,navPath:this.navPath,ncxPath:this.ncxPath,coverPath:this.coverPath,spineNodeIndex:this.spineNodeIndex,toc:this.toc}}destroy(){this.manifest=void 0,this.navPath=void 0,this.ncxPath=void 0,this.coverPath=void 0,this.spineNodeIndex=void 0,this.spine=void 0,this.metadata=void 0}}class Kb{constructor(t){this.toc=[],this.tocByHref={},this.tocById={},this.landmarks=[],this.landmarksByType={},this.length=0,t&&this.parse(t)}parse(t){let n=t.nodeType,r,a;n&&(r=Wn(t,"html"),a=Wn(t,"ncx")),n?r?(this.toc=this.parseNav(t),this.landmarks=this.parseLandmarks(t)):a&&(this.toc=this.parseNcx(t)):this.toc=this.load(t),this.length=0,this.unpack(this.toc)}unpack(t){for(var n,r=0;r<t.length;r++)n=t[r],n.href&&(this.tocByHref[n.href]=r),n.id&&(this.tocById[n.id]=r),this.length++,n.subitems.length&&this.unpack(n.subitems)}get(t){var n;return t?(t.indexOf("#")===0?n=this.tocById[t.substring(1)]:t in this.tocByHref&&(n=this.tocByHref[t]),this.getByIndex(t,n,this.toc)):this.toc}getByIndex(t,n,r){if(r.length===0)return;const a=r[n];if(a&&(t===a.id||t===a.href))return a;{let l;for(let o=0;o<r.length&&(l=this.getByIndex(t,n,r[o].subitems),!l);++o);return l}}landmark(t){var n;return t?(n=this.landmarksByType[t],this.landmarks[n]):this.landmarks}parseNav(t){var n=yp(t,"nav","toc"),r=[];if(!n)return r;let a=rs(n,"ol",!0);return a&&(r=this.parseNavList(a)),r}parseNavList(t,n){const r=[];if(!t||!t.children)return r;for(let a=0;a<t.children.length;a++){const l=this.navItem(t.children[a],n);l&&r.push(l)}return r}navItem(t,n){let r=t.getAttribute("id")||void 0,a=rs(t,"a",!0)||rs(t,"span",!0);if(!a)return;let l=a.getAttribute("href")||"";r||(r=l);let o=a.textContent||"",i=[],s=rs(t,"ol",!0);return s&&(i=this.parseNavList(s,r)),{id:r,href:l,label:o,subitems:i,parent:n}}parseLandmarks(t){var n=yp(t,"nav","landmarks"),r=n?ql(n,"li"):[],a=r.length,l,o=[],i;if(!r||a===0)return o;for(l=0;l<a;++l)i=this.landmarkItem(r[l]),i&&(o.push(i),this.landmarksByType[i.type]=l);return o}landmarkItem(t){let n=rs(t,"a",!0);if(!n)return;let r=n.getAttributeNS("http://www.idpf.org/2007/ops","type")||void 0,a=n.getAttribute("href")||"",l=n.textContent||"";return{href:a,label:l,type:r}}parseNcx(t){var n=ql(t,"navPoint"),r=n.length,a,l={},o=[],i,s;if(!n||r===0)return o;for(a=0;a<r;++a)i=this.ncxItem(n[a]),l[i.id]=i,i.parent?(s=l[i.parent],s.subitems.push(i)):o.push(i);return o}ncxItem(t){var n=t.getAttribute("id")||!1,r=Wn(t,"content"),a=r.getAttribute("src"),l=Wn(t,"navLabel"),o=l.textContent?l.textContent:"",i=[],s=t.parentNode,u;return s&&(s.nodeName==="navPoint"||s.nodeName.split(":").slice(-1)[0]==="navPoint")&&(u=s.getAttribute("id")),{id:n,href:a,label:o,subitems:i,parent:u}}load(t){return t.map(n=>(n.label=n.title,n.subitems=n.children?this.load(n.children):[],n))}forEach(t){return this.toc.forEach(t)}}var Pu={application:{ecmascript:["es","ecma"],javascript:"js",ogg:"ogx",pdf:"pdf",postscript:["ps","ai","eps","epsi","epsf","eps2","eps3"],"rdf+xml":"rdf",smil:["smi","smil"],"xhtml+xml":["xhtml","xht"],xml:["xml","xsl","xsd","opf","ncx"],zip:"zip","x-httpd-eruby":"rhtml","x-latex":"latex","x-maker":["frm","maker","frame","fm","fb","book","fbdoc"],"x-object":"o","x-shockwave-flash":["swf","swfl"],"x-silverlight":"scr","epub+zip":"epub","font-tdpfr":"pfr","inkml+xml":["ink","inkml"],json:"json","jsonml+json":"jsonml","mathml+xml":"mathml","metalink+xml":"metalink",mp4:"mp4s","omdoc+xml":"omdoc",oxps:"oxps","vnd.amazon.ebook":"azw",widget:"wgt","x-dtbook+xml":"dtb","x-dtbresource+xml":"res","x-font-bdf":"bdf","x-font-ghostscript":"gsf","x-font-linux-psf":"psf","x-font-otf":"otf","x-font-pcf":"pcf","x-font-snf":"snf","x-font-ttf":["ttf","ttc"],"x-font-type1":["pfa","pfb","pfm","afm"],"x-font-woff":"woff","x-mobipocket-ebook":["prc","mobi"],"x-mspublisher":"pub","x-nzb":"nzb","x-tgif":"obj","xaml+xml":"xaml","xml-dtd":"dtd","xproc+xml":"xpl","xslt+xml":"xslt","internet-property-stream":"acx","x-compress":"z","x-compressed":"tgz","x-gzip":"gz"},audio:{flac:"flac",midi:["mid","midi","kar","rmi"],mpeg:["mpga","mpega","mp2","mp3","m4a","mp2a","m2a","m3a"],mpegurl:"m3u",ogg:["oga","ogg","spx"],"x-aiff":["aif","aiff","aifc"],"x-ms-wma":"wma","x-wav":"wav",adpcm:"adp",mp4:"mp4a",webm:"weba","x-aac":"aac","x-caf":"caf","x-matroska":"mka","x-pn-realaudio-plugin":"rmp",xm:"xm",mid:["mid","rmi"]},image:{gif:"gif",ief:"ief",jpeg:["jpeg","jpg","jpe"],pcx:"pcx",png:"png","svg+xml":["svg","svgz"],tiff:["tiff","tif"],"x-icon":"ico",bmp:"bmp",webp:"webp","x-pict":["pic","pct"],"x-tga":"tga","cis-cod":"cod"},text:{"cache-manifest":["manifest","appcache"],css:"css",csv:"csv",html:["html","htm","shtml","stm"],mathml:"mml",plain:["txt","text","brf","conf","def","list","log","in","bas"],richtext:"rtx","tab-separated-values":"tsv","x-bibtex":"bib"},video:{mpeg:["mpeg","mpg","mpe","m1v","m2v","mp2","mpa","mpv2"],mp4:["mp4","mp4v","mpg4"],quicktime:["qt","mov"],ogg:"ogv","vnd.mpegurl":["mxu","m4u"],"x-flv":"flv","x-la-asf":["lsf","lsx"],"x-mng":"mng","x-ms-asf":["asf","asx","asr"],"x-ms-wm":"wm","x-ms-wmv":"wmv","x-ms-wmx":"wmx","x-ms-wvx":"wvx","x-msvideo":"avi","x-sgi-movie":"movie","x-matroska":["mpv","mkv","mk3d","mks"],"3gpp2":"3g2",h261:"h261",h263:"h263",h264:"h264",jpeg:"jpgv",jpm:["jpm","jpgm"],mj2:["mj2","mjp2"],"vnd.ms-playready.media.pyv":"pyv","vnd.uvvu.mp4":["uvu","uvvu"],"vnd.vivo":"viv",webm:"webm","x-f4v":"f4v","x-m4v":"m4v","x-ms-vob":"vob","x-smv":"smv"}},xO=function(){var e,t,n,r,a={};for(e in Pu)if(Pu.hasOwnProperty(e)){for(t in Pu[e])if(Pu[e].hasOwnProperty(t))if(n=Pu[e][t],typeof n=="string")a[n]=e+"/"+t;else for(r=0;r<n.length;r++)a[n[r]]=e+"/"+t}return a}(),XO="text/plain";function gO(e){return e&&xO[e.split(".").pop().toLowerCase()]||XO}const As={lookup:gO};class wO{constructor(t,n){this.settings={replacements:n&&n.replacements||"base64",archive:n&&n.archive,resolver:n&&n.resolver,request:n&&n.request},this.process(t)}process(t){this.manifest=t,this.resources=Object.keys(t).map(function(n){return t[n]}),this.replacementUrls=[],this.html=[],this.assets=[],this.css=[],this.urls=[],this.cssUrls=[],this.split(),this.splitUrls()}split(){this.html=this.resources.filter(function(t){if(t.type==="application/xhtml+xml"||t.type==="text/html")return!0}),this.assets=this.resources.filter(function(t){if(t.type!=="application/xhtml+xml"&&t.type!=="text/html")return!0}),this.css=this.resources.filter(function(t){if(t.type==="text/css")return!0})}splitUrls(){this.urls=this.assets.map(function(t){return t.href}.bind(this)),this.cssUrls=this.css.map(function(t){return t.href})}createUrl(t){var n=new Ta(t),r=As.lookup(n.filename);return this.settings.archive?this.settings.archive.createUrl(t,{base64:this.settings.replacements==="base64"}):this.settings.replacements==="base64"?this.settings.request(t,"blob").then(a=>A4(a)).then(a=>O1(a,r)):this.settings.request(t,"blob").then(a=>mp(a,r))}replacements(){if(this.settings.replacements==="none")return new Promise(function(n){n(this.urls)}.bind(this));var t=this.urls.map(n=>{var r=this.settings.resolver(n);return this.createUrl(r).catch(a=>(console.error(a),null))});return Promise.all(t).then(n=>(this.replacementUrls=n.filter(r=>typeof r=="string"),n))}replaceCss(t,n){var r=[];return t=t||this.settings.archive,n=n||this.settings.resolver,this.cssUrls.forEach(function(a){var l=this.createCssFile(a,t,n).then(function(o){var i=this.urls.indexOf(a);i>-1&&(this.replacementUrls[i]=o)}.bind(this));r.push(l)}.bind(this)),Promise.all(r)}createCssFile(t){var n;if(lo.isAbsolute(t))return new Promise(function(o){o()});var r=this.settings.resolver(t),a;this.settings.archive?a=this.settings.archive.getText(r):a=this.settings.request(r,"text");var l=this.urls.map(o=>{var i=this.settings.resolver(o),s=new Ul(r).relative(i);return s});return a?a.then(o=>(o=Hy(o,l,this.replacementUrls),this.settings.replacements==="base64"?n=O1(o,"text/css"):n=mp(o,"text/css"),n),o=>new Promise(function(i){i()})):new Promise(function(o){o()})}relativeTo(t,n){return n=n||this.settings.resolver,this.urls.map(function(r){var a=n(r),l=new Ul(t).relative(a);return l}.bind(this))}get(t){var n=this.urls.indexOf(t);if(n!==-1)return this.replacementUrls.length?new Promise(function(r,a){r(this.replacementUrls[n])}.bind(this)):this.createUrl(t)}substitute(t,n){var r;return n?r=this.relativeTo(n):r=this.urls,Hy(t,r,this.replacementUrls)}destroy(){this.settings=void 0,this.manifest=void 0,this.resources=void 0,this.replacementUrls=void 0,this.html=void 0,this.assets=void 0,this.css=void 0,this.urls=void 0,this.cssUrls=void 0}}class Nb{constructor(t){this.pages=[],this.locations=[],this.epubcfi=new sn,this.firstPage=0,this.lastPage=0,this.totalPages=0,this.toc=void 0,this.ncx=void 0,t&&(this.pageList=this.parse(t)),this.pageList&&this.pageList.length&&this.process(this.pageList)}parse(t){var n=Wn(t,"html"),r=Wn(t,"ncx");if(n)return this.parseNav(t);if(r)return this.parseNcx(t)}parseNav(t){var n=yp(t,"nav","page-list"),r=n?ql(n,"li"):[],a=r.length,l,o=[],i;if(!r||a===0)return o;for(l=0;l<a;++l)i=this.item(r[l]),o.push(i);return o}parseNcx(t){var n=[],r=0,a,l,o,i=0;if(l=Wn(t,"pageList"),!l||(o=ql(l,"pageTarget"),i=o.length,!o||o.length===0))return n;for(r=0;r<i;++r)a=this.ncxItem(o[r]),n.push(a);return n}ncxItem(t){var n=Wn(t,"navLabel"),r=Wn(n,"text"),a=r.textContent,l=Wn(t,"content"),o=l.getAttribute("src"),i=parseInt(a,10);return{href:o,page:i}}item(t){var n=Wn(t,"a"),r=n.getAttribute("href")||"",a=n.textContent||"",l=parseInt(a),o=r.indexOf("epubcfi"),i,s,u;return o!=-1?(i=r.split("#"),s=i[0],u=i.length>1?i[1]:!1,{cfi:u,href:r,packageUrl:s,page:l}):{href:r,page:l}}process(t){t.forEach(function(n){this.pages.push(n.page),n.cfi&&this.locations.push(n.cfi)},this),this.firstPage=parseInt(this.pages[0]),this.lastPage=parseInt(this.pages[this.pages.length-1]),this.totalPages=this.lastPage-this.firstPage}pageFromCfi(t){var n=-1;if(this.locations.length===0)return-1;var r=vp(t,this.locations,this.epubcfi.compare);return r!=-1?n=this.pages[r]:(r=Js(t,this.locations,this.epubcfi.compare),n=r-1>=0?this.pages[r-1]:this.pages[0],n!==void 0||(n=-1)),n}cfiFromPage(t){var n=-1;typeof t!="number"&&(t=parseInt(t));var r=this.pages.indexOf(t);return r!=-1&&(n=this.locations[r]),n}pageFromPercentage(t){var n=Math.round(this.totalPages*t);return n}percentageFromPage(t){var n=(t-this.firstPage)/this.totalPages;return Math.round(n*1e3)/1e3}percentageFromCfi(t){var n=this.pageFromCfi(t),r=this.percentageFromPage(n);return r}destroy(){this.pages=void 0,this.locations=void 0,this.epubcfi=void 0,this.pageList=void 0,this.toc=void 0,this.ncx=void 0}}class T4{constructor(t){this.settings=t,this.name=t.layout||"reflowable",this._spread=t.spread!=="none",this._minSpreadWidth=t.minSpreadWidth||800,this._evenSpreads=t.evenSpreads||!1,t.flow==="scrolled"||t.flow==="scrolled-continuous"||t.flow==="scrolled-doc"?this._flow="scrolled":this._flow="paginated",this.width=0,this.height=0,this.spreadWidth=0,this.delta=0,this.columnWidth=0,this.gap=0,this.divisor=1,this.props={name:this.name,spread:this._spread,flow:this._flow,width:0,height:0,spreadWidth:0,delta:0,columnWidth:0,gap:0,divisor:1}}flow(t){return typeof t<"u"&&(t==="scrolled"||t==="scrolled-continuous"||t==="scrolled-doc"?this._flow="scrolled":this._flow="paginated",this.update({flow:this._flow})),this._flow}spread(t,n){return t&&(this._spread=t!=="none",this.update({spread:this._spread})),n>=0&&(this._minSpreadWidth=n),this._spread}calculate(t,n,r){var a=1,l=r||0,o=t,i=n,s=Math.floor(o/12),u,d,f,p;this._spread&&o>=this._minSpreadWidth?a=2:a=1,this.name==="reflowable"&&this._flow==="paginated"&&!(r>=0)&&(l=s%2===0?s:s-1),this.name==="pre-paginated"&&(l=0),a>1?(u=o/a-l,f=u+l):(u=o,f=o),this.name==="pre-paginated"&&a>1&&(o=u),d=u*a+l,p=o,this.width=o,this.height=i,this.spreadWidth=d,this.pageWidth=f,this.delta=p,this.columnWidth=u,this.gap=l,this.divisor=a,this.update({width:o,height:i,spreadWidth:d,pageWidth:f,delta:p,columnWidth:u,gap:l,divisor:a})}format(t,n,r){var a;return this.name==="pre-paginated"?a=t.fit(this.columnWidth,this.height,n):this._flow==="paginated"?a=t.columns(this.width,this.height,this.columnWidth,this.gap,this.settings.direction):r&&r==="horizontal"?a=t.size(null,this.height):a=t.size(this.width,null),a}count(t,n){let r,a;return this.name==="pre-paginated"?(r=1,a=1):this._flow==="paginated"?(n=n||this.delta,r=Math.ceil(t/n),a=r*this.divisor):(n=n||this.height,r=Math.ceil(t/n),a=r),{spreads:r,pages:a}}update(t){if(Object.keys(t).forEach(n=>{this.props[n]===t[n]&&delete t[n]}),Object.keys(t).length>0){let n=or(this.props,t);this.emit(Kt.LAYOUT.UPDATED,n,t)}}}il(T4.prototype);class jO{constructor(t){this.rendition=t,this._themes={default:{rules:{},url:"",serialized:""}},this._overrides={},this._current="default",this._injected=[],this.rendition.hooks.content.register(this.inject.bind(this)),this.rendition.hooks.content.register(this.overrides.bind(this))}register(){if(arguments.length!==0){if(arguments.length===1&&typeof arguments[0]=="object")return this.registerThemes(arguments[0]);if(arguments.length===1&&typeof arguments[0]=="string")return this.default(arguments[0]);if(arguments.length===2&&typeof arguments[1]=="string")return this.registerUrl(arguments[0],arguments[1]);if(arguments.length===2&&typeof arguments[1]=="object")return this.registerRules(arguments[0],arguments[1])}}default(t){if(!!t){if(typeof t=="string")return this.registerUrl("default",t);if(typeof t=="object")return this.registerRules("default",t)}}registerThemes(t){for(var n in t)t.hasOwnProperty(n)&&(typeof t[n]=="string"?this.registerUrl(n,t[n]):this.registerRules(n,t[n]))}registerCss(t,n){this._themes[t]={serialized:n},(this._injected[t]||t=="default")&&this.update(t)}registerUrl(t,n){var r=new Ta(n);this._themes[t]={url:r.toString()},(this._injected[t]||t=="default")&&this.update(t)}registerRules(t,n){this._themes[t]={rules:n},(this._injected[t]||t=="default")&&this.update(t)}select(t){var n=this._current,r;this._current=t,this.update(t),r=this.rendition.getContents(),r.forEach(a=>{a.removeClass(n),a.addClass(t)})}update(t){var n=this.rendition.getContents();n.forEach(r=>{this.add(t,r)})}inject(t){var n=[],r=this._themes,a;for(var l in r)r.hasOwnProperty(l)&&(l===this._current||l==="default")&&(a=r[l],(a.rules&&Object.keys(a.rules).length>0||a.url&&n.indexOf(a.url)===-1)&&this.add(l,t),this._injected.push(l));this._current!="default"&&t.addClass(this._current)}add(t,n){var r=this._themes[t];!r||!n||(r.url?n.addStylesheet(r.url):r.serialized?(n.addStylesheetCss(r.serialized,t),r.injected=!0):r.rules&&(n.addStylesheetRules(r.rules,t),r.injected=!0))}override(t,n,r){var a=this.rendition.getContents();this._overrides[t]={value:n,priority:r===!0},a.forEach(l=>{l.css(t,this._overrides[t].value,this._overrides[t].priority)})}removeOverride(t){var n=this.rendition.getContents();delete this._overrides[t],n.forEach(r=>{r.css(t)})}overrides(t){var n=this._overrides;for(var r in n)n.hasOwnProperty(r)&&t.css(r,n[r].value,n[r].priority)}fontSize(t){this.override("font-size",t)}font(t){this.override("font-family",t,!0)}destroy(){this.rendition=void 0,this._themes=void 0,this._overrides=void 0,this._current=void 0,this._injected=void 0}}class Ap{constructor(t,n,r,a=!1){this.layout=t,this.horizontal=r==="horizontal",this.direction=n||"ltr",this._dev=a}section(t){var n=this.findRanges(t),r=this.rangeListToCfiList(t.section.cfiBase,n);return r}page(t,n,r,a){var l=t&&t.document?t.document.body:!1,o;if(!!l){if(o=this.rangePairToCfiPair(n,{start:this.findStart(l,r,a),end:this.findEnd(l,r,a)}),this._dev===!0){let i=t.document,s=new sn(o.start).toRange(i),u=new sn(o.end).toRange(i),d=i.defaultView.getSelection(),f=i.createRange();d.removeAllRanges(),f.setStart(s.startContainer,s.startOffset),f.setEnd(u.endContainer,u.endOffset),d.addRange(f)}return o}}walk(t,n){if(!(t&&t.nodeType===Node.TEXT_NODE)){var r={acceptNode:function(s){return s.data.trim().length>0?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_REJECT}},a=r.acceptNode;a.acceptNode=r.acceptNode;for(var l=document.createTreeWalker(t,NodeFilter.SHOW_TEXT,a,!1),o,i;(o=l.nextNode())&&(i=n(o),!i););return i}}findRanges(t){for(var n=[],r=t.contents.scrollWidth(),a=Math.ceil(r/this.layout.spreadWidth),l=a*this.layout.divisor,o=this.layout.columnWidth,i=this.layout.gap,s,u,d=0;d<l.pages;d++)s=(o+i)*d,u=o*(d+1)+i*d,n.push({start:this.findStart(t.document.body,s,u),end:this.findEnd(t.document.body,s,u)});return n}findStart(t,n,r){for(var a=[t],l,o,i=t;a.length;)if(l=a.shift(),o=this.walk(l,s=>{var u,d,f,p,b;if(b=U1(s),this.horizontal&&this.direction==="ltr"){if(u=this.horizontal?b.left:b.top,d=this.horizontal?b.right:b.bottom,u>=n&&u<=r)return s;if(d>n)return s;i=s,a.push(s)}else if(this.horizontal&&this.direction==="rtl"){if(u=b.left,d=b.right,d<=r&&d>=n)return s;if(u<r)return s;i=s,a.push(s)}else{if(f=b.top,p=b.bottom,f>=n&&f<=r)return s;if(p>n)return s;i=s,a.push(s)}}),o)return this.findTextStartRange(o,n,r);return this.findTextStartRange(i,n,r)}findEnd(t,n,r){for(var a=[t],l,o=t,i;a.length;)if(l=a.shift(),i=this.walk(l,s=>{var u,d,f,p,b;if(b=U1(s),this.horizontal&&this.direction==="ltr"){if(u=Math.round(b.left),d=Math.round(b.right),u>r&&o)return o;if(d>r)return s;o=s,a.push(s)}else if(this.horizontal&&this.direction==="rtl"){if(u=Math.round(this.horizontal?b.left:b.top),d=Math.round(this.horizontal?b.right:b.bottom),d<n&&o)return o;if(u<n)return s;o=s,a.push(s)}else{if(f=Math.round(b.top),p=Math.round(b.bottom),f>r&&o)return o;if(p>r)return s;o=s,a.push(s)}}),i)return this.findTextEndRange(i,n,r);return this.findTextEndRange(o,n,r)}findTextStartRange(t,n,r){for(var a=this.splitTextNodeIntoRanges(t),l,o,i,s,u,d=0;d<a.length;d++)if(l=a[d],o=l.getBoundingClientRect(),this.horizontal&&this.direction==="ltr"){if(i=o.left,i>=n)return l}else if(this.horizontal&&this.direction==="rtl"){if(u=o.right,u<=r)return l}else if(s=o.top,s>=n)return l;return a[0]}findTextEndRange(t,n,r){for(var a=this.splitTextNodeIntoRanges(t),l,o,i,s,u,d,f,p=0;p<a.length;p++){if(o=a[p],i=o.getBoundingClientRect(),this.horizontal&&this.direction==="ltr"){if(s=i.left,u=i.right,s>r&&l)return l;if(u>r)return o}else if(this.horizontal&&this.direction==="rtl"){if(s=i.left,u=i.right,u<n&&l)return l;if(s<n)return o}else{if(d=i.top,f=i.bottom,d>r&&l)return l;if(f>r)return o}l=o}return a[a.length-1]}splitTextNodeIntoRanges(t,n){var r=[],a=t.textContent||"",l=a.trim(),o,i=t.ownerDocument,s=n||" ",u=l.indexOf(s);if(u===-1||t.nodeType!=Node.TEXT_NODE)return o=i.createRange(),o.selectNodeContents(t),[o];for(o=i.createRange(),o.setStart(t,0),o.setEnd(t,u),r.push(o),o=!1;u!=-1;)u=l.indexOf(s,u+1),u>0&&(o&&(o.setEnd(t,u),r.push(o)),o=i.createRange(),o.setStart(t,u+1));return o&&(o.setEnd(t,l.length),r.push(o)),r}rangePairToCfiPair(t,n){var r=n.start,a=n.end;r.collapse(!0),a.collapse(!1);let l=new sn(r,t).toString(),o=new sn(a,t).toString();return{start:l,end:o}}rangeListToCfiList(t,n){for(var r=[],a,l=0;l<n.length;l++)a=this.rangePairToCfiPair(t,n[l]),r.push(a);return r}axis(t){return t&&(this.horizontal=t==="horizontal"),this.horizontal}}const K4=typeof navigator<"u",LO=K4&&/Chrome/.test(navigator.userAgent),Gy=K4&&!LO&&/AppleWebKit/.test(navigator.userAgent),qO=1;class bm{constructor(t,n,r,a){this.epubcfi=new sn,this.document=t,this.documentElement=this.document.documentElement,this.content=n||this.document.body,this.window=this.document.defaultView,this._size={width:0,height:0},this.sectionIndex=a||0,this.cfiBase=r||"",this.epubReadingSystem("epub.js",Vv),this.called=0,this.active=!0,this.listeners()}static get listenedEvents(){return Vf}width(t){var n=this.content;return t&&Un(t)&&(t=t+"px"),t&&(n.style.width=t),parseInt(this.window.getComputedStyle(n).width)}height(t){var n=this.content;return t&&Un(t)&&(t=t+"px"),t&&(n.style.height=t),parseInt(this.window.getComputedStyle(n).height)}contentWidth(t){var n=this.content||this.document.body;return t&&Un(t)&&(t=t+"px"),t&&(n.style.width=t),parseInt(this.window.getComputedStyle(n).width)}contentHeight(t){var n=this.content||this.document.body;return t&&Un(t)&&(t=t+"px"),t&&(n.style.height=t),parseInt(this.window.getComputedStyle(n).height)}textWidth(){let t,n,r=this.document.createRange(),a=this.content||this.document.body,l=bp(a);return r.selectNodeContents(a),t=r.getBoundingClientRect(),n=t.width,l&&l.width&&(n+=l.width),Math.round(n)}textHeight(){let t,n,r=this.document.createRange(),a=this.content||this.document.body;return r.selectNodeContents(a),t=r.getBoundingClientRect(),n=t.bottom,Math.round(n)}scrollWidth(){var t=this.documentElement.scrollWidth;return t}scrollHeight(){var t=this.documentElement.scrollHeight;return t}overflow(t){return t&&(this.documentElement.style.overflow=t),this.window.getComputedStyle(this.documentElement).overflow}overflowX(t){return t&&(this.documentElement.style.overflowX=t),this.window.getComputedStyle(this.documentElement).overflowX}overflowY(t){return t&&(this.documentElement.style.overflowY=t),this.window.getComputedStyle(this.documentElement).overflowY}css(t,n,r){var a=this.content||this.document.body;return n?a.style.setProperty(t,n,r?"important":""):a.style.removeProperty(t),this.window.getComputedStyle(a)[t]}viewport(t){var n=this.document.querySelector("meta[name='viewport']"),r={width:void 0,height:void 0,scale:void 0,minimum:void 0,maximum:void 0,scalable:void 0},a=[],l={};if(n&&n.hasAttribute("content")){let o=n.getAttribute("content"),i=o.match(/width\s*=\s*([^,]*)/),s=o.match(/height\s*=\s*([^,]*)/),u=o.match(/initial-scale\s*=\s*([^,]*)/),d=o.match(/minimum-scale\s*=\s*([^,]*)/),f=o.match(/maximum-scale\s*=\s*([^,]*)/),p=o.match(/user-scalable\s*=\s*([^,]*)/);i&&i.length&&typeof i[1]<"u"&&(r.width=i[1]),s&&s.length&&typeof s[1]<"u"&&(r.height=s[1]),u&&u.length&&typeof u[1]<"u"&&(r.scale=u[1]),d&&d.length&&typeof d[1]<"u"&&(r.minimum=d[1]),f&&f.length&&typeof f[1]<"u"&&(r.maximum=f[1]),p&&p.length&&typeof p[1]<"u"&&(r.scalable=p[1])}return l=v4(t||{},r),t&&(l.width&&a.push("width="+l.width),l.height&&a.push("height="+l.height),l.scale&&a.push("initial-scale="+l.scale),l.scalable==="no"?(a.push("minimum-scale="+l.scale),a.push("maximum-scale="+l.scale),a.push("user-scalable="+l.scalable)):(l.scalable&&a.push("user-scalable="+l.scalable),l.minimum&&a.push("minimum-scale="+l.minimum),l.maximum&&a.push("minimum-scale="+l.maximum)),n||(n=this.document.createElement("meta"),n.setAttribute("name","viewport"),this.document.querySelector("head").appendChild(n)),n.setAttribute("content",a.join(", ")),this.window.scrollTo(0,0)),l}expand(){this.emit(Kt.CONTENTS.EXPAND)}listeners(){this.imageLoadListeners(),this.mediaQueryListeners(),this.addEventListeners(),this.addSelectionListeners(),typeof ResizeObserver>"u"?(this.resizeListeners(),this.visibilityListeners()):this.resizeObservers(),this.linksHandler()}removeListeners(){this.removeEventListeners(),this.removeSelectionListeners(),this.observer&&this.observer.disconnect(),clearTimeout(this.expanding)}resizeCheck(){let t=this.textWidth(),n=this.textHeight();(t!=this._size.width||n!=this._size.height)&&(this._size={width:t,height:n},this.onResize&&this.onResize(this._size),this.emit(Kt.CONTENTS.RESIZE,this._size))}resizeListeners(){clearTimeout(this.expanding),requestAnimationFrame(this.resizeCheck.bind(this)),this.expanding=setTimeout(this.resizeListeners.bind(this),350)}visibilityListeners(){document.addEventListener("visibilitychange",()=>{document.visibilityState==="visible"&&this.active===!1?(this.active=!0,this.resizeListeners()):(this.active=!1,clearTimeout(this.expanding))})}transitionListeners(){let t=this.content;t.style.transitionProperty="font, font-size, font-size-adjust, font-stretch, font-variation-settings, font-weight, width, height",t.style.transitionDuration="0.001ms",t.style.transitionTimingFunction="linear",t.style.transitionDelay="0",this._resizeCheck=this.resizeCheck.bind(this),this.document.addEventListener("transitionend",this._resizeCheck)}mediaQueryListeners(){for(var t=this.document.styleSheets,n=function(i){i.matches&&!this._expanding&&setTimeout(this.expand.bind(this),1)}.bind(this),r=0;r<t.length;r+=1){var a;try{a=t[r].cssRules}catch{return}if(!a)return;for(var l=0;l<a.length;l+=1)if(a[l].media){var o=this.window.matchMedia(a[l].media.mediaText);o.addListener(n)}}}resizeObservers(){this.observer=new ResizeObserver(t=>{requestAnimationFrame(this.resizeCheck.bind(this))}),this.observer.observe(this.document.documentElement)}mutationObservers(){this.observer=new MutationObserver(n=>{this.resizeCheck()});let t={attributes:!0,childList:!0,characterData:!0,subtree:!0};this.observer.observe(this.document,t)}imageLoadListeners(){for(var t=this.document.querySelectorAll("img"),n,r=0;r<t.length;r++)n=t[r],typeof n.naturalWidth<"u"&&n.naturalWidth===0&&(n.onload=this.expand.bind(this))}fontLoadListeners(){!this.document||!this.document.fonts||this.document.fonts.ready.then(function(){this.resizeCheck()}.bind(this))}root(){return this.document?this.document.documentElement:null}locationOf(t,n){var r,a={left:0,top:0};if(!this.document)return a;if(this.epubcfi.isCfiString(t)){let l=new sn(t).toRange(this.document,n);if(l){try{if(!l.endContainer||l.startContainer==l.endContainer&&l.startOffset==l.endOffset){let o=l.startContainer.textContent.indexOf(" ",l.startOffset);o==-1&&(o=l.startContainer.textContent.length),l.setEnd(l.startContainer,o)}}catch(o){console.error("setting end offset to start container length failed",o)}if(l.startContainer.nodeType===Node.ELEMENT_NODE)r=l.startContainer.getBoundingClientRect(),a.left=r.left,a.top=r.top;else if(Gy){let o=l.startContainer,i=new Range;try{o.nodeType===qO?r=o.getBoundingClientRect():l.startOffset+2<o.length?(i.setStart(o,l.startOffset),i.setEnd(o,l.startOffset+2),r=i.getBoundingClientRect()):l.startOffset-2>0?(i.setStart(o,l.startOffset-2),i.setEnd(o,l.startOffset),r=i.getBoundingClientRect()):r=o.parentNode.getBoundingClientRect()}catch(s){console.error(s,s.stack)}}else r=l.getBoundingClientRect()}}else if(typeof t=="string"&&t.indexOf("#")>-1){let l=t.substring(t.indexOf("#")+1),o=this.document.getElementById(l);if(o)if(Gy){let i=new Range;i.selectNode(o),r=i.getBoundingClientRect()}else r=o.getBoundingClientRect()}return r&&(a.left=r.left,a.top=r.top),a}addStylesheet(t){return new Promise(function(n,r){var a,l=!1;if(!this.document){n(!1);return}if(a=this.document.querySelector("link[href='"+t+"']"),a){n(!0);return}a=this.document.createElement("link"),a.type="text/css",a.rel="stylesheet",a.href=t,a.onload=a.onreadystatechange=function(){!l&&(!this.readyState||this.readyState=="complete")&&(l=!0,setTimeout(()=>{n(!0)},1))},this.document.head.appendChild(a)}.bind(this))}_getStylesheetNode(t){var n;return t="epubjs-inserted-css-"+(t||""),this.document?(n=this.document.getElementById(t),n||(n=this.document.createElement("style"),n.id=t,this.document.head.appendChild(n)),n):!1}addStylesheetCss(t,n){if(!this.document||!t)return!1;var r;return r=this._getStylesheetNode(n),r.innerHTML=t,!0}addStylesheetRules(t,n){var r;if(!(!this.document||!t||t.length===0))if(r=this._getStylesheetNode(n).sheet,Object.prototype.toString.call(t)==="[object Array]")for(var a=0,l=t.length;a<l;a++){var o=1,i=t[a],s=t[a][0],u="";Object.prototype.toString.call(i[1][0])==="[object Array]"&&(i=i[1],o=0);for(var d=i.length;o<d;o++){var f=i[o];u+=f[0]+":"+f[1]+(f[2]?" !important":"")+`;
`}r.insertRule(s+"{"+u+"}",r.cssRules.length)}else Object.keys(t).forEach(b=>{const A=t[b];if(Array.isArray(A))A.forEach(h=>{const v=Object.keys(h).map(S=>`${S}:${h[S]}`).join(";");r.insertRule(`${b}{${v}}`,r.cssRules.length)});else{const m=Object.keys(A).map(v=>`${v}:${A[v]}`).join(";");r.insertRule(`${b}{${m}}`,r.cssRules.length)}})}addScript(t){return new Promise(function(n,r){var a,l=!1;if(!this.document){n(!1);return}a=this.document.createElement("script"),a.type="text/javascript",a.async=!0,a.src=t,a.onload=a.onreadystatechange=function(){!l&&(!this.readyState||this.readyState=="complete")&&(l=!0,setTimeout(function(){n(!0)},1))},this.document.head.appendChild(a)}.bind(this))}addClass(t){var n;!this.document||(n=this.content||this.document.body,n&&n.classList.add(t))}removeClass(t){var n;!this.document||(n=this.content||this.document.body,n&&n.classList.remove(t))}addEventListeners(){!this.document||(this._triggerEvent=this.triggerEvent.bind(this),Vf.forEach(function(t){this.document.addEventListener(t,this._triggerEvent,{passive:!0})},this))}removeEventListeners(){!this.document||(Vf.forEach(function(t){this.document.removeEventListener(t,this._triggerEvent,{passive:!0})},this),this._triggerEvent=void 0)}triggerEvent(t){this.emit(t.type,t)}addSelectionListeners(){!this.document||(this._onSelectionChange=this.onSelectionChange.bind(this),this.document.addEventListener("selectionchange",this._onSelectionChange,{passive:!0}))}removeSelectionListeners(){!this.document||(this.document.removeEventListener("selectionchange",this._onSelectionChange,{passive:!0}),this._onSelectionChange=void 0)}onSelectionChange(t){this.selectionEndTimeout&&clearTimeout(this.selectionEndTimeout),this.selectionEndTimeout=setTimeout(function(){var n=this.window.getSelection();this.triggerSelectedEvent(n)}.bind(this),250)}triggerSelectedEvent(t){var n,r;t&&t.rangeCount>0&&(n=t.getRangeAt(0),n.collapsed||(r=new sn(n,this.cfiBase).toString(),this.emit(Kt.CONTENTS.SELECTED,r),this.emit(Kt.CONTENTS.SELECTED_RANGE,n)))}range(t,n){var r=new sn(t);return r.toRange(this.document,n)}cfiFromRange(t,n){return new sn(t,this.cfiBase,n).toString()}cfiFromNode(t,n){return new sn(t,this.cfiBase,n).toString()}map(t){var n=new Ap(t);return n.section()}size(t,n){var r={scale:1,scalable:"no"};this.layoutStyle("scrolling"),t>=0&&(this.width(t),r.width=t,this.css("padding","0 "+t/12+"px")),n>=0&&(this.height(n),r.height=n),this.css("margin","0"),this.css("box-sizing","border-box"),this.viewport(r)}columns(t,n,r,a,l){let o=ts("column-axis"),i=ts("column-gap"),s=ts("column-width"),u=ts("column-fill"),f=this.writingMode().indexOf("vertical")===0?"vertical":"horizontal";this.layoutStyle("paginated"),l==="rtl"&&f==="horizontal"&&this.direction(l),this.width(t),this.height(n),this.viewport({width:t,height:n,scale:1,scalable:"no"}),this.css("overflow-y","hidden"),this.css("margin","0",!0),f==="vertical"?(this.css("padding-top",a/2+"px",!0),this.css("padding-bottom",a/2+"px",!0),this.css("padding-left","20px"),this.css("padding-right","20px"),this.css(o,"vertical")):(this.css("padding-top","20px"),this.css("padding-bottom","20px"),this.css("padding-left",a/2+"px",!0),this.css("padding-right",a/2+"px",!0),this.css(o,"horizontal")),this.css("box-sizing","border-box"),this.css("max-width","inherit"),this.css(u,"auto"),this.css(i,a+"px"),this.css(s,r+"px"),this.css("-webkit-line-box-contain","block glyphs replaced")}scaler(t,n,r){var a="scale("+t+")",l="";this.css("transform-origin","top left"),(n>=0||r>=0)&&(l=" translate("+(n||0)+"px, "+(r||0)+"px )"),this.css("transform",a+l)}fit(t,n,r){var a=this.viewport(),l=parseInt(a.width),o=parseInt(a.height),i=t/l,s=n/o,u=i<s?i:s;if(this.layoutStyle("paginated"),this.width(l),this.height(o),this.overflow("hidden"),this.scaler(u,0,0),this.css("background-size",l*u+"px "+o*u+"px"),this.css("background-color","transparent"),r&&r.properties.includes("page-spread-left")){var d=t-l*u;this.css("margin-left",d+"px")}}direction(t){this.documentElement&&(this.documentElement.style.direction=t)}mapPage(t,n,r,a,l){var o=new Ap(n,l);return o.page(this,t,r,a)}linksHandler(){PO(this.content,t=>{this.emit(Kt.CONTENTS.LINK_CLICKED,t)})}writingMode(t){let n=ts("writing-mode");return t&&this.documentElement&&(this.documentElement.style[n]=t),this.window.getComputedStyle(this.documentElement)[n]||""}layoutStyle(t){return t&&(this._layoutStyle=t,navigator.epubReadingSystem.layoutStyle=this._layoutStyle),this._layoutStyle||"paginated"}epubReadingSystem(t,n){return navigator.epubReadingSystem={name:t,version:n,layoutStyle:this.layoutStyle(),hasFeature:function(r){switch(r){case"dom-manipulation":return!0;case"layout-changes":return!0;case"touch-events":return!0;case"mouse-events":return!0;case"keyboard-events":return!0;case"spine-scripting":return!1;default:return!1}}},navigator.epubReadingSystem}destroy(){this.removeListeners()}}il(bm.prototype);class UO{constructor(t){this.rendition=t,this.highlights=[],this.underlines=[],this.marks=[],this._annotations={},this._annotationsBySectionIndex={},this.rendition.hooks.render.register(this.inject.bind(this)),this.rendition.hooks.unloaded.register(this.clear.bind(this))}add(t,n,r,a,l,o){let i=encodeURI(n+t),u=new sn(n).spinePos,d=new N4({type:t,cfiRange:n,data:r,sectionIndex:u,cb:a,className:l,styles:o});return this._annotations[i]=d,u in this._annotationsBySectionIndex?this._annotationsBySectionIndex[u].push(i):this._annotationsBySectionIndex[u]=[i],this.rendition.views().forEach(p=>{d.sectionIndex===p.index&&d.attach(p)}),d}remove(t,n){let r=encodeURI(t+n);if(r in this._annotations){let a=this._annotations[r];if(n&&a.type!==n)return;this.rendition.views().forEach(o=>{this._removeFromAnnotationBySectionIndex(a.sectionIndex,r),a.sectionIndex===o.index&&a.detach(o)}),delete this._annotations[r]}}_removeFromAnnotationBySectionIndex(t,n){this._annotationsBySectionIndex[t]=this._annotationsAt(t).filter(r=>r!==n)}_annotationsAt(t){return this._annotationsBySectionIndex[t]}highlight(t,n,r,a,l){return this.add("highlight",t,n,r,a,l)}underline(t,n,r,a,l){return this.add("underline",t,n,r,a,l)}mark(t,n,r){return this.add("mark",t,n,r)}each(){return this._annotations.forEach.apply(this._annotations,arguments)}inject(t){let n=t.index;n in this._annotationsBySectionIndex&&this._annotationsBySectionIndex[n].forEach(a=>{this._annotations[a].attach(t)})}clear(t){let n=t.index;n in this._annotationsBySectionIndex&&this._annotationsBySectionIndex[n].forEach(a=>{this._annotations[a].detach(t)})}show(){}hide(){}}class N4{constructor({type:t,cfiRange:n,data:r,sectionIndex:a,cb:l,className:o,styles:i}){this.type=t,this.cfiRange=n,this.data=r,this.sectionIndex=a,this.mark=void 0,this.cb=l,this.className=o,this.styles=i}update(t){this.data=t}attach(t){let{cfiRange:n,data:r,type:a,mark:l,cb:o,className:i,styles:s}=this,u;return a==="highlight"?u=t.highlight(n,r,o,i,s):a==="underline"?u=t.underline(n,r,o,i,s):a==="mark"&&(u=t.mark(n,r,o)),this.mark=u,this.emit(Kt.ANNOTATION.ATTACH,u),u}detach(t){let{cfiRange:n,type:r}=this,a;return t&&(r==="highlight"?a=t.unhighlight(n):r==="underline"?a=t.ununderline(n):r==="mark"&&(a=t.unmark(n))),this.mark=void 0,this.emit(Kt.ANNOTATION.DETACH,a),a}text(){}}il(N4.prototype);var Wl={},Pv={};Object.defineProperty(Pv,"__esModule",{value:!0});Pv.createElement=x4;function x4(e){return document.createElementNS("http://www.w3.org/2000/svg",e)}Pv.default={createElement:x4};var ud={};Object.defineProperty(ud,"__esModule",{value:!0});ud.proxyMouse=X4;ud.clone=g4;ud.default={proxyMouse:X4};function X4(e,t){function n(o){for(var i=t.length-1;i>=0;i--){var s=t[i],u=o.clientX,d=o.clientY;if(o.touches&&o.touches.length&&(u=o.touches[0].clientX,d=o.touches[0].clientY),!!OO(s,e,u,d)){s.dispatchEvent(g4(o));break}}}if(e.nodeName==="iframe"||e.nodeName==="IFRAME")try{this.target=e.contentDocument}catch{this.target=e}else this.target=e;for(var r=["mouseup","mousedown","click","touchstart"],a=0;a<r.length;a++){var l=r[a];this.target.addEventListener(l,function(o){return n(o)},!1)}}function g4(e){var t=Object.assign({},e,{bubbles:!1});try{return new MouseEvent(e.type,t)}catch{var n=document.createEvent("MouseEvents");return n.initMouseEvent(e.type,!1,t.cancelable,t.view,t.detail,t.screenX,t.screenY,t.clientX,t.clientY,t.ctrlKey,t.altKey,t.shiftKey,t.metaKey,t.button,t.relatedTarget),n}}function OO(e,t,n,r){var a=t.getBoundingClientRect();function l(d,f,p){var b=d.top-a.top,A=d.left-a.left,h=b+d.height,m=A+d.width;return b<=p&&A<=f&&h>p&&m>f}var o=e.getBoundingClientRect();if(!l(o,n,r))return!1;for(var i=e.getClientRects(),s=0,u=i.length;s<u;s++)if(l(i[s],n,r))return!0;return!1}var Wp,hm;Object.defineProperty(Wl,"__esModule",{value:!0});var w4=Wl.Underline=hm=Wl.Highlight=Wl.Mark=Wp=Wl.Pane=void 0,RO=function e(t,n,r){t===null&&(t=Function.prototype);var a=Object.getOwnPropertyDescriptor(t,n);if(a===void 0){var l=Object.getPrototypeOf(t);return l===null?void 0:e(l,n,r)}else{if("value"in a)return a.value;var o=a.get;return o===void 0?void 0:o.call(r)}},Tv=function(){function e(t,n){for(var r=0;r<n.length;r++){var a=n[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),JO=Pv,Ac=j4(JO),FO=ud,zO=j4(FO);function j4(e){return e&&e.__esModule?e:{default:e}}function L4(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t&&(typeof t=="object"||typeof t=="function")?t:e}function q4(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function Kv(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Wp=Wl.Pane=function(){function e(t){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:document.body;Kv(this,e),this.target=t,this.element=Ac.default.createElement("svg"),this.marks=[],this.element.style.position="absolute",this.element.setAttribute("pointer-events","none"),zO.default.proxyMouse(this.target,this.marks),this.container=n,this.container.appendChild(this.element),this.render()}return Tv(e,[{key:"addMark",value:function(n){var r=Ac.default.createElement("g");return this.element.appendChild(r),n.bind(r,this.container),this.marks.push(n),n.render(),n}},{key:"removeMark",value:function(n){var r=this.marks.indexOf(n);if(r!==-1){var a=n.unbind();this.element.removeChild(a),this.marks.splice(r,1)}}},{key:"render",value:function(){CO(this.element,GO(this.target,this.container));var n=!0,r=!1,a=void 0;try{for(var l=this.marks[Symbol.iterator](),o;!(n=(o=l.next()).done);n=!0){var i=o.value;i.render()}}catch(s){r=!0,a=s}finally{try{!n&&l.return&&l.return()}finally{if(r)throw a}}}}]),e}();var HO=Wl.Mark=function(){function e(){Kv(this,e),this.element=null}return Tv(e,[{key:"bind",value:function(n,r){this.element=n,this.container=r}},{key:"unbind",value:function(){var n=this.element;return this.element=null,n}},{key:"render",value:function(){}},{key:"dispatchEvent",value:function(n){!this.element||this.element.dispatchEvent(n)}},{key:"getBoundingClientRect",value:function(){return this.element.getBoundingClientRect()}},{key:"getClientRects",value:function(){for(var n=[],r=this.element.firstChild;r;)n.push(r.getBoundingClientRect()),r=r.nextSibling;return n}},{key:"filteredRanges",value:function(){var n=Array.from(this.range.getClientRects());return n.filter(function(r){for(var a=0;a<n.length;a++){if(n[a]===r)return!0;var l=MO(n[a],r);if(l)return!1}return!0})}}]),e}(),ZO=hm=Wl.Highlight=function(e){q4(t,e);function t(n,r,a,l){Kv(this,t);var o=L4(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return o.range=n,o.className=r,o.data=a||{},o.attributes=l||{},o}return Tv(t,[{key:"bind",value:function(r,a){RO(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"bind",this).call(this,r,a);for(var l in this.data)this.data.hasOwnProperty(l)&&(this.element.dataset[l]=this.data[l]);for(var l in this.attributes)this.attributes.hasOwnProperty(l)&&this.element.setAttribute(l,this.attributes[l]);this.className&&this.element.classList.add(this.className)}},{key:"render",value:function(){for(;this.element.firstChild;)this.element.removeChild(this.element.firstChild);for(var r=this.element.ownerDocument.createDocumentFragment(),a=this.filteredRanges(),l=this.element.getBoundingClientRect(),o=this.container.getBoundingClientRect(),i=0,s=a.length;i<s;i++){var u=a[i],d=Ac.default.createElement("rect");d.setAttribute("x",u.left-l.left+o.left),d.setAttribute("y",u.top-l.top+o.top),d.setAttribute("height",u.height),d.setAttribute("width",u.width),r.appendChild(d)}this.element.appendChild(r)}}]),t}(HO);w4=Wl.Underline=function(e){q4(t,e);function t(n,r,a,l){return Kv(this,t),L4(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,n,r,a,l))}return Tv(t,[{key:"render",value:function(){for(;this.element.firstChild;)this.element.removeChild(this.element.firstChild);for(var r=this.element.ownerDocument.createDocumentFragment(),a=this.filteredRanges(),l=this.element.getBoundingClientRect(),o=this.container.getBoundingClientRect(),i=0,s=a.length;i<s;i++){var u=a[i],d=Ac.default.createElement("rect");d.setAttribute("x",u.left-l.left+o.left),d.setAttribute("y",u.top-l.top+o.top),d.setAttribute("height",u.height),d.setAttribute("width",u.width),d.setAttribute("fill","none");var f=Ac.default.createElement("line");f.setAttribute("x1",u.left-l.left+o.left),f.setAttribute("x2",u.left-l.left+o.left+u.width),f.setAttribute("y1",u.top-l.top+o.top+u.height-1),f.setAttribute("y2",u.top-l.top+o.top+u.height-1),f.setAttribute("stroke-width",1),f.setAttribute("stroke","black"),f.setAttribute("stroke-linecap","square"),r.appendChild(d),r.appendChild(f)}this.element.appendChild(r)}}]),t}(ZO);function GO(e,t){var n=t.getBoundingClientRect(),r=e.getBoundingClientRect();return{top:r.top-n.top,left:r.left-n.left,height:e.scrollHeight,width:e.scrollWidth}}function CO(e,t){e.style.setProperty("top",t.top+"px","important"),e.style.setProperty("left",t.left+"px","important"),e.style.setProperty("height",t.height+"px","important"),e.style.setProperty("width",t.width+"px","important")}function MO(e,t){return t.right<=e.right&&t.left>=e.left&&t.top>=e.top&&t.bottom<=e.bottom}class U4{constructor(t,n){this.settings=or({ignoreClass:"",axis:void 0,direction:void 0,width:0,height:0,layout:void 0,globalLayoutProperties:{},method:void 0,forceRight:!1,allowScriptedContent:!1,allowPopups:!1},n||{}),this.id="epubjs-view-"+kv(),this.section=t,this.index=t.index,this.element=this.container(this.settings.axis),this.added=!1,this.displayed=!1,this.rendered=!1,this.fixedWidth=0,this.fixedHeight=0,this.epubcfi=new sn,this.layout=this.settings.layout,this.pane=void 0,this.highlights={},this.underlines={},this.marks={}}container(t){var n=document.createElement("div");return n.classList.add("epub-view"),n.style.height="0px",n.style.width="0px",n.style.overflow="hidden",n.style.position="relative",n.style.display="block",t&&t=="horizontal"?n.style.flex="none":n.style.flex="initial",n}create(){return this.iframe?this.iframe:(this.element||(this.element=this.createContainer()),this.iframe=document.createElement("iframe"),this.iframe.id=this.id,this.iframe.scrolling="no",this.iframe.style.overflow="hidden",this.iframe.seamless="seamless",this.iframe.style.border="none",this.iframe.sandbox="allow-same-origin",this.settings.allowScriptedContent&&(this.iframe.sandbox+=" allow-scripts"),this.settings.allowPopups&&(this.iframe.sandbox+=" allow-popups"),this.iframe.setAttribute("enable-annotation","true"),this.resizing=!0,this.element.style.visibility="hidden",this.iframe.style.visibility="hidden",this.iframe.style.width="0",this.iframe.style.height="0",this._width=0,this._height=0,this.element.setAttribute("ref",this.index),this.added=!0,this.elementBounds=Wf(this.element),"srcdoc"in this.iframe?this.supportsSrcdoc=!0:this.supportsSrcdoc=!1,this.settings.method||(this.settings.method=this.supportsSrcdoc?"srcdoc":"write"),this.iframe)}render(t,n){return this.create(),this.size(),this.sectionRender||(this.sectionRender=this.section.render(t)),this.sectionRender.then(function(r){return this.load(r)}.bind(this)).then(function(){let r=this.contents.writingMode(),a;return this.settings.flow==="scrolled"?a=r.indexOf("vertical")===0?"horizontal":"vertical":a=r.indexOf("vertical")===0?"vertical":"horizontal",r.indexOf("vertical")===0&&this.settings.flow==="paginated"&&(this.layout.delta=this.layout.height),this.setAxis(a),this.emit(Kt.VIEWS.AXIS,a),this.setWritingMode(r),this.emit(Kt.VIEWS.WRITING_MODE,r),this.layout.format(this.contents,this.section,this.axis),this.addListeners(),new Promise((l,o)=>{this.expand(),this.settings.forceRight&&(this.element.style.marginLeft=this.width()+"px"),l()})}.bind(this),function(r){return this.emit(Kt.VIEWS.LOAD_ERROR,r),new Promise((a,l)=>{l(r)})}.bind(this)).then(function(){this.emit(Kt.VIEWS.RENDERED,this.section)}.bind(this))}reset(){this.iframe&&(this.iframe.style.width="0",this.iframe.style.height="0",this._width=0,this._height=0,this._textWidth=void 0,this._contentWidth=void 0,this._textHeight=void 0,this._contentHeight=void 0),this._needsReframe=!0}size(t,n){var r=t||this.settings.width,a=n||this.settings.height;this.layout.name==="pre-paginated"?this.lock("both",r,a):this.settings.axis==="horizontal"?this.lock("height",r,a):this.lock("width",r,a),this.settings.width=r,this.settings.height=a}lock(t,n,r){var a=bp(this.element),l;this.iframe?l=bp(this.iframe):l={width:0,height:0},t=="width"&&Un(n)&&(this.lockedWidth=n-a.width-l.width),t=="height"&&Un(r)&&(this.lockedHeight=r-a.height-l.height),t==="both"&&Un(n)&&Un(r)&&(this.lockedWidth=n-a.width-l.width,this.lockedHeight=r-a.height-l.height),this.displayed&&this.iframe&&this.expand()}expand(t){var n=this.lockedWidth,r=this.lockedHeight,a;!this.iframe||this._expanding||(this._expanding=!0,this.layout.name==="pre-paginated"?(n=this.layout.columnWidth,r=this.layout.height):this.settings.axis==="horizontal"?(n=this.contents.textWidth(),n%this.layout.pageWidth>0&&(n=Math.ceil(n/this.layout.pageWidth)*this.layout.pageWidth),this.settings.forceEvenPages&&(a=n/this.layout.pageWidth,this.layout.divisor>1&&this.layout.name==="reflowable"&&a%2>0&&(n+=this.layout.pageWidth))):this.settings.axis==="vertical"&&(r=this.contents.textHeight(),this.settings.flow==="paginated"&&r%this.layout.height>0&&(r=Math.ceil(r/this.layout.height)*this.layout.height)),(this._needsReframe||n!=this._width||r!=this._height)&&this.reframe(n,r),this._expanding=!1)}reframe(t,n){var r;Un(t)&&(this.element.style.width=t+"px",this.iframe.style.width=t+"px",this._width=t),Un(n)&&(this.element.style.height=n+"px",this.iframe.style.height=n+"px",this._height=n);let a=this.prevBounds?t-this.prevBounds.width:t,l=this.prevBounds?n-this.prevBounds.height:n;r={width:t,height:n,widthDelta:a,heightDelta:l},this.pane&&this.pane.render(),requestAnimationFrame(()=>{let o;for(let i in this.marks)this.marks.hasOwnProperty(i)&&(o=this.marks[i],this.placeMark(o.element,o.range))}),this.onResize(this,r),this.emit(Kt.VIEWS.RESIZED,r),this.prevBounds=r,this.elementBounds=Wf(this.element)}load(t){var n=new on,r=n.promise;if(!this.iframe)return n.reject(new Error("No Iframe Available")),r;if(this.iframe.onload=function(l){this.onLoad(l,n)}.bind(this),this.settings.method==="blobUrl")this.blobUrl=mp(t,"application/xhtml+xml"),this.iframe.src=this.blobUrl,this.element.appendChild(this.iframe);else if(this.settings.method==="srcdoc")this.iframe.srcdoc=t,this.element.appendChild(this.iframe);else{if(this.element.appendChild(this.iframe),this.document=this.iframe.contentDocument,!this.document)return n.reject(new Error("No Document Available")),r;if(this.iframe.contentDocument.open(),window.MSApp&&MSApp.execUnsafeLocalFunction){var a=this;MSApp.execUnsafeLocalFunction(function(){a.iframe.contentDocument.write(t)})}else this.iframe.contentDocument.write(t);this.iframe.contentDocument.close()}return r}onLoad(t,n){this.window=this.iframe.contentWindow,this.document=this.iframe.contentDocument,this.contents=new bm(this.document,this.document.body,this.section.cfiBase,this.section.index),this.rendering=!1;var r=this.document.querySelector("link[rel='canonical']");r?r.setAttribute("href",this.section.canonical):(r=this.document.createElement("link"),r.setAttribute("rel","canonical"),r.setAttribute("href",this.section.canonical),this.document.querySelector("head").appendChild(r)),this.contents.on(Kt.CONTENTS.EXPAND,()=>{this.displayed&&this.iframe&&(this.expand(),this.contents&&this.layout.format(this.contents))}),this.contents.on(Kt.CONTENTS.RESIZE,a=>{this.displayed&&this.iframe&&(this.expand(),this.contents&&this.layout.format(this.contents))}),n.resolve(this.contents)}setLayout(t){this.layout=t,this.contents&&(this.layout.format(this.contents),this.expand())}setAxis(t){this.settings.axis=t,t=="horizontal"?this.element.style.flex="none":this.element.style.flex="initial",this.size()}setWritingMode(t){this.writingMode=t}addListeners(){}removeListeners(t){}display(t){var n=new on;return this.displayed?n.resolve(this):this.render(t).then(function(){this.emit(Kt.VIEWS.DISPLAYED,this),this.onDisplayed(this),this.displayed=!0,n.resolve(this)}.bind(this),function(r){n.reject(r,this)}),n.promise}show(){this.element.style.visibility="visible",this.iframe&&(this.iframe.style.visibility="visible",this.iframe.style.transform="translateZ(0)",this.iframe.offsetWidth,this.iframe.style.transform=null),this.emit(Kt.VIEWS.SHOWN,this)}hide(){this.element.style.visibility="hidden",this.iframe.style.visibility="hidden",this.stopExpanding=!0,this.emit(Kt.VIEWS.HIDDEN,this)}offset(){return{top:this.element.offsetTop,left:this.element.offsetLeft}}width(){return this._width}height(){return this._height}position(){return this.element.getBoundingClientRect()}locationOf(t){this.iframe.getBoundingClientRect();var n=this.contents.locationOf(t,this.settings.ignoreClass);return{left:n.left,top:n.top}}onDisplayed(t){}onResize(t,n){}bounds(t){return(t||!this.elementBounds)&&(this.elementBounds=Wf(this.element)),this.elementBounds}highlight(t,n={},r,a="epubjs-hl",l={}){if(!this.contents)return;const o=Object.assign({fill:"yellow","fill-opacity":"0.3","mix-blend-mode":"multiply"},l);let i=this.contents.range(t),s=()=>{this.emit(Kt.VIEWS.MARK_CLICKED,t,n)};n.epubcfi=t,this.pane||(this.pane=new Wp(this.iframe,this.element));let u=new hm(i,a,n,o),d=this.pane.addMark(u);return this.highlights[t]={mark:d,element:d.element,listeners:[s,r]},d.element.setAttribute("ref",a),d.element.addEventListener("click",s),d.element.addEventListener("touchstart",s),r&&(d.element.addEventListener("click",r),d.element.addEventListener("touchstart",r)),d}underline(t,n={},r,a="epubjs-ul",l={}){if(!this.contents)return;const o=Object.assign({stroke:"black","stroke-opacity":"0.3","mix-blend-mode":"multiply"},l);let i=this.contents.range(t),s=()=>{this.emit(Kt.VIEWS.MARK_CLICKED,t,n)};n.epubcfi=t,this.pane||(this.pane=new Wp(this.iframe,this.element));let u=new w4(i,a,n,o),d=this.pane.addMark(u);return this.underlines[t]={mark:d,element:d.element,listeners:[s,r]},d.element.setAttribute("ref",a),d.element.addEventListener("click",s),d.element.addEventListener("touchstart",s),r&&(d.element.addEventListener("click",r),d.element.addEventListener("touchstart",r)),d}mark(t,n={},r){if(!this.contents)return;if(t in this.marks)return this.marks[t];let a=this.contents.range(t);if(!a)return;let l=a.commonAncestorContainer,o=l.nodeType===1?l:l.parentNode,i=u=>{this.emit(Kt.VIEWS.MARK_CLICKED,t,n)};a.collapsed&&l.nodeType===1?(a=new Range,a.selectNodeContents(l)):a.collapsed&&(a=new Range,a.selectNodeContents(o));let s=this.document.createElement("a");return s.setAttribute("ref","epubjs-mk"),s.style.position="absolute",s.dataset.epubcfi=t,n&&Object.keys(n).forEach(u=>{s.dataset[u]=n[u]}),r&&(s.addEventListener("click",r),s.addEventListener("touchstart",r)),s.addEventListener("click",i),s.addEventListener("touchstart",i),this.placeMark(s,a),this.element.appendChild(s),this.marks[t]={element:s,range:a,listeners:[i,r]},o}placeMark(t,n){let r,a,l;if(this.layout.name==="pre-paginated"||this.settings.axis!=="horizontal"){let i=n.getBoundingClientRect();r=i.top,a=i.right}else{let i=n.getClientRects(),s;for(var o=0;o!=i.length;o++)s=i[o],(!l||s.left<l)&&(l=s.left,a=Math.ceil(l/this.layout.props.pageWidth)*this.layout.props.pageWidth-this.layout.gap/2,r=s.top)}t.style.top=`${r}px`,t.style.left=`${a}px`}unhighlight(t){let n;t in this.highlights&&(n=this.highlights[t],this.pane.removeMark(n.mark),n.listeners.forEach(r=>{r&&(n.element.removeEventListener("click",r),n.element.removeEventListener("touchstart",r))}),delete this.highlights[t])}ununderline(t){let n;t in this.underlines&&(n=this.underlines[t],this.pane.removeMark(n.mark),n.listeners.forEach(r=>{r&&(n.element.removeEventListener("click",r),n.element.removeEventListener("touchstart",r))}),delete this.underlines[t])}unmark(t){let n;t in this.marks&&(n=this.marks[t],this.element.removeChild(n.element),n.listeners.forEach(r=>{r&&(n.element.removeEventListener("click",r),n.element.removeEventListener("touchstart",r))}),delete this.marks[t])}destroy(){for(let t in this.highlights)this.unhighlight(t);for(let t in this.underlines)this.ununderline(t);for(let t in this.marks)this.unmark(t);this.blobUrl&&m4(this.blobUrl),this.displayed&&(this.displayed=!1,this.removeListeners(),this.contents.destroy(),this.stopExpanding=!0,this.element.removeChild(this.iframe),this.pane&&(this.pane.element.remove(),this.pane=void 0),this.iframe=void 0,this.contents=void 0,this._textWidth=null,this._textHeight=null,this._width=null,this._height=null)}}il(U4.prototype);function DO(){var e="reverse",t=EO();return document.body.appendChild(t),t.scrollLeft>0?e="default":typeof Element<"u"&&Element.prototype.scrollIntoView?(t.children[0].children[1].scrollIntoView(),t.scrollLeft<0&&(e="negative")):(t.scrollLeft=1,t.scrollLeft===0&&(e="negative")),document.body.removeChild(t),e}function EO(){var e=document.createElement("div");e.dir="rtl",e.style.position="fixed",e.style.width="1px",e.style.height="1px",e.style.top="0px",e.style.left="0px",e.style.overflow="hidden";var t=document.createElement("div");t.style.width="2px";var n=document.createElement("span");n.style.width="1px",n.style.display="inline-block";var r=document.createElement("span");return r.style.width="1px",r.style.display="inline-block",t.appendChild(n),t.appendChild(r),e.appendChild(t),e}function IO(e){var t=typeof e;return e!=null&&(t=="object"||t=="function")}var mm=IO,BO=typeof Tn=="object"&&Tn&&Tn.Object===Object&&Tn,YO=BO,QO=YO,_O=typeof self=="object"&&self&&self.Object===Object&&self,$O=QO||_O||Function("return this")(),O4=$O,eR=O4,tR=function(){return eR.Date.now()},nR=tR,rR=/\s/;function aR(e){for(var t=e.length;t--&&rR.test(e.charAt(t)););return t}var lR=aR,oR=lR,iR=/^\s+/;function sR(e){return e&&e.slice(0,oR(e)+1).replace(iR,"")}var uR=sR,cR=O4,dR=cR.Symbol,R4=dR,Cy=R4,J4=Object.prototype,fR=J4.hasOwnProperty,pR=J4.toString,Tu=Cy?Cy.toStringTag:void 0;function vR(e){var t=fR.call(e,Tu),n=e[Tu];try{e[Tu]=void 0;var r=!0}catch{}var a=pR.call(e);return r&&(t?e[Tu]=n:delete e[Tu]),a}var bR=vR,hR=Object.prototype,mR=hR.toString;function SR(e){return mR.call(e)}var yR=SR,My=R4,AR=bR,WR=yR,kR="[object Null]",VR="[object Undefined]",Dy=My?My.toStringTag:void 0;function PR(e){return e==null?e===void 0?VR:kR:Dy&&Dy in Object(e)?AR(e):WR(e)}var TR=PR;function KR(e){return e!=null&&typeof e=="object"}var NR=KR,xR=TR,XR=NR,gR="[object Symbol]";function wR(e){return typeof e=="symbol"||XR(e)&&xR(e)==gR}var jR=wR,LR=uR,Ey=mm,qR=jR,Iy=0/0,UR=/^[-+]0x[0-9a-f]+$/i,OR=/^0b[01]+$/i,RR=/^0o[0-7]+$/i,JR=parseInt;function FR(e){if(typeof e=="number")return e;if(qR(e))return Iy;if(Ey(e)){var t=typeof e.valueOf=="function"?e.valueOf():e;e=Ey(t)?t+"":t}if(typeof e!="string")return e===0?e:+e;e=LR(e);var n=OR.test(e);return n||RR.test(e)?JR(e.slice(2),n?2:8):UR.test(e)?Iy:+e}var zR=FR,HR=mm,xb=nR,By=zR,ZR="Expected a function",GR=Math.max,CR=Math.min;function MR(e,t,n){var r,a,l,o,i,s,u=0,d=!1,f=!1,p=!0;if(typeof e!="function")throw new TypeError(ZR);t=By(t)||0,HR(n)&&(d=!!n.leading,f="maxWait"in n,l=f?GR(By(n.maxWait)||0,t):l,p="trailing"in n?!!n.trailing:p);function b(V){var T=r,P=a;return r=a=void 0,u=V,o=e.apply(P,T),o}function A(V){return u=V,i=setTimeout(v,t),d?b(V):o}function h(V){var T=V-s,P=V-u,x=t-T;return f?CR(x,l-P):x}function m(V){var T=V-s,P=V-u;return s===void 0||T>=t||T<0||f&&P>=l}function v(){var V=xb();if(m(V))return S(V);i=setTimeout(v,h(V))}function S(V){return i=void 0,p&&r?b(V):(r=a=void 0,o)}function y(){i!==void 0&&clearTimeout(i),u=0,r=s=a=i=void 0}function W(){return i===void 0?o:S(xb())}function k(){var V=xb(),T=m(V);if(r=arguments,a=this,s=V,T){if(i===void 0)return A(s);if(f)return clearTimeout(i),i=setTimeout(v,t),b(s)}return i===void 0&&(i=setTimeout(v,t)),o}return k.cancel=y,k.flush=W,k}var F4=MR,DR=F4,ER=mm,IR="Expected a function";function BR(e,t,n){var r=!0,a=!0;if(typeof e!="function")throw new TypeError(IR);return ER(n)&&(r="leading"in n?!!n.leading:r,a="trailing"in n?!!n.trailing:a),DR(e,t,{leading:r,maxWait:t,trailing:a})}var YR=BR;class QR{constructor(t){this.settings=t||{},this.id="epubjs-container-"+kv(),this.container=this.create(this.settings),this.settings.hidden&&(this.wrapper=this.wrap(this.container))}create(t){let n=t.height,r=t.width,a=t.overflow||!1,l=t.axis||"vertical",o=t.direction;or(this.settings,t),t.height&&Un(t.height)&&(n=t.height+"px"),t.width&&Un(t.width)&&(r=t.width+"px");let i=document.createElement("div");return i.id=this.id,i.classList.add("epub-container"),i.style.wordSpacing="0",i.style.lineHeight="0",i.style.verticalAlign="top",i.style.position="relative",l==="horizontal"&&(i.style.display="flex",i.style.flexDirection="row",i.style.flexWrap="nowrap"),r&&(i.style.width=r),n&&(i.style.height=n),a&&(a==="scroll"&&l==="vertical"?(i.style["overflow-y"]=a,i.style["overflow-x"]="hidden"):a==="scroll"&&l==="horizontal"?(i.style["overflow-y"]="hidden",i.style["overflow-x"]=a):i.style.overflow=a),o&&(i.dir=o,i.style.direction=o),o&&this.settings.fullsize&&(document.body.style.direction=o),i}wrap(t){var n=document.createElement("div");return n.style.visibility="hidden",n.style.overflow="hidden",n.style.width="0",n.style.height="0",n.appendChild(t),n}getElement(t){var n;if(f4(t)?n=t:typeof t=="string"&&(n=document.getElementById(t)),!n)throw new Error("Not an Element");return n}attachTo(t){var n=this.getElement(t),r;if(!!n)return this.settings.hidden?r=this.wrapper:r=this.container,n.appendChild(r),this.element=n,n}getContainer(){return this.container}onResize(t){(!Un(this.settings.width)||!Un(this.settings.height))&&(this.resizeFunc=YR(t,50),window.addEventListener("resize",this.resizeFunc,!1))}onOrientationChange(t){this.orientationChangeFunc=t,window.addEventListener("orientationchange",this.orientationChangeFunc,!1)}size(t,n){var r;let a=t||this.settings.width,l=n||this.settings.height;t===null?(r=this.element.getBoundingClientRect(),r.width&&(t=Math.floor(r.width),this.container.style.width=t+"px")):Un(t)?this.container.style.width=t+"px":this.container.style.width=t,n===null?(r=r||this.element.getBoundingClientRect(),r.height&&(n=r.height,this.container.style.height=n+"px")):Un(n)?this.container.style.height=n+"px":this.container.style.height=n,Un(t)||(t=this.container.clientWidth),Un(n)||(n=this.container.clientHeight),this.containerStyles=window.getComputedStyle(this.container),this.containerPadding={left:parseFloat(this.containerStyles["padding-left"])||0,right:parseFloat(this.containerStyles["padding-right"])||0,top:parseFloat(this.containerStyles["padding-top"])||0,bottom:parseFloat(this.containerStyles["padding-bottom"])||0};let o=hp(),i=window.getComputedStyle(document.body),s={left:parseFloat(i["padding-left"])||0,right:parseFloat(i["padding-right"])||0,top:parseFloat(i["padding-top"])||0,bottom:parseFloat(i["padding-bottom"])||0};return a||(t=o.width-s.left-s.right),(this.settings.fullsize&&!l||!l)&&(n=o.height-s.top-s.bottom),{width:t-this.containerPadding.left-this.containerPadding.right,height:n-this.containerPadding.top-this.containerPadding.bottom}}bounds(){let t;return this.container.style.overflow!=="visible"&&(t=this.container&&this.container.getBoundingClientRect()),!t||!t.width||!t.height?hp():t}getSheet(){var t=document.createElement("style");return t.appendChild(document.createTextNode("")),document.head.appendChild(t),t.sheet}addStyleRules(t,n){var r="#"+this.id+" ",a="";this.sheet||(this.sheet=this.getSheet()),n.forEach(function(l){for(var o in l)l.hasOwnProperty(o)&&(a+=o+":"+l[o]+";")}),this.sheet.insertRule(r+t+" {"+a+"}",0)}axis(t){t==="horizontal"?(this.container.style.display="flex",this.container.style.flexDirection="row",this.container.style.flexWrap="nowrap"):this.container.style.display="block",this.settings.axis=t}direction(t){this.container&&(this.container.dir=t,this.container.style.direction=t),this.settings.fullsize&&(document.body.style.direction=t),this.settings.dir=t}overflow(t){this.container&&(t==="scroll"&&this.settings.axis==="vertical"?(this.container.style["overflow-y"]=t,this.container.style["overflow-x"]="hidden"):t==="scroll"&&this.settings.axis==="horizontal"?(this.container.style["overflow-y"]="hidden",this.container.style["overflow-x"]=t):this.container.style.overflow=t),this.settings.overflow=t}destroy(){this.element&&(this.settings.hidden?this.wrapper:this.container,this.element.contains(this.container)&&this.element.removeChild(this.container),window.removeEventListener("resize",this.resizeFunc),window.removeEventListener("orientationChange",this.orientationChangeFunc))}}class _R{constructor(t){this.container=t,this._views=[],this.length=0,this.hidden=!1}all(){return this._views}first(){return this._views[0]}last(){return this._views[this._views.length-1]}indexOf(t){return this._views.indexOf(t)}slice(){return this._views.slice.apply(this._views,arguments)}get(t){return this._views[t]}append(t){return this._views.push(t),this.container&&this.container.appendChild(t.element),this.length++,t}prepend(t){return this._views.unshift(t),this.container&&this.container.insertBefore(t.element,this.container.firstChild),this.length++,t}insert(t,n){return this._views.splice(n,0,t),this.container&&(n<this.container.children.length?this.container.insertBefore(t.element,this.container.children[n]):this.container.appendChild(t.element)),this.length++,t}remove(t){var n=this._views.indexOf(t);n>-1&&this._views.splice(n,1),this.destroy(t),this.length--}destroy(t){t.displayed&&t.destroy(),this.container&&this.container.removeChild(t.element),t=null}forEach(){return this._views.forEach.apply(this._views,arguments)}clear(){var t,n=this.length;if(!!this.length){for(var r=0;r<n;r++)t=this._views[r],this.destroy(t);this._views=[],this.length=0}}find(t){for(var n,r=this.length,a=0;a<r;a++)if(n=this._views[a],n.displayed&&n.section.index==t.index)return n}displayed(){for(var t=[],n,r=this.length,a=0;a<r;a++)n=this._views[a],n.displayed&&t.push(n);return t}show(){for(var t,n=this.length,r=0;r<n;r++)t=this._views[r],t.displayed&&t.show();this.hidden=!1}hide(){for(var t,n=this.length,r=0;r<n;r++)t=this._views[r],t.displayed&&t.hide();this.hidden=!0}}class kp{constructor(t){this.name="default",this.optsSettings=t.settings,this.View=t.view,this.request=t.request,this.renditionQueue=t.queue,this.q=new vm(this),this.settings=or(this.settings||{},{infinite:!0,hidden:!1,width:void 0,height:void 0,axis:void 0,writingMode:void 0,flow:"scrolled",ignoreClass:"",fullsize:void 0,allowScriptedContent:!1,allowPopups:!1}),or(this.settings,t.settings||{}),this.viewSettings={ignoreClass:this.settings.ignoreClass,axis:this.settings.axis,flow:this.settings.flow,layout:this.layout,method:this.settings.method,width:0,height:0,forceEvenPages:!0,allowScriptedContent:this.settings.allowScriptedContent,allowPopups:this.settings.allowPopups},this.rendered=!1}render(t,n){let r=t.tagName;typeof this.settings.fullsize>"u"&&r&&(r.toLowerCase()=="body"||r.toLowerCase()=="html")&&(this.settings.fullsize=!0),this.settings.fullsize&&(this.settings.overflow="visible",this.overflow=this.settings.overflow),this.settings.size=n,this.settings.rtlScrollType=DO(),this.stage=new QR({width:n.width,height:n.height,overflow:this.overflow,hidden:this.settings.hidden,axis:this.settings.axis,fullsize:this.settings.fullsize,direction:this.settings.direction}),this.stage.attachTo(t),this.container=this.stage.getContainer(),this.views=new _R(this.container),this._bounds=this.bounds(),this._stageSize=this.stage.size(),this.viewSettings.width=this._stageSize.width,this.viewSettings.height=this._stageSize.height,this.stage.onResize(this.onResized.bind(this)),this.stage.onOrientationChange(this.onOrientationChange.bind(this)),this.addEventListeners(),this.layout&&this.updateLayout(),this.rendered=!0}addEventListeners(){var t;window.addEventListener("unload",function(n){this.destroy()}.bind(this)),this.settings.fullsize?t=window:t=this.container,this._onScroll=this.onScroll.bind(this),t.addEventListener("scroll",this._onScroll)}removeEventListeners(){var t;this.settings.fullsize?t=window:t=this.container,t.removeEventListener("scroll",this._onScroll),this._onScroll=void 0}destroy(){clearTimeout(this.orientationTimeout),clearTimeout(this.resizeTimeout),clearTimeout(this.afterScrolled),this.clear(),this.removeEventListeners(),this.stage.destroy(),this.rendered=!1}onOrientationChange(t){let{orientation:n}=window;this.optsSettings.resizeOnOrientationChange&&this.resize(),clearTimeout(this.orientationTimeout),this.orientationTimeout=setTimeout(function(){this.orientationTimeout=void 0,this.optsSettings.resizeOnOrientationChange&&this.resize(),this.emit(Kt.MANAGERS.ORIENTATION_CHANGE,n)}.bind(this),500)}onResized(t){this.resize()}resize(t,n,r){let a=this.stage.size(t,n);if(this.winBounds=hp(),this.orientationTimeout&&this.winBounds.width===this.winBounds.height){this._stageSize=void 0;return}this._stageSize&&this._stageSize.width===a.width&&this._stageSize.height===a.height||(this._stageSize=a,this._bounds=this.bounds(),this.clear(),this.viewSettings.width=this._stageSize.width,this.viewSettings.height=this._stageSize.height,this.updateLayout(),this.emit(Kt.MANAGERS.RESIZED,{width:this._stageSize.width,height:this._stageSize.height},r))}createView(t,n){return new this.View(t,or(this.viewSettings,{forceRight:n}))}handleNextPrePaginated(t,n,r){let a;if(this.layout.name==="pre-paginated"&&this.layout.divisor>1){if(t||n.index===0)return;if(a=n.next(),a&&!a.properties.includes("page-spread-left"))return r.call(this,a)}}display(t,n){var r=new on,a=r.promise;(n===t.href||Un(n))&&(n=void 0);var l=this.views.find(t);if(l&&t&&this.layout.name!=="pre-paginated"){let i=l.offset();if(this.settings.direction==="ltr")this.scrollTo(i.left,i.top,!0);else{let s=l.width();this.scrollTo(i.left+s,i.top,!0)}if(n){let s=l.locationOf(n),u=l.width();this.moveTo(s,u)}return r.resolve(),a}this.clear();let o=!1;return this.layout.name==="pre-paginated"&&this.layout.divisor===2&&t.properties.includes("page-spread-right")&&(o=!0),this.add(t,o).then(function(i){if(n){let s=i.locationOf(n),u=i.width();this.moveTo(s,u)}}.bind(this),i=>{r.reject(i)}).then(function(){return this.handleNextPrePaginated(o,t,this.add)}.bind(this)).then(function(){this.views.show(),r.resolve()}.bind(this)),a}afterDisplayed(t){this.emit(Kt.MANAGERS.ADDED,t)}afterResized(t){this.emit(Kt.MANAGERS.RESIZE,t.section)}moveTo(t,n){var r=0,a=0;this.isPaginated?(r=Math.floor(t.left/this.layout.delta)*this.layout.delta,r+this.layout.delta>this.container.scrollWidth&&(r=this.container.scrollWidth-this.layout.delta),a=Math.floor(t.top/this.layout.delta)*this.layout.delta,a+this.layout.delta>this.container.scrollHeight&&(a=this.container.scrollHeight-this.layout.delta)):a=t.top,this.settings.direction==="rtl"&&(r=r+this.layout.delta,r=r-n),this.scrollTo(r,a,!0)}add(t,n){var r=this.createView(t,n);return this.views.append(r),r.onDisplayed=this.afterDisplayed.bind(this),r.onResize=this.afterResized.bind(this),r.on(Kt.VIEWS.AXIS,a=>{this.updateAxis(a)}),r.on(Kt.VIEWS.WRITING_MODE,a=>{this.updateWritingMode(a)}),r.display(this.request)}append(t,n){var r=this.createView(t,n);return this.views.append(r),r.onDisplayed=this.afterDisplayed.bind(this),r.onResize=this.afterResized.bind(this),r.on(Kt.VIEWS.AXIS,a=>{this.updateAxis(a)}),r.on(Kt.VIEWS.WRITING_MODE,a=>{this.updateWritingMode(a)}),r.display(this.request)}prepend(t,n){var r=this.createView(t,n);return r.on(Kt.VIEWS.RESIZED,a=>{this.counter(a)}),this.views.prepend(r),r.onDisplayed=this.afterDisplayed.bind(this),r.onResize=this.afterResized.bind(this),r.on(Kt.VIEWS.AXIS,a=>{this.updateAxis(a)}),r.on(Kt.VIEWS.WRITING_MODE,a=>{this.updateWritingMode(a)}),r.display(this.request)}counter(t){this.settings.axis==="vertical"?this.scrollBy(0,t.heightDelta,!0):this.scrollBy(t.widthDelta,0,!0)}next(){var t,n;let r=this.settings.direction;if(!!this.views.length&&(this.isPaginated&&this.settings.axis==="horizontal"&&(!r||r==="ltr")?(this.scrollLeft=this.container.scrollLeft,n=this.container.scrollLeft+this.container.offsetWidth+this.layout.delta,n<=this.container.scrollWidth?this.scrollBy(this.layout.delta,0,!0):t=this.views.last().section.next()):this.isPaginated&&this.settings.axis==="horizontal"&&r==="rtl"?(this.scrollLeft=this.container.scrollLeft,this.settings.rtlScrollType==="default"?(n=this.container.scrollLeft,n>0?this.scrollBy(this.layout.delta,0,!0):t=this.views.last().section.next()):(n=this.container.scrollLeft+this.layout.delta*-1,n>this.container.scrollWidth*-1?this.scrollBy(this.layout.delta,0,!0):t=this.views.last().section.next())):this.isPaginated&&this.settings.axis==="vertical"?(this.scrollTop=this.container.scrollTop,this.container.scrollTop+this.container.offsetHeight<this.container.scrollHeight?this.scrollBy(0,this.layout.height,!0):t=this.views.last().section.next()):t=this.views.last().section.next(),t)){this.clear(),this.updateLayout();let a=!1;return this.layout.name==="pre-paginated"&&this.layout.divisor===2&&t.properties.includes("page-spread-right")&&(a=!0),this.append(t,a).then(function(){return this.handleNextPrePaginated(a,t,this.append)}.bind(this),l=>l).then(function(){!this.isPaginated&&this.settings.axis==="horizontal"&&this.settings.direction==="rtl"&&this.settings.rtlScrollType==="default"&&this.scrollTo(this.container.scrollWidth,0,!0),this.views.show()}.bind(this))}}prev(){var t,n;let r=this.settings.direction;if(!!this.views.length&&(this.isPaginated&&this.settings.axis==="horizontal"&&(!r||r==="ltr")?(this.scrollLeft=this.container.scrollLeft,n=this.container.scrollLeft,n>0?this.scrollBy(-this.layout.delta,0,!0):t=this.views.first().section.prev()):this.isPaginated&&this.settings.axis==="horizontal"&&r==="rtl"?(this.scrollLeft=this.container.scrollLeft,this.settings.rtlScrollType==="default"?(n=this.container.scrollLeft+this.container.offsetWidth,n<this.container.scrollWidth?this.scrollBy(-this.layout.delta,0,!0):t=this.views.first().section.prev()):(n=this.container.scrollLeft,n<0?this.scrollBy(-this.layout.delta,0,!0):t=this.views.first().section.prev())):this.isPaginated&&this.settings.axis==="vertical"?(this.scrollTop=this.container.scrollTop,this.container.scrollTop>0?this.scrollBy(0,-this.layout.height,!0):t=this.views.first().section.prev()):t=this.views.first().section.prev(),t)){this.clear(),this.updateLayout();let a=!1;return this.layout.name==="pre-paginated"&&this.layout.divisor===2&&typeof t.prev()!="object"&&(a=!0),this.prepend(t,a).then(function(){var l;if(this.layout.name==="pre-paginated"&&this.layout.divisor>1&&(l=t.prev(),l))return this.prepend(l)}.bind(this),l=>l).then(function(){this.isPaginated&&this.settings.axis==="horizontal"&&(this.settings.direction==="rtl"?this.settings.rtlScrollType==="default"?this.scrollTo(0,0,!0):this.scrollTo(this.container.scrollWidth*-1+this.layout.delta,0,!0):this.scrollTo(this.container.scrollWidth-this.layout.delta,0,!0)),this.views.show()}.bind(this))}}current(){var t=this.visible();return t.length?t[t.length-1]:null}clear(){this.views&&(this.views.hide(),this.scrollTo(0,0,!0),this.views.clear())}currentLocation(){return this.updateLayout(),this.isPaginated&&this.settings.axis==="horizontal"?this.location=this.paginatedLocation():this.location=this.scrolledLocation(),this.location}scrolledLocation(){let t=this.visible(),n=this.container.getBoundingClientRect(),r=n.height<window.innerHeight?n.height:window.innerHeight,a=n.width<window.innerWidth?n.width:window.innerWidth,l=this.settings.axis==="vertical";this.settings.direction;let o=0,i=0;return this.settings.fullsize&&(o=l?window.scrollY:window.scrollX),t.map(u=>{let{index:d,href:f}=u.section,p=u.position(),b=u.width(),A=u.height(),h,m,v,S;l?(h=o+n.top-p.top+i,m=h+r-i,S=this.layout.count(A,r).pages,v=r):(h=o+n.left-p.left+i,m=h+a-i,S=this.layout.count(b,a).pages,v=a);let y=Math.ceil(h/v),W=[],k=Math.ceil(m/v);if(this.settings.direction==="rtl"&&!l){let P=y;y=S-k,k=S-P}W=[];for(var V=y;V<=k;V++){let P=V+1;W.push(P)}let T=this.mapping.page(u.contents,u.section.cfiBase,h,m);return{index:d,href:f,pages:W,totalPages:S,mapping:T}})}paginatedLocation(){let t=this.visible(),n=this.container.getBoundingClientRect(),r=0,a=0;return this.settings.fullsize&&(r=window.scrollX),t.map(o=>{let{index:i,href:s}=o.section,u,d=o.position(),f=o.width(),p,b,A;this.settings.direction==="rtl"?(u=n.right-r,A=Math.min(Math.abs(u-d.left),this.layout.width)-a,b=d.width-(d.right-u)-a,p=b-A):(u=n.left+r,A=Math.min(d.right-u,this.layout.width)-a,p=u-d.left+a,b=p+A),a+=A;let h=this.mapping.page(o.contents,o.section.cfiBase,p,b),m=this.layout.count(f).pages,v=Math.floor(p/this.layout.pageWidth),S=[],y=Math.floor(b/this.layout.pageWidth);if(v<0&&(v=0,y=y+1),this.settings.direction==="rtl"){let k=v;v=m-y,y=m-k}for(var W=v+1;W<=y;W++){let k=W;S.push(k)}return{index:i,href:s,pages:S,totalPages:m,mapping:h}})}isVisible(t,n,r,a){var l=t.position(),o=a||this.bounds();return this.settings.axis==="horizontal"&&l.right>o.left-n&&l.left<o.right+r?!0:this.settings.axis==="vertical"&&l.bottom>o.top-n&&l.top<o.bottom+r}visible(){for(var t=this.bounds(),n=this.views.displayed(),r=n.length,a=[],l,o,i=0;i<r;i++)o=n[i],l=this.isVisible(o,0,0,t),l===!0&&a.push(o);return a}scrollBy(t,n,r){let a=this.settings.direction==="rtl"?-1:1;r&&(this.ignore=!0),this.settings.fullsize?window.scrollBy(t*a,n*a):(t&&(this.container.scrollLeft+=t*a),n&&(this.container.scrollTop+=n)),this.scrolled=!0}scrollTo(t,n,r){r&&(this.ignore=!0),this.settings.fullsize?window.scrollTo(t,n):(this.container.scrollLeft=t,this.container.scrollTop=n),this.scrolled=!0}onScroll(){let t,n;this.settings.fullsize?(t=window.scrollY,n=window.scrollX):(t=this.container.scrollTop,n=this.container.scrollLeft),this.scrollTop=t,this.scrollLeft=n,this.ignore?this.ignore=!1:(this.emit(Kt.MANAGERS.SCROLL,{top:t,left:n}),clearTimeout(this.afterScrolled),this.afterScrolled=setTimeout(function(){this.emit(Kt.MANAGERS.SCROLLED,{top:this.scrollTop,left:this.scrollLeft})}.bind(this),20))}bounds(){var t;return t=this.stage.bounds(),t}applyLayout(t){this.layout=t,this.updateLayout(),this.views&&this.views.length>0&&this.layout.name==="pre-paginated"&&this.display(this.views.first().section)}updateLayout(){!this.stage||(this._stageSize=this.stage.size(),this.isPaginated?(this.layout.calculate(this._stageSize.width,this._stageSize.height,this.settings.gap),this.settings.offset=this.layout.delta/this.layout.divisor):this.layout.calculate(this._stageSize.width,this._stageSize.height),this.viewSettings.width=this.layout.width,this.viewSettings.height=this.layout.height,this.setLayout(this.layout))}setLayout(t){this.viewSettings.layout=t,this.mapping=new Ap(t.props,this.settings.direction,this.settings.axis),this.views&&this.views.forEach(function(n){n&&n.setLayout(t)})}updateWritingMode(t){this.writingMode=t}updateAxis(t,n){!n&&t===this.settings.axis||(this.settings.axis=t,this.stage&&this.stage.axis(t),this.viewSettings.axis=t,this.mapping&&(this.mapping=new Ap(this.layout.props,this.settings.direction,this.settings.axis)),this.layout&&(t==="vertical"?this.layout.spread("none"):this.layout.spread(this.layout.settings.spread)))}updateFlow(t,n="auto"){let r=t==="paginated"||t==="auto";this.isPaginated=r,t==="scrolled-doc"||t==="scrolled-continuous"||t==="scrolled"?this.updateAxis("vertical"):this.updateAxis("horizontal"),this.viewSettings.flow=t,this.settings.overflow?this.overflow=this.settings.overflow:this.overflow=r?"hidden":n,this.stage&&this.stage.overflow(this.overflow),this.updateLayout()}getContents(){var t=[];return this.views&&this.views.forEach(function(n){const r=n&&n.contents;r&&t.push(r)}),t}direction(t="ltr"){this.settings.direction=t,this.stage&&this.stage.direction(t),this.viewSettings.direction=t,this.updateLayout()}isRendered(){return this.rendered}}il(kp.prototype);const $R=Math.PI/2,eJ={easeOutSine:function(e){return Math.sin(e*$R)},easeInOutSine:function(e){return-.5*(Math.cos(Math.PI*e)-1)},easeInOutQuint:function(e){return(e/=.5)<1?.5*Math.pow(e,5):.5*(Math.pow(e-2,5)+2)},easeInCubic:function(e){return Math.pow(e,3)}};class F1{constructor(t,n){this.settings=or({duration:80,minVelocity:.2,minDistance:10,easing:eJ.easeInCubic},n||{}),this.supportsTouch=this.supportsTouch(),this.supportsTouch&&this.setup(t)}setup(t){this.manager=t,this.layout=this.manager.layout,this.fullsize=this.manager.settings.fullsize,this.fullsize?(this.element=this.manager.stage.element,this.scroller=window,this.disableScroll()):(this.element=this.manager.stage.container,this.scroller=this.element,this.element.style.WebkitOverflowScrolling="touch"),this.manager.settings.offset=this.layout.width,this.manager.settings.afterScrolledTimeout=this.settings.duration*2,this.isVertical=this.manager.settings.axis==="vertical",!(!this.manager.isPaginated||this.isVertical)&&(this.touchCanceler=!1,this.resizeCanceler=!1,this.snapping=!1,this.scrollLeft,this.scrollTop,this.startTouchX=void 0,this.startTouchY=void 0,this.startTime=void 0,this.endTouchX=void 0,this.endTouchY=void 0,this.endTime=void 0,this.addListeners())}supportsTouch(){return!!("ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch)}disableScroll(){this.element.style.overflow="hidden"}enableScroll(){this.element.style.overflow=""}addListeners(){this._onResize=this.onResize.bind(this),window.addEventListener("resize",this._onResize),this._onScroll=this.onScroll.bind(this),this.scroller.addEventListener("scroll",this._onScroll),this._onTouchStart=this.onTouchStart.bind(this),this.scroller.addEventListener("touchstart",this._onTouchStart,{passive:!0}),this.on("touchstart",this._onTouchStart),this._onTouchMove=this.onTouchMove.bind(this),this.scroller.addEventListener("touchmove",this._onTouchMove,{passive:!0}),this.on("touchmove",this._onTouchMove),this._onTouchEnd=this.onTouchEnd.bind(this),this.scroller.addEventListener("touchend",this._onTouchEnd,{passive:!0}),this.on("touchend",this._onTouchEnd),this._afterDisplayed=this.afterDisplayed.bind(this),this.manager.on(Kt.MANAGERS.ADDED,this._afterDisplayed)}removeListeners(){window.removeEventListener("resize",this._onResize),this._onResize=void 0,this.scroller.removeEventListener("scroll",this._onScroll),this._onScroll=void 0,this.scroller.removeEventListener("touchstart",this._onTouchStart,{passive:!0}),this.off("touchstart",this._onTouchStart),this._onTouchStart=void 0,this.scroller.removeEventListener("touchmove",this._onTouchMove,{passive:!0}),this.off("touchmove",this._onTouchMove),this._onTouchMove=void 0,this.scroller.removeEventListener("touchend",this._onTouchEnd,{passive:!0}),this.off("touchend",this._onTouchEnd),this._onTouchEnd=void 0,this.manager.off(Kt.MANAGERS.ADDED,this._afterDisplayed),this._afterDisplayed=void 0}afterDisplayed(t){let n=t.contents;["touchstart","touchmove","touchend"].forEach(r=>{n.on(r,a=>this.triggerViewEvent(a,n))})}triggerViewEvent(t,n){this.emit(t.type,t,n)}onScroll(t){this.scrollLeft=this.fullsize?window.scrollX:this.scroller.scrollLeft,this.scrollTop=this.fullsize?window.scrollY:this.scroller.scrollTop}onResize(t){this.resizeCanceler=!0}onTouchStart(t){let{screenX:n,screenY:r}=t.touches[0];this.fullsize&&this.enableScroll(),this.touchCanceler=!0,this.startTouchX||(this.startTouchX=n,this.startTouchY=r,this.startTime=this.now()),this.endTouchX=n,this.endTouchY=r,this.endTime=this.now()}onTouchMove(t){let{screenX:n,screenY:r}=t.touches[0],a=Math.abs(r-this.endTouchY);this.touchCanceler=!0,!this.fullsize&&a<10&&(this.element.scrollLeft-=n-this.endTouchX),this.endTouchX=n,this.endTouchY=r,this.endTime=this.now()}onTouchEnd(t){this.fullsize&&this.disableScroll(),this.touchCanceler=!1;let n=this.wasSwiped();n!==0?this.snap(n):this.snap(),this.startTouchX=void 0,this.startTouchY=void 0,this.startTime=void 0,this.endTouchX=void 0,this.endTouchY=void 0,this.endTime=void 0}wasSwiped(){let t=this.layout.pageWidth*this.layout.divisor,n=this.endTouchX-this.startTouchX,r=Math.abs(n),a=this.endTime-this.startTime,l=n/a,o=this.settings.minVelocity;if(r<=this.settings.minDistance||r>=t)return 0;if(l>o)return-1;if(l<-o)return 1}needsSnap(){let t=this.scrollLeft,n=this.layout.pageWidth*this.layout.divisor;return t%n!==0}snap(t=0){let n=this.scrollLeft,r=this.layout.pageWidth*this.layout.divisor,a=Math.round(n/r)*r;return t&&(a+=t*r),this.smoothScrollTo(a)}smoothScrollTo(t){const n=new on,r=this.scrollLeft,a=this.now(),l=this.settings.duration,o=this.settings.easing;this.snapping=!0;function i(){const s=this.now(),u=Math.min(1,(s-a)/l);if(o(u),this.touchCanceler||this.resizeCanceler){this.resizeCanceler=!1,this.snapping=!1,n.resolve();return}u<1?(window.requestAnimationFrame(i.bind(this)),this.scrollTo(r+(t-r)*u,0)):(this.scrollTo(t,0),this.snapping=!1,n.resolve())}return i.call(this),n.promise}scrollTo(t=0,n=0){this.fullsize?window.scroll(t,n):(this.scroller.scrollLeft=t,this.scroller.scrollTop=n)}now(){return"now"in window.performance?performance.now():new Date().getTime()}destroy(){!this.scroller||(this.fullsize&&this.enableScroll(),this.removeListeners(),this.scroller=void 0)}}il(F1.prototype);class tJ extends kp{constructor(t){super(t),this.name="continuous",this.settings=or(this.settings||{},{infinite:!0,overflow:void 0,axis:void 0,writingMode:void 0,flow:"scrolled",offset:500,offsetDelta:250,width:void 0,height:void 0,snap:!1,afterScrolledTimeout:10,allowScriptedContent:!1,allowPopups:!1}),or(this.settings,t.settings||{}),t.settings.gap!="undefined"&&t.settings.gap===0&&(this.settings.gap=t.settings.gap),this.viewSettings={ignoreClass:this.settings.ignoreClass,axis:this.settings.axis,flow:this.settings.flow,layout:this.layout,width:0,height:0,forceEvenPages:!1,allowScriptedContent:this.settings.allowScriptedContent,allowPopups:this.settings.allowPopups},this.scrollTop=0,this.scrollLeft=0}display(t,n){return kp.prototype.display.call(this,t,n).then(function(){return this.fill()}.bind(this))}fill(t){var n=t||new on;return this.q.enqueue(()=>this.check()).then(r=>{r?this.fill(n):n.resolve()}),n.promise}moveTo(t){var n=0,r=0;this.isPaginated?(n=Math.floor(t.left/this.layout.delta)*this.layout.delta,n+this.settings.offsetDelta):(r=t.top,t.top+this.settings.offsetDelta),(n>0||r>0)&&this.scrollBy(n,r,!0)}afterResized(t){this.emit(Kt.MANAGERS.RESIZE,t.section)}removeShownListeners(t){t.onDisplayed=function(){}}add(t){var n=this.createView(t);return this.views.append(n),n.on(Kt.VIEWS.RESIZED,r=>{n.expanded=!0}),n.on(Kt.VIEWS.AXIS,r=>{this.updateAxis(r)}),n.on(Kt.VIEWS.WRITING_MODE,r=>{this.updateWritingMode(r)}),n.onDisplayed=this.afterDisplayed.bind(this),n.onResize=this.afterResized.bind(this),n.display(this.request)}append(t){var n=this.createView(t);return n.on(Kt.VIEWS.RESIZED,r=>{n.expanded=!0}),n.on(Kt.VIEWS.AXIS,r=>{this.updateAxis(r)}),n.on(Kt.VIEWS.WRITING_MODE,r=>{this.updateWritingMode(r)}),this.views.append(n),n.onDisplayed=this.afterDisplayed.bind(this),n}prepend(t){var n=this.createView(t);return n.on(Kt.VIEWS.RESIZED,r=>{this.counter(r),n.expanded=!0}),n.on(Kt.VIEWS.AXIS,r=>{this.updateAxis(r)}),n.on(Kt.VIEWS.WRITING_MODE,r=>{this.updateWritingMode(r)}),this.views.prepend(n),n.onDisplayed=this.afterDisplayed.bind(this),n}counter(t){this.settings.axis==="vertical"?this.scrollBy(0,t.heightDelta,!0):this.scrollBy(t.widthDelta,0,!0)}update(t){for(var n=this.bounds(),r=this.views.all(),a=r.length,l=typeof t<"u"?t:this.settings.offset||0,o,i,s=new on,u=[],d=0;d<a;d++)if(i=r[d],o=this.isVisible(i,l,l,n),o===!0)if(i.displayed)i.show();else{let f=i.display(this.request).then(function(p){p.show()},p=>{i.hide()});u.push(f)}else this.q.enqueue(i.destroy.bind(i)),clearTimeout(this.trimTimeout),this.trimTimeout=setTimeout(function(){this.q.enqueue(this.trim.bind(this))}.bind(this),250);return u.length?Promise.all(u).catch(f=>{s.reject(f)}):(s.resolve(),s.promise)}check(t,n){var r=new on,a=[],l=this.settings.axis==="horizontal",o=this.settings.offset||0;t&&l&&(o=t),n&&!l&&(o=n);var i=this._bounds;let s=l?this.scrollLeft:this.scrollTop,u=l?Math.floor(i.width):i.height,d=l?this.container.scrollWidth:this.container.scrollHeight,f=this.writingMode&&this.writingMode.indexOf("vertical")===0?"vertical":"horizontal",p=this.settings.rtlScrollType,b=this.settings.direction==="rtl";this.settings.fullsize?(l&&b&&p==="negative"||!l&&b&&p==="default")&&(s=s*-1):(b&&p==="default"&&f==="horizontal"&&(s=d-u-s),b&&p==="negative"&&f==="horizontal"&&(s=s*-1));let A=()=>{let y=this.views.first(),W=y&&y.section.prev();W&&a.push(this.prepend(W))},h=()=>{let y=this.views.last(),W=y&&y.section.next();W&&a.push(this.append(W))},m=s+u+o,v=s-o;m>=d&&h(),v<0&&A();let S=a.map(y=>y.display(this.request));return a.length?Promise.all(S).then(()=>this.check()).then(()=>this.update(o),y=>y):(this.q.enqueue(function(){this.update()}.bind(this)),r.resolve(!1),r.promise)}trim(){for(var t=new on,n=this.views.displayed(),r=n[0],a=n[n.length-1],l=this.views.indexOf(r),o=this.views.indexOf(a),i=this.views.slice(0,l),s=this.views.slice(o+1),u=0;u<i.length-1;u++)this.erase(i[u],i);for(var d=1;d<s.length;d++)this.erase(s[d]);return t.resolve(),t.promise}erase(t,n){var r,a;this.settings.fullsize?(r=window.scrollY,a=window.scrollX):(r=this.container.scrollTop,a=this.container.scrollLeft);var l=t.bounds();this.views.remove(t),n&&(this.settings.axis==="vertical"?this.scrollTo(0,r-l.height,!0):this.settings.direction==="rtl"?this.settings.fullsize?this.scrollTo(a+Math.floor(l.width),0,!0):this.scrollTo(a,0,!0):this.scrollTo(a-Math.floor(l.width),0,!0))}addEventListeners(t){window.addEventListener("unload",function(n){this.ignore=!0,this.destroy()}.bind(this)),this.addScrollListeners(),this.isPaginated&&this.settings.snap&&(this.snapper=new F1(this,this.settings.snap&&typeof this.settings.snap=="object"&&this.settings.snap))}addScrollListeners(){var t;this.tick=dm;let n=this.settings.direction==="rtl"&&this.settings.rtlScrollType==="default"?-1:1;this.scrollDeltaVert=0,this.scrollDeltaHorz=0,this.settings.fullsize?(t=window,this.scrollTop=window.scrollY*n,this.scrollLeft=window.scrollX*n):(t=this.container,this.scrollTop=this.container.scrollTop,this.scrollLeft=this.container.scrollLeft),this._onScroll=this.onScroll.bind(this),t.addEventListener("scroll",this._onScroll),this._scrolled=F4(this.scrolled.bind(this),30),this.didScroll=!1}removeEventListeners(){var t;this.settings.fullsize?t=window:t=this.container,t.removeEventListener("scroll",this._onScroll),this._onScroll=void 0}onScroll(){let t,n,r=this.settings.direction==="rtl"&&this.settings.rtlScrollType==="default"?-1:1;this.settings.fullsize?(t=window.scrollY*r,n=window.scrollX*r):(t=this.container.scrollTop,n=this.container.scrollLeft),this.scrollTop=t,this.scrollLeft=n,this.ignore?this.ignore=!1:this._scrolled(),this.scrollDeltaVert+=Math.abs(t-this.prevScrollTop),this.scrollDeltaHorz+=Math.abs(n-this.prevScrollLeft),this.prevScrollTop=t,this.prevScrollLeft=n,clearTimeout(this.scrollTimeout),this.scrollTimeout=setTimeout(function(){this.scrollDeltaVert=0,this.scrollDeltaHorz=0}.bind(this),150),clearTimeout(this.afterScrolled),this.didScroll=!1}scrolled(){this.q.enqueue(function(){return this.check()}.bind(this)),this.emit(Kt.MANAGERS.SCROLL,{top:this.scrollTop,left:this.scrollLeft}),clearTimeout(this.afterScrolled),this.afterScrolled=setTimeout(function(){this.snapper&&this.snapper.supportsTouch&&this.snapper.needsSnap()||this.emit(Kt.MANAGERS.SCROLLED,{top:this.scrollTop,left:this.scrollLeft})}.bind(this),this.settings.afterScrolledTimeout)}next(){let t=this.layout.props.name==="pre-paginated"&&this.layout.props.spread?this.layout.props.delta*2:this.layout.props.delta;!this.views.length||(this.isPaginated&&this.settings.axis==="horizontal"?this.scrollBy(t,0,!0):this.scrollBy(0,this.layout.height,!0),this.q.enqueue(function(){return this.check()}.bind(this)))}prev(){let t=this.layout.props.name==="pre-paginated"&&this.layout.props.spread?this.layout.props.delta*2:this.layout.props.delta;!this.views.length||(this.isPaginated&&this.settings.axis==="horizontal"?this.scrollBy(-t,0,!0):this.scrollBy(0,-this.layout.height,!0),this.q.enqueue(function(){return this.check()}.bind(this)))}updateFlow(t){this.rendered&&this.snapper&&(this.snapper.destroy(),this.snapper=void 0),super.updateFlow(t,"scroll"),this.rendered&&this.isPaginated&&this.settings.snap&&(this.snapper=new F1(this,this.settings.snap&&typeof this.settings.snap=="object"&&this.settings.snap))}destroy(){super.destroy(),this.snapper&&this.snapper.destroy()}}class Sm{constructor(t,n){this.settings=or(this.settings||{},{width:null,height:null,ignoreClass:"",manager:"default",view:"iframe",flow:null,layout:null,spread:null,minSpreadWidth:800,stylesheet:null,resizeOnOrientationChange:!0,script:null,snap:!1,defaultDirection:"ltr",allowScriptedContent:!1,allowPopups:!1}),or(this.settings,n),typeof this.settings.manager=="object"&&(this.manager=this.settings.manager),this.book=t,this.hooks={},this.hooks.display=new Ka(this),this.hooks.serialize=new Ka(this),this.hooks.content=new Ka(this),this.hooks.unloaded=new Ka(this),this.hooks.layout=new Ka(this),this.hooks.render=new Ka(this),this.hooks.show=new Ka(this),this.hooks.content.register(this.handleLinks.bind(this)),this.hooks.content.register(this.passEvents.bind(this)),this.hooks.content.register(this.adjustImages.bind(this)),this.book.spine.hooks.content.register(this.injectIdentifier.bind(this)),this.settings.stylesheet&&this.book.spine.hooks.content.register(this.injectStylesheet.bind(this)),this.settings.script&&this.book.spine.hooks.content.register(this.injectScript.bind(this)),this.themes=new jO(this),this.annotations=new UO(this),this.epubcfi=new sn,this.q=new vm(this),this.location=void 0,this.q.enqueue(this.book.opened),this.starting=new on,this.started=this.starting.promise,this.q.enqueue(this.start)}setManager(t){this.manager=t}requireManager(t){var n;return typeof t=="string"&&t==="default"?n=kp:typeof t=="string"&&t==="continuous"?n=tJ:n=t,n}requireView(t){var n;return typeof t=="string"&&t==="iframe"?n=U4:n=t,n}start(){switch(!this.settings.layout&&(this.book.package.metadata.layout==="pre-paginated"||this.book.displayOptions.fixedLayout==="true")&&(this.settings.layout="pre-paginated"),this.book.package.metadata.spread){case"none":this.settings.spread="none";break;case"both":this.settings.spread=!0;break}this.manager||(this.ViewManager=this.requireManager(this.settings.manager),this.View=this.requireView(this.settings.view),this.manager=new this.ViewManager({view:this.View,queue:this.q,request:this.book.load.bind(this.book),settings:this.settings})),this.direction(this.book.package.metadata.direction||this.settings.defaultDirection),this.settings.globalLayoutProperties=this.determineLayoutProperties(this.book.package.metadata),this.flow(this.settings.globalLayoutProperties.flow),this.layout(this.settings.globalLayoutProperties),this.manager.on(Kt.MANAGERS.ADDED,this.afterDisplayed.bind(this)),this.manager.on(Kt.MANAGERS.REMOVED,this.afterRemoved.bind(this)),this.manager.on(Kt.MANAGERS.RESIZED,this.onResized.bind(this)),this.manager.on(Kt.MANAGERS.ORIENTATION_CHANGE,this.onOrientationChange.bind(this)),this.manager.on(Kt.MANAGERS.SCROLLED,this.reportLocation.bind(this)),this.emit(Kt.RENDITION.STARTED),this.starting.resolve()}attachTo(t){return this.q.enqueue(function(){this.manager.render(t,{width:this.settings.width,height:this.settings.height}),this.emit(Kt.RENDITION.ATTACHED)}.bind(this))}display(t){return this.displaying&&this.displaying.resolve(),this.q.enqueue(this._display,t)}_display(t){if(!!this.book){this.epubcfi.isCfiString(t);var n=new on,r=n.promise,a;return this.displaying=n,this.book.locations.length()&&p4(t)&&(t=this.book.locations.cfiFromPercentage(parseFloat(t))),a=this.book.spine.get(t),a?(this.manager.display(a,t).then(()=>{n.resolve(a),this.displaying=void 0,this.emit(Kt.RENDITION.DISPLAYED,a),this.reportLocation()},l=>{this.emit(Kt.RENDITION.DISPLAY_ERROR,l)}),r):(n.reject(new Error("No Section Found")),r)}}afterDisplayed(t){t.on(Kt.VIEWS.MARK_CLICKED,(n,r)=>this.triggerMarkEvent(n,r,t.contents)),this.hooks.render.trigger(t,this).then(()=>{t.contents?this.hooks.content.trigger(t.contents,this).then(()=>{this.emit(Kt.RENDITION.RENDERED,t.section,t)}):this.emit(Kt.RENDITION.RENDERED,t.section,t)})}afterRemoved(t){this.hooks.unloaded.trigger(t,this).then(()=>{this.emit(Kt.RENDITION.REMOVED,t.section,t)})}onResized(t,n){this.emit(Kt.RENDITION.RESIZED,{width:t.width,height:t.height},n),this.location&&this.location.start&&this.display(n||this.location.start.cfi)}onOrientationChange(t){this.emit(Kt.RENDITION.ORIENTATION_CHANGE,t)}moveTo(t){this.manager.moveTo(t)}resize(t,n,r){t&&(this.settings.width=t),n&&(this.settings.height=n),this.manager.resize(t,n,r)}clear(){this.manager.clear()}next(){return this.q.enqueue(this.manager.next.bind(this.manager)).then(this.reportLocation.bind(this))}prev(){return this.q.enqueue(this.manager.prev.bind(this.manager)).then(this.reportLocation.bind(this))}determineLayoutProperties(t){var n,r=this.settings.layout||t.layout||"reflowable",a=this.settings.spread||t.spread||"auto",l=this.settings.orientation||t.orientation||"auto",o=this.settings.flow||t.flow||"auto",i=t.viewport||"",s=this.settings.minSpreadWidth||t.minSpreadWidth||800,u=this.settings.direction||t.direction||"ltr";return(this.settings.width===0||this.settings.width>0)&&(this.settings.height===0||this.settings.height>0),n={layout:r,spread:a,orientation:l,flow:o,viewport:i,minSpreadWidth:s,direction:u},n}flow(t){var n=t;(t==="scrolled"||t==="scrolled-doc"||t==="scrolled-continuous")&&(n="scrolled"),(t==="auto"||t==="paginated")&&(n="paginated"),this.settings.flow=t,this._layout&&this._layout.flow(n),this.manager&&this._layout&&this.manager.applyLayout(this._layout),this.manager&&this.manager.updateFlow(n),this.manager&&this.manager.isRendered()&&this.location&&(this.manager.clear(),this.display(this.location.start.cfi))}layout(t){return t&&(this._layout=new T4(t),this._layout.spread(t.spread,this.settings.minSpreadWidth),this._layout.on(Kt.LAYOUT.UPDATED,(n,r)=>{this.emit(Kt.RENDITION.LAYOUT,n,r)})),this.manager&&this._layout&&this.manager.applyLayout(this._layout),this._layout}spread(t,n){this.settings.spread=t,n&&(this.settings.minSpreadWidth=n),this._layout&&this._layout.spread(t,n),this.manager&&this.manager.isRendered()&&this.manager.updateLayout()}direction(t){this.settings.direction=t||"ltr",this.manager&&this.manager.direction(this.settings.direction),this.manager&&this.manager.isRendered()&&this.location&&(this.manager.clear(),this.display(this.location.start.cfi))}reportLocation(){return this.q.enqueue(function(){requestAnimationFrame(function(){var r=this.manager.currentLocation();if(r&&r.then&&typeof r.then=="function")r.then(function(a){let l=this.located(a);!l||!l.start||!l.end||(this.location=l,this.emit(Kt.RENDITION.LOCATION_CHANGED,{index:this.location.start.index,href:this.location.start.href,start:this.location.start.cfi,end:this.location.end.cfi,percentage:this.location.start.percentage}),this.emit(Kt.RENDITION.RELOCATED,this.location))}.bind(this));else if(r){let a=this.located(r);if(!a||!a.start||!a.end)return;this.location=a,this.emit(Kt.RENDITION.LOCATION_CHANGED,{index:this.location.start.index,href:this.location.start.href,start:this.location.start.cfi,end:this.location.end.cfi,percentage:this.location.start.percentage}),this.emit(Kt.RENDITION.RELOCATED,this.location)}}.bind(this))}.bind(this))}currentLocation(){var t=this.manager.currentLocation();if(t&&t.then&&typeof t.then=="function")t.then(function(n){return this.located(n)}.bind(this));else if(t)return this.located(t)}located(t){if(!t.length)return{};let n=t[0],r=t[t.length-1],a={start:{index:n.index,href:n.href,cfi:n.mapping.start,displayed:{page:n.pages[0]||1,total:n.totalPages}},end:{index:r.index,href:r.href,cfi:r.mapping.end,displayed:{page:r.pages[r.pages.length-1]||1,total:r.totalPages}}},l=this.book.locations.locationFromCfi(n.mapping.start),o=this.book.locations.locationFromCfi(r.mapping.end);l!=null&&(a.start.location=l,a.start.percentage=this.book.locations.percentageFromLocation(l)),o!=null&&(a.end.location=o,a.end.percentage=this.book.locations.percentageFromLocation(o));let i=this.book.pageList.pageFromCfi(n.mapping.start),s=this.book.pageList.pageFromCfi(r.mapping.end);return i!=-1&&(a.start.page=i),s!=-1&&(a.end.page=s),r.index===this.book.spine.last().index&&a.end.displayed.page>=a.end.displayed.total&&(a.atEnd=!0),n.index===this.book.spine.first().index&&a.start.displayed.page===1&&(a.atStart=!0),a}destroy(){this.manager&&this.manager.destroy(),this.book=void 0}passEvents(t){Vf.forEach(n=>{t.on(n,r=>this.triggerViewEvent(r,t))}),t.on(Kt.CONTENTS.SELECTED,n=>this.triggerSelectedEvent(n,t))}triggerViewEvent(t,n){this.emit(t.type,t,n)}triggerSelectedEvent(t,n){this.emit(Kt.RENDITION.SELECTED,t,n)}triggerMarkEvent(t,n,r){this.emit(Kt.RENDITION.MARK_CLICKED,t,n,r)}getRange(t,n){var r=new sn(t),a=this.manager.visible().filter(function(l){if(r.spinePos===l.index)return!0});if(a.length)return a[0].contents.range(r,n)}adjustImages(t){if(this._layout.name==="pre-paginated")return new Promise(function(l){l()});let n=t.window.getComputedStyle(t.content,null),r=(t.content.offsetHeight-(parseFloat(n.paddingTop)+parseFloat(n.paddingBottom)))*.95,a=parseFloat(n.paddingLeft)+parseFloat(n.paddingRight);return t.addStylesheetRules({img:{"max-width":(this._layout.columnWidth?this._layout.columnWidth-a+"px":"100%")+"!important","max-height":r+"px!important","object-fit":"contain","page-break-inside":"avoid","break-inside":"avoid","box-sizing":"border-box"},svg:{"max-width":(this._layout.columnWidth?this._layout.columnWidth-a+"px":"100%")+"!important","max-height":r+"px!important","page-break-inside":"avoid","break-inside":"avoid"}}),new Promise(function(l,o){setTimeout(function(){l()},1)})}getContents(){return this.manager?this.manager.getContents():[]}views(){return(this.manager?this.manager.views:void 0)||[]}handleLinks(t){t&&t.on(Kt.CONTENTS.LINK_CLICKED,n=>{let r=this.book.path.relative(n);this.display(r)})}injectStylesheet(t,n){let r=t.createElement("link");r.setAttribute("type","text/css"),r.setAttribute("rel","stylesheet"),r.setAttribute("href",this.settings.stylesheet),t.getElementsByTagName("head")[0].appendChild(r)}injectScript(t,n){let r=t.createElement("script");r.setAttribute("type","text/javascript"),r.setAttribute("src",this.settings.script),r.textContent=" ",t.getElementsByTagName("head")[0].appendChild(r)}injectIdentifier(t,n){let r=this.book.packaging.metadata.identifier,a=t.createElement("meta");a.setAttribute("name","dc.relation.ispartof"),r&&a.setAttribute("content",r),t.getElementsByTagName("head")[0].appendChild(a)}}il(Sm.prototype);function oo(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var z4={exports:{}};/*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/(function(e,t){(function(n){e.exports=n()})(function(){return function n(r,a,l){function o(u,d){if(!a[u]){if(!r[u]){var f=typeof oo=="function"&&oo;if(!d&&f)return f(u,!0);if(i)return i(u,!0);var p=new Error("Cannot find module '"+u+"'");throw p.code="MODULE_NOT_FOUND",p}var b=a[u]={exports:{}};r[u][0].call(b.exports,function(A){var h=r[u][1][A];return o(h||A)},b,b.exports,n,r,a,l)}return a[u].exports}for(var i=typeof oo=="function"&&oo,s=0;s<l.length;s++)o(l[s]);return o}({1:[function(n,r,a){var l=n("./utils"),o=n("./support"),i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";a.encode=function(s){for(var u=[],d,f,p,b,A,h,m,v=0,S=s.length,y=S,W=l.getTypeOf(s)!=="string";v<s.length;)y=S-v,W?(d=s[v++],f=v<S?s[v++]:0,p=v<S?s[v++]:0):(d=s.charCodeAt(v++),f=v<S?s.charCodeAt(v++):0,p=v<S?s.charCodeAt(v++):0),b=d>>2,A=(d&3)<<4|f>>4,h=y>1?(f&15)<<2|p>>6:64,m=y>2?p&63:64,u.push(i.charAt(b)+i.charAt(A)+i.charAt(h)+i.charAt(m));return u.join("")},a.decode=function(s){var u,d,f,p,b,A,h,m=0,v=0,S="data:";if(s.substr(0,S.length)===S)throw new Error("Invalid base64 input, it looks like a data url.");s=s.replace(/[^A-Za-z0-9+/=]/g,"");var y=s.length*3/4;if(s.charAt(s.length-1)===i.charAt(64)&&y--,s.charAt(s.length-2)===i.charAt(64)&&y--,y%1!==0)throw new Error("Invalid base64 input, bad content length.");var W;for(o.uint8array?W=new Uint8Array(y|0):W=new Array(y|0);m<s.length;)p=i.indexOf(s.charAt(m++)),b=i.indexOf(s.charAt(m++)),A=i.indexOf(s.charAt(m++)),h=i.indexOf(s.charAt(m++)),u=p<<2|b>>4,d=(b&15)<<4|A>>2,f=(A&3)<<6|h,W[v++]=u,A!==64&&(W[v++]=d),h!==64&&(W[v++]=f);return W}},{"./support":30,"./utils":32}],2:[function(n,r,a){var l=n("./external"),o=n("./stream/DataWorker"),i=n("./stream/Crc32Probe"),s=n("./stream/DataLengthProbe");function u(d,f,p,b,A){this.compressedSize=d,this.uncompressedSize=f,this.crc32=p,this.compression=b,this.compressedContent=A}u.prototype={getContentWorker:function(){var d=new o(l.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new s("data_length")),f=this;return d.on("end",function(){if(this.streamInfo.data_length!==f.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")}),d},getCompressedWorker:function(){return new o(l.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)}},u.createWorkerFrom=function(d,f,p){return d.pipe(new i).pipe(new s("uncompressedSize")).pipe(f.compressWorker(p)).pipe(new s("compressedSize")).withStreamInfo("compression",f)},r.exports=u},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(n,r,a){var l=n("./stream/GenericWorker");a.STORE={magic:"\0\0",compressWorker:function(){return new l("STORE compression")},uncompressWorker:function(){return new l("STORE decompression")}},a.DEFLATE=n("./flate")},{"./flate":7,"./stream/GenericWorker":28}],4:[function(n,r,a){var l=n("./utils");function o(){for(var d,f=[],p=0;p<256;p++){d=p;for(var b=0;b<8;b++)d=d&1?3988292384^d>>>1:d>>>1;f[p]=d}return f}var i=o();function s(d,f,p,b){var A=i,h=b+p;d=d^-1;for(var m=b;m<h;m++)d=d>>>8^A[(d^f[m])&255];return d^-1}function u(d,f,p,b){var A=i,h=b+p;d=d^-1;for(var m=b;m<h;m++)d=d>>>8^A[(d^f.charCodeAt(m))&255];return d^-1}r.exports=function(f,p){if(typeof f>"u"||!f.length)return 0;var b=l.getTypeOf(f)!=="string";return b?s(p|0,f,f.length,0):u(p|0,f,f.length,0)}},{"./utils":32}],5:[function(n,r,a){a.base64=!1,a.binary=!1,a.dir=!1,a.createFolders=!0,a.date=null,a.compression=null,a.compressionOptions=null,a.comment=null,a.unixPermissions=null,a.dosPermissions=null},{}],6:[function(n,r,a){var l=null;typeof Promise<"u"?l=Promise:l=n("lie"),r.exports={Promise:l}},{lie:37}],7:[function(n,r,a){var l=typeof Uint8Array<"u"&&typeof Uint16Array<"u"&&typeof Uint32Array<"u",o=n("pako"),i=n("./utils"),s=n("./stream/GenericWorker"),u=l?"uint8array":"array";a.magic="\b\0";function d(f,p){s.call(this,"FlateWorker/"+f),this._pako=null,this._pakoAction=f,this._pakoOptions=p,this.meta={}}i.inherits(d,s),d.prototype.processChunk=function(f){this.meta=f.meta,this._pako===null&&this._createPako(),this._pako.push(i.transformTo(u,f.data),!1)},d.prototype.flush=function(){s.prototype.flush.call(this),this._pako===null&&this._createPako(),this._pako.push([],!0)},d.prototype.cleanUp=function(){s.prototype.cleanUp.call(this),this._pako=null},d.prototype._createPako=function(){this._pako=new o[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var f=this;this._pako.onData=function(p){f.push({data:p,meta:f.meta})}},a.compressWorker=function(f){return new d("Deflate",f)},a.uncompressWorker=function(){return new d("Inflate",{})}},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(n,r,a){var l=n("../utils"),o=n("../stream/GenericWorker"),i=n("../utf8"),s=n("../crc32"),u=n("../signature"),d=function(v,S){var y="",W;for(W=0;W<S;W++)y+=String.fromCharCode(v&255),v=v>>>8;return y},f=function(v,S){var y=v;return v||(y=S?16893:33204),(y&65535)<<16},p=function(v){return(v||0)&63},b=function(v,S,y,W,k,V){var T=v.file,P=v.compression,x=V!==i.utf8encode,g=l.transformTo("string",V(T.name)),j=l.transformTo("string",i.utf8encode(T.name)),L=T.comment,w=l.transformTo("string",V(L)),R=l.transformTo("string",i.utf8encode(L)),Z=j.length!==T.name.length,G=R.length!==L.length,U,H,O="",D="",Y="",Q=T.dir,ee=T.date,oe={crc32:0,compressedSize:0,uncompressedSize:0};(!S||y)&&(oe.crc32=v.crc32,oe.compressedSize=v.compressedSize,oe.uncompressedSize=v.uncompressedSize);var Ne=0;S&&(Ne|=8),!x&&(Z||G)&&(Ne|=2048);var pe=0,me=0;Q&&(pe|=16),k==="UNIX"?(me=798,pe|=f(T.unixPermissions,Q)):(me=20,pe|=p(T.dosPermissions)),U=ee.getUTCHours(),U=U<<6,U=U|ee.getUTCMinutes(),U=U<<5,U=U|ee.getUTCSeconds()/2,H=ee.getUTCFullYear()-1980,H=H<<4,H=H|ee.getUTCMonth()+1,H=H<<5,H=H|ee.getUTCDate(),Z&&(D=d(1,1)+d(s(g),4)+j,O+="up"+d(D.length,2)+D),G&&(Y=d(1,1)+d(s(w),4)+R,O+="uc"+d(Y.length,2)+Y);var ce="";ce+=`
\0`,ce+=d(Ne,2),ce+=P.magic,ce+=d(U,2),ce+=d(H,2),ce+=d(oe.crc32,4),ce+=d(oe.compressedSize,4),ce+=d(oe.uncompressedSize,4),ce+=d(g.length,2),ce+=d(O.length,2);var Le=u.LOCAL_FILE_HEADER+ce+g+O,Te=u.CENTRAL_FILE_HEADER+d(me,2)+ce+d(w.length,2)+"\0\0\0\0"+d(pe,4)+d(W,4)+g+O+w;return{fileRecord:Le,dirRecord:Te}},A=function(v,S,y,W,k){var V="",T=l.transformTo("string",k(W));return V=u.CENTRAL_DIRECTORY_END+"\0\0\0\0"+d(v,2)+d(v,2)+d(S,4)+d(y,4)+d(T.length,2)+T,V},h=function(v){var S="";return S=u.DATA_DESCRIPTOR+d(v.crc32,4)+d(v.compressedSize,4)+d(v.uncompressedSize,4),S};function m(v,S,y,W){o.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=S,this.zipPlatform=y,this.encodeFileName=W,this.streamFiles=v,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}l.inherits(m,o),m.prototype.push=function(v){var S=v.meta.percent||0,y=this.entriesCount,W=this._sources.length;this.accumulate?this.contentBuffer.push(v):(this.bytesWritten+=v.data.length,o.prototype.push.call(this,{data:v.data,meta:{currentFile:this.currentFile,percent:y?(S+100*(y-W-1))/y:100}}))},m.prototype.openedSource=function(v){this.currentSourceOffset=this.bytesWritten,this.currentFile=v.file.name;var S=this.streamFiles&&!v.file.dir;if(S){var y=b(v,S,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:y.fileRecord,meta:{percent:0}})}else this.accumulate=!0},m.prototype.closedSource=function(v){this.accumulate=!1;var S=this.streamFiles&&!v.file.dir,y=b(v,S,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(y.dirRecord),S)this.push({data:h(v),meta:{percent:100}});else for(this.push({data:y.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},m.prototype.flush=function(){for(var v=this.bytesWritten,S=0;S<this.dirRecords.length;S++)this.push({data:this.dirRecords[S],meta:{percent:100}});var y=this.bytesWritten-v,W=A(this.dirRecords.length,y,v,this.zipComment,this.encodeFileName);this.push({data:W,meta:{percent:100}})},m.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},m.prototype.registerPrevious=function(v){this._sources.push(v);var S=this;return v.on("data",function(y){S.processChunk(y)}),v.on("end",function(){S.closedSource(S.previous.streamInfo),S._sources.length?S.prepareNextSource():S.end()}),v.on("error",function(y){S.error(y)}),this},m.prototype.resume=function(){if(!o.prototype.resume.call(this))return!1;if(!this.previous&&this._sources.length)return this.prepareNextSource(),!0;if(!this.previous&&!this._sources.length&&!this.generatedError)return this.end(),!0},m.prototype.error=function(v){var S=this._sources;if(!o.prototype.error.call(this,v))return!1;for(var y=0;y<S.length;y++)try{S[y].error(v)}catch{}return!0},m.prototype.lock=function(){o.prototype.lock.call(this);for(var v=this._sources,S=0;S<v.length;S++)v[S].lock()},r.exports=m},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(n,r,a){var l=n("../compressions"),o=n("./ZipFileWorker"),i=function(s,u){var d=s||u,f=l[d];if(!f)throw new Error(d+" is not a valid compression method !");return f};a.generateWorker=function(s,u,d){var f=new o(u.streamFiles,d,u.platform,u.encodeFileName),p=0;try{s.forEach(function(b,A){p++;var h=i(A.options.compression,u.compression),m=A.options.compressionOptions||u.compressionOptions||{},v=A.dir,S=A.date;A._compressWorker(h,m).withStreamInfo("file",{name:b,dir:v,date:S,comment:A.comment||"",unixPermissions:A.unixPermissions,dosPermissions:A.dosPermissions}).pipe(f)}),f.entriesCount=p}catch(b){f.error(b)}return f}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(n,r,a){function l(){if(!(this instanceof l))return new l;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files=Object.create(null),this.comment=null,this.root="",this.clone=function(){var o=new l;for(var i in this)typeof this[i]!="function"&&(o[i]=this[i]);return o}}l.prototype=n("./object"),l.prototype.loadAsync=n("./load"),l.support=n("./support"),l.defaults=n("./defaults"),l.version="3.10.1",l.loadAsync=function(o,i){return new l().loadAsync(o,i)},l.external=n("./external"),r.exports=l},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(n,r,a){var l=n("./utils"),o=n("./external"),i=n("./utf8"),s=n("./zipEntries"),u=n("./stream/Crc32Probe"),d=n("./nodejsUtils");function f(p){return new o.Promise(function(b,A){var h=p.decompressed.getContentWorker().pipe(new u);h.on("error",function(m){A(m)}).on("end",function(){h.streamInfo.crc32!==p.decompressed.crc32?A(new Error("Corrupted zip : CRC32 mismatch")):b()}).resume()})}r.exports=function(p,b){var A=this;return b=l.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:i.utf8decode}),d.isNode&&d.isStream(p)?o.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):l.prepareContent("the loaded zip file",p,!0,b.optimizedBinaryString,b.base64).then(function(h){var m=new s(b);return m.load(h),m}).then(function(m){var v=[o.Promise.resolve(m)],S=m.files;if(b.checkCRC32)for(var y=0;y<S.length;y++)v.push(f(S[y]));return o.Promise.all(v)}).then(function(m){for(var v=m.shift(),S=v.files,y=0;y<S.length;y++){var W=S[y],k=W.fileNameStr,V=l.resolve(W.fileNameStr);A.file(V,W.decompressed,{binary:!0,optimizedBinaryString:!0,date:W.date,dir:W.dir,comment:W.fileCommentStr.length?W.fileCommentStr:null,unixPermissions:W.unixPermissions,dosPermissions:W.dosPermissions,createFolders:b.createFolders}),W.dir||(A.file(V).unsafeOriginalName=k)}return v.zipComment.length&&(A.comment=v.zipComment),A})}},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(n,r,a){var l=n("../utils"),o=n("../stream/GenericWorker");function i(s,u){o.call(this,"Nodejs stream input adapter for "+s),this._upstreamEnded=!1,this._bindStream(u)}l.inherits(i,o),i.prototype._bindStream=function(s){var u=this;this._stream=s,s.pause(),s.on("data",function(d){u.push({data:d,meta:{percent:0}})}).on("error",function(d){u.isPaused?this.generatedError=d:u.error(d)}).on("end",function(){u.isPaused?u._upstreamEnded=!0:u.end()})},i.prototype.pause=function(){return o.prototype.pause.call(this)?(this._stream.pause(),!0):!1},i.prototype.resume=function(){return o.prototype.resume.call(this)?(this._upstreamEnded?this.end():this._stream.resume(),!0):!1},r.exports=i},{"../stream/GenericWorker":28,"../utils":32}],13:[function(n,r,a){var l=n("readable-stream").Readable,o=n("../utils");o.inherits(i,l);function i(s,u,d){l.call(this,u),this._helper=s;var f=this;s.on("data",function(p,b){f.push(p)||f._helper.pause(),d&&d(b)}).on("error",function(p){f.emit("error",p)}).on("end",function(){f.push(null)})}i.prototype._read=function(){this._helper.resume()},r.exports=i},{"../utils":32,"readable-stream":16}],14:[function(n,r,a){r.exports={isNode:typeof Buffer<"u",newBufferFrom:function(l,o){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(l,o);if(typeof l=="number")throw new Error('The "data" argument must not be a number');return new Buffer(l,o)},allocBuffer:function(l){if(Buffer.alloc)return Buffer.alloc(l);var o=new Buffer(l);return o.fill(0),o},isBuffer:function(l){return Buffer.isBuffer(l)},isStream:function(l){return l&&typeof l.on=="function"&&typeof l.pause=="function"&&typeof l.resume=="function"}}},{}],15:[function(n,r,a){var l=n("./utf8"),o=n("./utils"),i=n("./stream/GenericWorker"),s=n("./stream/StreamHelper"),u=n("./defaults"),d=n("./compressedObject"),f=n("./zipObject"),p=n("./generate"),b=n("./nodejsUtils"),A=n("./nodejs/NodejsStreamInputAdapter"),h=function(k,V,T){var P=o.getTypeOf(V),x,g=o.extend(T||{},u);g.date=g.date||new Date,g.compression!==null&&(g.compression=g.compression.toUpperCase()),typeof g.unixPermissions=="string"&&(g.unixPermissions=parseInt(g.unixPermissions,8)),g.unixPermissions&&g.unixPermissions&16384&&(g.dir=!0),g.dosPermissions&&g.dosPermissions&16&&(g.dir=!0),g.dir&&(k=v(k)),g.createFolders&&(x=m(k))&&S.call(this,x,!0);var j=P==="string"&&g.binary===!1&&g.base64===!1;(!T||typeof T.binary>"u")&&(g.binary=!j);var L=V instanceof d&&V.uncompressedSize===0;(L||g.dir||!V||V.length===0)&&(g.base64=!1,g.binary=!0,V="",g.compression="STORE",P="string");var w=null;V instanceof d||V instanceof i?w=V:b.isNode&&b.isStream(V)?w=new A(k,V):w=o.prepareContent(k,V,g.binary,g.optimizedBinaryString,g.base64);var R=new f(k,w,g);this.files[k]=R},m=function(k){k.slice(-1)==="/"&&(k=k.substring(0,k.length-1));var V=k.lastIndexOf("/");return V>0?k.substring(0,V):""},v=function(k){return k.slice(-1)!=="/"&&(k+="/"),k},S=function(k,V){return V=typeof V<"u"?V:u.createFolders,k=v(k),this.files[k]||h.call(this,k,null,{dir:!0,createFolders:V}),this.files[k]};function y(k){return Object.prototype.toString.call(k)==="[object RegExp]"}var W={load:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},forEach:function(k){var V,T,P;for(V in this.files)P=this.files[V],T=V.slice(this.root.length,V.length),T&&V.slice(0,this.root.length)===this.root&&k(T,P)},filter:function(k){var V=[];return this.forEach(function(T,P){k(T,P)&&V.push(P)}),V},file:function(k,V,T){if(arguments.length===1)if(y(k)){var P=k;return this.filter(function(g,j){return!j.dir&&P.test(g)})}else{var x=this.files[this.root+k];return x&&!x.dir?x:null}else k=this.root+k,h.call(this,k,V,T);return this},folder:function(k){if(!k)return this;if(y(k))return this.filter(function(x,g){return g.dir&&k.test(x)});var V=this.root+k,T=S.call(this,V),P=this.clone();return P.root=T.name,P},remove:function(k){k=this.root+k;var V=this.files[k];if(V||(k.slice(-1)!=="/"&&(k+="/"),V=this.files[k]),V&&!V.dir)delete this.files[k];else for(var T=this.filter(function(x,g){return g.name.slice(0,k.length)===k}),P=0;P<T.length;P++)delete this.files[T[P].name];return this},generate:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},generateInternalStream:function(k){var V,T={};try{if(T=o.extend(k||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:l.utf8encode}),T.type=T.type.toLowerCase(),T.compression=T.compression.toUpperCase(),T.type==="binarystring"&&(T.type="string"),!T.type)throw new Error("No output type specified.");o.checkSupport(T.type),(T.platform==="darwin"||T.platform==="freebsd"||T.platform==="linux"||T.platform==="sunos")&&(T.platform="UNIX"),T.platform==="win32"&&(T.platform="DOS");var P=T.comment||this.comment||"";V=p.generateWorker(this,T,P)}catch(x){V=new i("error"),V.error(x)}return new s(V,T.type||"string",T.mimeType)},generateAsync:function(k,V){return this.generateInternalStream(k).accumulate(V)},generateNodeStream:function(k,V){return k=k||{},k.type||(k.type="nodebuffer"),this.generateInternalStream(k).toNodejsStream(V)}};r.exports=W},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(n,r,a){r.exports=n("stream")},{stream:void 0}],17:[function(n,r,a){var l=n("./DataReader"),o=n("../utils");function i(s){l.call(this,s);for(var u=0;u<this.data.length;u++)s[u]=s[u]&255}o.inherits(i,l),i.prototype.byteAt=function(s){return this.data[this.zero+s]},i.prototype.lastIndexOfSignature=function(s){for(var u=s.charCodeAt(0),d=s.charCodeAt(1),f=s.charCodeAt(2),p=s.charCodeAt(3),b=this.length-4;b>=0;--b)if(this.data[b]===u&&this.data[b+1]===d&&this.data[b+2]===f&&this.data[b+3]===p)return b-this.zero;return-1},i.prototype.readAndCheckSignature=function(s){var u=s.charCodeAt(0),d=s.charCodeAt(1),f=s.charCodeAt(2),p=s.charCodeAt(3),b=this.readData(4);return u===b[0]&&d===b[1]&&f===b[2]&&p===b[3]},i.prototype.readData=function(s){if(this.checkOffset(s),s===0)return[];var u=this.data.slice(this.zero+this.index,this.zero+this.index+s);return this.index+=s,u},r.exports=i},{"../utils":32,"./DataReader":18}],18:[function(n,r,a){var l=n("../utils");function o(i){this.data=i,this.length=i.length,this.index=0,this.zero=0}o.prototype={checkOffset:function(i){this.checkIndex(this.index+i)},checkIndex:function(i){if(this.length<this.zero+i||i<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+i+"). Corrupted zip ?")},setIndex:function(i){this.checkIndex(i),this.index=i},skip:function(i){this.setIndex(this.index+i)},byteAt:function(){},readInt:function(i){var s=0,u;for(this.checkOffset(i),u=this.index+i-1;u>=this.index;u--)s=(s<<8)+this.byteAt(u);return this.index+=i,s},readString:function(i){return l.transformTo("string",this.readData(i))},readData:function(){},lastIndexOfSignature:function(){},readAndCheckSignature:function(){},readDate:function(){var i=this.readInt(4);return new Date(Date.UTC((i>>25&127)+1980,(i>>21&15)-1,i>>16&31,i>>11&31,i>>5&63,(i&31)<<1))}},r.exports=o},{"../utils":32}],19:[function(n,r,a){var l=n("./Uint8ArrayReader"),o=n("../utils");function i(s){l.call(this,s)}o.inherits(i,l),i.prototype.readData=function(s){this.checkOffset(s);var u=this.data.slice(this.zero+this.index,this.zero+this.index+s);return this.index+=s,u},r.exports=i},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(n,r,a){var l=n("./DataReader"),o=n("../utils");function i(s){l.call(this,s)}o.inherits(i,l),i.prototype.byteAt=function(s){return this.data.charCodeAt(this.zero+s)},i.prototype.lastIndexOfSignature=function(s){return this.data.lastIndexOf(s)-this.zero},i.prototype.readAndCheckSignature=function(s){var u=this.readData(4);return s===u},i.prototype.readData=function(s){this.checkOffset(s);var u=this.data.slice(this.zero+this.index,this.zero+this.index+s);return this.index+=s,u},r.exports=i},{"../utils":32,"./DataReader":18}],21:[function(n,r,a){var l=n("./ArrayReader"),o=n("../utils");function i(s){l.call(this,s)}o.inherits(i,l),i.prototype.readData=function(s){if(this.checkOffset(s),s===0)return new Uint8Array(0);var u=this.data.subarray(this.zero+this.index,this.zero+this.index+s);return this.index+=s,u},r.exports=i},{"../utils":32,"./ArrayReader":17}],22:[function(n,r,a){var l=n("../utils"),o=n("../support"),i=n("./ArrayReader"),s=n("./StringReader"),u=n("./NodeBufferReader"),d=n("./Uint8ArrayReader");r.exports=function(f){var p=l.getTypeOf(f);return l.checkSupport(p),p==="string"&&!o.uint8array?new s(f):p==="nodebuffer"?new u(f):o.uint8array?new d(l.transformTo("uint8array",f)):new i(l.transformTo("array",f))}},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(n,r,a){a.LOCAL_FILE_HEADER="PK",a.CENTRAL_FILE_HEADER="PK",a.CENTRAL_DIRECTORY_END="PK",a.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK\x07",a.ZIP64_CENTRAL_DIRECTORY_END="PK",a.DATA_DESCRIPTOR="PK\x07\b"},{}],24:[function(n,r,a){var l=n("./GenericWorker"),o=n("../utils");function i(s){l.call(this,"ConvertWorker to "+s),this.destType=s}o.inherits(i,l),i.prototype.processChunk=function(s){this.push({data:o.transformTo(this.destType,s.data),meta:s.meta})},r.exports=i},{"../utils":32,"./GenericWorker":28}],25:[function(n,r,a){var l=n("./GenericWorker"),o=n("../crc32"),i=n("../utils");function s(){l.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}i.inherits(s,l),s.prototype.processChunk=function(u){this.streamInfo.crc32=o(u.data,this.streamInfo.crc32||0),this.push(u)},r.exports=s},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(n,r,a){var l=n("../utils"),o=n("./GenericWorker");function i(s){o.call(this,"DataLengthProbe for "+s),this.propName=s,this.withStreamInfo(s,0)}l.inherits(i,o),i.prototype.processChunk=function(s){if(s){var u=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=u+s.data.length}o.prototype.processChunk.call(this,s)},r.exports=i},{"../utils":32,"./GenericWorker":28}],27:[function(n,r,a){var l=n("../utils"),o=n("./GenericWorker"),i=16*1024;function s(u){o.call(this,"DataWorker");var d=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,u.then(function(f){d.dataIsReady=!0,d.data=f,d.max=f&&f.length||0,d.type=l.getTypeOf(f),d.isPaused||d._tickAndRepeat()},function(f){d.error(f)})}l.inherits(s,o),s.prototype.cleanUp=function(){o.prototype.cleanUp.call(this),this.data=null},s.prototype.resume=function(){return o.prototype.resume.call(this)?(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,l.delay(this._tickAndRepeat,[],this)),!0):!1},s.prototype._tickAndRepeat=function(){this._tickScheduled=!1,!(this.isPaused||this.isFinished)&&(this._tick(),this.isFinished||(l.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},s.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var u=i,d=null,f=Math.min(this.max,this.index+u);if(this.index>=this.max)return this.end();switch(this.type){case"string":d=this.data.substring(this.index,f);break;case"uint8array":d=this.data.subarray(this.index,f);break;case"array":case"nodebuffer":d=this.data.slice(this.index,f);break}return this.index=f,this.push({data:d,meta:{percent:this.max?this.index/this.max*100:0}})},r.exports=s},{"../utils":32,"./GenericWorker":28}],28:[function(n,r,a){function l(o){this.name=o||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}l.prototype={push:function(o){this.emit("data",o)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(o){this.emit("error",o)}return!0},error:function(o){return this.isFinished?!1:(this.isPaused?this.generatedError=o:(this.isFinished=!0,this.emit("error",o),this.previous&&this.previous.error(o),this.cleanUp()),!0)},on:function(o,i){return this._listeners[o].push(i),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(o,i){if(this._listeners[o])for(var s=0;s<this._listeners[o].length;s++)this._listeners[o][s].call(this,i)},pipe:function(o){return o.registerPrevious(this)},registerPrevious:function(o){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=o.streamInfo,this.mergeStreamInfo(),this.previous=o;var i=this;return o.on("data",function(s){i.processChunk(s)}),o.on("end",function(){i.end()}),o.on("error",function(s){i.error(s)}),this},pause:function(){return this.isPaused||this.isFinished?!1:(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;this.isPaused=!1;var o=!1;return this.generatedError&&(this.error(this.generatedError),o=!0),this.previous&&this.previous.resume(),!o},flush:function(){},processChunk:function(o){this.push(o)},withStreamInfo:function(o,i){return this.extraStreamInfo[o]=i,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var o in this.extraStreamInfo)!Object.prototype.hasOwnProperty.call(this.extraStreamInfo,o)||(this.streamInfo[o]=this.extraStreamInfo[o])},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var o="Worker "+this.name;return this.previous?this.previous+" -> "+o:o}},r.exports=l},{}],29:[function(n,r,a){var l=n("../utils"),o=n("./ConvertWorker"),i=n("./GenericWorker"),s=n("../base64"),u=n("../support"),d=n("../external"),f=null;if(u.nodestream)try{f=n("../nodejs/NodejsStreamOutputAdapter")}catch{}function p(m,v,S){switch(m){case"blob":return l.newBlob(l.transformTo("arraybuffer",v),S);case"base64":return s.encode(v);default:return l.transformTo(m,v)}}function b(m,v){var S,y=0,W=null,k=0;for(S=0;S<v.length;S++)k+=v[S].length;switch(m){case"string":return v.join("");case"array":return Array.prototype.concat.apply([],v);case"uint8array":for(W=new Uint8Array(k),S=0;S<v.length;S++)W.set(v[S],y),y+=v[S].length;return W;case"nodebuffer":return Buffer.concat(v);default:throw new Error("concat : unsupported type '"+m+"'")}}function A(m,v){return new d.Promise(function(S,y){var W=[],k=m._internalType,V=m._outputType,T=m._mimeType;m.on("data",function(P,x){W.push(P),v&&v(x)}).on("error",function(P){W=[],y(P)}).on("end",function(){try{var P=p(V,b(k,W),T);S(P)}catch(x){y(x)}W=[]}).resume()})}function h(m,v,S){var y=v;switch(v){case"blob":case"arraybuffer":y="uint8array";break;case"base64":y="string";break}try{this._internalType=y,this._outputType=v,this._mimeType=S,l.checkSupport(y),this._worker=m.pipe(new o(y)),m.lock()}catch(W){this._worker=new i("error"),this._worker.error(W)}}h.prototype={accumulate:function(m){return A(this,m)},on:function(m,v){var S=this;return m==="data"?this._worker.on(m,function(y){v.call(S,y.data,y.meta)}):this._worker.on(m,function(){l.delay(v,arguments,S)}),this},resume:function(){return l.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(m){if(l.checkSupport("nodestream"),this._outputType!=="nodebuffer")throw new Error(this._outputType+" is not supported by this method");return new f(this,{objectMode:this._outputType!=="nodebuffer"},m)}},r.exports=h},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(n,r,a){if(a.base64=!0,a.array=!0,a.string=!0,a.arraybuffer=typeof ArrayBuffer<"u"&&typeof Uint8Array<"u",a.nodebuffer=typeof Buffer<"u",a.uint8array=typeof Uint8Array<"u",typeof ArrayBuffer>"u")a.blob=!1;else{var l=new ArrayBuffer(0);try{a.blob=new Blob([l],{type:"application/zip"}).size===0}catch{try{var o=self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder,i=new o;i.append(l),a.blob=i.getBlob("application/zip").size===0}catch{a.blob=!1}}}try{a.nodestream=!!n("readable-stream").Readable}catch{a.nodestream=!1}},{"readable-stream":16}],31:[function(n,r,a){for(var l=n("./utils"),o=n("./support"),i=n("./nodejsUtils"),s=n("./stream/GenericWorker"),u=new Array(256),d=0;d<256;d++)u[d]=d>=252?6:d>=248?5:d>=240?4:d>=224?3:d>=192?2:1;u[254]=u[254]=1;var f=function(m){var v,S,y,W,k,V=m.length,T=0;for(W=0;W<V;W++)S=m.charCodeAt(W),(S&64512)===55296&&W+1<V&&(y=m.charCodeAt(W+1),(y&64512)===56320&&(S=65536+(S-55296<<10)+(y-56320),W++)),T+=S<128?1:S<2048?2:S<65536?3:4;for(o.uint8array?v=new Uint8Array(T):v=new Array(T),k=0,W=0;k<T;W++)S=m.charCodeAt(W),(S&64512)===55296&&W+1<V&&(y=m.charCodeAt(W+1),(y&64512)===56320&&(S=65536+(S-55296<<10)+(y-56320),W++)),S<128?v[k++]=S:S<2048?(v[k++]=192|S>>>6,v[k++]=128|S&63):S<65536?(v[k++]=224|S>>>12,v[k++]=128|S>>>6&63,v[k++]=128|S&63):(v[k++]=240|S>>>18,v[k++]=128|S>>>12&63,v[k++]=128|S>>>6&63,v[k++]=128|S&63);return v},p=function(m,v){var S;for(v=v||m.length,v>m.length&&(v=m.length),S=v-1;S>=0&&(m[S]&192)===128;)S--;return S<0||S===0?v:S+u[m[S]]>v?S:v},b=function(m){var v,S,y,W,k=m.length,V=new Array(k*2);for(S=0,v=0;v<k;){if(y=m[v++],y<128){V[S++]=y;continue}if(W=u[y],W>4){V[S++]=65533,v+=W-1;continue}for(y&=W===2?31:W===3?15:7;W>1&&v<k;)y=y<<6|m[v++]&63,W--;if(W>1){V[S++]=65533;continue}y<65536?V[S++]=y:(y-=65536,V[S++]=55296|y>>10&1023,V[S++]=56320|y&1023)}return V.length!==S&&(V.subarray?V=V.subarray(0,S):V.length=S),l.applyFromCharCode(V)};a.utf8encode=function(v){return o.nodebuffer?i.newBufferFrom(v,"utf-8"):f(v)},a.utf8decode=function(v){return o.nodebuffer?l.transformTo("nodebuffer",v).toString("utf-8"):(v=l.transformTo(o.uint8array?"uint8array":"array",v),b(v))};function A(){s.call(this,"utf-8 decode"),this.leftOver=null}l.inherits(A,s),A.prototype.processChunk=function(m){var v=l.transformTo(o.uint8array?"uint8array":"array",m.data);if(this.leftOver&&this.leftOver.length){if(o.uint8array){var S=v;v=new Uint8Array(S.length+this.leftOver.length),v.set(this.leftOver,0),v.set(S,this.leftOver.length)}else v=this.leftOver.concat(v);this.leftOver=null}var y=p(v),W=v;y!==v.length&&(o.uint8array?(W=v.subarray(0,y),this.leftOver=v.subarray(y,v.length)):(W=v.slice(0,y),this.leftOver=v.slice(y,v.length))),this.push({data:a.utf8decode(W),meta:m.meta})},A.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:a.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},a.Utf8DecodeWorker=A;function h(){s.call(this,"utf-8 encode")}l.inherits(h,s),h.prototype.processChunk=function(m){this.push({data:a.utf8encode(m.data),meta:m.meta})},a.Utf8EncodeWorker=h},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(n,r,a){var l=n("./support"),o=n("./base64"),i=n("./nodejsUtils"),s=n("./external");n("setimmediate");function u(m){var v=null;return l.uint8array?v=new Uint8Array(m.length):v=new Array(m.length),f(m,v)}a.newBlob=function(m,v){a.checkSupport("blob");try{return new Blob([m],{type:v})}catch{try{var S=self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder,y=new S;return y.append(m),y.getBlob(v)}catch{throw new Error("Bug : can't construct the Blob.")}}};function d(m){return m}function f(m,v){for(var S=0;S<m.length;++S)v[S]=m.charCodeAt(S)&255;return v}var p={stringifyByChunk:function(m,v,S){var y=[],W=0,k=m.length;if(k<=S)return String.fromCharCode.apply(null,m);for(;W<k;)v==="array"||v==="nodebuffer"?y.push(String.fromCharCode.apply(null,m.slice(W,Math.min(W+S,k)))):y.push(String.fromCharCode.apply(null,m.subarray(W,Math.min(W+S,k)))),W+=S;return y.join("")},stringifyByChar:function(m){for(var v="",S=0;S<m.length;S++)v+=String.fromCharCode(m[S]);return v},applyCanBeUsed:{uint8array:function(){try{return l.uint8array&&String.fromCharCode.apply(null,new Uint8Array(1)).length===1}catch{return!1}}(),nodebuffer:function(){try{return l.nodebuffer&&String.fromCharCode.apply(null,i.allocBuffer(1)).length===1}catch{return!1}}()}};function b(m){var v=65536,S=a.getTypeOf(m),y=!0;if(S==="uint8array"?y=p.applyCanBeUsed.uint8array:S==="nodebuffer"&&(y=p.applyCanBeUsed.nodebuffer),y)for(;v>1;)try{return p.stringifyByChunk(m,S,v)}catch{v=Math.floor(v/2)}return p.stringifyByChar(m)}a.applyFromCharCode=b;function A(m,v){for(var S=0;S<m.length;S++)v[S]=m[S];return v}var h={};h.string={string:d,array:function(m){return f(m,new Array(m.length))},arraybuffer:function(m){return h.string.uint8array(m).buffer},uint8array:function(m){return f(m,new Uint8Array(m.length))},nodebuffer:function(m){return f(m,i.allocBuffer(m.length))}},h.array={string:b,array:d,arraybuffer:function(m){return new Uint8Array(m).buffer},uint8array:function(m){return new Uint8Array(m)},nodebuffer:function(m){return i.newBufferFrom(m)}},h.arraybuffer={string:function(m){return b(new Uint8Array(m))},array:function(m){return A(new Uint8Array(m),new Array(m.byteLength))},arraybuffer:d,uint8array:function(m){return new Uint8Array(m)},nodebuffer:function(m){return i.newBufferFrom(new Uint8Array(m))}},h.uint8array={string:b,array:function(m){return A(m,new Array(m.length))},arraybuffer:function(m){return m.buffer},uint8array:d,nodebuffer:function(m){return i.newBufferFrom(m)}},h.nodebuffer={string:b,array:function(m){return A(m,new Array(m.length))},arraybuffer:function(m){return h.nodebuffer.uint8array(m).buffer},uint8array:function(m){return A(m,new Uint8Array(m.length))},nodebuffer:d},a.transformTo=function(m,v){if(v||(v=""),!m)return v;a.checkSupport(m);var S=a.getTypeOf(v),y=h[S][m](v);return y},a.resolve=function(m){for(var v=m.split("/"),S=[],y=0;y<v.length;y++){var W=v[y];W==="."||W===""&&y!==0&&y!==v.length-1||(W===".."?S.pop():S.push(W))}return S.join("/")},a.getTypeOf=function(m){if(typeof m=="string")return"string";if(Object.prototype.toString.call(m)==="[object Array]")return"array";if(l.nodebuffer&&i.isBuffer(m))return"nodebuffer";if(l.uint8array&&m instanceof Uint8Array)return"uint8array";if(l.arraybuffer&&m instanceof ArrayBuffer)return"arraybuffer"},a.checkSupport=function(m){var v=l[m.toLowerCase()];if(!v)throw new Error(m+" is not supported by this platform")},a.MAX_VALUE_16BITS=65535,a.MAX_VALUE_32BITS=-1,a.pretty=function(m){var v="",S,y;for(y=0;y<(m||"").length;y++)S=m.charCodeAt(y),v+="\\x"+(S<16?"0":"")+S.toString(16).toUpperCase();return v},a.delay=function(m,v,S){setImmediate(function(){m.apply(S||null,v||[])})},a.inherits=function(m,v){var S=function(){};S.prototype=v.prototype,m.prototype=new S},a.extend=function(){var m={},v,S;for(v=0;v<arguments.length;v++)for(S in arguments[v])Object.prototype.hasOwnProperty.call(arguments[v],S)&&typeof m[S]>"u"&&(m[S]=arguments[v][S]);return m},a.prepareContent=function(m,v,S,y,W){var k=s.Promise.resolve(v).then(function(V){var T=l.blob&&(V instanceof Blob||["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(V))!==-1);return T&&typeof FileReader<"u"?new s.Promise(function(P,x){var g=new FileReader;g.onload=function(j){P(j.target.result)},g.onerror=function(j){x(j.target.error)},g.readAsArrayBuffer(V)}):V});return k.then(function(V){var T=a.getTypeOf(V);return T?(T==="arraybuffer"?V=a.transformTo("uint8array",V):T==="string"&&(W?V=o.decode(V):S&&y!==!0&&(V=u(V))),V):s.Promise.reject(new Error("Can't read the data of '"+m+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))})}},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,setimmediate:54}],33:[function(n,r,a){var l=n("./reader/readerFor"),o=n("./utils"),i=n("./signature"),s=n("./zipEntry"),u=n("./support");function d(f){this.files=[],this.loadOptions=f}d.prototype={checkSignature:function(f){if(!this.reader.readAndCheckSignature(f)){this.reader.index-=4;var p=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+o.pretty(p)+", expected "+o.pretty(f)+")")}},isSignature:function(f,p){var b=this.reader.index;this.reader.setIndex(f);var A=this.reader.readString(4),h=A===p;return this.reader.setIndex(b),h},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var f=this.reader.readData(this.zipCommentLength),p=u.uint8array?"uint8array":"array",b=o.transformTo(p,f);this.zipComment=this.loadOptions.decodeFileName(b)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var f=this.zip64EndOfCentralSize-44,p=0,b,A,h;p<f;)b=this.reader.readInt(2),A=this.reader.readInt(4),h=this.reader.readData(A),this.zip64ExtensibleData[b]={id:b,length:A,value:h}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var f,p;for(f=0;f<this.files.length;f++)p=this.files[f],this.reader.setIndex(p.localHeaderOffset),this.checkSignature(i.LOCAL_FILE_HEADER),p.readLocalPart(this.reader),p.handleUTF8(),p.processAttributes()},readCentralDir:function(){var f;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(i.CENTRAL_FILE_HEADER);)f=new s({zip64:this.zip64},this.loadOptions),f.readCentralPart(this.reader),this.files.push(f);if(this.centralDirRecords!==this.files.length&&this.centralDirRecords!==0&&this.files.length===0)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var f=this.reader.lastIndexOfSignature(i.CENTRAL_DIRECTORY_END);if(f<0){var p=!this.isSignature(0,i.LOCAL_FILE_HEADER);throw p?new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html"):new Error("Corrupted zip: can't find end of central directory")}this.reader.setIndex(f);var b=f;if(this.checkSignature(i.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===o.MAX_VALUE_16BITS||this.diskWithCentralDirStart===o.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===o.MAX_VALUE_16BITS||this.centralDirRecords===o.MAX_VALUE_16BITS||this.centralDirSize===o.MAX_VALUE_32BITS||this.centralDirOffset===o.MAX_VALUE_32BITS){if(this.zip64=!0,f=this.reader.lastIndexOfSignature(i.ZIP64_CENTRAL_DIRECTORY_LOCATOR),f<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(f),this.checkSignature(i.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,i.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(i.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(i.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var A=this.centralDirOffset+this.centralDirSize;this.zip64&&(A+=20,A+=12+this.zip64EndOfCentralSize);var h=b-A;if(h>0)this.isSignature(b,i.CENTRAL_FILE_HEADER)||(this.reader.zero=h);else if(h<0)throw new Error("Corrupted zip: missing "+Math.abs(h)+" bytes.")},prepareReader:function(f){this.reader=l(f)},load:function(f){this.prepareReader(f),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},r.exports=d},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utils":32,"./zipEntry":34}],34:[function(n,r,a){var l=n("./reader/readerFor"),o=n("./utils"),i=n("./compressedObject"),s=n("./crc32"),u=n("./utf8"),d=n("./compressions"),f=n("./support"),p=0,b=3,A=function(m){for(var v in d)if(!!Object.prototype.hasOwnProperty.call(d,v)&&d[v].magic===m)return d[v];return null};function h(m,v){this.options=m,this.loadOptions=v}h.prototype={isEncrypted:function(){return(this.bitFlag&1)===1},useUTF8:function(){return(this.bitFlag&2048)===2048},readLocalPart:function(m){var v,S;if(m.skip(22),this.fileNameLength=m.readInt(2),S=m.readInt(2),this.fileName=m.readData(this.fileNameLength),m.skip(S),this.compressedSize===-1||this.uncompressedSize===-1)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");if(v=A(this.compressionMethod),v===null)throw new Error("Corrupted zip : compression "+o.pretty(this.compressionMethod)+" unknown (inner file : "+o.transformTo("string",this.fileName)+")");this.decompressed=new i(this.compressedSize,this.uncompressedSize,this.crc32,v,m.readData(this.compressedSize))},readCentralPart:function(m){this.versionMadeBy=m.readInt(2),m.skip(2),this.bitFlag=m.readInt(2),this.compressionMethod=m.readString(2),this.date=m.readDate(),this.crc32=m.readInt(4),this.compressedSize=m.readInt(4),this.uncompressedSize=m.readInt(4);var v=m.readInt(2);if(this.extraFieldsLength=m.readInt(2),this.fileCommentLength=m.readInt(2),this.diskNumberStart=m.readInt(2),this.internalFileAttributes=m.readInt(2),this.externalFileAttributes=m.readInt(4),this.localHeaderOffset=m.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");m.skip(v),this.readExtraFields(m),this.parseZIP64ExtraField(m),this.fileComment=m.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var m=this.versionMadeBy>>8;this.dir=!!(this.externalFileAttributes&16),m===p&&(this.dosPermissions=this.externalFileAttributes&63),m===b&&(this.unixPermissions=this.externalFileAttributes>>16&65535),!this.dir&&this.fileNameStr.slice(-1)==="/"&&(this.dir=!0)},parseZIP64ExtraField:function(){if(!!this.extraFields[1]){var m=l(this.extraFields[1].value);this.uncompressedSize===o.MAX_VALUE_32BITS&&(this.uncompressedSize=m.readInt(8)),this.compressedSize===o.MAX_VALUE_32BITS&&(this.compressedSize=m.readInt(8)),this.localHeaderOffset===o.MAX_VALUE_32BITS&&(this.localHeaderOffset=m.readInt(8)),this.diskNumberStart===o.MAX_VALUE_32BITS&&(this.diskNumberStart=m.readInt(4))}},readExtraFields:function(m){var v=m.index+this.extraFieldsLength,S,y,W;for(this.extraFields||(this.extraFields={});m.index+4<v;)S=m.readInt(2),y=m.readInt(2),W=m.readData(y),this.extraFields[S]={id:S,length:y,value:W};m.setIndex(v)},handleUTF8:function(){var m=f.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=u.utf8decode(this.fileName),this.fileCommentStr=u.utf8decode(this.fileComment);else{var v=this.findExtraFieldUnicodePath();if(v!==null)this.fileNameStr=v;else{var S=o.transformTo(m,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(S)}var y=this.findExtraFieldUnicodeComment();if(y!==null)this.fileCommentStr=y;else{var W=o.transformTo(m,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(W)}}},findExtraFieldUnicodePath:function(){var m=this.extraFields[28789];if(m){var v=l(m.value);return v.readInt(1)!==1||s(this.fileName)!==v.readInt(4)?null:u.utf8decode(v.readData(m.length-5))}return null},findExtraFieldUnicodeComment:function(){var m=this.extraFields[25461];if(m){var v=l(m.value);return v.readInt(1)!==1||s(this.fileComment)!==v.readInt(4)?null:u.utf8decode(v.readData(m.length-5))}return null}},r.exports=h},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(n,r,a){var l=n("./stream/StreamHelper"),o=n("./stream/DataWorker"),i=n("./utf8"),s=n("./compressedObject"),u=n("./stream/GenericWorker"),d=function(A,h,m){this.name=A,this.dir=m.dir,this.date=m.date,this.comment=m.comment,this.unixPermissions=m.unixPermissions,this.dosPermissions=m.dosPermissions,this._data=h,this._dataBinary=m.binary,this.options={compression:m.compression,compressionOptions:m.compressionOptions}};d.prototype={internalStream:function(A){var h=null,m="string";try{if(!A)throw new Error("No output type specified.");m=A.toLowerCase();var v=m==="string"||m==="text";(m==="binarystring"||m==="text")&&(m="string"),h=this._decompressWorker();var S=!this._dataBinary;S&&!v&&(h=h.pipe(new i.Utf8EncodeWorker)),!S&&v&&(h=h.pipe(new i.Utf8DecodeWorker))}catch(y){h=new u("error"),h.error(y)}return new l(h,m,"")},async:function(A,h){return this.internalStream(A).accumulate(h)},nodeStream:function(A,h){return this.internalStream(A||"nodebuffer").toNodejsStream(h)},_compressWorker:function(A,h){if(this._data instanceof s&&this._data.compression.magic===A.magic)return this._data.getCompressedWorker();var m=this._decompressWorker();return this._dataBinary||(m=m.pipe(new i.Utf8EncodeWorker)),s.createWorkerFrom(m,A,h)},_decompressWorker:function(){return this._data instanceof s?this._data.getContentWorker():this._data instanceof u?this._data:new o(this._data)}};for(var f=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],p=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},b=0;b<f.length;b++)d.prototype[f[b]]=p;r.exports=d},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(n,r,a){(function(l){var o=l.MutationObserver||l.WebKitMutationObserver,i;if(o){var s=0,u=new o(A),d=l.document.createTextNode("");u.observe(d,{characterData:!0}),i=function(){d.data=s=++s%2}}else if(!l.setImmediate&&typeof l.MessageChannel<"u"){var f=new l.MessageChannel;f.port1.onmessage=A,i=function(){f.port2.postMessage(0)}}else"document"in l&&"onreadystatechange"in l.document.createElement("script")?i=function(){var m=l.document.createElement("script");m.onreadystatechange=function(){A(),m.onreadystatechange=null,m.parentNode.removeChild(m),m=null},l.document.documentElement.appendChild(m)}:i=function(){setTimeout(A,0)};var p,b=[];function A(){p=!0;for(var m,v,S=b.length;S;){for(v=b,b=[],m=-1;++m<S;)v[m]();S=b.length}p=!1}r.exports=h;function h(m){b.push(m)===1&&!p&&i()}}).call(this,typeof Tn<"u"?Tn:typeof self<"u"?self:typeof window<"u"?window:{})},{}],37:[function(n,r,a){var l=n("immediate");function o(){}var i={},s=["REJECTED"],u=["FULFILLED"],d=["PENDING"];r.exports=f;function f(k){if(typeof k!="function")throw new TypeError("resolver must be a function");this.state=d,this.queue=[],this.outcome=void 0,k!==o&&h(this,k)}f.prototype.finally=function(k){if(typeof k!="function")return this;var V=this.constructor;return this.then(T,P);function T(x){function g(){return x}return V.resolve(k()).then(g)}function P(x){function g(){throw x}return V.resolve(k()).then(g)}},f.prototype.catch=function(k){return this.then(null,k)},f.prototype.then=function(k,V){if(typeof k!="function"&&this.state===u||typeof V!="function"&&this.state===s)return this;var T=new this.constructor(o);if(this.state!==d){var P=this.state===u?k:V;b(T,P,this.outcome)}else this.queue.push(new p(T,k,V));return T};function p(k,V,T){this.promise=k,typeof V=="function"&&(this.onFulfilled=V,this.callFulfilled=this.otherCallFulfilled),typeof T=="function"&&(this.onRejected=T,this.callRejected=this.otherCallRejected)}p.prototype.callFulfilled=function(k){i.resolve(this.promise,k)},p.prototype.otherCallFulfilled=function(k){b(this.promise,this.onFulfilled,k)},p.prototype.callRejected=function(k){i.reject(this.promise,k)},p.prototype.otherCallRejected=function(k){b(this.promise,this.onRejected,k)};function b(k,V,T){l(function(){var P;try{P=V(T)}catch(x){return i.reject(k,x)}P===k?i.reject(k,new TypeError("Cannot resolve promise with itself")):i.resolve(k,P)})}i.resolve=function(k,V){var T=m(A,V);if(T.status==="error")return i.reject(k,T.value);var P=T.value;if(P)h(k,P);else{k.state=u,k.outcome=V;for(var x=-1,g=k.queue.length;++x<g;)k.queue[x].callFulfilled(V)}return k},i.reject=function(k,V){k.state=s,k.outcome=V;for(var T=-1,P=k.queue.length;++T<P;)k.queue[T].callRejected(V);return k};function A(k){var V=k&&k.then;if(k&&(typeof k=="object"||typeof k=="function")&&typeof V=="function")return function(){V.apply(k,arguments)}}function h(k,V){var T=!1;function P(L){T||(T=!0,i.reject(k,L))}function x(L){T||(T=!0,i.resolve(k,L))}function g(){V(x,P)}var j=m(g);j.status==="error"&&P(j.value)}function m(k,V){var T={};try{T.value=k(V),T.status="success"}catch(P){T.status="error",T.value=P}return T}f.resolve=v;function v(k){return k instanceof this?k:i.resolve(new this(o),k)}f.reject=S;function S(k){var V=new this(o);return i.reject(V,k)}f.all=y;function y(k){var V=this;if(Object.prototype.toString.call(k)!=="[object Array]")return this.reject(new TypeError("must be an array"));var T=k.length,P=!1;if(!T)return this.resolve([]);for(var x=new Array(T),g=0,j=-1,L=new this(o);++j<T;)w(k[j],j);return L;function w(R,Z){V.resolve(R).then(G,function(U){P||(P=!0,i.reject(L,U))});function G(U){x[Z]=U,++g===T&&!P&&(P=!0,i.resolve(L,x))}}}f.race=W;function W(k){var V=this;if(Object.prototype.toString.call(k)!=="[object Array]")return this.reject(new TypeError("must be an array"));var T=k.length,P=!1;if(!T)return this.resolve([]);for(var x=-1,g=new this(o);++x<T;)j(k[x]);return g;function j(L){V.resolve(L).then(function(w){P||(P=!0,i.resolve(g,w))},function(w){P||(P=!0,i.reject(g,w))})}}},{immediate:36}],38:[function(n,r,a){var l=n("./lib/utils/common").assign,o=n("./lib/deflate"),i=n("./lib/inflate"),s=n("./lib/zlib/constants"),u={};l(u,o,i,s),r.exports=u},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(n,r,a){var l=n("./zlib/deflate"),o=n("./utils/common"),i=n("./utils/strings"),s=n("./zlib/messages"),u=n("./zlib/zstream"),d=Object.prototype.toString,f=0,p=4,b=0,A=1,h=2,m=-1,v=0,S=8;function y(T){if(!(this instanceof y))return new y(T);this.options=o.assign({level:m,method:S,chunkSize:16384,windowBits:15,memLevel:8,strategy:v,to:""},T||{});var P=this.options;P.raw&&P.windowBits>0?P.windowBits=-P.windowBits:P.gzip&&P.windowBits>0&&P.windowBits<16&&(P.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new u,this.strm.avail_out=0;var x=l.deflateInit2(this.strm,P.level,P.method,P.windowBits,P.memLevel,P.strategy);if(x!==b)throw new Error(s[x]);if(P.header&&l.deflateSetHeader(this.strm,P.header),P.dictionary){var g;if(typeof P.dictionary=="string"?g=i.string2buf(P.dictionary):d.call(P.dictionary)==="[object ArrayBuffer]"?g=new Uint8Array(P.dictionary):g=P.dictionary,x=l.deflateSetDictionary(this.strm,g),x!==b)throw new Error(s[x]);this._dict_set=!0}}y.prototype.push=function(T,P){var x=this.strm,g=this.options.chunkSize,j,L;if(this.ended)return!1;L=P===~~P?P:P===!0?p:f,typeof T=="string"?x.input=i.string2buf(T):d.call(T)==="[object ArrayBuffer]"?x.input=new Uint8Array(T):x.input=T,x.next_in=0,x.avail_in=x.input.length;do{if(x.avail_out===0&&(x.output=new o.Buf8(g),x.next_out=0,x.avail_out=g),j=l.deflate(x,L),j!==A&&j!==b)return this.onEnd(j),this.ended=!0,!1;(x.avail_out===0||x.avail_in===0&&(L===p||L===h))&&(this.options.to==="string"?this.onData(i.buf2binstring(o.shrinkBuf(x.output,x.next_out))):this.onData(o.shrinkBuf(x.output,x.next_out)))}while((x.avail_in>0||x.avail_out===0)&&j!==A);return L===p?(j=l.deflateEnd(this.strm),this.onEnd(j),this.ended=!0,j===b):(L===h&&(this.onEnd(b),x.avail_out=0),!0)},y.prototype.onData=function(T){this.chunks.push(T)},y.prototype.onEnd=function(T){T===b&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=T,this.msg=this.strm.msg};function W(T,P){var x=new y(P);if(x.push(T,!0),x.err)throw x.msg||s[x.err];return x.result}function k(T,P){return P=P||{},P.raw=!0,W(T,P)}function V(T,P){return P=P||{},P.gzip=!0,W(T,P)}a.Deflate=y,a.deflate=W,a.deflateRaw=k,a.gzip=V},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(n,r,a){var l=n("./zlib/inflate"),o=n("./utils/common"),i=n("./utils/strings"),s=n("./zlib/constants"),u=n("./zlib/messages"),d=n("./zlib/zstream"),f=n("./zlib/gzheader"),p=Object.prototype.toString;function b(m){if(!(this instanceof b))return new b(m);this.options=o.assign({chunkSize:16384,windowBits:0,to:""},m||{});var v=this.options;v.raw&&v.windowBits>=0&&v.windowBits<16&&(v.windowBits=-v.windowBits,v.windowBits===0&&(v.windowBits=-15)),v.windowBits>=0&&v.windowBits<16&&!(m&&m.windowBits)&&(v.windowBits+=32),v.windowBits>15&&v.windowBits<48&&(v.windowBits&15)===0&&(v.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new d,this.strm.avail_out=0;var S=l.inflateInit2(this.strm,v.windowBits);if(S!==s.Z_OK)throw new Error(u[S]);this.header=new f,l.inflateGetHeader(this.strm,this.header)}b.prototype.push=function(m,v){var S=this.strm,y=this.options.chunkSize,W=this.options.dictionary,k,V,T,P,x,g,j=!1;if(this.ended)return!1;V=v===~~v?v:v===!0?s.Z_FINISH:s.Z_NO_FLUSH,typeof m=="string"?S.input=i.binstring2buf(m):p.call(m)==="[object ArrayBuffer]"?S.input=new Uint8Array(m):S.input=m,S.next_in=0,S.avail_in=S.input.length;do{if(S.avail_out===0&&(S.output=new o.Buf8(y),S.next_out=0,S.avail_out=y),k=l.inflate(S,s.Z_NO_FLUSH),k===s.Z_NEED_DICT&&W&&(typeof W=="string"?g=i.string2buf(W):p.call(W)==="[object ArrayBuffer]"?g=new Uint8Array(W):g=W,k=l.inflateSetDictionary(this.strm,g)),k===s.Z_BUF_ERROR&&j===!0&&(k=s.Z_OK,j=!1),k!==s.Z_STREAM_END&&k!==s.Z_OK)return this.onEnd(k),this.ended=!0,!1;S.next_out&&(S.avail_out===0||k===s.Z_STREAM_END||S.avail_in===0&&(V===s.Z_FINISH||V===s.Z_SYNC_FLUSH))&&(this.options.to==="string"?(T=i.utf8border(S.output,S.next_out),P=S.next_out-T,x=i.buf2string(S.output,T),S.next_out=P,S.avail_out=y-P,P&&o.arraySet(S.output,S.output,T,P,0),this.onData(x)):this.onData(o.shrinkBuf(S.output,S.next_out))),S.avail_in===0&&S.avail_out===0&&(j=!0)}while((S.avail_in>0||S.avail_out===0)&&k!==s.Z_STREAM_END);return k===s.Z_STREAM_END&&(V=s.Z_FINISH),V===s.Z_FINISH?(k=l.inflateEnd(this.strm),this.onEnd(k),this.ended=!0,k===s.Z_OK):(V===s.Z_SYNC_FLUSH&&(this.onEnd(s.Z_OK),S.avail_out=0),!0)},b.prototype.onData=function(m){this.chunks.push(m)},b.prototype.onEnd=function(m){m===s.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=m,this.msg=this.strm.msg};function A(m,v){var S=new b(v);if(S.push(m,!0),S.err)throw S.msg||u[S.err];return S.result}function h(m,v){return v=v||{},v.raw=!0,A(m,v)}a.Inflate=b,a.inflate=A,a.inflateRaw=h,a.ungzip=A},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(n,r,a){var l=typeof Uint8Array<"u"&&typeof Uint16Array<"u"&&typeof Int32Array<"u";a.assign=function(s){for(var u=Array.prototype.slice.call(arguments,1);u.length;){var d=u.shift();if(!!d){if(typeof d!="object")throw new TypeError(d+"must be non-object");for(var f in d)d.hasOwnProperty(f)&&(s[f]=d[f])}}return s},a.shrinkBuf=function(s,u){return s.length===u?s:s.subarray?s.subarray(0,u):(s.length=u,s)};var o={arraySet:function(s,u,d,f,p){if(u.subarray&&s.subarray){s.set(u.subarray(d,d+f),p);return}for(var b=0;b<f;b++)s[p+b]=u[d+b]},flattenChunks:function(s){var u,d,f,p,b,A;for(f=0,u=0,d=s.length;u<d;u++)f+=s[u].length;for(A=new Uint8Array(f),p=0,u=0,d=s.length;u<d;u++)b=s[u],A.set(b,p),p+=b.length;return A}},i={arraySet:function(s,u,d,f,p){for(var b=0;b<f;b++)s[p+b]=u[d+b]},flattenChunks:function(s){return[].concat.apply([],s)}};a.setTyped=function(s){s?(a.Buf8=Uint8Array,a.Buf16=Uint16Array,a.Buf32=Int32Array,a.assign(a,o)):(a.Buf8=Array,a.Buf16=Array,a.Buf32=Array,a.assign(a,i))},a.setTyped(l)},{}],42:[function(n,r,a){var l=n("./common"),o=!0,i=!0;try{String.fromCharCode.apply(null,[0])}catch{o=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{i=!1}for(var s=new l.Buf8(256),u=0;u<256;u++)s[u]=u>=252?6:u>=248?5:u>=240?4:u>=224?3:u>=192?2:1;s[254]=s[254]=1,a.string2buf=function(f){var p,b,A,h,m,v=f.length,S=0;for(h=0;h<v;h++)b=f.charCodeAt(h),(b&64512)===55296&&h+1<v&&(A=f.charCodeAt(h+1),(A&64512)===56320&&(b=65536+(b-55296<<10)+(A-56320),h++)),S+=b<128?1:b<2048?2:b<65536?3:4;for(p=new l.Buf8(S),m=0,h=0;m<S;h++)b=f.charCodeAt(h),(b&64512)===55296&&h+1<v&&(A=f.charCodeAt(h+1),(A&64512)===56320&&(b=65536+(b-55296<<10)+(A-56320),h++)),b<128?p[m++]=b:b<2048?(p[m++]=192|b>>>6,p[m++]=128|b&63):b<65536?(p[m++]=224|b>>>12,p[m++]=128|b>>>6&63,p[m++]=128|b&63):(p[m++]=240|b>>>18,p[m++]=128|b>>>12&63,p[m++]=128|b>>>6&63,p[m++]=128|b&63);return p};function d(f,p){if(p<65537&&(f.subarray&&i||!f.subarray&&o))return String.fromCharCode.apply(null,l.shrinkBuf(f,p));for(var b="",A=0;A<p;A++)b+=String.fromCharCode(f[A]);return b}a.buf2binstring=function(f){return d(f,f.length)},a.binstring2buf=function(f){for(var p=new l.Buf8(f.length),b=0,A=p.length;b<A;b++)p[b]=f.charCodeAt(b);return p},a.buf2string=function(f,p){var b,A,h,m,v=p||f.length,S=new Array(v*2);for(A=0,b=0;b<v;){if(h=f[b++],h<128){S[A++]=h;continue}if(m=s[h],m>4){S[A++]=65533,b+=m-1;continue}for(h&=m===2?31:m===3?15:7;m>1&&b<v;)h=h<<6|f[b++]&63,m--;if(m>1){S[A++]=65533;continue}h<65536?S[A++]=h:(h-=65536,S[A++]=55296|h>>10&1023,S[A++]=56320|h&1023)}return d(S,A)},a.utf8border=function(f,p){var b;for(p=p||f.length,p>f.length&&(p=f.length),b=p-1;b>=0&&(f[b]&192)===128;)b--;return b<0||b===0?p:b+s[f[b]]>p?b:p}},{"./common":41}],43:[function(n,r,a){function l(o,i,s,u){for(var d=o&65535|0,f=o>>>16&65535|0,p=0;s!==0;){p=s>2e3?2e3:s,s-=p;do d=d+i[u++]|0,f=f+d|0;while(--p);d%=65521,f%=65521}return d|f<<16|0}r.exports=l},{}],44:[function(n,r,a){r.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(n,r,a){function l(){for(var s,u=[],d=0;d<256;d++){s=d;for(var f=0;f<8;f++)s=s&1?3988292384^s>>>1:s>>>1;u[d]=s}return u}var o=l();function i(s,u,d,f){var p=o,b=f+d;s^=-1;for(var A=f;A<b;A++)s=s>>>8^p[(s^u[A])&255];return s^-1}r.exports=i},{}],46:[function(n,r,a){var l=n("../utils/common"),o=n("./trees"),i=n("./adler32"),s=n("./crc32"),u=n("./messages"),d=0,f=1,p=3,b=4,A=5,h=0,m=1,v=-2,S=-3,y=-5,W=-1,k=1,V=2,T=3,P=4,x=0,g=2,j=8,L=9,w=15,R=8,Z=29,G=256,U=G+1+Z,H=30,O=19,D=2*U+1,Y=15,Q=3,ee=258,oe=ee+Q+1,Ne=32,pe=42,me=69,ce=73,Le=91,Te=103,xe=113,_=666,re=1,ye=2,ge=3,Fe=4,Ae=3;function Ze(N,de){return N.msg=u[de],de}function Ue(N){return(N<<1)-(N>4?9:0)}function Pe(N){for(var de=N.length;--de>=0;)N[de]=0}function qe(N){var de=N.state,Ke=de.pending;Ke>N.avail_out&&(Ke=N.avail_out),Ke!==0&&(l.arraySet(N.output,de.pending_buf,de.pending_out,Ke,N.next_out),N.next_out+=Ke,de.pending_out+=Ke,N.total_out+=Ke,N.avail_out-=Ke,de.pending-=Ke,de.pending===0&&(de.pending_out=0))}function De(N,de){o._tr_flush_block(N,N.block_start>=0?N.block_start:-1,N.strstart-N.block_start,de),N.block_start=N.strstart,qe(N.strm)}function Me(N,de){N.pending_buf[N.pending++]=de}function _e(N,de){N.pending_buf[N.pending++]=de>>>8&255,N.pending_buf[N.pending++]=de&255}function Re(N,de,Ke,I){var he=N.avail_in;return he>I&&(he=I),he===0?0:(N.avail_in-=he,l.arraySet(de,N.input,N.next_in,he,Ke),N.state.wrap===1?N.adler=i(N.adler,de,he,Ke):N.state.wrap===2&&(N.adler=s(N.adler,de,he,Ke)),N.next_in+=he,N.total_in+=he,he)}function $e(N,de){var Ke=N.max_chain_length,I=N.strstart,he,Ge,Wt=N.prev_length,kt=N.nice_match,wt=N.strstart>N.w_size-oe?N.strstart-(N.w_size-oe):0,Gt=N.window,In=N.w_mask,gn=N.prev,an=N.strstart+ee,Jn=Gt[I+Wt-1],tr=Gt[I+Wt];N.prev_length>=N.good_match&&(Ke>>=2),kt>N.lookahead&&(kt=N.lookahead);do if(he=de,!(Gt[he+Wt]!==tr||Gt[he+Wt-1]!==Jn||Gt[he]!==Gt[I]||Gt[++he]!==Gt[I+1])){I+=2,he++;do;while(Gt[++I]===Gt[++he]&&Gt[++I]===Gt[++he]&&Gt[++I]===Gt[++he]&&Gt[++I]===Gt[++he]&&Gt[++I]===Gt[++he]&&Gt[++I]===Gt[++he]&&Gt[++I]===Gt[++he]&&Gt[++I]===Gt[++he]&&I<an);if(Ge=ee-(an-I),I=an-ee,Ge>Wt){if(N.match_start=de,Wt=Ge,Ge>=kt)break;Jn=Gt[I+Wt-1],tr=Gt[I+Wt]}}while((de=gn[de&In])>wt&&--Ke!==0);return Wt<=N.lookahead?Wt:N.lookahead}function dt(N){var de=N.w_size,Ke,I,he,Ge,Wt;do{if(Ge=N.window_size-N.lookahead-N.strstart,N.strstart>=de+(de-oe)){l.arraySet(N.window,N.window,de,de,0),N.match_start-=de,N.strstart-=de,N.block_start-=de,I=N.hash_size,Ke=I;do he=N.head[--Ke],N.head[Ke]=he>=de?he-de:0;while(--I);I=de,Ke=I;do he=N.prev[--Ke],N.prev[Ke]=he>=de?he-de:0;while(--I);Ge+=de}if(N.strm.avail_in===0)break;if(I=Re(N.strm,N.window,N.strstart+N.lookahead,Ge),N.lookahead+=I,N.lookahead+N.insert>=Q)for(Wt=N.strstart-N.insert,N.ins_h=N.window[Wt],N.ins_h=(N.ins_h<<N.hash_shift^N.window[Wt+1])&N.hash_mask;N.insert&&(N.ins_h=(N.ins_h<<N.hash_shift^N.window[Wt+Q-1])&N.hash_mask,N.prev[Wt&N.w_mask]=N.head[N.ins_h],N.head[N.ins_h]=Wt,Wt++,N.insert--,!(N.lookahead+N.insert<Q)););}while(N.lookahead<oe&&N.strm.avail_in!==0)}function yt(N,de){var Ke=65535;for(Ke>N.pending_buf_size-5&&(Ke=N.pending_buf_size-5);;){if(N.lookahead<=1){if(dt(N),N.lookahead===0&&de===d)return re;if(N.lookahead===0)break}N.strstart+=N.lookahead,N.lookahead=0;var I=N.block_start+Ke;if((N.strstart===0||N.strstart>=I)&&(N.lookahead=N.strstart-I,N.strstart=I,De(N,!1),N.strm.avail_out===0)||N.strstart-N.block_start>=N.w_size-oe&&(De(N,!1),N.strm.avail_out===0))return re}return N.insert=0,de===b?(De(N,!0),N.strm.avail_out===0?ge:Fe):(N.strstart>N.block_start&&(De(N,!1),N.strm.avail_out===0),re)}function gt(N,de){for(var Ke,I;;){if(N.lookahead<oe){if(dt(N),N.lookahead<oe&&de===d)return re;if(N.lookahead===0)break}if(Ke=0,N.lookahead>=Q&&(N.ins_h=(N.ins_h<<N.hash_shift^N.window[N.strstart+Q-1])&N.hash_mask,Ke=N.prev[N.strstart&N.w_mask]=N.head[N.ins_h],N.head[N.ins_h]=N.strstart),Ke!==0&&N.strstart-Ke<=N.w_size-oe&&(N.match_length=$e(N,Ke)),N.match_length>=Q)if(I=o._tr_tally(N,N.strstart-N.match_start,N.match_length-Q),N.lookahead-=N.match_length,N.match_length<=N.max_lazy_match&&N.lookahead>=Q){N.match_length--;do N.strstart++,N.ins_h=(N.ins_h<<N.hash_shift^N.window[N.strstart+Q-1])&N.hash_mask,Ke=N.prev[N.strstart&N.w_mask]=N.head[N.ins_h],N.head[N.ins_h]=N.strstart;while(--N.match_length!==0);N.strstart++}else N.strstart+=N.match_length,N.match_length=0,N.ins_h=N.window[N.strstart],N.ins_h=(N.ins_h<<N.hash_shift^N.window[N.strstart+1])&N.hash_mask;else I=o._tr_tally(N,0,N.window[N.strstart]),N.lookahead--,N.strstart++;if(I&&(De(N,!1),N.strm.avail_out===0))return re}return N.insert=N.strstart<Q-1?N.strstart:Q-1,de===b?(De(N,!0),N.strm.avail_out===0?ge:Fe):N.last_lit&&(De(N,!1),N.strm.avail_out===0)?re:ye}function ot(N,de){for(var Ke,I,he;;){if(N.lookahead<oe){if(dt(N),N.lookahead<oe&&de===d)return re;if(N.lookahead===0)break}if(Ke=0,N.lookahead>=Q&&(N.ins_h=(N.ins_h<<N.hash_shift^N.window[N.strstart+Q-1])&N.hash_mask,Ke=N.prev[N.strstart&N.w_mask]=N.head[N.ins_h],N.head[N.ins_h]=N.strstart),N.prev_length=N.match_length,N.prev_match=N.match_start,N.match_length=Q-1,Ke!==0&&N.prev_length<N.max_lazy_match&&N.strstart-Ke<=N.w_size-oe&&(N.match_length=$e(N,Ke),N.match_length<=5&&(N.strategy===k||N.match_length===Q&&N.strstart-N.match_start>4096)&&(N.match_length=Q-1)),N.prev_length>=Q&&N.match_length<=N.prev_length){he=N.strstart+N.lookahead-Q,I=o._tr_tally(N,N.strstart-1-N.prev_match,N.prev_length-Q),N.lookahead-=N.prev_length-1,N.prev_length-=2;do++N.strstart<=he&&(N.ins_h=(N.ins_h<<N.hash_shift^N.window[N.strstart+Q-1])&N.hash_mask,Ke=N.prev[N.strstart&N.w_mask]=N.head[N.ins_h],N.head[N.ins_h]=N.strstart);while(--N.prev_length!==0);if(N.match_available=0,N.match_length=Q-1,N.strstart++,I&&(De(N,!1),N.strm.avail_out===0))return re}else if(N.match_available){if(I=o._tr_tally(N,0,N.window[N.strstart-1]),I&&De(N,!1),N.strstart++,N.lookahead--,N.strm.avail_out===0)return re}else N.match_available=1,N.strstart++,N.lookahead--}return N.match_available&&(I=o._tr_tally(N,0,N.window[N.strstart-1]),N.match_available=0),N.insert=N.strstart<Q-1?N.strstart:Q-1,de===b?(De(N,!0),N.strm.avail_out===0?ge:Fe):N.last_lit&&(De(N,!1),N.strm.avail_out===0)?re:ye}function ke(N,de){for(var Ke,I,he,Ge,Wt=N.window;;){if(N.lookahead<=ee){if(dt(N),N.lookahead<=ee&&de===d)return re;if(N.lookahead===0)break}if(N.match_length=0,N.lookahead>=Q&&N.strstart>0&&(he=N.strstart-1,I=Wt[he],I===Wt[++he]&&I===Wt[++he]&&I===Wt[++he])){Ge=N.strstart+ee;do;while(I===Wt[++he]&&I===Wt[++he]&&I===Wt[++he]&&I===Wt[++he]&&I===Wt[++he]&&I===Wt[++he]&&I===Wt[++he]&&I===Wt[++he]&&he<Ge);N.match_length=ee-(Ge-he),N.match_length>N.lookahead&&(N.match_length=N.lookahead)}if(N.match_length>=Q?(Ke=o._tr_tally(N,1,N.match_length-Q),N.lookahead-=N.match_length,N.strstart+=N.match_length,N.match_length=0):(Ke=o._tr_tally(N,0,N.window[N.strstart]),N.lookahead--,N.strstart++),Ke&&(De(N,!1),N.strm.avail_out===0))return re}return N.insert=0,de===b?(De(N,!0),N.strm.avail_out===0?ge:Fe):N.last_lit&&(De(N,!1),N.strm.avail_out===0)?re:ye}function be(N,de){for(var Ke;;){if(N.lookahead===0&&(dt(N),N.lookahead===0)){if(de===d)return re;break}if(N.match_length=0,Ke=o._tr_tally(N,0,N.window[N.strstart]),N.lookahead--,N.strstart++,Ke&&(De(N,!1),N.strm.avail_out===0))return re}return N.insert=0,de===b?(De(N,!0),N.strm.avail_out===0?ge:Fe):N.last_lit&&(De(N,!1),N.strm.avail_out===0)?re:ye}function fe(N,de,Ke,I,he){this.good_length=N,this.max_lazy=de,this.nice_length=Ke,this.max_chain=I,this.func=he}var Xe;Xe=[new fe(0,0,0,0,yt),new fe(4,4,8,4,gt),new fe(4,5,16,8,gt),new fe(4,6,32,32,gt),new fe(4,4,16,16,ot),new fe(8,16,32,32,ot),new fe(8,16,128,128,ot),new fe(8,32,128,256,ot),new fe(32,128,258,1024,ot),new fe(32,258,258,4096,ot)];function ne(N){N.window_size=2*N.w_size,Pe(N.head),N.max_lazy_match=Xe[N.level].max_lazy,N.good_match=Xe[N.level].good_length,N.nice_match=Xe[N.level].nice_length,N.max_chain_length=Xe[N.level].max_chain,N.strstart=0,N.block_start=0,N.lookahead=0,N.insert=0,N.match_length=N.prev_length=Q-1,N.match_available=0,N.ins_h=0}function M(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=j,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new l.Buf16(D*2),this.dyn_dtree=new l.Buf16((2*H+1)*2),this.bl_tree=new l.Buf16((2*O+1)*2),Pe(this.dyn_ltree),Pe(this.dyn_dtree),Pe(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new l.Buf16(Y+1),this.heap=new l.Buf16(2*U+1),Pe(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new l.Buf16(2*U+1),Pe(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function Oe(N){var de;return!N||!N.state?Ze(N,v):(N.total_in=N.total_out=0,N.data_type=g,de=N.state,de.pending=0,de.pending_out=0,de.wrap<0&&(de.wrap=-de.wrap),de.status=de.wrap?pe:xe,N.adler=de.wrap===2?0:1,de.last_flush=d,o._tr_init(de),h)}function Ee(N){var de=Oe(N);return de===h&&ne(N.state),de}function ft(N,de){return!N||!N.state||N.state.wrap!==2?v:(N.state.gzhead=de,h)}function Se(N,de,Ke,I,he,Ge){if(!N)return v;var Wt=1;if(de===W&&(de=6),I<0?(Wt=0,I=-I):I>15&&(Wt=2,I-=16),he<1||he>L||Ke!==j||I<8||I>15||de<0||de>9||Ge<0||Ge>P)return Ze(N,v);I===8&&(I=9);var kt=new M;return N.state=kt,kt.strm=N,kt.wrap=Wt,kt.gzhead=null,kt.w_bits=I,kt.w_size=1<<kt.w_bits,kt.w_mask=kt.w_size-1,kt.hash_bits=he+7,kt.hash_size=1<<kt.hash_bits,kt.hash_mask=kt.hash_size-1,kt.hash_shift=~~((kt.hash_bits+Q-1)/Q),kt.window=new l.Buf8(kt.w_size*2),kt.head=new l.Buf16(kt.hash_size),kt.prev=new l.Buf16(kt.w_size),kt.lit_bufsize=1<<he+6,kt.pending_buf_size=kt.lit_bufsize*4,kt.pending_buf=new l.Buf8(kt.pending_buf_size),kt.d_buf=1*kt.lit_bufsize,kt.l_buf=(1+2)*kt.lit_bufsize,kt.level=de,kt.strategy=Ge,kt.method=Ke,Ee(N)}function Ye(N,de){return Se(N,de,j,w,R,x)}function E(N,de){var Ke,I,he,Ge;if(!N||!N.state||de>A||de<0)return N?Ze(N,v):v;if(I=N.state,!N.output||!N.input&&N.avail_in!==0||I.status===_&&de!==b)return Ze(N,N.avail_out===0?y:v);if(I.strm=N,Ke=I.last_flush,I.last_flush=de,I.status===pe)if(I.wrap===2)N.adler=0,Me(I,31),Me(I,139),Me(I,8),I.gzhead?(Me(I,(I.gzhead.text?1:0)+(I.gzhead.hcrc?2:0)+(I.gzhead.extra?4:0)+(I.gzhead.name?8:0)+(I.gzhead.comment?16:0)),Me(I,I.gzhead.time&255),Me(I,I.gzhead.time>>8&255),Me(I,I.gzhead.time>>16&255),Me(I,I.gzhead.time>>24&255),Me(I,I.level===9?2:I.strategy>=V||I.level<2?4:0),Me(I,I.gzhead.os&255),I.gzhead.extra&&I.gzhead.extra.length&&(Me(I,I.gzhead.extra.length&255),Me(I,I.gzhead.extra.length>>8&255)),I.gzhead.hcrc&&(N.adler=s(N.adler,I.pending_buf,I.pending,0)),I.gzindex=0,I.status=me):(Me(I,0),Me(I,0),Me(I,0),Me(I,0),Me(I,0),Me(I,I.level===9?2:I.strategy>=V||I.level<2?4:0),Me(I,Ae),I.status=xe);else{var Wt=j+(I.w_bits-8<<4)<<8,kt=-1;I.strategy>=V||I.level<2?kt=0:I.level<6?kt=1:I.level===6?kt=2:kt=3,Wt|=kt<<6,I.strstart!==0&&(Wt|=Ne),Wt+=31-Wt%31,I.status=xe,_e(I,Wt),I.strstart!==0&&(_e(I,N.adler>>>16),_e(I,N.adler&65535)),N.adler=1}if(I.status===me)if(I.gzhead.extra){for(he=I.pending;I.gzindex<(I.gzhead.extra.length&65535)&&!(I.pending===I.pending_buf_size&&(I.gzhead.hcrc&&I.pending>he&&(N.adler=s(N.adler,I.pending_buf,I.pending-he,he)),qe(N),he=I.pending,I.pending===I.pending_buf_size));)Me(I,I.gzhead.extra[I.gzindex]&255),I.gzindex++;I.gzhead.hcrc&&I.pending>he&&(N.adler=s(N.adler,I.pending_buf,I.pending-he,he)),I.gzindex===I.gzhead.extra.length&&(I.gzindex=0,I.status=ce)}else I.status=ce;if(I.status===ce)if(I.gzhead.name){he=I.pending;do{if(I.pending===I.pending_buf_size&&(I.gzhead.hcrc&&I.pending>he&&(N.adler=s(N.adler,I.pending_buf,I.pending-he,he)),qe(N),he=I.pending,I.pending===I.pending_buf_size)){Ge=1;break}I.gzindex<I.gzhead.name.length?Ge=I.gzhead.name.charCodeAt(I.gzindex++)&255:Ge=0,Me(I,Ge)}while(Ge!==0);I.gzhead.hcrc&&I.pending>he&&(N.adler=s(N.adler,I.pending_buf,I.pending-he,he)),Ge===0&&(I.gzindex=0,I.status=Le)}else I.status=Le;if(I.status===Le)if(I.gzhead.comment){he=I.pending;do{if(I.pending===I.pending_buf_size&&(I.gzhead.hcrc&&I.pending>he&&(N.adler=s(N.adler,I.pending_buf,I.pending-he,he)),qe(N),he=I.pending,I.pending===I.pending_buf_size)){Ge=1;break}I.gzindex<I.gzhead.comment.length?Ge=I.gzhead.comment.charCodeAt(I.gzindex++)&255:Ge=0,Me(I,Ge)}while(Ge!==0);I.gzhead.hcrc&&I.pending>he&&(N.adler=s(N.adler,I.pending_buf,I.pending-he,he)),Ge===0&&(I.status=Te)}else I.status=Te;if(I.status===Te&&(I.gzhead.hcrc?(I.pending+2>I.pending_buf_size&&qe(N),I.pending+2<=I.pending_buf_size&&(Me(I,N.adler&255),Me(I,N.adler>>8&255),N.adler=0,I.status=xe)):I.status=xe),I.pending!==0){if(qe(N),N.avail_out===0)return I.last_flush=-1,h}else if(N.avail_in===0&&Ue(de)<=Ue(Ke)&&de!==b)return Ze(N,y);if(I.status===_&&N.avail_in!==0)return Ze(N,y);if(N.avail_in!==0||I.lookahead!==0||de!==d&&I.status!==_){var wt=I.strategy===V?be(I,de):I.strategy===T?ke(I,de):Xe[I.level].func(I,de);if((wt===ge||wt===Fe)&&(I.status=_),wt===re||wt===ge)return N.avail_out===0&&(I.last_flush=-1),h;if(wt===ye&&(de===f?o._tr_align(I):de!==A&&(o._tr_stored_block(I,0,0,!1),de===p&&(Pe(I.head),I.lookahead===0&&(I.strstart=0,I.block_start=0,I.insert=0))),qe(N),N.avail_out===0))return I.last_flush=-1,h}return de!==b?h:I.wrap<=0?m:(I.wrap===2?(Me(I,N.adler&255),Me(I,N.adler>>8&255),Me(I,N.adler>>16&255),Me(I,N.adler>>24&255),Me(I,N.total_in&255),Me(I,N.total_in>>8&255),Me(I,N.total_in>>16&255),Me(I,N.total_in>>24&255)):(_e(I,N.adler>>>16),_e(I,N.adler&65535)),qe(N),I.wrap>0&&(I.wrap=-I.wrap),I.pending!==0?h:m)}function le(N){var de;return!N||!N.state?v:(de=N.state.status,de!==pe&&de!==me&&de!==ce&&de!==Le&&de!==Te&&de!==xe&&de!==_?Ze(N,v):(N.state=null,de===xe?Ze(N,S):h))}function He(N,de){var Ke=de.length,I,he,Ge,Wt,kt,wt,Gt,In;if(!N||!N.state||(I=N.state,Wt=I.wrap,Wt===2||Wt===1&&I.status!==pe||I.lookahead))return v;for(Wt===1&&(N.adler=i(N.adler,de,Ke,0)),I.wrap=0,Ke>=I.w_size&&(Wt===0&&(Pe(I.head),I.strstart=0,I.block_start=0,I.insert=0),In=new l.Buf8(I.w_size),l.arraySet(In,de,Ke-I.w_size,I.w_size,0),de=In,Ke=I.w_size),kt=N.avail_in,wt=N.next_in,Gt=N.input,N.avail_in=Ke,N.next_in=0,N.input=de,dt(I);I.lookahead>=Q;){he=I.strstart,Ge=I.lookahead-(Q-1);do I.ins_h=(I.ins_h<<I.hash_shift^I.window[he+Q-1])&I.hash_mask,I.prev[he&I.w_mask]=I.head[I.ins_h],I.head[I.ins_h]=he,he++;while(--Ge);I.strstart=he,I.lookahead=Q-1,dt(I)}return I.strstart+=I.lookahead,I.block_start=I.strstart,I.insert=I.lookahead,I.lookahead=0,I.match_length=I.prev_length=Q-1,I.match_available=0,N.next_in=wt,N.input=Gt,N.avail_in=kt,I.wrap=Wt,h}a.deflateInit=Ye,a.deflateInit2=Se,a.deflateReset=Ee,a.deflateResetKeep=Oe,a.deflateSetHeader=ft,a.deflate=E,a.deflateEnd=le,a.deflateSetDictionary=He,a.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(n,r,a){function l(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}r.exports=l},{}],48:[function(n,r,a){var l=30,o=12;r.exports=function(s,u){var d,f,p,b,A,h,m,v,S,y,W,k,V,T,P,x,g,j,L,w,R,Z,G,U,H;d=s.state,f=s.next_in,U=s.input,p=f+(s.avail_in-5),b=s.next_out,H=s.output,A=b-(u-s.avail_out),h=b+(s.avail_out-257),m=d.dmax,v=d.wsize,S=d.whave,y=d.wnext,W=d.window,k=d.hold,V=d.bits,T=d.lencode,P=d.distcode,x=(1<<d.lenbits)-1,g=(1<<d.distbits)-1;e:do{V<15&&(k+=U[f++]<<V,V+=8,k+=U[f++]<<V,V+=8),j=T[k&x];t:for(;;){if(L=j>>>24,k>>>=L,V-=L,L=j>>>16&255,L===0)H[b++]=j&65535;else if(L&16){w=j&65535,L&=15,L&&(V<L&&(k+=U[f++]<<V,V+=8),w+=k&(1<<L)-1,k>>>=L,V-=L),V<15&&(k+=U[f++]<<V,V+=8,k+=U[f++]<<V,V+=8),j=P[k&g];n:for(;;){if(L=j>>>24,k>>>=L,V-=L,L=j>>>16&255,L&16){if(R=j&65535,L&=15,V<L&&(k+=U[f++]<<V,V+=8,V<L&&(k+=U[f++]<<V,V+=8)),R+=k&(1<<L)-1,R>m){s.msg="invalid distance too far back",d.mode=l;break e}if(k>>>=L,V-=L,L=b-A,R>L){if(L=R-L,L>S&&d.sane){s.msg="invalid distance too far back",d.mode=l;break e}if(Z=0,G=W,y===0){if(Z+=v-L,L<w){w-=L;do H[b++]=W[Z++];while(--L);Z=b-R,G=H}}else if(y<L){if(Z+=v+y-L,L-=y,L<w){w-=L;do H[b++]=W[Z++];while(--L);if(Z=0,y<w){L=y,w-=L;do H[b++]=W[Z++];while(--L);Z=b-R,G=H}}}else if(Z+=y-L,L<w){w-=L;do H[b++]=W[Z++];while(--L);Z=b-R,G=H}for(;w>2;)H[b++]=G[Z++],H[b++]=G[Z++],H[b++]=G[Z++],w-=3;w&&(H[b++]=G[Z++],w>1&&(H[b++]=G[Z++]))}else{Z=b-R;do H[b++]=H[Z++],H[b++]=H[Z++],H[b++]=H[Z++],w-=3;while(w>2);w&&(H[b++]=H[Z++],w>1&&(H[b++]=H[Z++]))}}else if((L&64)===0){j=P[(j&65535)+(k&(1<<L)-1)];continue n}else{s.msg="invalid distance code",d.mode=l;break e}break}}else if((L&64)===0){j=T[(j&65535)+(k&(1<<L)-1)];continue t}else if(L&32){d.mode=o;break e}else{s.msg="invalid literal/length code",d.mode=l;break e}break}}while(f<p&&b<h);w=V>>3,f-=w,V-=w<<3,k&=(1<<V)-1,s.next_in=f,s.next_out=b,s.avail_in=f<p?5+(p-f):5-(f-p),s.avail_out=b<h?257+(h-b):257-(b-h),d.hold=k,d.bits=V}},{}],49:[function(n,r,a){var l=n("../utils/common"),o=n("./adler32"),i=n("./crc32"),s=n("./inffast"),u=n("./inftrees"),d=0,f=1,p=2,b=4,A=5,h=6,m=0,v=1,S=2,y=-2,W=-3,k=-4,V=-5,T=8,P=1,x=2,g=3,j=4,L=5,w=6,R=7,Z=8,G=9,U=10,H=11,O=12,D=13,Y=14,Q=15,ee=16,oe=17,Ne=18,pe=19,me=20,ce=21,Le=22,Te=23,xe=24,_=25,re=26,ye=27,ge=28,Fe=29,Ae=30,Ze=31,Ue=32,Pe=852,qe=592,De=15,Me=De;function _e(Se){return(Se>>>24&255)+(Se>>>8&65280)+((Se&65280)<<8)+((Se&255)<<24)}function Re(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new l.Buf16(320),this.work=new l.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function $e(Se){var Ye;return!Se||!Se.state?y:(Ye=Se.state,Se.total_in=Se.total_out=Ye.total=0,Se.msg="",Ye.wrap&&(Se.adler=Ye.wrap&1),Ye.mode=P,Ye.last=0,Ye.havedict=0,Ye.dmax=32768,Ye.head=null,Ye.hold=0,Ye.bits=0,Ye.lencode=Ye.lendyn=new l.Buf32(Pe),Ye.distcode=Ye.distdyn=new l.Buf32(qe),Ye.sane=1,Ye.back=-1,m)}function dt(Se){var Ye;return!Se||!Se.state?y:(Ye=Se.state,Ye.wsize=0,Ye.whave=0,Ye.wnext=0,$e(Se))}function yt(Se,Ye){var E,le;return!Se||!Se.state||(le=Se.state,Ye<0?(E=0,Ye=-Ye):(E=(Ye>>4)+1,Ye<48&&(Ye&=15)),Ye&&(Ye<8||Ye>15))?y:(le.window!==null&&le.wbits!==Ye&&(le.window=null),le.wrap=E,le.wbits=Ye,dt(Se))}function gt(Se,Ye){var E,le;return Se?(le=new Re,Se.state=le,le.window=null,E=yt(Se,Ye),E!==m&&(Se.state=null),E):y}function ot(Se){return gt(Se,Me)}var ke=!0,be,fe;function Xe(Se){if(ke){var Ye;for(be=new l.Buf32(512),fe=new l.Buf32(32),Ye=0;Ye<144;)Se.lens[Ye++]=8;for(;Ye<256;)Se.lens[Ye++]=9;for(;Ye<280;)Se.lens[Ye++]=7;for(;Ye<288;)Se.lens[Ye++]=8;for(u(f,Se.lens,0,288,be,0,Se.work,{bits:9}),Ye=0;Ye<32;)Se.lens[Ye++]=5;u(p,Se.lens,0,32,fe,0,Se.work,{bits:5}),ke=!1}Se.lencode=be,Se.lenbits=9,Se.distcode=fe,Se.distbits=5}function ne(Se,Ye,E,le){var He,N=Se.state;return N.window===null&&(N.wsize=1<<N.wbits,N.wnext=0,N.whave=0,N.window=new l.Buf8(N.wsize)),le>=N.wsize?(l.arraySet(N.window,Ye,E-N.wsize,N.wsize,0),N.wnext=0,N.whave=N.wsize):(He=N.wsize-N.wnext,He>le&&(He=le),l.arraySet(N.window,Ye,E-le,He,N.wnext),le-=He,le?(l.arraySet(N.window,Ye,E-le,le,0),N.wnext=le,N.whave=N.wsize):(N.wnext+=He,N.wnext===N.wsize&&(N.wnext=0),N.whave<N.wsize&&(N.whave+=He))),0}function M(Se,Ye){var E,le,He,N,de,Ke,I,he,Ge,Wt,kt,wt,Gt,In,gn=0,an,Jn,tr,cr,Ji,Fi,qn,jr,Bn=new l.Buf8(4),Wa,oa,gd=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!Se||!Se.state||!Se.output||!Se.input&&Se.avail_in!==0)return y;E=Se.state,E.mode===O&&(E.mode=D),de=Se.next_out,He=Se.output,I=Se.avail_out,N=Se.next_in,le=Se.input,Ke=Se.avail_in,he=E.hold,Ge=E.bits,Wt=Ke,kt=I,jr=m;e:for(;;)switch(E.mode){case P:if(E.wrap===0){E.mode=D;break}for(;Ge<16;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}if(E.wrap&2&&he===35615){E.check=0,Bn[0]=he&255,Bn[1]=he>>>8&255,E.check=i(E.check,Bn,2,0),he=0,Ge=0,E.mode=x;break}if(E.flags=0,E.head&&(E.head.done=!1),!(E.wrap&1)||(((he&255)<<8)+(he>>8))%31){Se.msg="incorrect header check",E.mode=Ae;break}if((he&15)!==T){Se.msg="unknown compression method",E.mode=Ae;break}if(he>>>=4,Ge-=4,qn=(he&15)+8,E.wbits===0)E.wbits=qn;else if(qn>E.wbits){Se.msg="invalid window size",E.mode=Ae;break}E.dmax=1<<qn,Se.adler=E.check=1,E.mode=he&512?U:O,he=0,Ge=0;break;case x:for(;Ge<16;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}if(E.flags=he,(E.flags&255)!==T){Se.msg="unknown compression method",E.mode=Ae;break}if(E.flags&57344){Se.msg="unknown header flags set",E.mode=Ae;break}E.head&&(E.head.text=he>>8&1),E.flags&512&&(Bn[0]=he&255,Bn[1]=he>>>8&255,E.check=i(E.check,Bn,2,0)),he=0,Ge=0,E.mode=g;case g:for(;Ge<32;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}E.head&&(E.head.time=he),E.flags&512&&(Bn[0]=he&255,Bn[1]=he>>>8&255,Bn[2]=he>>>16&255,Bn[3]=he>>>24&255,E.check=i(E.check,Bn,4,0)),he=0,Ge=0,E.mode=j;case j:for(;Ge<16;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}E.head&&(E.head.xflags=he&255,E.head.os=he>>8),E.flags&512&&(Bn[0]=he&255,Bn[1]=he>>>8&255,E.check=i(E.check,Bn,2,0)),he=0,Ge=0,E.mode=L;case L:if(E.flags&1024){for(;Ge<16;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}E.length=he,E.head&&(E.head.extra_len=he),E.flags&512&&(Bn[0]=he&255,Bn[1]=he>>>8&255,E.check=i(E.check,Bn,2,0)),he=0,Ge=0}else E.head&&(E.head.extra=null);E.mode=w;case w:if(E.flags&1024&&(wt=E.length,wt>Ke&&(wt=Ke),wt&&(E.head&&(qn=E.head.extra_len-E.length,E.head.extra||(E.head.extra=new Array(E.head.extra_len)),l.arraySet(E.head.extra,le,N,wt,qn)),E.flags&512&&(E.check=i(E.check,le,wt,N)),Ke-=wt,N+=wt,E.length-=wt),E.length))break e;E.length=0,E.mode=R;case R:if(E.flags&2048){if(Ke===0)break e;wt=0;do qn=le[N+wt++],E.head&&qn&&E.length<65536&&(E.head.name+=String.fromCharCode(qn));while(qn&&wt<Ke);if(E.flags&512&&(E.check=i(E.check,le,wt,N)),Ke-=wt,N+=wt,qn)break e}else E.head&&(E.head.name=null);E.length=0,E.mode=Z;case Z:if(E.flags&4096){if(Ke===0)break e;wt=0;do qn=le[N+wt++],E.head&&qn&&E.length<65536&&(E.head.comment+=String.fromCharCode(qn));while(qn&&wt<Ke);if(E.flags&512&&(E.check=i(E.check,le,wt,N)),Ke-=wt,N+=wt,qn)break e}else E.head&&(E.head.comment=null);E.mode=G;case G:if(E.flags&512){for(;Ge<16;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}if(he!==(E.check&65535)){Se.msg="header crc mismatch",E.mode=Ae;break}he=0,Ge=0}E.head&&(E.head.hcrc=E.flags>>9&1,E.head.done=!0),Se.adler=E.check=0,E.mode=O;break;case U:for(;Ge<32;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}Se.adler=E.check=_e(he),he=0,Ge=0,E.mode=H;case H:if(E.havedict===0)return Se.next_out=de,Se.avail_out=I,Se.next_in=N,Se.avail_in=Ke,E.hold=he,E.bits=Ge,S;Se.adler=E.check=1,E.mode=O;case O:if(Ye===A||Ye===h)break e;case D:if(E.last){he>>>=Ge&7,Ge-=Ge&7,E.mode=ye;break}for(;Ge<3;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}switch(E.last=he&1,he>>>=1,Ge-=1,he&3){case 0:E.mode=Y;break;case 1:if(Xe(E),E.mode=me,Ye===h){he>>>=2,Ge-=2;break e}break;case 2:E.mode=oe;break;case 3:Se.msg="invalid block type",E.mode=Ae}he>>>=2,Ge-=2;break;case Y:for(he>>>=Ge&7,Ge-=Ge&7;Ge<32;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}if((he&65535)!==(he>>>16^65535)){Se.msg="invalid stored block lengths",E.mode=Ae;break}if(E.length=he&65535,he=0,Ge=0,E.mode=Q,Ye===h)break e;case Q:E.mode=ee;case ee:if(wt=E.length,wt){if(wt>Ke&&(wt=Ke),wt>I&&(wt=I),wt===0)break e;l.arraySet(He,le,N,wt,de),Ke-=wt,N+=wt,I-=wt,de+=wt,E.length-=wt;break}E.mode=O;break;case oe:for(;Ge<14;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}if(E.nlen=(he&31)+257,he>>>=5,Ge-=5,E.ndist=(he&31)+1,he>>>=5,Ge-=5,E.ncode=(he&15)+4,he>>>=4,Ge-=4,E.nlen>286||E.ndist>30){Se.msg="too many length or distance symbols",E.mode=Ae;break}E.have=0,E.mode=Ne;case Ne:for(;E.have<E.ncode;){for(;Ge<3;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}E.lens[gd[E.have++]]=he&7,he>>>=3,Ge-=3}for(;E.have<19;)E.lens[gd[E.have++]]=0;if(E.lencode=E.lendyn,E.lenbits=7,Wa={bits:E.lenbits},jr=u(d,E.lens,0,19,E.lencode,0,E.work,Wa),E.lenbits=Wa.bits,jr){Se.msg="invalid code lengths set",E.mode=Ae;break}E.have=0,E.mode=pe;case pe:for(;E.have<E.nlen+E.ndist;){for(;gn=E.lencode[he&(1<<E.lenbits)-1],an=gn>>>24,Jn=gn>>>16&255,tr=gn&65535,!(an<=Ge);){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}if(tr<16)he>>>=an,Ge-=an,E.lens[E.have++]=tr;else{if(tr===16){for(oa=an+2;Ge<oa;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}if(he>>>=an,Ge-=an,E.have===0){Se.msg="invalid bit length repeat",E.mode=Ae;break}qn=E.lens[E.have-1],wt=3+(he&3),he>>>=2,Ge-=2}else if(tr===17){for(oa=an+3;Ge<oa;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}he>>>=an,Ge-=an,qn=0,wt=3+(he&7),he>>>=3,Ge-=3}else{for(oa=an+7;Ge<oa;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}he>>>=an,Ge-=an,qn=0,wt=11+(he&127),he>>>=7,Ge-=7}if(E.have+wt>E.nlen+E.ndist){Se.msg="invalid bit length repeat",E.mode=Ae;break}for(;wt--;)E.lens[E.have++]=qn}}if(E.mode===Ae)break;if(E.lens[256]===0){Se.msg="invalid code -- missing end-of-block",E.mode=Ae;break}if(E.lenbits=9,Wa={bits:E.lenbits},jr=u(f,E.lens,0,E.nlen,E.lencode,0,E.work,Wa),E.lenbits=Wa.bits,jr){Se.msg="invalid literal/lengths set",E.mode=Ae;break}if(E.distbits=6,E.distcode=E.distdyn,Wa={bits:E.distbits},jr=u(p,E.lens,E.nlen,E.ndist,E.distcode,0,E.work,Wa),E.distbits=Wa.bits,jr){Se.msg="invalid distances set",E.mode=Ae;break}if(E.mode=me,Ye===h)break e;case me:E.mode=ce;case ce:if(Ke>=6&&I>=258){Se.next_out=de,Se.avail_out=I,Se.next_in=N,Se.avail_in=Ke,E.hold=he,E.bits=Ge,s(Se,kt),de=Se.next_out,He=Se.output,I=Se.avail_out,N=Se.next_in,le=Se.input,Ke=Se.avail_in,he=E.hold,Ge=E.bits,E.mode===O&&(E.back=-1);break}for(E.back=0;gn=E.lencode[he&(1<<E.lenbits)-1],an=gn>>>24,Jn=gn>>>16&255,tr=gn&65535,!(an<=Ge);){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}if(Jn&&(Jn&240)===0){for(cr=an,Ji=Jn,Fi=tr;gn=E.lencode[Fi+((he&(1<<cr+Ji)-1)>>cr)],an=gn>>>24,Jn=gn>>>16&255,tr=gn&65535,!(cr+an<=Ge);){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}he>>>=cr,Ge-=cr,E.back+=cr}if(he>>>=an,Ge-=an,E.back+=an,E.length=tr,Jn===0){E.mode=re;break}if(Jn&32){E.back=-1,E.mode=O;break}if(Jn&64){Se.msg="invalid literal/length code",E.mode=Ae;break}E.extra=Jn&15,E.mode=Le;case Le:if(E.extra){for(oa=E.extra;Ge<oa;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}E.length+=he&(1<<E.extra)-1,he>>>=E.extra,Ge-=E.extra,E.back+=E.extra}E.was=E.length,E.mode=Te;case Te:for(;gn=E.distcode[he&(1<<E.distbits)-1],an=gn>>>24,Jn=gn>>>16&255,tr=gn&65535,!(an<=Ge);){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}if((Jn&240)===0){for(cr=an,Ji=Jn,Fi=tr;gn=E.distcode[Fi+((he&(1<<cr+Ji)-1)>>cr)],an=gn>>>24,Jn=gn>>>16&255,tr=gn&65535,!(cr+an<=Ge);){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}he>>>=cr,Ge-=cr,E.back+=cr}if(he>>>=an,Ge-=an,E.back+=an,Jn&64){Se.msg="invalid distance code",E.mode=Ae;break}E.offset=tr,E.extra=Jn&15,E.mode=xe;case xe:if(E.extra){for(oa=E.extra;Ge<oa;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}E.offset+=he&(1<<E.extra)-1,he>>>=E.extra,Ge-=E.extra,E.back+=E.extra}if(E.offset>E.dmax){Se.msg="invalid distance too far back",E.mode=Ae;break}E.mode=_;case _:if(I===0)break e;if(wt=kt-I,E.offset>wt){if(wt=E.offset-wt,wt>E.whave&&E.sane){Se.msg="invalid distance too far back",E.mode=Ae;break}wt>E.wnext?(wt-=E.wnext,Gt=E.wsize-wt):Gt=E.wnext-wt,wt>E.length&&(wt=E.length),In=E.window}else In=He,Gt=de-E.offset,wt=E.length;wt>I&&(wt=I),I-=wt,E.length-=wt;do He[de++]=In[Gt++];while(--wt);E.length===0&&(E.mode=ce);break;case re:if(I===0)break e;He[de++]=E.length,I--,E.mode=ce;break;case ye:if(E.wrap){for(;Ge<32;){if(Ke===0)break e;Ke--,he|=le[N++]<<Ge,Ge+=8}if(kt-=I,Se.total_out+=kt,E.total+=kt,kt&&(Se.adler=E.check=E.flags?i(E.check,He,kt,de-kt):o(E.check,He,kt,de-kt)),kt=I,(E.flags?he:_e(he))!==E.check){Se.msg="incorrect data check",E.mode=Ae;break}he=0,Ge=0}E.mode=ge;case ge:if(E.wrap&&E.flags){for(;Ge<32;){if(Ke===0)break e;Ke--,he+=le[N++]<<Ge,Ge+=8}if(he!==(E.total&4294967295)){Se.msg="incorrect length check",E.mode=Ae;break}he=0,Ge=0}E.mode=Fe;case Fe:jr=v;break e;case Ae:jr=W;break e;case Ze:return k;case Ue:default:return y}return Se.next_out=de,Se.avail_out=I,Se.next_in=N,Se.avail_in=Ke,E.hold=he,E.bits=Ge,(E.wsize||kt!==Se.avail_out&&E.mode<Ae&&(E.mode<ye||Ye!==b))&&ne(Se,Se.output,Se.next_out,kt-Se.avail_out),Wt-=Se.avail_in,kt-=Se.avail_out,Se.total_in+=Wt,Se.total_out+=kt,E.total+=kt,E.wrap&&kt&&(Se.adler=E.check=E.flags?i(E.check,He,kt,Se.next_out-kt):o(E.check,He,kt,Se.next_out-kt)),Se.data_type=E.bits+(E.last?64:0)+(E.mode===O?128:0)+(E.mode===me||E.mode===Q?256:0),(Wt===0&&kt===0||Ye===b)&&jr===m&&(jr=V),jr}function Oe(Se){if(!Se||!Se.state)return y;var Ye=Se.state;return Ye.window&&(Ye.window=null),Se.state=null,m}function Ee(Se,Ye){var E;return!Se||!Se.state||(E=Se.state,(E.wrap&2)===0)?y:(E.head=Ye,Ye.done=!1,m)}function ft(Se,Ye){var E=Ye.length,le,He,N;return!Se||!Se.state||(le=Se.state,le.wrap!==0&&le.mode!==H)?y:le.mode===H&&(He=1,He=o(He,Ye,E,0),He!==le.check)?W:(N=ne(Se,Ye,E,E),N?(le.mode=Ze,k):(le.havedict=1,m))}a.inflateReset=dt,a.inflateReset2=yt,a.inflateResetKeep=$e,a.inflateInit=ot,a.inflateInit2=gt,a.inflate=M,a.inflateEnd=Oe,a.inflateGetHeader=Ee,a.inflateSetDictionary=ft,a.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(n,r,a){var l=n("../utils/common"),o=15,i=852,s=592,u=0,d=1,f=2,p=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],b=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],A=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],h=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];r.exports=function(v,S,y,W,k,V,T,P){var x=P.bits,g=0,j=0,L=0,w=0,R=0,Z=0,G=0,U=0,H=0,O=0,D,Y,Q,ee,oe,Ne=null,pe=0,me,ce=new l.Buf16(o+1),Le=new l.Buf16(o+1),Te=null,xe=0,_,re,ye;for(g=0;g<=o;g++)ce[g]=0;for(j=0;j<W;j++)ce[S[y+j]]++;for(R=x,w=o;w>=1&&ce[w]===0;w--);if(R>w&&(R=w),w===0)return k[V++]=1<<24|64<<16|0,k[V++]=1<<24|64<<16|0,P.bits=1,0;for(L=1;L<w&&ce[L]===0;L++);for(R<L&&(R=L),U=1,g=1;g<=o;g++)if(U<<=1,U-=ce[g],U<0)return-1;if(U>0&&(v===u||w!==1))return-1;for(Le[1]=0,g=1;g<o;g++)Le[g+1]=Le[g]+ce[g];for(j=0;j<W;j++)S[y+j]!==0&&(T[Le[S[y+j]]++]=j);if(v===u?(Ne=Te=T,me=19):v===d?(Ne=p,pe-=257,Te=b,xe-=257,me=256):(Ne=A,Te=h,me=-1),O=0,j=0,g=L,oe=V,Z=R,G=0,Q=-1,H=1<<R,ee=H-1,v===d&&H>i||v===f&&H>s)return 1;for(;;){_=g-G,T[j]<me?(re=0,ye=T[j]):T[j]>me?(re=Te[xe+T[j]],ye=Ne[pe+T[j]]):(re=32+64,ye=0),D=1<<g-G,Y=1<<Z,L=Y;do Y-=D,k[oe+(O>>G)+Y]=_<<24|re<<16|ye|0;while(Y!==0);for(D=1<<g-1;O&D;)D>>=1;if(D!==0?(O&=D-1,O+=D):O=0,j++,--ce[g]===0){if(g===w)break;g=S[y+T[j]]}if(g>R&&(O&ee)!==Q){for(G===0&&(G=R),oe+=L,Z=g-G,U=1<<Z;Z+G<w&&(U-=ce[Z+G],!(U<=0));)Z++,U<<=1;if(H+=1<<Z,v===d&&H>i||v===f&&H>s)return 1;Q=O&ee,k[Q]=R<<24|Z<<16|oe-V|0}}return O!==0&&(k[oe+O]=g-G<<24|64<<16|0),P.bits=R,0}},{"../utils/common":41}],51:[function(n,r,a){r.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(n,r,a){var l=n("../utils/common"),o=4,i=0,s=1,u=2;function d(M){for(var Oe=M.length;--Oe>=0;)M[Oe]=0}var f=0,p=1,b=2,A=3,h=258,m=29,v=256,S=v+1+m,y=30,W=19,k=2*S+1,V=15,T=16,P=7,x=256,g=16,j=17,L=18,w=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],R=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],Z=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],G=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],U=512,H=new Array((S+2)*2);d(H);var O=new Array(y*2);d(O);var D=new Array(U);d(D);var Y=new Array(h-A+1);d(Y);var Q=new Array(m);d(Q);var ee=new Array(y);d(ee);function oe(M,Oe,Ee,ft,Se){this.static_tree=M,this.extra_bits=Oe,this.extra_base=Ee,this.elems=ft,this.max_length=Se,this.has_stree=M&&M.length}var Ne,pe,me;function ce(M,Oe){this.dyn_tree=M,this.max_code=0,this.stat_desc=Oe}function Le(M){return M<256?D[M]:D[256+(M>>>7)]}function Te(M,Oe){M.pending_buf[M.pending++]=Oe&255,M.pending_buf[M.pending++]=Oe>>>8&255}function xe(M,Oe,Ee){M.bi_valid>T-Ee?(M.bi_buf|=Oe<<M.bi_valid&65535,Te(M,M.bi_buf),M.bi_buf=Oe>>T-M.bi_valid,M.bi_valid+=Ee-T):(M.bi_buf|=Oe<<M.bi_valid&65535,M.bi_valid+=Ee)}function _(M,Oe,Ee){xe(M,Ee[Oe*2],Ee[Oe*2+1])}function re(M,Oe){var Ee=0;do Ee|=M&1,M>>>=1,Ee<<=1;while(--Oe>0);return Ee>>>1}function ye(M){M.bi_valid===16?(Te(M,M.bi_buf),M.bi_buf=0,M.bi_valid=0):M.bi_valid>=8&&(M.pending_buf[M.pending++]=M.bi_buf&255,M.bi_buf>>=8,M.bi_valid-=8)}function ge(M,Oe){var Ee=Oe.dyn_tree,ft=Oe.max_code,Se=Oe.stat_desc.static_tree,Ye=Oe.stat_desc.has_stree,E=Oe.stat_desc.extra_bits,le=Oe.stat_desc.extra_base,He=Oe.stat_desc.max_length,N,de,Ke,I,he,Ge,Wt=0;for(I=0;I<=V;I++)M.bl_count[I]=0;for(Ee[M.heap[M.heap_max]*2+1]=0,N=M.heap_max+1;N<k;N++)de=M.heap[N],I=Ee[Ee[de*2+1]*2+1]+1,I>He&&(I=He,Wt++),Ee[de*2+1]=I,!(de>ft)&&(M.bl_count[I]++,he=0,de>=le&&(he=E[de-le]),Ge=Ee[de*2],M.opt_len+=Ge*(I+he),Ye&&(M.static_len+=Ge*(Se[de*2+1]+he)));if(Wt!==0){do{for(I=He-1;M.bl_count[I]===0;)I--;M.bl_count[I]--,M.bl_count[I+1]+=2,M.bl_count[He]--,Wt-=2}while(Wt>0);for(I=He;I!==0;I--)for(de=M.bl_count[I];de!==0;)Ke=M.heap[--N],!(Ke>ft)&&(Ee[Ke*2+1]!==I&&(M.opt_len+=(I-Ee[Ke*2+1])*Ee[Ke*2],Ee[Ke*2+1]=I),de--)}}function Fe(M,Oe,Ee){var ft=new Array(V+1),Se=0,Ye,E;for(Ye=1;Ye<=V;Ye++)ft[Ye]=Se=Se+Ee[Ye-1]<<1;for(E=0;E<=Oe;E++){var le=M[E*2+1];le!==0&&(M[E*2]=re(ft[le]++,le))}}function Ae(){var M,Oe,Ee,ft,Se,Ye=new Array(V+1);for(Ee=0,ft=0;ft<m-1;ft++)for(Q[ft]=Ee,M=0;M<1<<w[ft];M++)Y[Ee++]=ft;for(Y[Ee-1]=ft,Se=0,ft=0;ft<16;ft++)for(ee[ft]=Se,M=0;M<1<<R[ft];M++)D[Se++]=ft;for(Se>>=7;ft<y;ft++)for(ee[ft]=Se<<7,M=0;M<1<<R[ft]-7;M++)D[256+Se++]=ft;for(Oe=0;Oe<=V;Oe++)Ye[Oe]=0;for(M=0;M<=143;)H[M*2+1]=8,M++,Ye[8]++;for(;M<=255;)H[M*2+1]=9,M++,Ye[9]++;for(;M<=279;)H[M*2+1]=7,M++,Ye[7]++;for(;M<=287;)H[M*2+1]=8,M++,Ye[8]++;for(Fe(H,S+1,Ye),M=0;M<y;M++)O[M*2+1]=5,O[M*2]=re(M,5);Ne=new oe(H,w,v+1,S,V),pe=new oe(O,R,0,y,V),me=new oe(new Array(0),Z,0,W,P)}function Ze(M){var Oe;for(Oe=0;Oe<S;Oe++)M.dyn_ltree[Oe*2]=0;for(Oe=0;Oe<y;Oe++)M.dyn_dtree[Oe*2]=0;for(Oe=0;Oe<W;Oe++)M.bl_tree[Oe*2]=0;M.dyn_ltree[x*2]=1,M.opt_len=M.static_len=0,M.last_lit=M.matches=0}function Ue(M){M.bi_valid>8?Te(M,M.bi_buf):M.bi_valid>0&&(M.pending_buf[M.pending++]=M.bi_buf),M.bi_buf=0,M.bi_valid=0}function Pe(M,Oe,Ee,ft){Ue(M),ft&&(Te(M,Ee),Te(M,~Ee)),l.arraySet(M.pending_buf,M.window,Oe,Ee,M.pending),M.pending+=Ee}function qe(M,Oe,Ee,ft){var Se=Oe*2,Ye=Ee*2;return M[Se]<M[Ye]||M[Se]===M[Ye]&&ft[Oe]<=ft[Ee]}function De(M,Oe,Ee){for(var ft=M.heap[Ee],Se=Ee<<1;Se<=M.heap_len&&(Se<M.heap_len&&qe(Oe,M.heap[Se+1],M.heap[Se],M.depth)&&Se++,!qe(Oe,ft,M.heap[Se],M.depth));)M.heap[Ee]=M.heap[Se],Ee=Se,Se<<=1;M.heap[Ee]=ft}function Me(M,Oe,Ee){var ft,Se,Ye=0,E,le;if(M.last_lit!==0)do ft=M.pending_buf[M.d_buf+Ye*2]<<8|M.pending_buf[M.d_buf+Ye*2+1],Se=M.pending_buf[M.l_buf+Ye],Ye++,ft===0?_(M,Se,Oe):(E=Y[Se],_(M,E+v+1,Oe),le=w[E],le!==0&&(Se-=Q[E],xe(M,Se,le)),ft--,E=Le(ft),_(M,E,Ee),le=R[E],le!==0&&(ft-=ee[E],xe(M,ft,le)));while(Ye<M.last_lit);_(M,x,Oe)}function _e(M,Oe){var Ee=Oe.dyn_tree,ft=Oe.stat_desc.static_tree,Se=Oe.stat_desc.has_stree,Ye=Oe.stat_desc.elems,E,le,He=-1,N;for(M.heap_len=0,M.heap_max=k,E=0;E<Ye;E++)Ee[E*2]!==0?(M.heap[++M.heap_len]=He=E,M.depth[E]=0):Ee[E*2+1]=0;for(;M.heap_len<2;)N=M.heap[++M.heap_len]=He<2?++He:0,Ee[N*2]=1,M.depth[N]=0,M.opt_len--,Se&&(M.static_len-=ft[N*2+1]);for(Oe.max_code=He,E=M.heap_len>>1;E>=1;E--)De(M,Ee,E);N=Ye;do E=M.heap[1],M.heap[1]=M.heap[M.heap_len--],De(M,Ee,1),le=M.heap[1],M.heap[--M.heap_max]=E,M.heap[--M.heap_max]=le,Ee[N*2]=Ee[E*2]+Ee[le*2],M.depth[N]=(M.depth[E]>=M.depth[le]?M.depth[E]:M.depth[le])+1,Ee[E*2+1]=Ee[le*2+1]=N,M.heap[1]=N++,De(M,Ee,1);while(M.heap_len>=2);M.heap[--M.heap_max]=M.heap[1],ge(M,Oe),Fe(Ee,He,M.bl_count)}function Re(M,Oe,Ee){var ft,Se=-1,Ye,E=Oe[0*2+1],le=0,He=7,N=4;for(E===0&&(He=138,N=3),Oe[(Ee+1)*2+1]=65535,ft=0;ft<=Ee;ft++)Ye=E,E=Oe[(ft+1)*2+1],!(++le<He&&Ye===E)&&(le<N?M.bl_tree[Ye*2]+=le:Ye!==0?(Ye!==Se&&M.bl_tree[Ye*2]++,M.bl_tree[g*2]++):le<=10?M.bl_tree[j*2]++:M.bl_tree[L*2]++,le=0,Se=Ye,E===0?(He=138,N=3):Ye===E?(He=6,N=3):(He=7,N=4))}function $e(M,Oe,Ee){var ft,Se=-1,Ye,E=Oe[0*2+1],le=0,He=7,N=4;for(E===0&&(He=138,N=3),ft=0;ft<=Ee;ft++)if(Ye=E,E=Oe[(ft+1)*2+1],!(++le<He&&Ye===E)){if(le<N)do _(M,Ye,M.bl_tree);while(--le!==0);else Ye!==0?(Ye!==Se&&(_(M,Ye,M.bl_tree),le--),_(M,g,M.bl_tree),xe(M,le-3,2)):le<=10?(_(M,j,M.bl_tree),xe(M,le-3,3)):(_(M,L,M.bl_tree),xe(M,le-11,7));le=0,Se=Ye,E===0?(He=138,N=3):Ye===E?(He=6,N=3):(He=7,N=4)}}function dt(M){var Oe;for(Re(M,M.dyn_ltree,M.l_desc.max_code),Re(M,M.dyn_dtree,M.d_desc.max_code),_e(M,M.bl_desc),Oe=W-1;Oe>=3&&M.bl_tree[G[Oe]*2+1]===0;Oe--);return M.opt_len+=3*(Oe+1)+5+5+4,Oe}function yt(M,Oe,Ee,ft){var Se;for(xe(M,Oe-257,5),xe(M,Ee-1,5),xe(M,ft-4,4),Se=0;Se<ft;Se++)xe(M,M.bl_tree[G[Se]*2+1],3);$e(M,M.dyn_ltree,Oe-1),$e(M,M.dyn_dtree,Ee-1)}function gt(M){var Oe=4093624447,Ee;for(Ee=0;Ee<=31;Ee++,Oe>>>=1)if(Oe&1&&M.dyn_ltree[Ee*2]!==0)return i;if(M.dyn_ltree[9*2]!==0||M.dyn_ltree[10*2]!==0||M.dyn_ltree[13*2]!==0)return s;for(Ee=32;Ee<v;Ee++)if(M.dyn_ltree[Ee*2]!==0)return s;return i}var ot=!1;function ke(M){ot||(Ae(),ot=!0),M.l_desc=new ce(M.dyn_ltree,Ne),M.d_desc=new ce(M.dyn_dtree,pe),M.bl_desc=new ce(M.bl_tree,me),M.bi_buf=0,M.bi_valid=0,Ze(M)}function be(M,Oe,Ee,ft){xe(M,(f<<1)+(ft?1:0),3),Pe(M,Oe,Ee,!0)}function fe(M){xe(M,p<<1,3),_(M,x,H),ye(M)}function Xe(M,Oe,Ee,ft){var Se,Ye,E=0;M.level>0?(M.strm.data_type===u&&(M.strm.data_type=gt(M)),_e(M,M.l_desc),_e(M,M.d_desc),E=dt(M),Se=M.opt_len+3+7>>>3,Ye=M.static_len+3+7>>>3,Ye<=Se&&(Se=Ye)):Se=Ye=Ee+5,Ee+4<=Se&&Oe!==-1?be(M,Oe,Ee,ft):M.strategy===o||Ye===Se?(xe(M,(p<<1)+(ft?1:0),3),Me(M,H,O)):(xe(M,(b<<1)+(ft?1:0),3),yt(M,M.l_desc.max_code+1,M.d_desc.max_code+1,E+1),Me(M,M.dyn_ltree,M.dyn_dtree)),Ze(M),ft&&Ue(M)}function ne(M,Oe,Ee){return M.pending_buf[M.d_buf+M.last_lit*2]=Oe>>>8&255,M.pending_buf[M.d_buf+M.last_lit*2+1]=Oe&255,M.pending_buf[M.l_buf+M.last_lit]=Ee&255,M.last_lit++,Oe===0?M.dyn_ltree[Ee*2]++:(M.matches++,Oe--,M.dyn_ltree[(Y[Ee]+v+1)*2]++,M.dyn_dtree[Le(Oe)*2]++),M.last_lit===M.lit_bufsize-1}a._tr_init=ke,a._tr_stored_block=be,a._tr_flush_block=Xe,a._tr_tally=ne,a._tr_align=fe},{"../utils/common":41}],53:[function(n,r,a){function l(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}r.exports=l},{}],54:[function(n,r,a){(function(l){(function(o,i){if(o.setImmediate)return;var s=1,u={},d=!1,f=o.document,p;function b(P){typeof P!="function"&&(P=new Function(""+P));for(var x=new Array(arguments.length-1),g=0;g<x.length;g++)x[g]=arguments[g+1];var j={callback:P,args:x};return u[s]=j,p(s),s++}function A(P){delete u[P]}function h(P){var x=P.callback,g=P.args;switch(g.length){case 0:x();break;case 1:x(g[0]);break;case 2:x(g[0],g[1]);break;case 3:x(g[0],g[1],g[2]);break;default:x.apply(i,g);break}}function m(P){if(d)setTimeout(m,0,P);else{var x=u[P];if(x){d=!0;try{h(x)}finally{A(P),d=!1}}}}function v(){p=function(P){process.nextTick(function(){m(P)})}}function S(){if(o.postMessage&&!o.importScripts){var P=!0,x=o.onmessage;return o.onmessage=function(){P=!1},o.postMessage("","*"),o.onmessage=x,P}}function y(){var P="setImmediate$"+Math.random()+"$",x=function(g){g.source===o&&typeof g.data=="string"&&g.data.indexOf(P)===0&&m(+g.data.slice(P.length))};o.addEventListener?o.addEventListener("message",x,!1):o.attachEvent("onmessage",x),p=function(g){o.postMessage(P+g,"*")}}function W(){var P=new MessageChannel;P.port1.onmessage=function(x){var g=x.data;m(g)},p=function(x){P.port2.postMessage(x)}}function k(){var P=f.documentElement;p=function(x){var g=f.createElement("script");g.onreadystatechange=function(){m(x),g.onreadystatechange=null,P.removeChild(g),g=null},P.appendChild(g)}}function V(){p=function(P){setTimeout(m,0,P)}}var T=Object.getPrototypeOf&&Object.getPrototypeOf(o);T=T&&T.setTimeout?T:o,{}.toString.call(o.process)==="[object process]"?v():S()?y():o.MessageChannel?W():f&&"onreadystatechange"in f.createElement("script")?k():V(),T.setImmediate=b,T.clearImmediate=A})(typeof self>"u"?typeof l>"u"?this:l:self)}).call(this,typeof Tn<"u"?Tn:typeof self<"u"?self:typeof window<"u"?window:{})},{}]},{},[10])(10)})})(z4);const nJ=z4.exports;class rJ{constructor(){this.zip=void 0,this.urlCache={},this.checkRequirements()}checkRequirements(){try{this.zip=new nJ}catch{throw new Error("JSZip lib not loaded")}}open(t,n){return this.zip.loadAsync(t,{base64:n})}openUrl(t,n){return yc(t,"binary").then(function(r){return this.zip.loadAsync(r,{base64:n})}.bind(this))}request(t,n){var r=new on,a,l=new Ul(t);return n||(n=l.extension),n=="blob"?a=this.getBlob(t):a=this.getText(t),a?a.then(function(o){let i=this.handleResponse(o,n);r.resolve(i)}.bind(this)):r.reject({message:"File not found in the epub: "+t,stack:new Error().stack}),r.promise}handleResponse(t,n){var r;return n=="json"?r=JSON.parse(t):Sc(n)?r=_a(t,"text/xml"):n=="xhtml"?r=_a(t,"application/xhtml+xml"):n=="html"||n=="htm"?r=_a(t,"text/html"):r=t,r}getBlob(t,n){var r=window.decodeURIComponent(t.substr(1)),a=this.zip.file(r);if(a)return n=n||As.lookup(a.name),a.async("uint8array").then(function(l){return new Blob([l],{type:n})})}getText(t,n){var r=window.decodeURIComponent(t.substr(1)),a=this.zip.file(r);if(a)return a.async("string").then(function(l){return l})}getBase64(t,n){var r=window.decodeURIComponent(t.substr(1)),a=this.zip.file(r);if(a)return n=n||As.lookup(a.name),a.async("base64").then(function(l){return"data:"+n+";base64,"+l})}createUrl(t,n){var r=new on,a=window.URL||window.webkitURL||window.mozURL,l,o,i=n&&n.base64;return t in this.urlCache?(r.resolve(this.urlCache[t]),r.promise):(i?(o=this.getBase64(t),o&&o.then(function(s){this.urlCache[t]=s,r.resolve(s)}.bind(this))):(o=this.getBlob(t),o&&o.then(function(s){l=a.createObjectURL(s),this.urlCache[t]=l,r.resolve(l)}.bind(this))),o||r.reject({message:"File not found in the epub: "+t,stack:new Error().stack}),r.promise)}revokeUrl(t){var n=window.URL||window.webkitURL||window.mozURL,r=this.urlCache[t];r&&n.revokeObjectURL(r)}destroy(){var t=window.URL||window.webkitURL||window.mozURL;for(let n in this.urlCache)t.revokeObjectURL(n);this.zip=void 0,this.urlCache={}}}var H4={exports:{}};/*!
    localForage -- Offline Storage, Improved
    Version 1.10.0
    https://localforage.github.io/localForage
    (c) 2013-2017 Mozilla, Apache License 2.0
*/(function(e,t){(function(n){e.exports=n()})(function(){return function n(r,a,l){function o(u,d){if(!a[u]){if(!r[u]){var f=typeof oo=="function"&&oo;if(!d&&f)return f(u,!0);if(i)return i(u,!0);var p=new Error("Cannot find module '"+u+"'");throw p.code="MODULE_NOT_FOUND",p}var b=a[u]={exports:{}};r[u][0].call(b.exports,function(A){var h=r[u][1][A];return o(h||A)},b,b.exports,n,r,a,l)}return a[u].exports}for(var i=typeof oo=="function"&&oo,s=0;s<l.length;s++)o(l[s]);return o}({1:[function(n,r,a){(function(l){var o=l.MutationObserver||l.WebKitMutationObserver,i;if(o){var s=0,u=new o(A),d=l.document.createTextNode("");u.observe(d,{characterData:!0}),i=function(){d.data=s=++s%2}}else if(!l.setImmediate&&typeof l.MessageChannel<"u"){var f=new l.MessageChannel;f.port1.onmessage=A,i=function(){f.port2.postMessage(0)}}else"document"in l&&"onreadystatechange"in l.document.createElement("script")?i=function(){var m=l.document.createElement("script");m.onreadystatechange=function(){A(),m.onreadystatechange=null,m.parentNode.removeChild(m),m=null},l.document.documentElement.appendChild(m)}:i=function(){setTimeout(A,0)};var p,b=[];function A(){p=!0;for(var m,v,S=b.length;S;){for(v=b,b=[],m=-1;++m<S;)v[m]();S=b.length}p=!1}r.exports=h;function h(m){b.push(m)===1&&!p&&i()}}).call(this,typeof Tn<"u"?Tn:typeof self<"u"?self:typeof window<"u"?window:{})},{}],2:[function(n,r,a){var l=n(1);function o(){}var i={},s=["REJECTED"],u=["FULFILLED"],d=["PENDING"];r.exports=f;function f(k){if(typeof k!="function")throw new TypeError("resolver must be a function");this.state=d,this.queue=[],this.outcome=void 0,k!==o&&h(this,k)}f.prototype.catch=function(k){return this.then(null,k)},f.prototype.then=function(k,V){if(typeof k!="function"&&this.state===u||typeof V!="function"&&this.state===s)return this;var T=new this.constructor(o);if(this.state!==d){var P=this.state===u?k:V;b(T,P,this.outcome)}else this.queue.push(new p(T,k,V));return T};function p(k,V,T){this.promise=k,typeof V=="function"&&(this.onFulfilled=V,this.callFulfilled=this.otherCallFulfilled),typeof T=="function"&&(this.onRejected=T,this.callRejected=this.otherCallRejected)}p.prototype.callFulfilled=function(k){i.resolve(this.promise,k)},p.prototype.otherCallFulfilled=function(k){b(this.promise,this.onFulfilled,k)},p.prototype.callRejected=function(k){i.reject(this.promise,k)},p.prototype.otherCallRejected=function(k){b(this.promise,this.onRejected,k)};function b(k,V,T){l(function(){var P;try{P=V(T)}catch(x){return i.reject(k,x)}P===k?i.reject(k,new TypeError("Cannot resolve promise with itself")):i.resolve(k,P)})}i.resolve=function(k,V){var T=m(A,V);if(T.status==="error")return i.reject(k,T.value);var P=T.value;if(P)h(k,P);else{k.state=u,k.outcome=V;for(var x=-1,g=k.queue.length;++x<g;)k.queue[x].callFulfilled(V)}return k},i.reject=function(k,V){k.state=s,k.outcome=V;for(var T=-1,P=k.queue.length;++T<P;)k.queue[T].callRejected(V);return k};function A(k){var V=k&&k.then;if(k&&(typeof k=="object"||typeof k=="function")&&typeof V=="function")return function(){V.apply(k,arguments)}}function h(k,V){var T=!1;function P(L){T||(T=!0,i.reject(k,L))}function x(L){T||(T=!0,i.resolve(k,L))}function g(){V(x,P)}var j=m(g);j.status==="error"&&P(j.value)}function m(k,V){var T={};try{T.value=k(V),T.status="success"}catch(P){T.status="error",T.value=P}return T}f.resolve=v;function v(k){return k instanceof this?k:i.resolve(new this(o),k)}f.reject=S;function S(k){var V=new this(o);return i.reject(V,k)}f.all=y;function y(k){var V=this;if(Object.prototype.toString.call(k)!=="[object Array]")return this.reject(new TypeError("must be an array"));var T=k.length,P=!1;if(!T)return this.resolve([]);for(var x=new Array(T),g=0,j=-1,L=new this(o);++j<T;)w(k[j],j);return L;function w(R,Z){V.resolve(R).then(G,function(U){P||(P=!0,i.reject(L,U))});function G(U){x[Z]=U,++g===T&&!P&&(P=!0,i.resolve(L,x))}}}f.race=W;function W(k){var V=this;if(Object.prototype.toString.call(k)!=="[object Array]")return this.reject(new TypeError("must be an array"));var T=k.length,P=!1;if(!T)return this.resolve([]);for(var x=-1,g=new this(o);++x<T;)j(k[x]);return g;function j(L){V.resolve(L).then(function(w){P||(P=!0,i.resolve(g,w))},function(w){P||(P=!0,i.reject(g,w))})}}},{1:1}],3:[function(n,r,a){(function(l){typeof l.Promise!="function"&&(l.Promise=n(2))}).call(this,typeof Tn<"u"?Tn:typeof self<"u"?self:typeof window<"u"?window:{})},{2:2}],4:[function(n,r,a){var l=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(te){return typeof te}:function(te){return te&&typeof Symbol=="function"&&te.constructor===Symbol&&te!==Symbol.prototype?"symbol":typeof te};function o(te,We){if(!(te instanceof We))throw new TypeError("Cannot call a class as a function")}function i(){try{if(typeof indexedDB<"u")return indexedDB;if(typeof webkitIndexedDB<"u")return webkitIndexedDB;if(typeof mozIndexedDB<"u")return mozIndexedDB;if(typeof OIndexedDB<"u")return OIndexedDB;if(typeof msIndexedDB<"u")return msIndexedDB}catch{return}}var s=i();function u(){try{if(!s||!s.open)return!1;var te=typeof openDatabase<"u"&&/(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent)&&!/Chrome/.test(navigator.userAgent)&&!/BlackBerry/.test(navigator.platform),We=typeof fetch=="function"&&fetch.toString().indexOf("[native code")!==-1;return(!te||We)&&typeof indexedDB<"u"&&typeof IDBKeyRange<"u"}catch{return!1}}function d(te,We){te=te||[],We=We||{};try{return new Blob(te,We)}catch(we){if(we.name!=="TypeError")throw we;for(var se=typeof BlobBuilder<"u"?BlobBuilder:typeof MSBlobBuilder<"u"?MSBlobBuilder:typeof MozBlobBuilder<"u"?MozBlobBuilder:WebKitBlobBuilder,Je=new se,Ce=0;Ce<te.length;Ce+=1)Je.append(te[Ce]);return Je.getBlob(We.type)}}typeof Promise>"u"&&n(3);var f=Promise;function p(te,We){We&&te.then(function(se){We(null,se)},function(se){We(se)})}function b(te,We,se){typeof We=="function"&&te.then(We),typeof se=="function"&&te.catch(se)}function A(te){return typeof te!="string"&&(console.warn(te+" used as a key, but it is not a string."),te=String(te)),te}function h(){if(arguments.length&&typeof arguments[arguments.length-1]=="function")return arguments[arguments.length-1]}var m="local-forage-detect-blob-support",v=void 0,S={},y=Object.prototype.toString,W="readonly",k="readwrite";function V(te){for(var We=te.length,se=new ArrayBuffer(We),Je=new Uint8Array(se),Ce=0;Ce<We;Ce++)Je[Ce]=te.charCodeAt(Ce);return se}function T(te){return new f(function(We){var se=te.transaction(m,k),Je=d([""]);se.objectStore(m).put(Je,"key"),se.onabort=function(Ce){Ce.preventDefault(),Ce.stopPropagation(),We(!1)},se.oncomplete=function(){var Ce=navigator.userAgent.match(/Chrome\/(\d+)/),we=navigator.userAgent.match(/Edge\//);We(we||!Ce||parseInt(Ce[1],10)>=43)}}).catch(function(){return!1})}function P(te){return typeof v=="boolean"?f.resolve(v):T(te).then(function(We){return v=We,v})}function x(te){var We=S[te.name],se={};se.promise=new f(function(Je,Ce){se.resolve=Je,se.reject=Ce}),We.deferredOperations.push(se),We.dbReady?We.dbReady=We.dbReady.then(function(){return se.promise}):We.dbReady=se.promise}function g(te){var We=S[te.name],se=We.deferredOperations.pop();if(se)return se.resolve(),se.promise}function j(te,We){var se=S[te.name],Je=se.deferredOperations.pop();if(Je)return Je.reject(We),Je.promise}function L(te,We){return new f(function(se,Je){if(S[te.name]=S[te.name]||Q(),te.db)if(We)x(te),te.db.close();else return se(te.db);var Ce=[te.name];We&&Ce.push(te.version);var we=s.open.apply(s,Ce);We&&(we.onupgradeneeded=function(nt){var ct=we.result;try{ct.createObjectStore(te.storeName),nt.oldVersion<=1&&ct.createObjectStore(m)}catch(vt){if(vt.name==="ConstraintError")console.warn('The database "'+te.name+'" has been upgraded from version '+nt.oldVersion+" to version "+nt.newVersion+', but the storage "'+te.storeName+'" already exists.');else throw vt}}),we.onerror=function(nt){nt.preventDefault(),Je(we.error)},we.onsuccess=function(){var nt=we.result;nt.onversionchange=function(ct){ct.target.close()},se(nt),g(te)}})}function w(te){return L(te,!1)}function R(te){return L(te,!0)}function Z(te,We){if(!te.db)return!0;var se=!te.db.objectStoreNames.contains(te.storeName),Je=te.version<te.db.version,Ce=te.version>te.db.version;if(Je&&(te.version!==We&&console.warn('The database "'+te.name+`" can't be downgraded from version `+te.db.version+" to version "+te.version+"."),te.version=te.db.version),Ce||se){if(se){var we=te.db.version+1;we>te.version&&(te.version=we)}return!0}return!1}function G(te){return new f(function(We,se){var Je=new FileReader;Je.onerror=se,Je.onloadend=function(Ce){var we=btoa(Ce.target.result||"");We({__local_forage_encoded_blob:!0,data:we,type:te.type})},Je.readAsBinaryString(te)})}function U(te){var We=V(atob(te.data));return d([We],{type:te.type})}function H(te){return te&&te.__local_forage_encoded_blob}function O(te){var We=this,se=We._initReady().then(function(){var Je=S[We._dbInfo.name];if(Je&&Je.dbReady)return Je.dbReady});return b(se,te,te),se}function D(te){x(te);for(var We=S[te.name],se=We.forages,Je=0;Je<se.length;Je++){var Ce=se[Je];Ce._dbInfo.db&&(Ce._dbInfo.db.close(),Ce._dbInfo.db=null)}return te.db=null,w(te).then(function(we){return te.db=we,Z(te)?R(te):we}).then(function(we){te.db=We.db=we;for(var nt=0;nt<se.length;nt++)se[nt]._dbInfo.db=we}).catch(function(we){throw j(te,we),we})}function Y(te,We,se,Je){Je===void 0&&(Je=1);try{var Ce=te.db.transaction(te.storeName,We);se(null,Ce)}catch(we){if(Je>0&&(!te.db||we.name==="InvalidStateError"||we.name==="NotFoundError"))return f.resolve().then(function(){if(!te.db||we.name==="NotFoundError"&&!te.db.objectStoreNames.contains(te.storeName)&&te.version<=te.db.version)return te.db&&(te.version=te.db.version+1),R(te)}).then(function(){return D(te).then(function(){Y(te,We,se,Je-1)})}).catch(se);se(we)}}function Q(){return{forages:[],db:null,dbReady:null,deferredOperations:[]}}function ee(te){var We=this,se={db:null};if(te)for(var Je in te)se[Je]=te[Je];var Ce=S[se.name];Ce||(Ce=Q(),S[se.name]=Ce),Ce.forages.push(We),We._initReady||(We._initReady=We.ready,We.ready=O);var we=[];function nt(){return f.resolve()}for(var ct=0;ct<Ce.forages.length;ct++){var vt=Ce.forages[ct];vt!==We&&we.push(vt._initReady().catch(nt))}var bt=Ce.forages.slice(0);return f.all(we).then(function(){return se.db=Ce.db,w(se)}).then(function(St){return se.db=St,Z(se,We._defaultConfig.version)?R(se):St}).then(function(St){se.db=Ce.db=St,We._dbInfo=se;for(var Ft=0;Ft<bt.length;Ft++){var $t=bt[Ft];$t!==We&&($t._dbInfo.db=se.db,$t._dbInfo.version=se.version)}})}function oe(te,We){var se=this;te=A(te);var Je=new f(function(Ce,we){se.ready().then(function(){Y(se._dbInfo,W,function(nt,ct){if(nt)return we(nt);try{var vt=ct.objectStore(se._dbInfo.storeName),bt=vt.get(te);bt.onsuccess=function(){var St=bt.result;St===void 0&&(St=null),H(St)&&(St=U(St)),Ce(St)},bt.onerror=function(){we(bt.error)}}catch(St){we(St)}})}).catch(we)});return p(Je,We),Je}function Ne(te,We){var se=this,Je=new f(function(Ce,we){se.ready().then(function(){Y(se._dbInfo,W,function(nt,ct){if(nt)return we(nt);try{var vt=ct.objectStore(se._dbInfo.storeName),bt=vt.openCursor(),St=1;bt.onsuccess=function(){var Ft=bt.result;if(Ft){var $t=Ft.value;H($t)&&($t=U($t));var pn=te($t,Ft.key,St++);pn!==void 0?Ce(pn):Ft.continue()}else Ce()},bt.onerror=function(){we(bt.error)}}catch(Ft){we(Ft)}})}).catch(we)});return p(Je,We),Je}function pe(te,We,se){var Je=this;te=A(te);var Ce=new f(function(we,nt){var ct;Je.ready().then(function(){return ct=Je._dbInfo,y.call(We)==="[object Blob]"?P(ct.db).then(function(vt){return vt?We:G(We)}):We}).then(function(vt){Y(Je._dbInfo,k,function(bt,St){if(bt)return nt(bt);try{var Ft=St.objectStore(Je._dbInfo.storeName);vt===null&&(vt=void 0);var $t=Ft.put(vt,te);St.oncomplete=function(){vt===void 0&&(vt=null),we(vt)},St.onabort=St.onerror=function(){var pn=$t.error?$t.error:$t.transaction.error;nt(pn)}}catch(pn){nt(pn)}})}).catch(nt)});return p(Ce,se),Ce}function me(te,We){var se=this;te=A(te);var Je=new f(function(Ce,we){se.ready().then(function(){Y(se._dbInfo,k,function(nt,ct){if(nt)return we(nt);try{var vt=ct.objectStore(se._dbInfo.storeName),bt=vt.delete(te);ct.oncomplete=function(){Ce()},ct.onerror=function(){we(bt.error)},ct.onabort=function(){var St=bt.error?bt.error:bt.transaction.error;we(St)}}catch(St){we(St)}})}).catch(we)});return p(Je,We),Je}function ce(te){var We=this,se=new f(function(Je,Ce){We.ready().then(function(){Y(We._dbInfo,k,function(we,nt){if(we)return Ce(we);try{var ct=nt.objectStore(We._dbInfo.storeName),vt=ct.clear();nt.oncomplete=function(){Je()},nt.onabort=nt.onerror=function(){var bt=vt.error?vt.error:vt.transaction.error;Ce(bt)}}catch(bt){Ce(bt)}})}).catch(Ce)});return p(se,te),se}function Le(te){var We=this,se=new f(function(Je,Ce){We.ready().then(function(){Y(We._dbInfo,W,function(we,nt){if(we)return Ce(we);try{var ct=nt.objectStore(We._dbInfo.storeName),vt=ct.count();vt.onsuccess=function(){Je(vt.result)},vt.onerror=function(){Ce(vt.error)}}catch(bt){Ce(bt)}})}).catch(Ce)});return p(se,te),se}function Te(te,We){var se=this,Je=new f(function(Ce,we){if(te<0){Ce(null);return}se.ready().then(function(){Y(se._dbInfo,W,function(nt,ct){if(nt)return we(nt);try{var vt=ct.objectStore(se._dbInfo.storeName),bt=!1,St=vt.openKeyCursor();St.onsuccess=function(){var Ft=St.result;if(!Ft){Ce(null);return}te===0||bt?Ce(Ft.key):(bt=!0,Ft.advance(te))},St.onerror=function(){we(St.error)}}catch(Ft){we(Ft)}})}).catch(we)});return p(Je,We),Je}function xe(te){var We=this,se=new f(function(Je,Ce){We.ready().then(function(){Y(We._dbInfo,W,function(we,nt){if(we)return Ce(we);try{var ct=nt.objectStore(We._dbInfo.storeName),vt=ct.openKeyCursor(),bt=[];vt.onsuccess=function(){var St=vt.result;if(!St){Je(bt);return}bt.push(St.key),St.continue()},vt.onerror=function(){Ce(vt.error)}}catch(St){Ce(St)}})}).catch(Ce)});return p(se,te),se}function _(te,We){We=h.apply(this,arguments);var se=this.config();te=typeof te!="function"&&te||{},te.name||(te.name=te.name||se.name,te.storeName=te.storeName||se.storeName);var Je=this,Ce;if(!te.name)Ce=f.reject("Invalid arguments");else{var we=te.name===se.name&&Je._dbInfo.db,nt=we?f.resolve(Je._dbInfo.db):w(te).then(function(ct){var vt=S[te.name],bt=vt.forages;vt.db=ct;for(var St=0;St<bt.length;St++)bt[St]._dbInfo.db=ct;return ct});te.storeName?Ce=nt.then(function(ct){if(!!ct.objectStoreNames.contains(te.storeName)){var vt=ct.version+1;x(te);var bt=S[te.name],St=bt.forages;ct.close();for(var Ft=0;Ft<St.length;Ft++){var $t=St[Ft];$t._dbInfo.db=null,$t._dbInfo.version=vt}var pn=new f(function(Sn,Mn){var Fn=s.open(te.name,vt);Fn.onerror=function(ia){var Su=Fn.result;Su.close(),Mn(ia)},Fn.onupgradeneeded=function(){var ia=Fn.result;ia.deleteObjectStore(te.storeName)},Fn.onsuccess=function(){var ia=Fn.result;ia.close(),Sn(ia)}});return pn.then(function(Sn){bt.db=Sn;for(var Mn=0;Mn<St.length;Mn++){var Fn=St[Mn];Fn._dbInfo.db=Sn,g(Fn._dbInfo)}}).catch(function(Sn){throw(j(te,Sn)||f.resolve()).catch(function(){}),Sn})}}):Ce=nt.then(function(ct){x(te);var vt=S[te.name],bt=vt.forages;ct.close();for(var St=0;St<bt.length;St++){var Ft=bt[St];Ft._dbInfo.db=null}var $t=new f(function(pn,Sn){var Mn=s.deleteDatabase(te.name);Mn.onerror=function(){var Fn=Mn.result;Fn&&Fn.close(),Sn(Mn.error)},Mn.onblocked=function(){console.warn('dropInstance blocked for database "'+te.name+'" until all open connections are closed')},Mn.onsuccess=function(){var Fn=Mn.result;Fn&&Fn.close(),pn(Fn)}});return $t.then(function(pn){vt.db=pn;for(var Sn=0;Sn<bt.length;Sn++){var Mn=bt[Sn];g(Mn._dbInfo)}}).catch(function(pn){throw(j(te,pn)||f.resolve()).catch(function(){}),pn})})}return p(Ce,We),Ce}var re={_driver:"asyncStorage",_initStorage:ee,_support:u(),iterate:Ne,getItem:oe,setItem:pe,removeItem:me,clear:ce,length:Le,key:Te,keys:xe,dropInstance:_};function ye(){return typeof openDatabase=="function"}var ge="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Fe="~~local_forage_type~",Ae=/^~~local_forage_type~([^~]+)~/,Ze="__lfsc__:",Ue=Ze.length,Pe="arbf",qe="blob",De="si08",Me="ui08",_e="uic8",Re="si16",$e="si32",dt="ur16",yt="ui32",gt="fl32",ot="fl64",ke=Ue+Pe.length,be=Object.prototype.toString;function fe(te){var We=te.length*.75,se=te.length,Je,Ce=0,we,nt,ct,vt;te[te.length-1]==="="&&(We--,te[te.length-2]==="="&&We--);var bt=new ArrayBuffer(We),St=new Uint8Array(bt);for(Je=0;Je<se;Je+=4)we=ge.indexOf(te[Je]),nt=ge.indexOf(te[Je+1]),ct=ge.indexOf(te[Je+2]),vt=ge.indexOf(te[Je+3]),St[Ce++]=we<<2|nt>>4,St[Ce++]=(nt&15)<<4|ct>>2,St[Ce++]=(ct&3)<<6|vt&63;return bt}function Xe(te){var We=new Uint8Array(te),se="",Je;for(Je=0;Je<We.length;Je+=3)se+=ge[We[Je]>>2],se+=ge[(We[Je]&3)<<4|We[Je+1]>>4],se+=ge[(We[Je+1]&15)<<2|We[Je+2]>>6],se+=ge[We[Je+2]&63];return We.length%3===2?se=se.substring(0,se.length-1)+"=":We.length%3===1&&(se=se.substring(0,se.length-2)+"=="),se}function ne(te,We){var se="";if(te&&(se=be.call(te)),te&&(se==="[object ArrayBuffer]"||te.buffer&&be.call(te.buffer)==="[object ArrayBuffer]")){var Je,Ce=Ze;te instanceof ArrayBuffer?(Je=te,Ce+=Pe):(Je=te.buffer,se==="[object Int8Array]"?Ce+=De:se==="[object Uint8Array]"?Ce+=Me:se==="[object Uint8ClampedArray]"?Ce+=_e:se==="[object Int16Array]"?Ce+=Re:se==="[object Uint16Array]"?Ce+=dt:se==="[object Int32Array]"?Ce+=$e:se==="[object Uint32Array]"?Ce+=yt:se==="[object Float32Array]"?Ce+=gt:se==="[object Float64Array]"?Ce+=ot:We(new Error("Failed to get type for BinaryArray"))),We(Ce+Xe(Je))}else if(se==="[object Blob]"){var we=new FileReader;we.onload=function(){var nt=Fe+te.type+"~"+Xe(this.result);We(Ze+qe+nt)},we.readAsArrayBuffer(te)}else try{We(JSON.stringify(te))}catch(nt){console.error("Couldn't convert value into a JSON string: ",te),We(null,nt)}}function M(te){if(te.substring(0,Ue)!==Ze)return JSON.parse(te);var We=te.substring(ke),se=te.substring(Ue,ke),Je;if(se===qe&&Ae.test(We)){var Ce=We.match(Ae);Je=Ce[1],We=We.substring(Ce[0].length)}var we=fe(We);switch(se){case Pe:return we;case qe:return d([we],{type:Je});case De:return new Int8Array(we);case Me:return new Uint8Array(we);case _e:return new Uint8ClampedArray(we);case Re:return new Int16Array(we);case dt:return new Uint16Array(we);case $e:return new Int32Array(we);case yt:return new Uint32Array(we);case gt:return new Float32Array(we);case ot:return new Float64Array(we);default:throw new Error("Unkown type: "+se)}}var Oe={serialize:ne,deserialize:M,stringToBuffer:fe,bufferToString:Xe};function Ee(te,We,se,Je){te.executeSql("CREATE TABLE IF NOT EXISTS "+We.storeName+" (id INTEGER PRIMARY KEY, key unique, value)",[],se,Je)}function ft(te){var We=this,se={db:null};if(te)for(var Je in te)se[Je]=typeof te[Je]!="string"?te[Je].toString():te[Je];var Ce=new f(function(we,nt){try{se.db=openDatabase(se.name,String(se.version),se.description,se.size)}catch(ct){return nt(ct)}se.db.transaction(function(ct){Ee(ct,se,function(){We._dbInfo=se,we()},function(vt,bt){nt(bt)})},nt)});return se.serializer=Oe,Ce}function Se(te,We,se,Je,Ce,we){te.executeSql(se,Je,Ce,function(nt,ct){ct.code===ct.SYNTAX_ERR?nt.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name = ?",[We.storeName],function(vt,bt){bt.rows.length?we(vt,ct):Ee(vt,We,function(){vt.executeSql(se,Je,Ce,we)},we)},we):we(nt,ct)},we)}function Ye(te,We){var se=this;te=A(te);var Je=new f(function(Ce,we){se.ready().then(function(){var nt=se._dbInfo;nt.db.transaction(function(ct){Se(ct,nt,"SELECT * FROM "+nt.storeName+" WHERE key = ? LIMIT 1",[te],function(vt,bt){var St=bt.rows.length?bt.rows.item(0).value:null;St&&(St=nt.serializer.deserialize(St)),Ce(St)},function(vt,bt){we(bt)})})}).catch(we)});return p(Je,We),Je}function E(te,We){var se=this,Je=new f(function(Ce,we){se.ready().then(function(){var nt=se._dbInfo;nt.db.transaction(function(ct){Se(ct,nt,"SELECT * FROM "+nt.storeName,[],function(vt,bt){for(var St=bt.rows,Ft=St.length,$t=0;$t<Ft;$t++){var pn=St.item($t),Sn=pn.value;if(Sn&&(Sn=nt.serializer.deserialize(Sn)),Sn=te(Sn,pn.key,$t+1),Sn!==void 0){Ce(Sn);return}}Ce()},function(vt,bt){we(bt)})})}).catch(we)});return p(Je,We),Je}function le(te,We,se,Je){var Ce=this;te=A(te);var we=new f(function(nt,ct){Ce.ready().then(function(){We===void 0&&(We=null);var vt=We,bt=Ce._dbInfo;bt.serializer.serialize(We,function(St,Ft){Ft?ct(Ft):bt.db.transaction(function($t){Se($t,bt,"INSERT OR REPLACE INTO "+bt.storeName+" (key, value) VALUES (?, ?)",[te,St],function(){nt(vt)},function(pn,Sn){ct(Sn)})},function($t){if($t.code===$t.QUOTA_ERR){if(Je>0){nt(le.apply(Ce,[te,vt,se,Je-1]));return}ct($t)}})})}).catch(ct)});return p(we,se),we}function He(te,We,se){return le.apply(this,[te,We,se,1])}function N(te,We){var se=this;te=A(te);var Je=new f(function(Ce,we){se.ready().then(function(){var nt=se._dbInfo;nt.db.transaction(function(ct){Se(ct,nt,"DELETE FROM "+nt.storeName+" WHERE key = ?",[te],function(){Ce()},function(vt,bt){we(bt)})})}).catch(we)});return p(Je,We),Je}function de(te){var We=this,se=new f(function(Je,Ce){We.ready().then(function(){var we=We._dbInfo;we.db.transaction(function(nt){Se(nt,we,"DELETE FROM "+we.storeName,[],function(){Je()},function(ct,vt){Ce(vt)})})}).catch(Ce)});return p(se,te),se}function Ke(te){var We=this,se=new f(function(Je,Ce){We.ready().then(function(){var we=We._dbInfo;we.db.transaction(function(nt){Se(nt,we,"SELECT COUNT(key) as c FROM "+we.storeName,[],function(ct,vt){var bt=vt.rows.item(0).c;Je(bt)},function(ct,vt){Ce(vt)})})}).catch(Ce)});return p(se,te),se}function I(te,We){var se=this,Je=new f(function(Ce,we){se.ready().then(function(){var nt=se._dbInfo;nt.db.transaction(function(ct){Se(ct,nt,"SELECT key FROM "+nt.storeName+" WHERE id = ? LIMIT 1",[te+1],function(vt,bt){var St=bt.rows.length?bt.rows.item(0).key:null;Ce(St)},function(vt,bt){we(bt)})})}).catch(we)});return p(Je,We),Je}function he(te){var We=this,se=new f(function(Je,Ce){We.ready().then(function(){var we=We._dbInfo;we.db.transaction(function(nt){Se(nt,we,"SELECT key FROM "+we.storeName,[],function(ct,vt){for(var bt=[],St=0;St<vt.rows.length;St++)bt.push(vt.rows.item(St).key);Je(bt)},function(ct,vt){Ce(vt)})})}).catch(Ce)});return p(se,te),se}function Ge(te){return new f(function(We,se){te.transaction(function(Je){Je.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'",[],function(Ce,we){for(var nt=[],ct=0;ct<we.rows.length;ct++)nt.push(we.rows.item(ct).name);We({db:te,storeNames:nt})},function(Ce,we){se(we)})},function(Je){se(Je)})})}function Wt(te,We){We=h.apply(this,arguments);var se=this.config();te=typeof te!="function"&&te||{},te.name||(te.name=te.name||se.name,te.storeName=te.storeName||se.storeName);var Je=this,Ce;return te.name?Ce=new f(function(we){var nt;te.name===se.name?nt=Je._dbInfo.db:nt=openDatabase(te.name,"","",0),te.storeName?we({db:nt,storeNames:[te.storeName]}):we(Ge(nt))}).then(function(we){return new f(function(nt,ct){we.db.transaction(function(vt){function bt(pn){return new f(function(Sn,Mn){vt.executeSql("DROP TABLE IF EXISTS "+pn,[],function(){Sn()},function(Fn,ia){Mn(ia)})})}for(var St=[],Ft=0,$t=we.storeNames.length;Ft<$t;Ft++)St.push(bt(we.storeNames[Ft]));f.all(St).then(function(){nt()}).catch(function(pn){ct(pn)})},function(vt){ct(vt)})})}):Ce=f.reject("Invalid arguments"),p(Ce,We),Ce}var kt={_driver:"webSQLStorage",_initStorage:ft,_support:ye(),iterate:E,getItem:Ye,setItem:He,removeItem:N,clear:de,length:Ke,key:I,keys:he,dropInstance:Wt};function wt(){try{return typeof localStorage<"u"&&"setItem"in localStorage&&!!localStorage.setItem}catch{return!1}}function Gt(te,We){var se=te.name+"/";return te.storeName!==We.storeName&&(se+=te.storeName+"/"),se}function In(){var te="_localforage_support_test";try{return localStorage.setItem(te,!0),localStorage.removeItem(te),!1}catch{return!0}}function gn(){return!In()||localStorage.length>0}function an(te){var We=this,se={};if(te)for(var Je in te)se[Je]=te[Je];return se.keyPrefix=Gt(te,We._defaultConfig),gn()?(We._dbInfo=se,se.serializer=Oe,f.resolve()):f.reject()}function Jn(te){var We=this,se=We.ready().then(function(){for(var Je=We._dbInfo.keyPrefix,Ce=localStorage.length-1;Ce>=0;Ce--){var we=localStorage.key(Ce);we.indexOf(Je)===0&&localStorage.removeItem(we)}});return p(se,te),se}function tr(te,We){var se=this;te=A(te);var Je=se.ready().then(function(){var Ce=se._dbInfo,we=localStorage.getItem(Ce.keyPrefix+te);return we&&(we=Ce.serializer.deserialize(we)),we});return p(Je,We),Je}function cr(te,We){var se=this,Je=se.ready().then(function(){for(var Ce=se._dbInfo,we=Ce.keyPrefix,nt=we.length,ct=localStorage.length,vt=1,bt=0;bt<ct;bt++){var St=localStorage.key(bt);if(St.indexOf(we)===0){var Ft=localStorage.getItem(St);if(Ft&&(Ft=Ce.serializer.deserialize(Ft)),Ft=te(Ft,St.substring(nt),vt++),Ft!==void 0)return Ft}}});return p(Je,We),Je}function Ji(te,We){var se=this,Je=se.ready().then(function(){var Ce=se._dbInfo,we;try{we=localStorage.key(te)}catch{we=null}return we&&(we=we.substring(Ce.keyPrefix.length)),we});return p(Je,We),Je}function Fi(te){var We=this,se=We.ready().then(function(){for(var Je=We._dbInfo,Ce=localStorage.length,we=[],nt=0;nt<Ce;nt++){var ct=localStorage.key(nt);ct.indexOf(Je.keyPrefix)===0&&we.push(ct.substring(Je.keyPrefix.length))}return we});return p(se,te),se}function qn(te){var We=this,se=We.keys().then(function(Je){return Je.length});return p(se,te),se}function jr(te,We){var se=this;te=A(te);var Je=se.ready().then(function(){var Ce=se._dbInfo;localStorage.removeItem(Ce.keyPrefix+te)});return p(Je,We),Je}function Bn(te,We,se){var Je=this;te=A(te);var Ce=Je.ready().then(function(){We===void 0&&(We=null);var we=We;return new f(function(nt,ct){var vt=Je._dbInfo;vt.serializer.serialize(We,function(bt,St){if(St)ct(St);else try{localStorage.setItem(vt.keyPrefix+te,bt),nt(we)}catch(Ft){(Ft.name==="QuotaExceededError"||Ft.name==="NS_ERROR_DOM_QUOTA_REACHED")&&ct(Ft),ct(Ft)}})})});return p(Ce,se),Ce}function Wa(te,We){if(We=h.apply(this,arguments),te=typeof te!="function"&&te||{},!te.name){var se=this.config();te.name=te.name||se.name,te.storeName=te.storeName||se.storeName}var Je=this,Ce;return te.name?Ce=new f(function(we){te.storeName?we(Gt(te,Je._defaultConfig)):we(te.name+"/")}).then(function(we){for(var nt=localStorage.length-1;nt>=0;nt--){var ct=localStorage.key(nt);ct.indexOf(we)===0&&localStorage.removeItem(ct)}}):Ce=f.reject("Invalid arguments"),p(Ce,We),Ce}var oa={_driver:"localStorageWrapper",_initStorage:an,_support:wt(),iterate:cr,getItem:tr,setItem:Bn,removeItem:jr,clear:Jn,length:qn,key:Ji,keys:Fi,dropInstance:Wa},gd=function(We,se){return We===se||typeof We=="number"&&typeof se=="number"&&isNaN(We)&&isNaN(se)},NN=function(We,se){for(var Je=We.length,Ce=0;Ce<Je;){if(gd(We[Ce],se))return!0;Ce++}return!1},sS=Array.isArray||function(te){return Object.prototype.toString.call(te)==="[object Array]"},mu={},uS={},zi={INDEXEDDB:re,WEBSQL:kt,LOCALSTORAGE:oa},xN=[zi.INDEXEDDB._driver,zi.WEBSQL._driver,zi.LOCALSTORAGE._driver],wd=["dropInstance"],lb=["clear","getItem","iterate","key","keys","length","removeItem","setItem"].concat(wd),XN={description:"",driver:xN.slice(),name:"localforage",size:4980736,storeName:"keyvaluepairs",version:1};function gN(te,We){te[We]=function(){var se=arguments;return te.ready().then(function(){return te[We].apply(te,se)})}}function ob(){for(var te=1;te<arguments.length;te++){var We=arguments[te];if(We)for(var se in We)We.hasOwnProperty(se)&&(sS(We[se])?arguments[0][se]=We[se].slice():arguments[0][se]=We[se])}return arguments[0]}var wN=function(){function te(We){o(this,te);for(var se in zi)if(zi.hasOwnProperty(se)){var Je=zi[se],Ce=Je._driver;this[se]=Ce,mu[Ce]||this.defineDriver(Je)}this._defaultConfig=ob({},XN),this._config=ob({},this._defaultConfig,We),this._driverSet=null,this._initDriver=null,this._ready=!1,this._dbInfo=null,this._wrapLibraryMethodsWithReady(),this.setDriver(this._config.driver).catch(function(){})}return te.prototype.config=function(se){if((typeof se>"u"?"undefined":l(se))==="object"){if(this._ready)return new Error("Can't call config() after localforage has been used.");for(var Je in se){if(Je==="storeName"&&(se[Je]=se[Je].replace(/\W/g,"_")),Je==="version"&&typeof se[Je]!="number")return new Error("Database version must be a number.");this._config[Je]=se[Je]}return"driver"in se&&se.driver?this.setDriver(this._config.driver):!0}else return typeof se=="string"?this._config[se]:this._config},te.prototype.defineDriver=function(se,Je,Ce){var we=new f(function(nt,ct){try{var vt=se._driver,bt=new Error("Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver");if(!se._driver){ct(bt);return}for(var St=lb.concat("_initStorage"),Ft=0,$t=St.length;Ft<$t;Ft++){var pn=St[Ft],Sn=!NN(wd,pn);if((Sn||se[pn])&&typeof se[pn]!="function"){ct(bt);return}}var Mn=function(){for(var Su=function(qN){return function(){var UN=new Error("Method "+qN+" is not implemented by the current driver"),cS=f.reject(UN);return p(cS,arguments[arguments.length-1]),cS}},ib=0,LN=wd.length;ib<LN;ib++){var sb=wd[ib];se[sb]||(se[sb]=Su(sb))}};Mn();var Fn=function(Su){mu[vt]&&console.info("Redefining LocalForage driver: "+vt),mu[vt]=se,uS[vt]=Su,nt()};"_support"in se?se._support&&typeof se._support=="function"?se._support().then(Fn,ct):Fn(!!se._support):Fn(!0)}catch(ia){ct(ia)}});return b(we,Je,Ce),we},te.prototype.driver=function(){return this._driver||null},te.prototype.getDriver=function(se,Je,Ce){var we=mu[se]?f.resolve(mu[se]):f.reject(new Error("Driver not found."));return b(we,Je,Ce),we},te.prototype.getSerializer=function(se){var Je=f.resolve(Oe);return b(Je,se),Je},te.prototype.ready=function(se){var Je=this,Ce=Je._driverSet.then(function(){return Je._ready===null&&(Je._ready=Je._initDriver()),Je._ready});return b(Ce,se,se),Ce},te.prototype.setDriver=function(se,Je,Ce){var we=this;sS(se)||(se=[se]);var nt=this._getSupportedDrivers(se);function ct(){we._config.driver=we.driver()}function vt(Ft){return we._extend(Ft),ct(),we._ready=we._initStorage(we._config),we._ready}function bt(Ft){return function(){var $t=0;function pn(){for(;$t<Ft.length;){var Sn=Ft[$t];return $t++,we._dbInfo=null,we._ready=null,we.getDriver(Sn).then(vt).catch(pn)}ct();var Mn=new Error("No available storage method found.");return we._driverSet=f.reject(Mn),we._driverSet}return pn()}}var St=this._driverSet!==null?this._driverSet.catch(function(){return f.resolve()}):f.resolve();return this._driverSet=St.then(function(){var Ft=nt[0];return we._dbInfo=null,we._ready=null,we.getDriver(Ft).then(function($t){we._driver=$t._driver,ct(),we._wrapLibraryMethodsWithReady(),we._initDriver=bt(nt)})}).catch(function(){ct();var Ft=new Error("No available storage method found.");return we._driverSet=f.reject(Ft),we._driverSet}),b(this._driverSet,Je,Ce),this._driverSet},te.prototype.supports=function(se){return!!uS[se]},te.prototype._extend=function(se){ob(this,se)},te.prototype._getSupportedDrivers=function(se){for(var Je=[],Ce=0,we=se.length;Ce<we;Ce++){var nt=se[Ce];this.supports(nt)&&Je.push(nt)}return Je},te.prototype._wrapLibraryMethodsWithReady=function(){for(var se=0,Je=lb.length;se<Je;se++)gN(this,lb[se])},te.prototype.createInstance=function(se){return new te(se)},te}(),jN=new wN;r.exports=jN},{3:3}]},{},[4])(4)})})(H4);const Yy=H4.exports;class Z4{constructor(t,n,r){this.urlCache={},this.storage=void 0,this.name=t,this.requester=n||yc,this.resolver=r,this.online=!0,this.checkRequirements(),this.addListeners()}checkRequirements(){try{let t;typeof Yy>"u"&&(t=Yy),this.storage=t.createInstance({name:this.name})}catch{throw new Error("localForage lib not loaded")}}addListeners(){this._status=this.status.bind(this),window.addEventListener("online",this._status),window.addEventListener("offline",this._status)}removeListeners(){window.removeEventListener("online",this._status),window.removeEventListener("offline",this._status),this._status=void 0}status(t){let n=navigator.onLine;this.online=n,n?this.emit("online",this):this.emit("offline",this)}add(t,n){let r=t.resources.map(a=>{let{href:l}=a,o=this.resolver(l),i=window.encodeURIComponent(o);return this.storage.getItem(i).then(s=>!s||n?this.requester(o,"binary").then(u=>this.storage.setItem(i,u)):s)});return Promise.all(r)}put(t,n,r){let a=window.encodeURIComponent(t);return this.storage.getItem(a).then(l=>l||this.requester(t,"binary",n,r).then(o=>this.storage.setItem(a,o)))}request(t,n,r,a){return this.online?this.requester(t,n,r,a).then(l=>(this.put(t),l)):this.retrieve(t,n)}retrieve(t,n){new on;var r,a=new Ul(t);return n||(n=a.extension),n=="blob"?r=this.getBlob(t):r=this.getText(t),r.then(l=>{var o=new on,i;return l?(i=this.handleResponse(l,n),o.resolve(i)):o.reject({message:"File not found in storage: "+t,stack:new Error().stack}),o.promise})}handleResponse(t,n){var r;return n=="json"?r=JSON.parse(t):Sc(n)?r=_a(t,"text/xml"):n=="xhtml"?r=_a(t,"application/xhtml+xml"):n=="html"||n=="htm"?r=_a(t,"text/html"):r=t,r}getBlob(t,n){let r=window.encodeURIComponent(t);return this.storage.getItem(r).then(function(a){if(!!a)return n=n||As.lookup(t),new Blob([a],{type:n})})}getText(t,n){let r=window.encodeURIComponent(t);return n=n||As.lookup(t),this.storage.getItem(r).then(function(a){var l=new on,o=new FileReader,i;if(!!a)return i=new Blob([a],{type:n}),o.addEventListener("loadend",()=>{l.resolve(o.result)}),o.readAsText(i,n),l.promise})}getBase64(t,n){let r=window.encodeURIComponent(t);return n=n||As.lookup(t),this.storage.getItem(r).then(a=>{var l=new on,o=new FileReader,i;if(!!a)return i=new Blob([a],{type:n}),o.addEventListener("loadend",()=>{l.resolve(o.result)}),o.readAsDataURL(i,n),l.promise})}createUrl(t,n){var r=new on,a=window.URL||window.webkitURL||window.mozURL,l,o,i=n&&n.base64;return t in this.urlCache?(r.resolve(this.urlCache[t]),r.promise):(i?(o=this.getBase64(t),o&&o.then(function(s){this.urlCache[t]=s,r.resolve(s)}.bind(this))):(o=this.getBlob(t),o&&o.then(function(s){l=a.createObjectURL(s),this.urlCache[t]=l,r.resolve(l)}.bind(this))),o||r.reject({message:"File not found in storage: "+t,stack:new Error().stack}),r.promise)}revokeUrl(t){var n=window.URL||window.webkitURL||window.mozURL,r=this.urlCache[t];r&&n.revokeObjectURL(r)}destroy(){var t=window.URL||window.webkitURL||window.mozURL;for(let n in this.urlCache)t.revokeObjectURL(n);this.urlCache={},this.removeListeners()}}il(Z4.prototype);class Xb{constructor(t){this.interactive="",this.fixedLayout="",this.openToSpread="",this.orientationLock="",t&&this.parse(t)}parse(t){if(!t)return this;const n=Wn(t,"display_options");return n?(ql(n,"option").forEach(a=>{let l="";switch(a.childNodes.length&&(l=a.childNodes[0].nodeValue),a.attributes.name.value){case"interactive":this.interactive=l;break;case"fixed-layout":this.fixedLayout=l;break;case"open-to-spread":this.openToSpread=l;break;case"orientation-lock":this.orientationLock=l;break}}),this):this}destroy(){this.interactive=void 0,this.fixedLayout=void 0,this.openToSpread=void 0,this.orientationLock=void 0}}const Qy="META-INF/container.xml",aJ="META-INF/com.apple.ibooks.display-options.xml",ka={BINARY:"binary",BASE64:"base64",EPUB:"epub",OPF:"opf",MANIFEST:"json",DIRECTORY:"directory"};class ym{constructor(t,n){typeof n>"u"&&typeof t!="string"&&!(t instanceof Blob)&&!(t instanceof ArrayBuffer)&&(n=t,t=void 0),this.settings=or(this.settings||{},{requestMethod:void 0,requestCredentials:void 0,requestHeaders:void 0,encoding:void 0,replacements:void 0,canonical:void 0,openAs:void 0,store:void 0}),or(this.settings,n),this.opening=new on,this.opened=this.opening.promise,this.isOpen=!1,this.loading={manifest:new on,spine:new on,metadata:new on,cover:new on,navigation:new on,pageList:new on,resources:new on,displayOptions:new on},this.loaded={manifest:this.loading.manifest.promise,spine:this.loading.spine.promise,metadata:this.loading.metadata.promise,cover:this.loading.cover.promise,navigation:this.loading.navigation.promise,pageList:this.loading.pageList.promise,resources:this.loading.resources.promise,displayOptions:this.loading.displayOptions.promise},this.ready=Promise.all([this.loaded.manifest,this.loaded.spine,this.loaded.metadata,this.loaded.cover,this.loaded.navigation,this.loaded.resources,this.loaded.displayOptions]),this.isRendered=!1,this.request=this.settings.requestMethod||yc,this.spine=new KO,this.locations=new P4(this.spine,this.load.bind(this)),this.navigation=void 0,this.pageList=void 0,this.url=void 0,this.path=void 0,this.archived=!1,this.archive=void 0,this.storage=void 0,this.resources=void 0,this.rendition=void 0,this.container=void 0,this.packaging=void 0,this.displayOptions=void 0,this.settings.store&&this.store(this.settings.store),t&&this.open(t,this.settings.openAs).catch(r=>{var a=new Error("Cannot load book at "+t);this.emit(Kt.BOOK.OPEN_FAILED,a)})}open(t,n){var r,a=n||this.determineType(t);return a===ka.BINARY?(this.archived=!0,this.url=new Ta("/",""),r=this.openEpub(t)):a===ka.BASE64?(this.archived=!0,this.url=new Ta("/",""),r=this.openEpub(t,a)):a===ka.EPUB?(this.archived=!0,this.url=new Ta("/",""),r=this.request(t,"binary",this.settings.requestCredentials,this.settings.requestHeaders).then(this.openEpub.bind(this))):a==ka.OPF?(this.url=new Ta(t),r=this.openPackaging(this.url.Path.toString())):a==ka.MANIFEST?(this.url=new Ta(t),r=this.openManifest(this.url.Path.toString())):(this.url=new Ta(t),r=this.openContainer(Qy).then(this.openPackaging.bind(this))),r}openEpub(t,n){return this.unarchive(t,n||this.settings.encoding).then(()=>this.openContainer(Qy)).then(r=>this.openPackaging(r))}openContainer(t){return this.load(t).then(n=>(this.container=new NO(n),this.resolve(this.container.packagePath)))}openPackaging(t){return this.path=new Ul(t),this.load(t).then(n=>(this.packaging=new Zy(n),this.unpack(this.packaging)))}openManifest(t){return this.path=new Ul(t),this.load(t).then(n=>(this.packaging=new Zy,this.packaging.load(n),this.unpack(this.packaging)))}load(t){var n=this.resolve(t);return this.archived?this.archive.request(n):this.request(n,null,this.settings.requestCredentials,this.settings.requestHeaders)}resolve(t,n){if(!!t){var r=t,a=t.indexOf("://")>-1;return a?t:(this.path&&(r=this.path.resolve(t)),n!=!1&&this.url&&(r=this.url.resolve(r)),r)}}canonical(t){var n=t;return t?(this.settings.canonical?n=this.settings.canonical(t):n=this.resolve(t,!0),n):""}determineType(t){var n,r,a;if(this.settings.encoding==="base64")return ka.BASE64;if(typeof t!="string")return ka.BINARY;if(n=new Ta(t),r=n.path(),a=r.extension,a&&(a=a.replace(/\?.*$/,"")),!a)return ka.DIRECTORY;if(a==="epub")return ka.EPUB;if(a==="opf")return ka.OPF;if(a==="json")return ka.MANIFEST}unpack(t){this.package=t,this.packaging.metadata.layout===""?this.load(this.url.resolve(aJ)).then(n=>{this.displayOptions=new Xb(n),this.loading.displayOptions.resolve(this.displayOptions)}).catch(n=>{this.displayOptions=new Xb,this.loading.displayOptions.resolve(this.displayOptions)}):(this.displayOptions=new Xb,this.loading.displayOptions.resolve(this.displayOptions)),this.spine.unpack(this.packaging,this.resolve.bind(this),this.canonical.bind(this)),this.resources=new wO(this.packaging.manifest,{archive:this.archive,resolver:this.resolve.bind(this),request:this.request.bind(this),replacements:this.settings.replacements||(this.archived?"blobUrl":"base64")}),this.loadNavigation(this.packaging).then(()=>{this.loading.navigation.resolve(this.navigation)}),this.packaging.coverPath&&(this.cover=this.resolve(this.packaging.coverPath)),this.loading.manifest.resolve(this.packaging.manifest),this.loading.metadata.resolve(this.packaging.metadata),this.loading.spine.resolve(this.spine),this.loading.cover.resolve(this.cover),this.loading.resources.resolve(this.resources),this.loading.pageList.resolve(this.pageList),this.isOpen=!0,this.archived||this.settings.replacements&&this.settings.replacements!="none"?this.replacements().then(()=>{this.loaded.displayOptions.then(()=>{this.opening.resolve(this)})}).catch(n=>{console.error(n)}):this.loaded.displayOptions.then(()=>{this.opening.resolve(this)})}loadNavigation(t){let n=t.navPath||t.ncxPath,r=t.toc;return r?new Promise((a,l)=>{this.navigation=new Kb(r),t.pageList&&(this.pageList=new Nb(t.pageList)),a(this.navigation)}):n?this.load(n,"xml").then(a=>(this.navigation=new Kb(a),this.pageList=new Nb(a),this.navigation)):new Promise((a,l)=>{this.navigation=new Kb,this.pageList=new Nb,a(this.navigation)})}section(t){return this.spine.get(t)}renderTo(t,n){return this.rendition=new Sm(this,n),this.rendition.attachTo(t),this.rendition}setRequestCredentials(t){this.settings.requestCredentials=t}setRequestHeaders(t){this.settings.requestHeaders=t}unarchive(t,n){return this.archive=new rJ,this.archive.open(t,n)}store(t){let n=this.settings.replacements&&this.settings.replacements!=="none",r=this.url,a=this.settings.requestMethod||yc.bind(this);return this.storage=new Z4(t,a,this.resolve.bind(this)),this.request=this.storage.request.bind(this.storage),this.opened.then(()=>{this.archived&&(this.storage.requester=this.archive.request.bind(this.archive));let l=(o,i)=>{i.output=this.resources.substitute(o,i.url)};this.resources.settings.replacements=n||"blobUrl",this.resources.replacements().then(()=>this.resources.replaceCss()),this.storage.on("offline",()=>{this.url=new Ta("/",""),this.spine.hooks.serialize.register(l)}),this.storage.on("online",()=>{this.url=r,this.spine.hooks.serialize.deregister(l)})}),this.storage}coverUrl(){return this.loaded.cover.then(()=>this.cover?this.archived?this.archive.createUrl(this.cover):this.cover:null)}replacements(){return this.spine.hooks.serialize.register((t,n)=>{n.output=this.resources.substitute(t,n.url)}),this.resources.replacements().then(()=>this.resources.replaceCss())}getRange(t){var n=new sn(t),r=this.spine.get(n.spinePos),a=this.load.bind(this);return r?r.load(a).then(function(l){var o=n.toRange(r.document);return o}):new Promise((l,o)=>{o("CFI could not be found")})}key(t){var n=t||this.packaging.metadata.identifier||this.url.filename;return`epubjs:${Vv}:${n}`}destroy(){this.opened=void 0,this.loading=void 0,this.loaded=void 0,this.ready=void 0,this.isOpen=!1,this.isRendered=!1,this.spine&&this.spine.destroy(),this.locations&&this.locations.destroy(),this.pageList&&this.pageList.destroy(),this.archive&&this.archive.destroy(),this.resources&&this.resources.destroy(),this.container&&this.container.destroy(),this.packaging&&this.packaging.destroy(),this.rendition&&this.rendition.destroy(),this.displayOptions&&this.displayOptions.destroy(),this.spine=void 0,this.locations=void 0,this.pageList=void 0,this.archive=void 0,this.resources=void 0,this.container=void 0,this.packaging=void 0,this.rendition=void 0,this.navigation=void 0,this.url=void 0,this.path=void 0,this.archived=!1}}il(ym.prototype);function wi(e,t){return new ym(e,t)}wi.VERSION=Vv;typeof global<"u"&&(global.EPUBJS_VERSION=Vv);wi.Book=ym;wi.Rendition=Sm;wi.Contents=bm;wi.CFI=sn;wi.utils=yO;function lJ(e,t){e.addEventListener("keyup",n=>{n.key==="ArrowUp"||n.key==="ArrowRight"?t("next"):(n.key==="ArrowDown"||n.key==="ArrowLeft")&&t("prev")},!1)}function oJ(e,t){let a=0,l;e.addEventListener("wheel",o=>{o.ignore||(o.ignore=!0,clearTimeout(l),a+=o.deltaY,l=setTimeout(()=>{if(Math.abs(a)>=750){let i=Math.sign(a)>0?"next":"prev";t(i),a=0}a=0},50))})}function iJ(e,t){let l,o,i;e.addEventListener("touchstart",s=>{s.ignore||(s.ignore=!0,l=s.changedTouches[0].pageX,o=s.changedTouches[0].pageY,i=Date.now())},!1),e.addEventListener("touchend",s=>{var p,b;if(s.ignore)return;s.ignore=!0;const u=s.changedTouches[0].pageX-l,d=s.changedTouches[0].pageY-o;Date.now()-i<=500&&(Math.abs(u)>=50&&Math.abs(d)<=200?t(u<0?"prev":"next"):Math.abs(d)>=50&&Math.abs(u)<=200?t(d<0?"up":"down"):((b=(p=e==null?void 0:e.defaultView)==null?void 0:p.getSelection())==null||b.removeAllRanges(),e.dispatchEvent(new MouseEvent("click",{clientX:l,clientY:o})),s.preventDefault()))},!1)}function sJ(e,t,n){e.addEventListener("mousedown",()=>{e.getSelection().removeAllRanges(),n("cleared")}),e.addEventListener("mouseup",r=>{if(r.ignore)return;r.ignore=!0;const a=e.getSelection(),l=a.toString();if(l==="")return;const o=a.getRangeAt(0),[i]=t.getContents(),s=i.cfiFromRange(o),u=o.getBoundingClientRect(),d=t.manager.container.getBoundingClientRect();let f={left:`${d.x+u.x-(t.manager.scrollLeft||0)}px`,top:`${d.y+u.y}px`,width:`${u.width}px`,height:`${u.height}px`};n("selected",f,l,s)})}const G4=$({name:"EpubView",model:{prop:"location",event:"update:location"},emits:{"update:location"(e){return!0},select(e,t){return!0},keyup(e){return!0}},props:{url:{required:!0},location:{},tocChanged:{type:Function},getRendition:{type:Function},epubInitOptions:{type:Object,default:()=>({})},epubOptions:{type:Object,default:()=>({})}},setup(e,t){const{emit:n,slots:r,expose:a}=t,l=Tt(),o=st.bind(l),{url:i,location:s}=Kn(e),{tocChanged:u,getRendition:d,epubInitOptions:f,epubOptions:p}=e,b=J(null),A=J([]),h=J(!1);let m=null,v=null;const S=async()=>{m&&m.destroy(),i.value&&(m=wi(i.value,f),m.loaded.navigation.then(({toc:j})=>{h.value=!0,A.value=j,u&&u(j),y()}))},y=()=>{var L,w;const j=b.value||((L=l==null?void 0:l.refs)==null?void 0:L.viewer);v=m.renderTo(j,{width:"100%",height:"100%",...p}),k(),d&&d(v),typeof(s==null?void 0:s.value)=="string"||typeof(s==null?void 0:s.value)=="number"?v.display(s.value):A.value.length>0&&((w=A==null?void 0:A.value[0])==null?void 0:w.href)?v.display(A.value[0].href):v.display()},W=j=>{j==="next"?P():j==="prev"&&x()},k=()=>{v&&(v.on("rendered",(j,L)=>{var w,R;(w=L==null?void 0:L.iframe)==null||w.contentWindow.focus(),(R=p==null?void 0:p.flow)!=null&&R.includes("scrolled")||oJ(L.document,W),iJ(L.document,W),lJ(L.document,W)}),v.on("locationChanged",V),v.on("displayError",j=>console.error("error rendering book",j)),v.on("selected",(j,L)=>n("select",j,L)),v.on("keyup",j=>n("keyPress",j)))},V=j=>{const L=j.start;(s==null?void 0:s.value)!==L&&n("update:location",L)};s&&Ve(s,((j,L=1e3)=>{let w;return function(...Z){const G=()=>{w=null,j(...Z)};clearTimeout(w),w=setTimeout(G,L)}})((j,L)=>{j&&j===L||(typeof j=="string"&&(v==null||v.display(j)),typeof j=="number"&&(v==null||v.display(j)))}),{immediate:!0}),Ve(i,()=>{S()});const P=()=>{v==null||v.next()},x=()=>{v==null||v.prev()},g=j=>{typeof j=="string"&&v.display(j),typeof j=="number"&&v.display(j)};return At(()=>{S()}),tn(()=>{m==null||m.destroy()}),a?a({nextPage:P,prevPage:x,setLocation:g}):(L=>{const w=Tt();if(!w)throw new Error("expose should be called in setup().");const R=Object.keys(L);R.forEach(Z=>{w.proxy[Z]=L[Z]}),tn(()=>{R.forEach(Z=>{w.proxy[Z]=void 0})})})({nextPage:P,prevPage:x,setLocation:g}),()=>{var j;return o("div",{class:"reader"},[o("div",{class:"viewHolder"},[o("div",{ref:parseFloat(pv)>=2.7?b:"viewer",class:"view",id:"viewer",attrs:{id:"viewer"},style:{display:h.value?null:"none"}}),!h.value&&o("div",(j=r.loadingView)==null?void 0:j.call(r))])])}}});const uJ=$({name:"VueReader",props:{url:{required:!0},title:String,showToc:{type:Boolean,default:!0},tocChanged:{type:Function},getRendition:{type:Function}},setup(e,t){const{emit:n,slots:r,expose:a,attrs:l}=t,o=Tt(),i=st.bind(o),s=J(),u=J(null),{tocChanged:d,getRendition:f}=e,{title:p,url:b,showToc:A}=Kn(e),h=Bt({toc:[],expandedToc:!1}),{toc:m,expandedToc:v}=Kn(h),S=J(""),y=()=>{v.value=!v.value},W=x=>{m.value=x.map(g=>({...g,expansion:!1})),d&&d(x)},k=x=>{f&&f(x),x.on("relocated",j=>{u.value=j});const g=x.book;g.ready.then(()=>{const j=g.package.metadata;S.value=j.title})},V=x=>{const g=s.value||(o==null?void 0:o.refs.epubRef);g==null||g.setLocation(x),v.value=!1},T=()=>{const x=s.value||(o==null?void 0:o.refs.epubRef);x==null||x.nextPage()},P=()=>{const x=s.value||(o==null?void 0:o.refs.epubRef);x==null||x.prevPage()};return a?a({setLocation:V,next:T,pre:P}):(g=>{const j=Tt();if(!j)throw new Error("expose should be called in setup().");const L=Object.keys(g);L.forEach(w=>{j.proxy[w]=g[w]}),tn(()=>{L.forEach(w=>{j.proxy[w]=void 0})})})({setLocation:V,next:T,pre:P}),()=>{var x,g,j,L,w;return i("div",{class:"container"},[i("div",{class:["readerArea",{containerExpanded:v.value}]},[A.value&&i("button",{class:["tocButton",{tocButtonExpanded:v.value}],type:"button",on:{click:()=>y()},onClick:y},[i("span",{class:"tocButtonBar",style:"top: 35%"}),i("span",{class:"tocButtonBar",style:"top: 66%"})]),i("div",{class:"titleArea",title:S.value},r.title?(x=r.title)==null?void 0:x.call(r):p.value||S.value),i(G4,{ref:parseFloat(pv)<2.7?"epubRef":s,url:b.value,tocChanged:W,getRendition:k,...l,attrs:{url:b.value,tocChanged:W,getRendition:k,...l},on:{...t.listeners}},{loadingView:()=>{var R;return i("div",{class:"loadingView"},r.loadingView?(R=r.loadingView)==null?void 0:R.call(r):"Loading...")}}),i("button",{class:"arrow pre",on:{click:()=>P()},onClick:P,domProps:{disabled:(g=u.value)==null?void 0:g.atStart},disabled:(j=u.value)==null?void 0:j.atStart},"\u2039"),i("button",{class:"arrow next",on:{click:()=>T()},onClick:T,domProps:{disabled:(L=u.value)==null?void 0:L.atEnd},disabled:(w=u.value)==null?void 0:w.atEnd},"\u203A")]),A.value&&i("div",[i("div",{class:"tocArea"},m.value.map((R,Z)=>i("div",{key:Z},[i("button",{class:["tocAreaButton",u.value&&R.href.includes(u.value.start.href)?"active":""],on:{click:()=>V(R.href)},onClick:()=>V(R.href)},[R.label,R.subitems&&R.subitems.length>0&&i("div",{class:"expansion",on:{click:G=>{G.stopPropagation(),R.expansion=!R.expansion}},onClick:G=>{G.stopPropagation(),R.expansion=!R.expansion},style:{transform:R.expansion?"rotate(180deg)":"rotate(0deg)"}})]),R.subitems&&R.subitems.length>0&&i(fn,{name:"collapse-transition"},{default:()=>i("div",{style:{display:R.expansion?void 0:"none"}},R.subitems.map((G,U)=>i("button",{key:U,class:["tocAreaButton",u.value&&G.href.includes(u.value.start.href)?"active":""],onClick:()=>V(G.href),on:{click:()=>V(G.href)}}," ".repeat(4)+G.label)))})]))),v.value&&i("div",{class:["tocBackground"],onClick:y,on:{click:()=>y()}})])])}}});/*!
  * pinia v2.0.23
  * (c) 2022 Eduardo San Martin Morote
  * @license MIT
  */let C4;const Nv=e=>C4=e,M4=Symbol();function z1(e){return e&&typeof e=="object"&&Object.prototype.toString.call(e)==="[object Object]"&&typeof e.toJSON!="function"}var Eu;(function(e){e.direct="direct",e.patchObject="patch object",e.patchFunction="patch function"})(Eu||(Eu={}));function cJ(){const e=ev(!0),t=e.run(()=>J({}));let n=[],r=[];const a=kr({install(l){Nv(a),a._a=l,l.provide(M4,a),l.config.globalProperties.$pinia=a,r.forEach(o=>n.push(o)),r=[]},use(l){return!this._a&&!U9?r.push(l):n.push(l),this},_p:n,_a:null,_e:e,_s:new Map,state:t});return a}const D4=()=>{};function _y(e,t,n,r=D4){e.push(t);const a=()=>{const l=e.indexOf(t);l>-1&&(e.splice(l,1),r())};return!n&&Tt()&&mr(a),a}function Di(e,...t){e.slice().forEach(n=>{n(...t)})}function H1(e,t){e instanceof Map&&t instanceof Map&&t.forEach((n,r)=>e.set(r,n)),e instanceof Set&&t instanceof Set&&t.forEach(e.add,e);for(const n in t){if(!t.hasOwnProperty(n))continue;const r=t[n],a=e[n];z1(a)&&z1(r)&&e.hasOwnProperty(n)&&!Qt(r)&&!Ba(r)?e[n]=H1(a,r):e[n]=r}return e}const dJ=Symbol();function fJ(e){return!z1(e)||!e.hasOwnProperty(dJ)}const{assign:no}=Object;function pJ(e){return!!(Qt(e)&&e.effect)}function vJ(e,t,n,r){const{state:a,actions:l,getters:o}=t,i=n.state.value[e];let s;function u(){i||(n.state.value[e]=a?a():{});const d=Kn(n.state.value[e]);return no(d,l,Object.keys(o||{}).reduce((f,p)=>(f[p]=kr(X(()=>{Nv(n);const b=n._s.get(e);return o[p].call(b,b)})),f),{}))}return s=E4(e,u,t,n,r,!0),s.$reset=function(){const f=a?a():{};this.$patch(p=>{no(p,f)})},s}function E4(e,t,n={},r,a,l){let o;const i=no({actions:{}},n),s={deep:!0};let u,d,f=kr([]),p=kr([]),b;const A=r.state.value[e];!l&&!A&&(r.state.value[e]={}),J({});let h;function m(T){let P;u=d=!1,typeof T=="function"?(T(r.state.value[e]),P={type:Eu.patchFunction,storeId:e,events:b}):(H1(r.state.value[e],T),P={type:Eu.patchObject,payload:T,storeId:e,events:b});const x=h=Symbol();at().then(()=>{h===x&&(u=!0)}),d=!0,Di(f,P,r.state.value[e])}const v=D4;function S(){o.stop(),f=[],p=[],r._s.delete(e)}function y(T,P){return function(){Nv(r);const x=Array.from(arguments),g=[],j=[];function L(Z){g.push(Z)}function w(Z){j.push(Z)}Di(p,{args:x,name:T,store:k,after:L,onError:w});let R;try{R=P.apply(this&&this.$id===e?this:k,x)}catch(Z){throw Di(j,Z),Z}return R instanceof Promise?R.then(Z=>(Di(g,Z),Z)).catch(Z=>(Di(j,Z),Promise.reject(Z))):(Di(g,R),R)}}const W={_p:r,$id:e,$onAction:_y.bind(null,p),$patch:m,$reset:v,$subscribe(T,P={}){const x=_y(f,T,P.detached,()=>g()),g=o.run(()=>Ve(()=>r.state.value[e],j=>{(P.flush==="sync"?d:u)&&T({storeId:e,type:Eu.direct,events:b},j)},no({},s,P)));return x},$dispose:S},k=Bt(W);r._s.set(e,k);const V=r._e.run(()=>(o=ev(),o.run(()=>t())));for(const T in V){const P=V[T];if(Qt(P)&&!pJ(P)||Ba(P))l||(A&&fJ(P)&&(Qt(P)?P.value=A[T]:H1(P,A[T])),r.state.value[e][T]=P);else if(typeof P=="function"){const x=y(T,P);V[T]=x,i.actions[T]=P}}return no(k,V),no(_t(k),V),Object.defineProperty(k,"$state",{get:()=>r.state.value[e],set:T=>{m(P=>{no(P,T)})}}),r._p.forEach(T=>{no(k,o.run(()=>T({store:k,app:r._a,pinia:r,options:i})))}),A&&l&&n.hydrate&&n.hydrate(k.$state,A),u=!0,d=!0,k}function bJ(e,t,n){let r,a;const l=typeof t=="function";typeof e=="string"?(r=e,a=l?n:t):(a=e,r=e.id);function o(i,s){const u=Tt();return i=i||u&&tt(M4),i&&Nv(i),i=C4,i._s.has(r)||(l?E4(r,t,a,i):vJ(r,a,i)),i._s.get(r)}return o.$id=r,o}function hJ(e){{e=_t(e);const t={};for(const n in e){const r=e[n];(Qt(r)||Ba(r))&&(t[n]=bn(e,n))}return t}}const mJ='a[href],button:not([disabled]),button:not([hidden]),:not([tabindex="-1"]),input:not([disabled]),input:not([type="hidden"]),select:not([disabled]),textarea:not([disabled])',SJ=e=>getComputedStyle(e).position==="fixed"?!1:e.offsetParent!==null,$y=e=>Array.from(e.querySelectorAll(mJ)).filter(t=>yJ(t)&&SJ(t)),yJ=e=>{if(e.tabIndex>0||e.tabIndex===0&&e.getAttribute("tabIndex")!==null)return!0;if(e.disabled)return!1;switch(e.nodeName){case"A":return!!e.href&&e.rel!=="ignore";case"INPUT":return!(e.type==="hidden"||e.type==="file");case"BUTTON":case"SELECT":case"TEXTAREA":return!0;default:return!1}},Pf=function(e,t,...n){let r;t.includes("mouse")||t.includes("click")?r="MouseEvents":t.includes("key")?r="KeyboardEvent":r="HTMLEvents";const a=document.createEvent(r);return a.initEvent(t,...n),e.dispatchEvent(a),e},I4=e=>!e.getAttribute("aria-owns"),B4=(e,t,n)=>{const{parentNode:r}=e;if(!r)return null;const a=r.querySelectorAll(n),l=Array.prototype.indexOf.call(a,e);return a[l+t]||null},Tf=e=>{!e||(e.focus(),!I4(e)&&e.click())},Pn=(e,t,{checkForDefaultPrevented:n=!0}={})=>a=>{const l=e==null?void 0:e(a);if(n===!1||!l)return t==null?void 0:t(a)},e3=e=>t=>t.pointerType==="mouse"?e(t):void 0,Y4=()=>Mt&&/firefox/i.test(window.navigator.userAgent),AJ=(e,t)=>{if(!Mt||!e||!t)return!1;const n=e.getBoundingClientRect();let r;return t instanceof Element?r=t.getBoundingClientRect():r={top:0,right:window.innerWidth,bottom:window.innerHeight,left:0},n.top<r.bottom&&n.bottom>r.top&&n.right>r.left&&n.left<r.right},t3=e=>{let t=0,n=e;for(;n;)t+=n.offsetTop,n=n.offsetParent;return t},WJ=(e,t)=>Math.abs(t3(e)-t3(t)),Am=e=>{let t,n;return e.type==="touchend"?(n=e.changedTouches[0].clientY,t=e.changedTouches[0].clientX):e.type.startsWith("touch")?(n=e.touches[0].clientY,t=e.touches[0].clientX):(n=e.clientY,t=e.clientX),{clientX:t,clientY:n}};var kJ=typeof global=="object"&&global&&global.Object===Object&&global;const Q4=kJ;var VJ=typeof self=="object"&&self&&self.Object===Object&&self,PJ=Q4||VJ||Function("return this")();const Ja=PJ;var TJ=Ja.Symbol;const ba=TJ;var _4=Object.prototype,KJ=_4.hasOwnProperty,NJ=_4.toString,Ku=ba?ba.toStringTag:void 0;function xJ(e){var t=KJ.call(e,Ku),n=e[Ku];try{e[Ku]=void 0;var r=!0}catch{}var a=NJ.call(e);return r&&(t?e[Ku]=n:delete e[Ku]),a}var XJ=Object.prototype,gJ=XJ.toString;function wJ(e){return gJ.call(e)}var jJ="[object Null]",LJ="[object Undefined]",n3=ba?ba.toStringTag:void 0;function ji(e){return e==null?e===void 0?LJ:jJ:n3&&n3 in Object(e)?xJ(e):wJ(e)}function nl(e){return e!=null&&typeof e=="object"}var qJ="[object Symbol]";function xv(e){return typeof e=="symbol"||nl(e)&&ji(e)==qJ}function $4(e,t){for(var n=-1,r=e==null?0:e.length,a=Array(r);++n<r;)a[n]=t(e[n],n,e);return a}var UJ=Array.isArray;const Kr=UJ;var OJ=1/0,r3=ba?ba.prototype:void 0,a3=r3?r3.toString:void 0;function ek(e){if(typeof e=="string")return e;if(Kr(e))return $4(e,ek)+"";if(xv(e))return a3?a3.call(e):"";var t=e+"";return t=="0"&&1/e==-OJ?"-0":t}var RJ=/\s/;function JJ(e){for(var t=e.length;t--&&RJ.test(e.charAt(t)););return t}var FJ=/^\s+/;function zJ(e){return e&&e.slice(0,JJ(e)+1).replace(FJ,"")}function Nr(e){var t=typeof e;return e!=null&&(t=="object"||t=="function")}var l3=0/0,HJ=/^[-+]0x[0-9a-f]+$/i,ZJ=/^0b[01]+$/i,GJ=/^0o[0-7]+$/i,CJ=parseInt;function Z1(e){if(typeof e=="number")return e;if(xv(e))return l3;if(Nr(e)){var t=typeof e.valueOf=="function"?e.valueOf():e;e=Nr(t)?t+"":t}if(typeof e!="string")return e===0?e:+e;e=zJ(e);var n=ZJ.test(e);return n||GJ.test(e)?CJ(e.slice(2),n?2:8):HJ.test(e)?l3:+e}var o3=1/0,MJ=17976931348623157e292;function DJ(e){if(!e)return e===0?e:0;if(e=Z1(e),e===o3||e===-o3){var t=e<0?-1:1;return t*MJ}return e===e?e:0}function EJ(e){var t=DJ(e),n=t%1;return t===t?n?t-n:t:0}function Wm(e){return e}var IJ="[object AsyncFunction]",BJ="[object Function]",YJ="[object GeneratorFunction]",QJ="[object Proxy]";function km(e){if(!Nr(e))return!1;var t=ji(e);return t==BJ||t==YJ||t==IJ||t==QJ}var _J=Ja["__core-js_shared__"];const gb=_J;var i3=function(){var e=/[^.]+$/.exec(gb&&gb.keys&&gb.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();function $J(e){return!!i3&&i3 in e}var eF=Function.prototype,tF=eF.toString;function Li(e){if(e!=null){try{return tF.call(e)}catch{}try{return e+""}catch{}}return""}var nF=/[\\^$.*+?()[\]{}|]/g,rF=/^\[object .+?Constructor\]$/,aF=Function.prototype,lF=Object.prototype,oF=aF.toString,iF=lF.hasOwnProperty,sF=RegExp("^"+oF.call(iF).replace(nF,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function uF(e){if(!Nr(e)||$J(e))return!1;var t=km(e)?sF:rF;return t.test(Li(e))}function cF(e,t){return e==null?void 0:e[t]}function qi(e,t){var n=cF(e,t);return uF(n)?n:void 0}var dF=qi(Ja,"WeakMap");const G1=dF;var s3=Object.create,fF=function(){function e(){}return function(t){if(!Nr(t))return{};if(s3)return s3(t);e.prototype=t;var n=new e;return e.prototype=void 0,n}}();const pF=fF;function vF(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function bF(){}function tk(e,t){var n=-1,r=e.length;for(t||(t=Array(r));++n<r;)t[n]=e[n];return t}var hF=800,mF=16,SF=Date.now;function yF(e){var t=0,n=0;return function(){var r=SF(),a=mF-(r-n);if(n=r,a>0){if(++t>=hF)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}function AF(e){return function(){return e}}var WF=function(){try{var e=qi(Object,"defineProperty");return e({},"",{}),e}catch{}}();const Vp=WF;var kF=Vp?function(e,t){return Vp(e,"toString",{configurable:!0,enumerable:!1,value:AF(t),writable:!0})}:Wm;const VF=kF;var PF=yF(VF);const nk=PF;function TF(e,t){for(var n=-1,r=e==null?0:e.length;++n<r&&t(e[n],n,e)!==!1;);return e}function rk(e,t,n,r){for(var a=e.length,l=n+(r?1:-1);r?l--:++l<a;)if(t(e[l],l,e))return l;return-1}function KF(e){return e!==e}function NF(e,t,n){for(var r=n-1,a=e.length;++r<a;)if(e[r]===t)return r;return-1}function xF(e,t,n){return t===t?NF(e,t,n):rk(e,KF,n)}function XF(e,t){var n=e==null?0:e.length;return!!n&&xF(e,t,0)>-1}var gF=9007199254740991,wF=/^(?:0|[1-9]\d*)$/;function Xv(e,t){var n=typeof e;return t=t==null?gF:t,!!t&&(n=="number"||n!="symbol"&&wF.test(e))&&e>-1&&e%1==0&&e<t}function Vm(e,t,n){t=="__proto__"&&Vp?Vp(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}function cd(e,t){return e===t||e!==e&&t!==t}var jF=Object.prototype,LF=jF.hasOwnProperty;function Pm(e,t,n){var r=e[t];(!(LF.call(e,t)&&cd(r,n))||n===void 0&&!(t in e))&&Vm(e,t,n)}function dd(e,t,n,r){var a=!n;n||(n={});for(var l=-1,o=t.length;++l<o;){var i=t[l],s=r?r(n[i],e[i],i,n,e):void 0;s===void 0&&(s=e[i]),a?Vm(n,i,s):Pm(n,i,s)}return n}var u3=Math.max;function ak(e,t,n){return t=u3(t===void 0?e.length-1:t,0),function(){for(var r=arguments,a=-1,l=u3(r.length-t,0),o=Array(l);++a<l;)o[a]=r[t+a];a=-1;for(var i=Array(t+1);++a<t;)i[a]=r[a];return i[t]=n(o),vF(e,this,i)}}function lk(e,t){return nk(ak(e,t,Wm),e+"")}var qF=9007199254740991;function Tm(e){return typeof e=="number"&&e>-1&&e%1==0&&e<=qF}function iu(e){return e!=null&&Tm(e.length)&&!km(e)}function UF(e,t,n){if(!Nr(n))return!1;var r=typeof t;return(r=="number"?iu(n)&&Xv(t,n.length):r=="string"&&t in n)?cd(n[t],e):!1}function OF(e){return lk(function(t,n){var r=-1,a=n.length,l=a>1?n[a-1]:void 0,o=a>2?n[2]:void 0;for(l=e.length>3&&typeof l=="function"?(a--,l):void 0,o&&UF(n[0],n[1],o)&&(l=a<3?void 0:l,a=1),t=Object(t);++r<a;){var i=n[r];i&&e(t,i,r,l)}return t})}var RF=Object.prototype;function Km(e){var t=e&&e.constructor,n=typeof t=="function"&&t.prototype||RF;return e===n}function JF(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}var FF="[object Arguments]";function c3(e){return nl(e)&&ji(e)==FF}var ok=Object.prototype,zF=ok.hasOwnProperty,HF=ok.propertyIsEnumerable,ZF=c3(function(){return arguments}())?c3:function(e){return nl(e)&&zF.call(e,"callee")&&!HF.call(e,"callee")};const Wc=ZF;function GF(){return!1}var ik=typeof exports=="object"&&exports&&!exports.nodeType&&exports,d3=ik&&typeof module=="object"&&module&&!module.nodeType&&module,CF=d3&&d3.exports===ik,f3=CF?Ja.Buffer:void 0,MF=f3?f3.isBuffer:void 0,DF=MF||GF;const kc=DF;var EF="[object Arguments]",IF="[object Array]",BF="[object Boolean]",YF="[object Date]",QF="[object Error]",_F="[object Function]",$F="[object Map]",ez="[object Number]",tz="[object Object]",nz="[object RegExp]",rz="[object Set]",az="[object String]",lz="[object WeakMap]",oz="[object ArrayBuffer]",iz="[object DataView]",sz="[object Float32Array]",uz="[object Float64Array]",cz="[object Int8Array]",dz="[object Int16Array]",fz="[object Int32Array]",pz="[object Uint8Array]",vz="[object Uint8ClampedArray]",bz="[object Uint16Array]",hz="[object Uint32Array]",xn={};xn[sz]=xn[uz]=xn[cz]=xn[dz]=xn[fz]=xn[pz]=xn[vz]=xn[bz]=xn[hz]=!0;xn[EF]=xn[IF]=xn[oz]=xn[BF]=xn[iz]=xn[YF]=xn[QF]=xn[_F]=xn[$F]=xn[ez]=xn[tz]=xn[nz]=xn[rz]=xn[az]=xn[lz]=!1;function mz(e){return nl(e)&&Tm(e.length)&&!!xn[ji(e)]}function Nm(e){return function(t){return e(t)}}var sk=typeof exports=="object"&&exports&&!exports.nodeType&&exports,Iu=sk&&typeof module=="object"&&module&&!module.nodeType&&module,Sz=Iu&&Iu.exports===sk,wb=Sz&&Q4.process,yz=function(){try{var e=Iu&&Iu.require&&Iu.require("util").types;return e||wb&&wb.binding&&wb.binding("util")}catch{}}();const Fs=yz;var p3=Fs&&Fs.isTypedArray,Az=p3?Nm(p3):mz;const xm=Az;var Wz=Object.prototype,kz=Wz.hasOwnProperty;function uk(e,t){var n=Kr(e),r=!n&&Wc(e),a=!n&&!r&&kc(e),l=!n&&!r&&!a&&xm(e),o=n||r||a||l,i=o?JF(e.length,String):[],s=i.length;for(var u in e)(t||kz.call(e,u))&&!(o&&(u=="length"||a&&(u=="offset"||u=="parent")||l&&(u=="buffer"||u=="byteLength"||u=="byteOffset")||Xv(u,s)))&&i.push(u);return i}function ck(e,t){return function(n){return e(t(n))}}var Vz=ck(Object.keys,Object);const Pz=Vz;var Tz=Object.prototype,Kz=Tz.hasOwnProperty;function Nz(e){if(!Km(e))return Pz(e);var t=[];for(var n in Object(e))Kz.call(e,n)&&n!="constructor"&&t.push(n);return t}function fd(e){return iu(e)?uk(e):Nz(e)}function xz(e){var t=[];if(e!=null)for(var n in Object(e))t.push(n);return t}var Xz=Object.prototype,gz=Xz.hasOwnProperty;function wz(e){if(!Nr(e))return xz(e);var t=Km(e),n=[];for(var r in e)r=="constructor"&&(t||!gz.call(e,r))||n.push(r);return n}function pd(e){return iu(e)?uk(e,!0):wz(e)}var jz=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Lz=/^\w*$/;function Xm(e,t){if(Kr(e))return!1;var n=typeof e;return n=="number"||n=="symbol"||n=="boolean"||e==null||xv(e)?!0:Lz.test(e)||!jz.test(e)||t!=null&&e in Object(t)}var qz=qi(Object,"create");const Vc=qz;function Uz(){this.__data__=Vc?Vc(null):{},this.size=0}function Oz(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}var Rz="__lodash_hash_undefined__",Jz=Object.prototype,Fz=Jz.hasOwnProperty;function zz(e){var t=this.__data__;if(Vc){var n=t[e];return n===Rz?void 0:n}return Fz.call(t,e)?t[e]:void 0}var Hz=Object.prototype,Zz=Hz.hasOwnProperty;function Gz(e){var t=this.__data__;return Vc?t[e]!==void 0:Zz.call(t,e)}var Cz="__lodash_hash_undefined__";function Mz(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=Vc&&t===void 0?Cz:t,this}function ki(e){var t=-1,n=e==null?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}ki.prototype.clear=Uz;ki.prototype.delete=Oz;ki.prototype.get=zz;ki.prototype.has=Gz;ki.prototype.set=Mz;function Dz(){this.__data__=[],this.size=0}function gv(e,t){for(var n=e.length;n--;)if(cd(e[n][0],t))return n;return-1}var Ez=Array.prototype,Iz=Ez.splice;function Bz(e){var t=this.__data__,n=gv(t,e);if(n<0)return!1;var r=t.length-1;return n==r?t.pop():Iz.call(t,n,1),--this.size,!0}function Yz(e){var t=this.__data__,n=gv(t,e);return n<0?void 0:t[n][1]}function Qz(e){return gv(this.__data__,e)>-1}function _z(e,t){var n=this.__data__,r=gv(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this}function Zl(e){var t=-1,n=e==null?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}Zl.prototype.clear=Dz;Zl.prototype.delete=Bz;Zl.prototype.get=Yz;Zl.prototype.has=Qz;Zl.prototype.set=_z;var $z=qi(Ja,"Map");const Pc=$z;function eH(){this.size=0,this.__data__={hash:new ki,map:new(Pc||Zl),string:new ki}}function tH(e){var t=typeof e;return t=="string"||t=="number"||t=="symbol"||t=="boolean"?e!=="__proto__":e===null}function wv(e,t){var n=e.__data__;return tH(t)?n[typeof t=="string"?"string":"hash"]:n.map}function nH(e){var t=wv(this,e).delete(e);return this.size-=t?1:0,t}function rH(e){return wv(this,e).get(e)}function aH(e){return wv(this,e).has(e)}function lH(e,t){var n=wv(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this}function Gl(e){var t=-1,n=e==null?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}Gl.prototype.clear=eH;Gl.prototype.delete=nH;Gl.prototype.get=rH;Gl.prototype.has=aH;Gl.prototype.set=lH;var oH="Expected a function";function jv(e,t){if(typeof e!="function"||t!=null&&typeof t!="function")throw new TypeError(oH);var n=function(){var r=arguments,a=t?t.apply(this,r):r[0],l=n.cache;if(l.has(a))return l.get(a);var o=e.apply(this,r);return n.cache=l.set(a,o)||l,o};return n.cache=new(jv.Cache||Gl),n}jv.Cache=Gl;var iH=500;function sH(e){var t=jv(e,function(r){return n.size===iH&&n.clear(),r}),n=t.cache;return t}var uH=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,cH=/\\(\\)?/g,dH=sH(function(e){var t=[];return e.charCodeAt(0)===46&&t.push(""),e.replace(uH,function(n,r,a,l){t.push(a?l.replace(cH,"$1"):r||n)}),t});const fH=dH;function pH(e){return e==null?"":ek(e)}function Lv(e,t){return Kr(e)?e:Xm(e,t)?[e]:fH(pH(e))}var vH=1/0;function vd(e){if(typeof e=="string"||xv(e))return e;var t=e+"";return t=="0"&&1/e==-vH?"-0":t}function gm(e,t){t=Lv(t,e);for(var n=0,r=t.length;e!=null&&n<r;)e=e[vd(t[n++])];return n&&n==r?e:void 0}function jn(e,t,n){var r=e==null?void 0:gm(e,t);return r===void 0?n:r}function wm(e,t){for(var n=-1,r=t.length,a=e.length;++n<r;)e[a+n]=t[n];return e}var v3=ba?ba.isConcatSpreadable:void 0;function bH(e){return Kr(e)||Wc(e)||!!(v3&&e&&e[v3])}function bd(e,t,n,r,a){var l=-1,o=e.length;for(n||(n=bH),a||(a=[]);++l<o;){var i=e[l];t>0&&n(i)?t>1?bd(i,t-1,n,r,a):wm(a,i):r||(a[a.length]=i)}return a}function dk(e){var t=e==null?0:e.length;return t?bd(e,1):[]}function hH(e){return nk(ak(e,void 0,dk),e+"")}var mH=ck(Object.getPrototypeOf,Object);const jm=mH;var SH="[object Object]",yH=Function.prototype,AH=Object.prototype,fk=yH.toString,WH=AH.hasOwnProperty,kH=fk.call(Object);function VH(e){if(!nl(e)||ji(e)!=SH)return!1;var t=jm(e);if(t===null)return!0;var n=WH.call(t,"constructor")&&t.constructor;return typeof n=="function"&&n instanceof n&&fk.call(n)==kH}function Vi(){if(!arguments.length)return[];var e=arguments[0];return Kr(e)?e:[e]}function PH(){this.__data__=new Zl,this.size=0}function TH(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}function KH(e){return this.__data__.get(e)}function NH(e){return this.__data__.has(e)}var xH=200;function XH(e,t){var n=this.__data__;if(n instanceof Zl){var r=n.__data__;if(!Pc||r.length<xH-1)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new Gl(r)}return n.set(e,t),this.size=n.size,this}function ja(e){var t=this.__data__=new Zl(e);this.size=t.size}ja.prototype.clear=PH;ja.prototype.delete=TH;ja.prototype.get=KH;ja.prototype.has=NH;ja.prototype.set=XH;function gH(e,t){return e&&dd(t,fd(t),e)}function wH(e,t){return e&&dd(t,pd(t),e)}var pk=typeof exports=="object"&&exports&&!exports.nodeType&&exports,b3=pk&&typeof module=="object"&&module&&!module.nodeType&&module,jH=b3&&b3.exports===pk,h3=jH?Ja.Buffer:void 0,m3=h3?h3.allocUnsafe:void 0;function vk(e,t){if(t)return e.slice();var n=e.length,r=m3?m3(n):new e.constructor(n);return e.copy(r),r}function LH(e,t){for(var n=-1,r=e==null?0:e.length,a=0,l=[];++n<r;){var o=e[n];t(o,n,e)&&(l[a++]=o)}return l}function bk(){return[]}var qH=Object.prototype,UH=qH.propertyIsEnumerable,S3=Object.getOwnPropertySymbols,OH=S3?function(e){return e==null?[]:(e=Object(e),LH(S3(e),function(t){return UH.call(e,t)}))}:bk;const Lm=OH;function RH(e,t){return dd(e,Lm(e),t)}var JH=Object.getOwnPropertySymbols,FH=JH?function(e){for(var t=[];e;)wm(t,Lm(e)),e=jm(e);return t}:bk;const hk=FH;function zH(e,t){return dd(e,hk(e),t)}function mk(e,t,n){var r=t(e);return Kr(e)?r:wm(r,n(e))}function C1(e){return mk(e,fd,Lm)}function HH(e){return mk(e,pd,hk)}var ZH=qi(Ja,"DataView");const M1=ZH;var GH=qi(Ja,"Promise");const D1=GH;var CH=qi(Ja,"Set");const Ws=CH;var y3="[object Map]",MH="[object Object]",A3="[object Promise]",W3="[object Set]",k3="[object WeakMap]",V3="[object DataView]",DH=Li(M1),EH=Li(Pc),IH=Li(D1),BH=Li(Ws),YH=Li(G1),Co=ji;(M1&&Co(new M1(new ArrayBuffer(1)))!=V3||Pc&&Co(new Pc)!=y3||D1&&Co(D1.resolve())!=A3||Ws&&Co(new Ws)!=W3||G1&&Co(new G1)!=k3)&&(Co=function(e){var t=ji(e),n=t==MH?e.constructor:void 0,r=n?Li(n):"";if(r)switch(r){case DH:return V3;case EH:return y3;case IH:return A3;case BH:return W3;case YH:return k3}return t});const Tc=Co;var QH=Object.prototype,_H=QH.hasOwnProperty;function $H(e){var t=e.length,n=new e.constructor(t);return t&&typeof e[0]=="string"&&_H.call(e,"index")&&(n.index=e.index,n.input=e.input),n}var eZ=Ja.Uint8Array;const Pp=eZ;function qm(e){var t=new e.constructor(e.byteLength);return new Pp(t).set(new Pp(e)),t}function tZ(e,t){var n=t?qm(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}var nZ=/\w*$/;function rZ(e){var t=new e.constructor(e.source,nZ.exec(e));return t.lastIndex=e.lastIndex,t}var P3=ba?ba.prototype:void 0,T3=P3?P3.valueOf:void 0;function aZ(e){return T3?Object(T3.call(e)):{}}function Sk(e,t){var n=t?qm(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}var lZ="[object Boolean]",oZ="[object Date]",iZ="[object Map]",sZ="[object Number]",uZ="[object RegExp]",cZ="[object Set]",dZ="[object String]",fZ="[object Symbol]",pZ="[object ArrayBuffer]",vZ="[object DataView]",bZ="[object Float32Array]",hZ="[object Float64Array]",mZ="[object Int8Array]",SZ="[object Int16Array]",yZ="[object Int32Array]",AZ="[object Uint8Array]",WZ="[object Uint8ClampedArray]",kZ="[object Uint16Array]",VZ="[object Uint32Array]";function PZ(e,t,n){var r=e.constructor;switch(t){case pZ:return qm(e);case lZ:case oZ:return new r(+e);case vZ:return tZ(e,n);case bZ:case hZ:case mZ:case SZ:case yZ:case AZ:case WZ:case kZ:case VZ:return Sk(e,n);case iZ:return new r;case sZ:case dZ:return new r(e);case uZ:return rZ(e);case cZ:return new r;case fZ:return aZ(e)}}function yk(e){return typeof e.constructor=="function"&&!Km(e)?pF(jm(e)):{}}var TZ="[object Map]";function KZ(e){return nl(e)&&Tc(e)==TZ}var K3=Fs&&Fs.isMap,NZ=K3?Nm(K3):KZ;const xZ=NZ;var XZ="[object Set]";function gZ(e){return nl(e)&&Tc(e)==XZ}var N3=Fs&&Fs.isSet,wZ=N3?Nm(N3):gZ;const jZ=wZ;var LZ=1,qZ=2,UZ=4,Ak="[object Arguments]",OZ="[object Array]",RZ="[object Boolean]",JZ="[object Date]",FZ="[object Error]",Wk="[object Function]",zZ="[object GeneratorFunction]",HZ="[object Map]",ZZ="[object Number]",kk="[object Object]",GZ="[object RegExp]",CZ="[object Set]",MZ="[object String]",DZ="[object Symbol]",EZ="[object WeakMap]",IZ="[object ArrayBuffer]",BZ="[object DataView]",YZ="[object Float32Array]",QZ="[object Float64Array]",_Z="[object Int8Array]",$Z="[object Int16Array]",eG="[object Int32Array]",tG="[object Uint8Array]",nG="[object Uint8ClampedArray]",rG="[object Uint16Array]",aG="[object Uint32Array]",Vn={};Vn[Ak]=Vn[OZ]=Vn[IZ]=Vn[BZ]=Vn[RZ]=Vn[JZ]=Vn[YZ]=Vn[QZ]=Vn[_Z]=Vn[$Z]=Vn[eG]=Vn[HZ]=Vn[ZZ]=Vn[kk]=Vn[GZ]=Vn[CZ]=Vn[MZ]=Vn[DZ]=Vn[tG]=Vn[nG]=Vn[rG]=Vn[aG]=!0;Vn[FZ]=Vn[Wk]=Vn[EZ]=!1;function Bu(e,t,n,r,a,l){var o,i=t&LZ,s=t&qZ,u=t&UZ;if(n&&(o=a?n(e,r,a,l):n(e)),o!==void 0)return o;if(!Nr(e))return e;var d=Kr(e);if(d){if(o=$H(e),!i)return tk(e,o)}else{var f=Tc(e),p=f==Wk||f==zZ;if(kc(e))return vk(e,i);if(f==kk||f==Ak||p&&!a){if(o=s||p?{}:yk(e),!i)return s?zH(e,wH(o,e)):RH(e,gH(o,e))}else{if(!Vn[f])return a?e:{};o=PZ(e,f,i)}}l||(l=new ja);var b=l.get(e);if(b)return b;l.set(e,o),jZ(e)?e.forEach(function(m){o.add(Bu(m,t,n,m,e,l))}):xZ(e)&&e.forEach(function(m,v){o.set(v,Bu(m,t,n,v,e,l))});var A=u?s?HH:C1:s?pd:fd,h=d?void 0:A(e);return TF(h||e,function(m,v){h&&(v=m,m=e[v]),Pm(o,v,Bu(m,t,n,v,e,l))}),o}var lG=4;function x3(e){return Bu(e,lG)}var oG=1,iG=4;function Tp(e){return Bu(e,oG|iG)}var sG="__lodash_hash_undefined__";function uG(e){return this.__data__.set(e,sG),this}function cG(e){return this.__data__.has(e)}function Kc(e){var t=-1,n=e==null?0:e.length;for(this.__data__=new Gl;++t<n;)this.add(e[t])}Kc.prototype.add=Kc.prototype.push=uG;Kc.prototype.has=cG;function dG(e,t){for(var n=-1,r=e==null?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}function Vk(e,t){return e.has(t)}var fG=1,pG=2;function Pk(e,t,n,r,a,l){var o=n&fG,i=e.length,s=t.length;if(i!=s&&!(o&&s>i))return!1;var u=l.get(e),d=l.get(t);if(u&&d)return u==t&&d==e;var f=-1,p=!0,b=n&pG?new Kc:void 0;for(l.set(e,t),l.set(t,e);++f<i;){var A=e[f],h=t[f];if(r)var m=o?r(h,A,f,t,e,l):r(A,h,f,e,t,l);if(m!==void 0){if(m)continue;p=!1;break}if(b){if(!dG(t,function(v,S){if(!Vk(b,S)&&(A===v||a(A,v,n,r,l)))return b.push(S)})){p=!1;break}}else if(!(A===h||a(A,h,n,r,l))){p=!1;break}}return l.delete(e),l.delete(t),p}function vG(e){var t=-1,n=Array(e.size);return e.forEach(function(r,a){n[++t]=[a,r]}),n}function Um(e){var t=-1,n=Array(e.size);return e.forEach(function(r){n[++t]=r}),n}var bG=1,hG=2,mG="[object Boolean]",SG="[object Date]",yG="[object Error]",AG="[object Map]",WG="[object Number]",kG="[object RegExp]",VG="[object Set]",PG="[object String]",TG="[object Symbol]",KG="[object ArrayBuffer]",NG="[object DataView]",X3=ba?ba.prototype:void 0,jb=X3?X3.valueOf:void 0;function xG(e,t,n,r,a,l,o){switch(n){case NG:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case KG:return!(e.byteLength!=t.byteLength||!l(new Pp(e),new Pp(t)));case mG:case SG:case WG:return cd(+e,+t);case yG:return e.name==t.name&&e.message==t.message;case kG:case PG:return e==t+"";case AG:var i=vG;case VG:var s=r&bG;if(i||(i=Um),e.size!=t.size&&!s)return!1;var u=o.get(e);if(u)return u==t;r|=hG,o.set(e,t);var d=Pk(i(e),i(t),r,a,l,o);return o.delete(e),d;case TG:if(jb)return jb.call(e)==jb.call(t)}return!1}var XG=1,gG=Object.prototype,wG=gG.hasOwnProperty;function jG(e,t,n,r,a,l){var o=n&XG,i=C1(e),s=i.length,u=C1(t),d=u.length;if(s!=d&&!o)return!1;for(var f=s;f--;){var p=i[f];if(!(o?p in t:wG.call(t,p)))return!1}var b=l.get(e),A=l.get(t);if(b&&A)return b==t&&A==e;var h=!0;l.set(e,t),l.set(t,e);for(var m=o;++f<s;){p=i[f];var v=e[p],S=t[p];if(r)var y=o?r(S,v,p,t,e,l):r(v,S,p,e,t,l);if(!(y===void 0?v===S||a(v,S,n,r,l):y)){h=!1;break}m||(m=p=="constructor")}if(h&&!m){var W=e.constructor,k=t.constructor;W!=k&&"constructor"in e&&"constructor"in t&&!(typeof W=="function"&&W instanceof W&&typeof k=="function"&&k instanceof k)&&(h=!1)}return l.delete(e),l.delete(t),h}var LG=1,g3="[object Arguments]",w3="[object Array]",Md="[object Object]",qG=Object.prototype,j3=qG.hasOwnProperty;function UG(e,t,n,r,a,l){var o=Kr(e),i=Kr(t),s=o?w3:Tc(e),u=i?w3:Tc(t);s=s==g3?Md:s,u=u==g3?Md:u;var d=s==Md,f=u==Md,p=s==u;if(p&&kc(e)){if(!kc(t))return!1;o=!0,d=!1}if(p&&!d)return l||(l=new ja),o||xm(e)?Pk(e,t,n,r,a,l):xG(e,t,s,n,r,a,l);if(!(n&LG)){var b=d&&j3.call(e,"__wrapped__"),A=f&&j3.call(t,"__wrapped__");if(b||A){var h=b?e.value():e,m=A?t.value():t;return l||(l=new ja),a(h,m,n,r,l)}}return p?(l||(l=new ja),jG(e,t,n,r,a,l)):!1}function qv(e,t,n,r,a){return e===t?!0:e==null||t==null||!nl(e)&&!nl(t)?e!==e&&t!==t:UG(e,t,n,r,qv,a)}var OG=1,RG=2;function JG(e,t,n,r){var a=n.length,l=a,o=!r;if(e==null)return!l;for(e=Object(e);a--;){var i=n[a];if(o&&i[2]?i[1]!==e[i[0]]:!(i[0]in e))return!1}for(;++a<l;){i=n[a];var s=i[0],u=e[s],d=i[1];if(o&&i[2]){if(u===void 0&&!(s in e))return!1}else{var f=new ja;if(r)var p=r(u,d,s,e,t,f);if(!(p===void 0?qv(d,u,OG|RG,r,f):p))return!1}}return!0}function Tk(e){return e===e&&!Nr(e)}function FG(e){for(var t=fd(e),n=t.length;n--;){var r=t[n],a=e[r];t[n]=[r,a,Tk(a)]}return t}function Kk(e,t){return function(n){return n==null?!1:n[e]===t&&(t!==void 0||e in Object(n))}}function zG(e){var t=FG(e);return t.length==1&&t[0][2]?Kk(t[0][0],t[0][1]):function(n){return n===e||JG(n,e,t)}}function HG(e,t){return e!=null&&t in Object(e)}function ZG(e,t,n){t=Lv(t,e);for(var r=-1,a=t.length,l=!1;++r<a;){var o=vd(t[r]);if(!(l=e!=null&&n(e,o)))break;e=e[o]}return l||++r!=a?l:(a=e==null?0:e.length,!!a&&Tm(a)&&Xv(o,a)&&(Kr(e)||Wc(e)))}function Nk(e,t){return e!=null&&ZG(e,t,HG)}var GG=1,CG=2;function MG(e,t){return Xm(e)&&Tk(t)?Kk(vd(e),t):function(n){var r=jn(n,e);return r===void 0&&r===t?Nk(n,e):qv(t,r,GG|CG)}}function DG(e){return function(t){return t==null?void 0:t[e]}}function EG(e){return function(t){return gm(t,e)}}function IG(e){return Xm(e)?DG(vd(e)):EG(e)}function xk(e){return typeof e=="function"?e:e==null?Wm:typeof e=="object"?Kr(e)?MG(e[0],e[1]):zG(e):IG(e)}function BG(e){return function(t,n,r){for(var a=-1,l=Object(t),o=r(t),i=o.length;i--;){var s=o[e?i:++a];if(n(l[s],s,l)===!1)break}return t}}var YG=BG();const Xk=YG;function QG(e,t){return e&&Xk(e,t,fd)}function _G(e,t){return function(n,r){if(n==null)return n;if(!iu(n))return e(n,r);for(var a=n.length,l=t?a:-1,o=Object(n);(t?l--:++l<a)&&r(o[l],l,o)!==!1;);return n}}var $G=_G(QG);const eC=$G;var tC=function(){return Ja.Date.now()};const Lb=tC;var nC="Expected a function",rC=Math.max,aC=Math.min;function xr(e,t,n){var r,a,l,o,i,s,u=0,d=!1,f=!1,p=!0;if(typeof e!="function")throw new TypeError(nC);t=Z1(t)||0,Nr(n)&&(d=!!n.leading,f="maxWait"in n,l=f?rC(Z1(n.maxWait)||0,t):l,p="trailing"in n?!!n.trailing:p);function b(V){var T=r,P=a;return r=a=void 0,u=V,o=e.apply(P,T),o}function A(V){return u=V,i=setTimeout(v,t),d?b(V):o}function h(V){var T=V-s,P=V-u,x=t-T;return f?aC(x,l-P):x}function m(V){var T=V-s,P=V-u;return s===void 0||T>=t||T<0||f&&P>=l}function v(){var V=Lb();if(m(V))return S(V);i=setTimeout(v,h(V))}function S(V){return i=void 0,p&&r?b(V):(r=a=void 0,o)}function y(){i!==void 0&&clearTimeout(i),u=0,r=s=a=i=void 0}function W(){return i===void 0?o:S(Lb())}function k(){var V=Lb(),T=m(V);if(r=arguments,a=this,s=V,T){if(i===void 0)return A(s);if(f)return clearTimeout(i),i=setTimeout(v,t),b(s)}return i===void 0&&(i=setTimeout(v,t)),o}return k.cancel=y,k.flush=W,k}function E1(e,t,n){(n!==void 0&&!cd(e[t],n)||n===void 0&&!(t in e))&&Vm(e,t,n)}function gk(e){return nl(e)&&iu(e)}function I1(e,t){if(!(t==="constructor"&&typeof e[t]=="function")&&t!="__proto__")return e[t]}function lC(e){return dd(e,pd(e))}function oC(e,t,n,r,a,l,o){var i=I1(e,n),s=I1(t,n),u=o.get(s);if(u){E1(e,n,u);return}var d=l?l(i,s,n+"",e,t,o):void 0,f=d===void 0;if(f){var p=Kr(s),b=!p&&kc(s),A=!p&&!b&&xm(s);d=s,p||b||A?Kr(i)?d=i:gk(i)?d=tk(i):b?(f=!1,d=vk(s,!0)):A?(f=!1,d=Sk(s,!0)):d=[]:VH(s)||Wc(s)?(d=i,Wc(i)?d=lC(i):(!Nr(i)||km(i))&&(d=yk(s))):f=!1}f&&(o.set(s,d),a(d,s,r,l,o),o.delete(s)),E1(e,n,d)}function wk(e,t,n,r,a){e!==t&&Xk(t,function(l,o){if(a||(a=new ja),Nr(l))oC(e,t,o,n,wk,r,a);else{var i=r?r(I1(e,o),l,o+"",e,t,a):void 0;i===void 0&&(i=l),E1(e,o,i)}},pd)}function iC(e,t,n){for(var r=-1,a=e==null?0:e.length;++r<a;)if(n(t,e[r]))return!0;return!1}var sC=Math.max,uC=Math.min;function cC(e,t,n){var r=e==null?0:e.length;if(!r)return-1;var a=r-1;return n!==void 0&&(a=EJ(n),a=n<0?sC(r+a,0):uC(a,r-1)),rk(e,xk(t),a,!0)}function dC(e,t){var n=-1,r=iu(e)?Array(e.length):[];return eC(e,function(a,l,o){r[++n]=t(a,l,o)}),r}function fC(e,t){var n=Kr(e)?$4:dC;return n(e,xk(t))}function pC(e,t){return bd(fC(e,t),1)}var vC=1/0;function bC(e){var t=e==null?0:e.length;return t?bd(e,vC):[]}function Kp(e){for(var t=-1,n=e==null?0:e.length,r={};++t<n;){var a=e[t];r[a[0]]=a[1]}return r}function zr(e,t){return qv(e,t)}function On(e){return e==null}function hC(e){return e===void 0}var mC=OF(function(e,t,n){wk(e,t,n)});const jk=mC;function Lk(e,t,n,r){if(!Nr(e))return e;t=Lv(t,e);for(var a=-1,l=t.length,o=l-1,i=e;i!=null&&++a<l;){var s=vd(t[a]),u=n;if(s==="__proto__"||s==="constructor"||s==="prototype")return e;if(a!=o){var d=i[s];u=r?r(d,s,i):void 0,u===void 0&&(u=Nr(d)?d:Xv(t[a+1])?[]:{})}Pm(i,s,u),i=i[s]}return e}function SC(e,t,n){for(var r=-1,a=t.length,l={};++r<a;){var o=t[r],i=gm(e,o);n(i,o)&&Lk(l,Lv(o,e),i)}return l}function yC(e,t){return SC(e,t,function(n,r){return Nk(e,r)})}var AC=hH(function(e,t){return e==null?{}:yC(e,t)});const kl=AC;function WC(e,t,n){return e==null?e:Lk(e,t,n)}var kC="Expected a function";function si(e,t,n){var r=!0,a=!0;if(typeof e!="function")throw new TypeError(kC);return Nr(n)&&(r="leading"in n?!!n.leading:r,a="trailing"in n?!!n.trailing:a),xr(e,t,{leading:r,maxWait:t,trailing:a})}var VC=1/0,PC=Ws&&1/Um(new Ws([,-0]))[1]==VC?function(e){return new Ws(e)}:bF;const TC=PC;var KC=200;function NC(e,t,n){var r=-1,a=XF,l=e.length,o=!0,i=[],s=i;if(n)o=!1,a=iC;else if(l>=KC){var u=t?null:TC(e);if(u)return Um(u);o=!1,a=Vk,s=new Kc}else s=t?[]:i;e:for(;++r<l;){var d=e[r],f=t?t(d):d;if(d=n||d!==0?d:0,o&&f===f){for(var p=s.length;p--;)if(s[p]===f)continue e;t&&s.push(f),i.push(d)}else a(s,f,n)||(s!==i&&s.push(f),i.push(d))}return i}var xC=lk(function(e){return NC(bd(e,1,gk,!0))});const qb=xC,Hn=e=>e===void 0,Zn=e=>typeof e=="boolean",mt=e=>typeof e=="number",da=e=>!e&&e!==0||et(e)&&e.length===0||Jt(e)&&!Object.keys(e).length,ha=e=>typeof Element>"u"?!1:e instanceof Element,XC=e=>On(e),gC=e=>Pt(e)?!Number.isNaN(Number(e)):!1,qk=(e="")=>e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d"),Da=e=>tu(e),Nc=e=>Object.keys(e),wC=e=>Object.entries(e),Kf=(e,t,n)=>({get value(){return jn(e,t,n)},set value(r){WC(e,t,r)}});class jC extends Error{constructor(t){super(t),this.name="ElementPlusError"}}function Gn(e,t){throw new jC(`[${e}] ${t}`)}const Uk=(e="")=>e.split(" ").filter(t=>!!t.trim()),La=(e,t)=>{if(!e||!t)return!1;if(t.includes(" "))throw new Error("className should not contain space.");return e.classList.contains(t)},Ea=(e,t)=>{!e||!t.trim()||e.classList.add(...Uk(t))},Hr=(e,t)=>{!e||!t.trim()||e.classList.remove(...Uk(t))},ao=(e,t)=>{var n;if(!Mt||!e||!t)return"";let r=Tr(t);r==="float"&&(r="cssFloat");try{const a=e.style[r];if(a)return a;const l=(n=document.defaultView)==null?void 0:n.getComputedStyle(e,"");return l?l[r]:""}catch{return e.style[r]}};function Ln(e,t="px"){if(!e)return"";if(mt(e)||gC(e))return`${e}${t}`;if(Pt(e))return e}const LC=(e,t)=>{if(!Mt)return!1;const n={undefined:"overflow",true:"overflow-y",false:"overflow-x"}[String(t)],r=ao(e,n);return["scroll","auto","overlay"].some(a=>r.includes(a))},Om=(e,t)=>{if(!Mt)return;let n=e;for(;n;){if([window,document,document.documentElement].includes(n))return window;if(LC(n,t))return n;n=n.parentNode}return n};let Dd;const Ok=e=>{var t;if(!Mt)return 0;if(Dd!==void 0)return Dd;const n=document.createElement("div");n.className=`${e}-scrollbar__wrap`,n.style.visibility="hidden",n.style.width="100px",n.style.position="absolute",n.style.top="-9999px",document.body.appendChild(n);const r=n.offsetWidth;n.style.overflow="scroll";const a=document.createElement("div");a.style.width="100%",n.appendChild(a);const l=a.offsetWidth;return(t=n.parentNode)==null||t.removeChild(n),Dd=r-l,Dd};function Rk(e,t){if(!Mt)return;if(!t){e.scrollTop=0;return}const n=[];let r=t.offsetParent;for(;r!==null&&e!==r&&e.contains(r);)n.push(r),r=r.offsetParent;const a=t.offsetTop+n.reduce((s,u)=>s+u.offsetTop,0),l=a+t.offsetHeight,o=e.scrollTop,i=o+e.clientHeight;a<o?e.scrollTop=a:l>i&&(e.scrollTop=l-e.clientHeight)}/*! Element Plus Icons Vue v2.1.0 */var Yt=(e,t)=>{let n=e.__vccOpts||e;for(let[r,a]of t)n[r]=a;return n},qC={name:"ArrowDown"},UC={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},OC=z("path",{fill:"currentColor",d:"M831.872 340.864 512 652.672 192.128 340.864a30.592 30.592 0 0 0-42.752 0 29.12 29.12 0 0 0 0 41.6L489.664 714.24a32 32 0 0 0 44.672 0l340.288-331.712a29.12 29.12 0 0 0 0-41.728 30.592 30.592 0 0 0-42.752 0z"},null,-1),RC=[OC];function JC(e,t,n,r,a,l){return K(),F("svg",UC,RC)}var Lo=Yt(qC,[["render",JC],["__file","arrow-down.vue"]]),FC={name:"ArrowLeft"},zC={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},HC=z("path",{fill:"currentColor",d:"M609.408 149.376 277.76 489.6a32 32 0 0 0 0 44.672l331.648 340.352a29.12 29.12 0 0 0 41.728 0 30.592 30.592 0 0 0 0-42.752L339.264 511.936l311.872-319.872a30.592 30.592 0 0 0 0-42.688 29.12 29.12 0 0 0-41.728 0z"},null,-1),ZC=[HC];function GC(e,t,n,r,a,l){return K(),F("svg",zC,ZC)}var Wo=Yt(FC,[["render",GC],["__file","arrow-left.vue"]]),CC={name:"ArrowRight"},MC={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},DC=z("path",{fill:"currentColor",d:"M340.864 149.312a30.592 30.592 0 0 0 0 42.752L652.736 512 340.864 831.872a30.592 30.592 0 0 0 0 42.752 29.12 29.12 0 0 0 41.728 0L714.24 534.336a32 32 0 0 0 0-44.672L382.592 149.376a29.12 29.12 0 0 0-41.728 0z"},null,-1),EC=[DC];function IC(e,t,n,r,a,l){return K(),F("svg",MC,EC)}var Vr=Yt(CC,[["render",IC],["__file","arrow-right.vue"]]),BC={name:"ArrowUp"},YC={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},QC=z("path",{fill:"currentColor",d:"m488.832 344.32-339.84 356.672a32 32 0 0 0 0 44.16l.384.384a29.44 29.44 0 0 0 42.688 0l320-335.872 319.872 335.872a29.44 29.44 0 0 0 42.688 0l.384-.384a32 32 0 0 0 0-44.16L535.168 344.32a32 32 0 0 0-46.336 0z"},null,-1),_C=[QC];function $C(e,t,n,r,a,l){return K(),F("svg",YC,_C)}var Uv=Yt(BC,[["render",$C],["__file","arrow-up.vue"]]),eM={name:"Back"},tM={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},nM=z("path",{fill:"currentColor",d:"M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z"},null,-1),rM=z("path",{fill:"currentColor",d:"m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z"},null,-1),aM=[nM,rM];function lM(e,t,n,r,a,l){return K(),F("svg",tM,aM)}var Jk=Yt(eM,[["render",lM],["__file","back.vue"]]),oM={name:"Calendar"},iM={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},sM=z("path",{fill:"currentColor",d:"M128 384v512h768V192H768v32a32 32 0 1 1-64 0v-32H320v32a32 32 0 0 1-64 0v-32H128v128h768v64H128zm192-256h384V96a32 32 0 1 1 64 0v32h160a32 32 0 0 1 32 32v768a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32h160V96a32 32 0 0 1 64 0v32zm-32 384h64a32 32 0 0 1 0 64h-64a32 32 0 0 1 0-64zm0 192h64a32 32 0 1 1 0 64h-64a32 32 0 1 1 0-64zm192-192h64a32 32 0 0 1 0 64h-64a32 32 0 0 1 0-64zm0 192h64a32 32 0 1 1 0 64h-64a32 32 0 1 1 0-64zm192-192h64a32 32 0 1 1 0 64h-64a32 32 0 1 1 0-64zm0 192h64a32 32 0 1 1 0 64h-64a32 32 0 1 1 0-64z"},null,-1),uM=[sM];function cM(e,t,n,r,a,l){return K(),F("svg",iM,uM)}var dM=Yt(oM,[["render",cM],["__file","calendar.vue"]]),fM={name:"CaretRight"},pM={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},vM=z("path",{fill:"currentColor",d:"M384 192v640l384-320.064z"},null,-1),bM=[vM];function hM(e,t,n,r,a,l){return K(),F("svg",pM,bM)}var Fk=Yt(fM,[["render",hM],["__file","caret-right.vue"]]),mM={name:"CaretTop"},SM={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},yM=z("path",{fill:"currentColor",d:"M512 320 192 704h639.936z"},null,-1),AM=[yM];function WM(e,t,n,r,a,l){return K(),F("svg",SM,AM)}var kM=Yt(mM,[["render",WM],["__file","caret-top.vue"]]),VM={name:"Check"},PM={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},TM=z("path",{fill:"currentColor",d:"M406.656 706.944 195.84 496.256a32 32 0 1 0-45.248 45.248l256 256 512-512a32 32 0 0 0-45.248-45.248L406.592 706.944z"},null,-1),KM=[TM];function NM(e,t,n,r,a,l){return K(),F("svg",PM,KM)}var hd=Yt(VM,[["render",NM],["__file","check.vue"]]),xM={name:"CircleCheckFilled"},XM={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},gM=z("path",{fill:"currentColor",d:"M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm-55.808 536.384-99.52-99.584a38.4 38.4 0 1 0-54.336 54.336l126.72 126.72a38.272 38.272 0 0 0 54.336 0l262.4-262.464a38.4 38.4 0 1 0-54.272-54.336L456.192 600.384z"},null,-1),wM=[gM];function jM(e,t,n,r,a,l){return K(),F("svg",XM,wM)}var LM=Yt(xM,[["render",jM],["__file","circle-check-filled.vue"]]),qM={name:"CircleCheck"},UM={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},OM=z("path",{fill:"currentColor",d:"M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768zm0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896z"},null,-1),RM=z("path",{fill:"currentColor",d:"M745.344 361.344a32 32 0 0 1 45.312 45.312l-288 288a32 32 0 0 1-45.312 0l-160-160a32 32 0 1 1 45.312-45.312L480 626.752l265.344-265.408z"},null,-1),JM=[OM,RM];function FM(e,t,n,r,a,l){return K(),F("svg",UM,JM)}var Rm=Yt(qM,[["render",FM],["__file","circle-check.vue"]]),zM={name:"CircleCloseFilled"},HM={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},ZM=z("path",{fill:"currentColor",d:"M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm0 393.664L407.936 353.6a38.4 38.4 0 1 0-54.336 54.336L457.664 512 353.6 616.064a38.4 38.4 0 1 0 54.336 54.336L512 566.336 616.064 670.4a38.4 38.4 0 1 0 54.336-54.336L566.336 512 670.4 407.936a38.4 38.4 0 1 0-54.336-54.336L512 457.664z"},null,-1),GM=[ZM];function CM(e,t,n,r,a,l){return K(),F("svg",HM,GM)}var Jm=Yt(zM,[["render",CM],["__file","circle-close-filled.vue"]]),MM={name:"CircleClose"},DM={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},EM=z("path",{fill:"currentColor",d:"m466.752 512-90.496-90.496a32 32 0 0 1 45.248-45.248L512 466.752l90.496-90.496a32 32 0 1 1 45.248 45.248L557.248 512l90.496 90.496a32 32 0 1 1-45.248 45.248L512 557.248l-90.496 90.496a32 32 0 0 1-45.248-45.248L466.752 512z"},null,-1),IM=z("path",{fill:"currentColor",d:"M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768zm0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896z"},null,-1),BM=[EM,IM];function YM(e,t,n,r,a,l){return K(),F("svg",DM,BM)}var qo=Yt(MM,[["render",YM],["__file","circle-close.vue"]]),QM={name:"Clock"},_M={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},$M=z("path",{fill:"currentColor",d:"M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768zm0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896z"},null,-1),eD=z("path",{fill:"currentColor",d:"M480 256a32 32 0 0 1 32 32v256a32 32 0 0 1-64 0V288a32 32 0 0 1 32-32z"},null,-1),tD=z("path",{fill:"currentColor",d:"M480 512h256q32 0 32 32t-32 32H480q-32 0-32-32t32-32z"},null,-1),nD=[$M,eD,tD];function rD(e,t,n,r,a,l){return K(),F("svg",_M,nD)}var zk=Yt(QM,[["render",rD],["__file","clock.vue"]]),aD={name:"Close"},lD={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},oD=z("path",{fill:"currentColor",d:"M764.288 214.592 512 466.88 259.712 214.592a31.936 31.936 0 0 0-45.12 45.12L466.752 512 214.528 764.224a31.936 31.936 0 1 0 45.12 45.184L512 557.184l252.288 252.288a31.936 31.936 0 0 0 45.12-45.12L557.12 512.064l252.288-252.352a31.936 31.936 0 1 0-45.12-45.184z"},null,-1),iD=[oD];function sD(e,t,n,r,a,l){return K(),F("svg",lD,iD)}var ma=Yt(aD,[["render",sD],["__file","close.vue"]]),uD={name:"DArrowLeft"},cD={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},dD=z("path",{fill:"currentColor",d:"M529.408 149.376a29.12 29.12 0 0 1 41.728 0 30.592 30.592 0 0 1 0 42.688L259.264 511.936l311.872 319.936a30.592 30.592 0 0 1-.512 43.264 29.12 29.12 0 0 1-41.216-.512L197.76 534.272a32 32 0 0 1 0-44.672l331.648-340.224zm256 0a29.12 29.12 0 0 1 41.728 0 30.592 30.592 0 0 1 0 42.688L515.264 511.936l311.872 319.936a30.592 30.592 0 0 1-.512 43.264 29.12 29.12 0 0 1-41.216-.512L453.76 534.272a32 32 0 0 1 0-44.672l331.648-340.224z"},null,-1),fD=[dD];function pD(e,t,n,r,a,l){return K(),F("svg",cD,fD)}var zs=Yt(uD,[["render",pD],["__file","d-arrow-left.vue"]]),vD={name:"DArrowRight"},bD={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},hD=z("path",{fill:"currentColor",d:"M452.864 149.312a29.12 29.12 0 0 1 41.728.064L826.24 489.664a32 32 0 0 1 0 44.672L494.592 874.624a29.12 29.12 0 0 1-41.728 0 30.592 30.592 0 0 1 0-42.752L764.736 512 452.864 192a30.592 30.592 0 0 1 0-42.688zm-256 0a29.12 29.12 0 0 1 41.728.064L570.24 489.664a32 32 0 0 1 0 44.672L238.592 874.624a29.12 29.12 0 0 1-41.728 0 30.592 30.592 0 0 1 0-42.752L508.736 512 196.864 192a30.592 30.592 0 0 1 0-42.688z"},null,-1),mD=[hD];function SD(e,t,n,r,a,l){return K(),F("svg",bD,mD)}var Hs=Yt(vD,[["render",SD],["__file","d-arrow-right.vue"]]),yD={name:"Delete"},AD={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},WD=z("path",{fill:"currentColor",d:"M160 256H96a32 32 0 0 1 0-64h256V95.936a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32V192h256a32 32 0 1 1 0 64h-64v672a32 32 0 0 1-32 32H192a32 32 0 0 1-32-32V256zm448-64v-64H416v64h192zM224 896h576V256H224v640zm192-128a32 32 0 0 1-32-32V416a32 32 0 0 1 64 0v320a32 32 0 0 1-32 32zm192 0a32 32 0 0 1-32-32V416a32 32 0 0 1 64 0v320a32 32 0 0 1-32 32z"},null,-1),kD=[WD];function VD(e,t,n,r,a,l){return K(),F("svg",AD,kD)}var Hk=Yt(yD,[["render",VD],["__file","delete.vue"]]),PD={name:"Document"},TD={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},KD=z("path",{fill:"currentColor",d:"M832 384H576V128H192v768h640V384zm-26.496-64L640 154.496V320h165.504zM160 64h480l256 256v608a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32zm160 448h384v64H320v-64zm0-192h160v64H320v-64zm0 384h384v64H320v-64z"},null,-1),ND=[KD];function xD(e,t,n,r,a,l){return K(),F("svg",TD,ND)}var XD=Yt(PD,[["render",xD],["__file","document.vue"]]),gD={name:"Download"},wD={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},jD=z("path",{fill:"currentColor",d:"M160 832h704a32 32 0 1 1 0 64H160a32 32 0 1 1 0-64zm384-253.696 236.288-236.352 45.248 45.248L508.8 704 192 387.2l45.248-45.248L480 584.704V128h64v450.304z"},null,-1),LD=[jD];function qD(e,t,n,r,a,l){return K(),F("svg",wD,LD)}var UD=Yt(gD,[["render",qD],["__file","download.vue"]]),OD={name:"FullScreen"},RD={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},JD=z("path",{fill:"currentColor",d:"m160 96.064 192 .192a32 32 0 0 1 0 64l-192-.192V352a32 32 0 0 1-64 0V96h64v.064zm0 831.872V928H96V672a32 32 0 1 1 64 0v191.936l192-.192a32 32 0 1 1 0 64l-192 .192zM864 96.064V96h64v256a32 32 0 1 1-64 0V160.064l-192 .192a32 32 0 1 1 0-64l192-.192zm0 831.872-192-.192a32 32 0 0 1 0-64l192 .192V672a32 32 0 1 1 64 0v256h-64v-.064z"},null,-1),FD=[JD];function zD(e,t,n,r,a,l){return K(),F("svg",RD,FD)}var Zk=Yt(OD,[["render",zD],["__file","full-screen.vue"]]),HD={name:"Grid"},ZD={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},GD=z("path",{fill:"currentColor",d:"M640 384v256H384V384h256zm64 0h192v256H704V384zm-64 512H384V704h256v192zm64 0V704h192v192H704zm-64-768v192H384V128h256zm64 0h192v192H704V128zM320 384v256H128V384h192zm0 512H128V704h192v192zm0-768v192H128V128h192z"},null,-1),CD=[GD];function MD(e,t,n,r,a,l){return K(),F("svg",ZD,CD)}var DD=Yt(HD,[["render",MD],["__file","grid.vue"]]),ED={name:"Hide"},ID={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},BD=z("path",{fill:"currentColor",d:"M876.8 156.8c0-9.6-3.2-16-9.6-22.4-6.4-6.4-12.8-9.6-22.4-9.6-9.6 0-16 3.2-22.4 9.6L736 220.8c-64-32-137.6-51.2-224-60.8-160 16-288 73.6-377.6 176C44.8 438.4 0 496 0 512s48 73.6 134.4 176c22.4 25.6 44.8 48 73.6 67.2l-86.4 89.6c-6.4 6.4-9.6 12.8-9.6 22.4 0 9.6 3.2 16 9.6 22.4 6.4 6.4 12.8 9.6 22.4 9.6 9.6 0 16-3.2 22.4-9.6l704-710.4c3.2-6.4 6.4-12.8 6.4-22.4Zm-646.4 528c-76.8-70.4-128-128-153.6-172.8 28.8-48 80-105.6 153.6-172.8C304 272 400 230.4 512 224c64 3.2 124.8 19.2 176 44.8l-54.4 54.4C598.4 300.8 560 288 512 288c-64 0-115.2 22.4-160 64s-64 96-64 160c0 48 12.8 89.6 35.2 124.8L256 707.2c-9.6-6.4-19.2-16-25.6-22.4Zm140.8-96c-12.8-22.4-19.2-48-19.2-76.8 0-44.8 16-83.2 48-112 32-28.8 67.2-48 112-48 28.8 0 54.4 6.4 73.6 19.2L371.2 588.8ZM889.599 336c-12.8-16-28.8-28.8-41.6-41.6l-48 48c73.6 67.2 124.8 124.8 150.4 169.6-28.8 48-80 105.6-153.6 172.8-73.6 67.2-172.8 108.8-284.8 115.2-51.2-3.2-99.2-12.8-140.8-28.8l-48 48c57.6 22.4 118.4 38.4 188.8 44.8 160-16 288-73.6 377.6-176C979.199 585.6 1024 528 1024 512s-48.001-73.6-134.401-176Z"},null,-1),YD=z("path",{fill:"currentColor",d:"M511.998 672c-12.8 0-25.6-3.2-38.4-6.4l-51.2 51.2c28.8 12.8 57.6 19.2 89.6 19.2 64 0 115.2-22.4 160-64 41.6-41.6 64-96 64-160 0-32-6.4-64-19.2-89.6l-51.2 51.2c3.2 12.8 6.4 25.6 6.4 38.4 0 44.8-16 83.2-48 112-32 28.8-67.2 48-112 48Z"},null,-1),QD=[BD,YD];function _D(e,t,n,r,a,l){return K(),F("svg",ID,QD)}var $D=Yt(ED,[["render",_D],["__file","hide.vue"]]),eE={name:"InfoFilled"},tE={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},nE=z("path",{fill:"currentColor",d:"M512 64a448 448 0 1 1 0 896.064A448 448 0 0 1 512 64zm67.2 275.072c33.28 0 60.288-23.104 60.288-57.344s-27.072-57.344-60.288-57.344c-33.28 0-60.16 23.104-60.16 57.344s26.88 57.344 60.16 57.344zM590.912 699.2c0-6.848 2.368-24.64 1.024-34.752l-52.608 60.544c-10.88 11.456-24.512 19.392-30.912 17.28a12.992 12.992 0 0 1-8.256-14.72l87.68-276.992c7.168-35.136-12.544-67.2-54.336-71.296-44.096 0-108.992 44.736-148.48 101.504 0 6.784-1.28 23.68.064 33.792l52.544-60.608c10.88-11.328 23.552-19.328 29.952-17.152a12.8 12.8 0 0 1 7.808 16.128L388.48 728.576c-10.048 32.256 8.96 63.872 55.04 71.04 67.84 0 107.904-43.648 147.456-100.416z"},null,-1),rE=[nE];function aE(e,t,n,r,a,l){return K(),F("svg",tE,rE)}var Fm=Yt(eE,[["render",aE],["__file","info-filled.vue"]]),lE={name:"Loading"},oE={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},iE=z("path",{fill:"currentColor",d:"M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32zm0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32zm448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32zm-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32zM195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0zm-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"},null,-1),sE=[iE];function uE(e,t,n,r,a,l){return K(),F("svg",oE,sE)}var Uo=Yt(lE,[["render",uE],["__file","loading.vue"]]),cE={name:"Minus"},dE={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},fE=z("path",{fill:"currentColor",d:"M128 544h768a32 32 0 1 0 0-64H128a32 32 0 0 0 0 64z"},null,-1),pE=[fE];function vE(e,t,n,r,a,l){return K(),F("svg",dE,pE)}var Gk=Yt(cE,[["render",vE],["__file","minus.vue"]]),bE={name:"MoreFilled"},hE={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},mE=z("path",{fill:"currentColor",d:"M176 416a112 112 0 1 1 0 224 112 112 0 0 1 0-224zm336 0a112 112 0 1 1 0 224 112 112 0 0 1 0-224zm336 0a112 112 0 1 1 0 224 112 112 0 0 1 0-224z"},null,-1),SE=[mE];function yE(e,t,n,r,a,l){return K(),F("svg",hE,SE)}var L3=Yt(bE,[["render",yE],["__file","more-filled.vue"]]),AE={name:"More"},WE={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},kE=z("path",{fill:"currentColor",d:"M176 416a112 112 0 1 0 0 224 112 112 0 0 0 0-224m0 64a48 48 0 1 1 0 96 48 48 0 0 1 0-96zm336-64a112 112 0 1 1 0 224 112 112 0 0 1 0-224zm0 64a48 48 0 1 0 0 96 48 48 0 0 0 0-96zm336-64a112 112 0 1 1 0 224 112 112 0 0 1 0-224zm0 64a48 48 0 1 0 0 96 48 48 0 0 0 0-96z"},null,-1),VE=[kE];function PE(e,t,n,r,a,l){return K(),F("svg",WE,VE)}var TE=Yt(AE,[["render",PE],["__file","more.vue"]]),KE={name:"Operation"},NE={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},xE=z("path",{fill:"currentColor",d:"M389.44 768a96.064 96.064 0 0 1 181.12 0H896v64H570.56a96.064 96.064 0 0 1-181.12 0H128v-64h261.44zm192-288a96.064 96.064 0 0 1 181.12 0H896v64H762.56a96.064 96.064 0 0 1-181.12 0H128v-64h453.44zm-320-288a96.064 96.064 0 0 1 181.12 0H896v64H442.56a96.064 96.064 0 0 1-181.12 0H128v-64h133.44z"},null,-1),XE=[xE];function gE(e,t,n,r,a,l){return K(),F("svg",NE,XE)}var wE=Yt(KE,[["render",gE],["__file","operation.vue"]]),jE={name:"PictureFilled"},LE={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},qE=z("path",{fill:"currentColor",d:"M96 896a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32h832a32 32 0 0 1 32 32v704a32 32 0 0 1-32 32H96zm315.52-228.48-68.928-68.928a32 32 0 0 0-45.248 0L128 768.064h778.688l-242.112-290.56a32 32 0 0 0-49.216 0L458.752 665.408a32 32 0 0 1-47.232 2.112zM256 384a96 96 0 1 0 192.064-.064A96 96 0 0 0 256 384z"},null,-1),UE=[qE];function OE(e,t,n,r,a,l){return K(),F("svg",LE,UE)}var RE=Yt(jE,[["render",OE],["__file","picture-filled.vue"]]),JE={name:"Picture"},FE={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},zE=z("path",{fill:"currentColor",d:"M160 160v704h704V160H160zm-32-64h768a32 32 0 0 1 32 32v768a32 32 0 0 1-32 32H128a32 32 0 0 1-32-32V128a32 32 0 0 1 32-32z"},null,-1),HE=z("path",{fill:"currentColor",d:"M384 288q64 0 64 64t-64 64q-64 0-64-64t64-64zM185.408 876.992l-50.816-38.912L350.72 556.032a96 96 0 0 1 134.592-17.856l1.856 1.472 122.88 99.136a32 32 0 0 0 44.992-4.864l216-269.888 49.92 39.936-215.808 269.824-.256.32a96 96 0 0 1-135.04 14.464l-122.88-99.072-.64-.512a32 32 0 0 0-44.8 5.952L185.408 876.992z"},null,-1),ZE=[zE,HE];function GE(e,t,n,r,a,l){return K(),F("svg",FE,ZE)}var CE=Yt(JE,[["render",GE],["__file","picture.vue"]]),ME={name:"Plus"},DE={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},EE=z("path",{fill:"currentColor",d:"M480 480V128a32 32 0 0 1 64 0v352h352a32 32 0 1 1 0 64H544v352a32 32 0 1 1-64 0V544H128a32 32 0 0 1 0-64h352z"},null,-1),IE=[EE];function BE(e,t,n,r,a,l){return K(),F("svg",DE,IE)}var zm=Yt(ME,[["render",BE],["__file","plus.vue"]]),YE={name:"QuestionFilled"},QE={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},_E=z("path",{fill:"currentColor",d:"M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm23.744 191.488c-52.096 0-92.928 14.784-123.2 44.352-30.976 29.568-45.76 70.4-45.76 122.496h80.256c0-29.568 5.632-52.8 17.6-68.992 13.376-19.712 35.2-28.864 66.176-28.864 23.936 0 42.944 6.336 56.32 19.712 12.672 13.376 19.712 31.68 19.712 54.912 0 17.6-6.336 34.496-19.008 49.984l-8.448 9.856c-45.76 40.832-73.216 70.4-82.368 89.408-9.856 19.008-14.08 42.24-14.08 68.992v9.856h80.96v-9.856c0-16.896 3.52-31.68 10.56-45.76 6.336-12.672 15.488-24.64 28.16-35.2 33.792-29.568 54.208-48.576 60.544-55.616 16.896-22.528 26.048-51.392 26.048-86.592 0-42.944-14.08-76.736-42.24-101.376-28.16-25.344-65.472-37.312-111.232-37.312zm-12.672 406.208a54.272 54.272 0 0 0-38.72 14.784 49.408 49.408 0 0 0-15.488 38.016c0 15.488 4.928 28.16 15.488 38.016A54.848 54.848 0 0 0 523.072 768c15.488 0 28.16-4.928 38.72-14.784a51.52 51.52 0 0 0 16.192-38.72 51.968 51.968 0 0 0-15.488-38.016 55.936 55.936 0 0 0-39.424-14.784z"},null,-1),$E=[_E];function eI(e,t,n,r,a,l){return K(),F("svg",QE,$E)}var tI=Yt(YE,[["render",eI],["__file","question-filled.vue"]]),nI={name:"Reading"},rI={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},aI=z("path",{fill:"currentColor",d:"m512 863.36 384-54.848v-638.72L525.568 222.72a96 96 0 0 1-27.136 0L128 169.792v638.72l384 54.848zM137.024 106.432l370.432 52.928a32 32 0 0 0 9.088 0l370.432-52.928A64 64 0 0 1 960 169.792v638.72a64 64 0 0 1-54.976 63.36l-388.48 55.488a32 32 0 0 1-9.088 0l-388.48-55.488A64 64 0 0 1 64 808.512v-638.72a64 64 0 0 1 73.024-63.36z"},null,-1),lI=z("path",{fill:"currentColor",d:"M480 192h64v704h-64z"},null,-1),oI=[aI,lI];function iI(e,t,n,r,a,l){return K(),F("svg",rI,oI)}var sI=Yt(nI,[["render",iI],["__file","reading.vue"]]),uI={name:"RefreshLeft"},cI={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},dI=z("path",{fill:"currentColor",d:"M289.088 296.704h92.992a32 32 0 0 1 0 64H232.96a32 32 0 0 1-32-32V179.712a32 32 0 0 1 64 0v50.56a384 384 0 0 1 643.84 282.88 384 384 0 0 1-383.936 384 384 384 0 0 1-384-384h64a320 320 0 1 0 640 0 320 320 0 0 0-555.712-216.448z"},null,-1),fI=[dI];function pI(e,t,n,r,a,l){return K(),F("svg",cI,fI)}var vI=Yt(uI,[["render",pI],["__file","refresh-left.vue"]]),bI={name:"RefreshRight"},hI={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},mI=z("path",{fill:"currentColor",d:"M784.512 230.272v-50.56a32 32 0 1 1 64 0v149.056a32 32 0 0 1-32 32H667.52a32 32 0 1 1 0-64h92.992A320 320 0 1 0 524.8 833.152a320 320 0 0 0 320-320h64a384 384 0 0 1-384 384 384 384 0 0 1-384-384 384 384 0 0 1 643.712-282.88z"},null,-1),SI=[mI];function yI(e,t,n,r,a,l){return K(),F("svg",hI,SI)}var AI=Yt(bI,[["render",yI],["__file","refresh-right.vue"]]),WI={name:"ScaleToOriginal"},kI={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},VI=z("path",{fill:"currentColor",d:"M813.176 180.706a60.235 60.235 0 0 1 60.236 60.235v481.883a60.235 60.235 0 0 1-60.236 60.235H210.824a60.235 60.235 0 0 1-60.236-60.235V240.94a60.235 60.235 0 0 1 60.236-60.235h602.352zm0-60.235H210.824A120.47 120.47 0 0 0 90.353 240.94v481.883a120.47 120.47 0 0 0 120.47 120.47h602.353a120.47 120.47 0 0 0 120.471-120.47V240.94a120.47 120.47 0 0 0-120.47-120.47zm-120.47 180.705a30.118 30.118 0 0 0-30.118 30.118v301.177a30.118 30.118 0 0 0 60.236 0V331.294a30.118 30.118 0 0 0-30.118-30.118zm-361.412 0a30.118 30.118 0 0 0-30.118 30.118v301.177a30.118 30.118 0 1 0 60.236 0V331.294a30.118 30.118 0 0 0-30.118-30.118zM512 361.412a30.118 30.118 0 0 0-30.118 30.117v30.118a30.118 30.118 0 0 0 60.236 0V391.53A30.118 30.118 0 0 0 512 361.412zM512 512a30.118 30.118 0 0 0-30.118 30.118v30.117a30.118 30.118 0 0 0 60.236 0v-30.117A30.118 30.118 0 0 0 512 512z"},null,-1),PI=[VI];function TI(e,t,n,r,a,l){return K(),F("svg",kI,PI)}var KI=Yt(WI,[["render",TI],["__file","scale-to-original.vue"]]),NI={name:"Search"},xI={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},XI=z("path",{fill:"currentColor",d:"m795.904 750.72 124.992 124.928a32 32 0 0 1-45.248 45.248L750.656 795.904a416 416 0 1 1 45.248-45.248zM480 832a352 352 0 1 0 0-704 352 352 0 0 0 0 704z"},null,-1),gI=[XI];function wI(e,t,n,r,a,l){return K(),F("svg",xI,gI)}var Ck=Yt(NI,[["render",wI],["__file","search.vue"]]),jI={name:"SortDown"},LI={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},qI=z("path",{fill:"currentColor",d:"M576 96v709.568L333.312 562.816A32 32 0 1 0 288 608l297.408 297.344A32 32 0 0 0 640 882.688V96a32 32 0 0 0-64 0z"},null,-1),UI=[qI];function OI(e,t,n,r,a,l){return K(),F("svg",LI,UI)}var RI=Yt(jI,[["render",OI],["__file","sort-down.vue"]]),JI={name:"SortUp"},FI={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},zI=z("path",{fill:"currentColor",d:"M384 141.248V928a32 32 0 1 0 64 0V218.56l242.688 242.688A32 32 0 1 0 736 416L438.592 118.656A32 32 0 0 0 384 141.248z"},null,-1),HI=[zI];function ZI(e,t,n,r,a,l){return K(),F("svg",FI,HI)}var GI=Yt(JI,[["render",ZI],["__file","sort-up.vue"]]),CI={name:"StarFilled"},MI={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},DI=z("path",{fill:"currentColor",d:"M283.84 867.84 512 747.776l228.16 119.936a6.4 6.4 0 0 0 9.28-6.72l-43.52-254.08 184.512-179.904a6.4 6.4 0 0 0-3.52-10.88l-255.104-37.12L517.76 147.904a6.4 6.4 0 0 0-11.52 0L392.192 379.072l-255.104 37.12a6.4 6.4 0 0 0-3.52 10.88L318.08 606.976l-43.584 254.08a6.4 6.4 0 0 0 9.28 6.72z"},null,-1),EI=[DI];function II(e,t,n,r,a,l){return K(),F("svg",MI,EI)}var Ed=Yt(CI,[["render",II],["__file","star-filled.vue"]]),BI={name:"Star"},YI={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},QI=z("path",{fill:"currentColor",d:"m512 747.84 228.16 119.936a6.4 6.4 0 0 0 9.28-6.72l-43.52-254.08 184.512-179.904a6.4 6.4 0 0 0-3.52-10.88l-255.104-37.12L517.76 147.904a6.4 6.4 0 0 0-11.52 0L392.192 379.072l-255.104 37.12a6.4 6.4 0 0 0-3.52 10.88L318.08 606.976l-43.584 254.08a6.4 6.4 0 0 0 9.28 6.72L512 747.84zM313.6 924.48a70.4 70.4 0 0 1-102.144-74.24l37.888-220.928L88.96 472.96A70.4 70.4 0 0 1 128 352.896l221.76-32.256 99.2-200.96a70.4 70.4 0 0 1 126.208 0l99.2 200.96 221.824 32.256a70.4 70.4 0 0 1 39.04 120.064L774.72 629.376l37.888 220.928a70.4 70.4 0 0 1-102.144 74.24L512 820.096l-198.4 104.32z"},null,-1),_I=[QI];function $I(e,t,n,r,a,l){return K(),F("svg",YI,_I)}var eB=Yt(BI,[["render",$I],["__file","star.vue"]]),tB={name:"SuccessFilled"},nB={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},rB=z("path",{fill:"currentColor",d:"M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm-55.808 536.384-99.52-99.584a38.4 38.4 0 1 0-54.336 54.336l126.72 126.72a38.272 38.272 0 0 0 54.336 0l262.4-262.464a38.4 38.4 0 1 0-54.272-54.336L456.192 600.384z"},null,-1),aB=[rB];function lB(e,t,n,r,a,l){return K(),F("svg",nB,aB)}var Mk=Yt(tB,[["render",lB],["__file","success-filled.vue"]]),oB={name:"View"},iB={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},sB=z("path",{fill:"currentColor",d:"M512 160c320 0 512 352 512 352S832 864 512 864 0 512 0 512s192-352 512-352zm0 64c-225.28 0-384.128 208.064-436.8 288 52.608 79.872 211.456 288 436.8 288 225.28 0 384.128-208.064 436.8-288-52.608-79.872-211.456-288-436.8-288zm0 64a224 224 0 1 1 0 448 224 224 0 0 1 0-448zm0 64a160.192 160.192 0 0 0-160 160c0 88.192 71.744 160 160 160s160-71.808 160-160-71.744-160-160-160z"},null,-1),uB=[sB];function cB(e,t,n,r,a,l){return K(),F("svg",iB,uB)}var dB=Yt(oB,[["render",cB],["__file","view.vue"]]),fB={name:"WarningFilled"},pB={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},vB=z("path",{fill:"currentColor",d:"M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm0 192a58.432 58.432 0 0 0-58.24 63.744l23.36 256.384a35.072 35.072 0 0 0 69.76 0l23.296-256.384A58.432 58.432 0 0 0 512 256zm0 512a51.2 51.2 0 1 0 0-102.4 51.2 51.2 0 0 0 0 102.4z"},null,-1),bB=[vB];function hB(e,t,n,r,a,l){return K(),F("svg",pB,bB)}var Ov=Yt(fB,[["render",hB],["__file","warning-filled.vue"]]),mB={name:"ZoomIn"},SB={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},yB=z("path",{fill:"currentColor",d:"m795.904 750.72 124.992 124.928a32 32 0 0 1-45.248 45.248L750.656 795.904a416 416 0 1 1 45.248-45.248zM480 832a352 352 0 1 0 0-704 352 352 0 0 0 0 704zm-32-384v-96a32 32 0 0 1 64 0v96h96a32 32 0 0 1 0 64h-96v96a32 32 0 0 1-64 0v-96h-96a32 32 0 0 1 0-64h96z"},null,-1),AB=[yB];function WB(e,t,n,r,a,l){return K(),F("svg",SB,AB)}var Dk=Yt(mB,[["render",WB],["__file","zoom-in.vue"]]),kB={name:"ZoomOut"},VB={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024"},PB=z("path",{fill:"currentColor",d:"m795.904 750.72 124.992 124.928a32 32 0 0 1-45.248 45.248L750.656 795.904a416 416 0 1 1 45.248-45.248zM480 832a352 352 0 1 0 0-704 352 352 0 0 0 0 704zM352 448h256a32 32 0 0 1 0 64H352a32 32 0 0 1 0-64z"},null,-1),TB=[PB];function KB(e,t,n,r,a,l){return K(),F("svg",VB,TB)}var NB=Yt(kB,[["render",KB],["__file","zoom-out.vue"]]);const Ek="__epPropKey",ve=e=>e,xB=e=>Jt(e)&&!!e[Ek],Fa=(e,t)=>{if(!Jt(e)||xB(e))return e;const{values:n,required:r,default:a,type:l,validator:o}=e,s={type:l,required:!!r,validator:n||o?u=>{let d=!1,f=[];if(n&&(f=Array.from(n),Zt(e,"default")&&f.push(a),d||(d=f.includes(u))),o&&(d||(d=o(u))),!d&&f.length>0){const p=[...new Set(f)].map(b=>JSON.stringify(b)).join(", ");i7(`Invalid prop: validation failed${t?` for prop "${t}"`:""}. Expected one of [${p}], got value ${JSON.stringify(u)}.`)}return d}:void 0,[Ek]:!0};return Zt(e,"default")&&(s.default=a),s},Ie=e=>Kp(Object.entries(e).map(([t,n])=>[t,Fa(n,t)])),un=ve([String,Object,Function]),Ik={Close:ma},Hm={Close:ma,SuccessFilled:Mk,InfoFilled:Fm,WarningFilled:Ov,CircleCloseFilled:Jm},ko={success:Mk,warning:Ov,error:Jm,info:Fm},Zm={validating:Uo,success:Rm,error:qo},qt=(e,t)=>{if(e.install=n=>{for(const r of[e,...Object.values(t!=null?t:{})])n.component(r.name,r)},t)for(const[n,r]of Object.entries(t))e[n]=r;return e},Bk=(e,t)=>(e.install=n=>{e._context=n._context,n.config.globalProperties[t]=e},e),XB=(e,t)=>(e.install=n=>{n.directive(t,e)},e),Nn=e=>(e.install=en,e),Rv=(...e)=>t=>{e.forEach(n=>{ht(n)?n(t):n.value=t})},ut={tab:"Tab",enter:"Enter",space:"Space",left:"ArrowLeft",up:"ArrowUp",right:"ArrowRight",down:"ArrowDown",esc:"Escape",delete:"Delete",backspace:"Backspace",numpadEnter:"NumpadEnter",pageUp:"PageUp",pageDown:"PageDown",home:"Home",end:"End"},gB=["year","month","date","dates","week","datetime","datetimerange","daterange","monthrange"],Ub=["sun","mon","tue","wed","thu","fri","sat"],Rt="update:modelValue",mn="change",Pr="input",q3=Symbol("INSTALLED_KEY"),sl=["","default","small","large"],wB={large:40,default:32,small:24},jB=e=>wB[e||"default"],Jv=e=>["",...sl].includes(e);var ca=(e=>(e[e.TEXT=1]="TEXT",e[e.CLASS=2]="CLASS",e[e.STYLE=4]="STYLE",e[e.PROPS=8]="PROPS",e[e.FULL_PROPS=16]="FULL_PROPS",e[e.HYDRATE_EVENTS=32]="HYDRATE_EVENTS",e[e.STABLE_FRAGMENT=64]="STABLE_FRAGMENT",e[e.KEYED_FRAGMENT=128]="KEYED_FRAGMENT",e[e.UNKEYED_FRAGMENT=256]="UNKEYED_FRAGMENT",e[e.NEED_PATCH=512]="NEED_PATCH",e[e.DYNAMIC_SLOTS=1024]="DYNAMIC_SLOTS",e[e.HOISTED=-1]="HOISTED",e[e.BAIL=-2]="BAIL",e))(ca||{});function B1(e){return cn(e)&&e.type===Qe}function LB(e){return cn(e)&&e.type===Qn}function qB(e){return cn(e)&&!B1(e)&&!LB(e)}const UB=e=>{if(!cn(e))return{};const t=e.props||{},n=(cn(e.type)?e.type.props:void 0)||{},r={};return Object.keys(n).forEach(a=>{Zt(n[a],"default")&&(r[a]=n[a].default)}),Object.keys(t).forEach(a=>{r[Tr(a)]=t[a]}),r},OB=e=>{if(!et(e)||e.length>1)throw new Error("expect to receive a single Vue element child");return e[0]},ui=e=>{const t=et(e)?e:[e],n=[];return t.forEach(r=>{var a;et(r)?n.push(...ui(r)):cn(r)&&et(r.children)?n.push(...ui(r.children)):(n.push(r),cn(r)&&((a=r.component)==null?void 0:a.subTree)&&n.push(...ui(r.component.subTree)))}),n},U3=e=>[...new Set(e)],Kl=e=>!e&&e!==0?[]:Array.isArray(e)?e:[e],Fv=e=>/([\uAC00-\uD7AF\u3130-\u318F])+/gi.test(e),Zs=e=>Mt?window.requestAnimationFrame(e):setTimeout(e,16),zv=e=>Mt?window.cancelAnimationFrame(e):clearTimeout(e),Hv=()=>Math.floor(Math.random()*1e4),An=e=>e,RB=["class","style"],JB=/^on[A-Z]/,Gm=(e={})=>{const{excludeListeners:t=!1,excludeKeys:n}=e,r=X(()=>((n==null?void 0:n.value)||[]).concat(RB)),a=Tt();return X(a?()=>{var l;return Kp(Object.entries((l=a.proxy)==null?void 0:l.$attrs).filter(([o])=>!r.value.includes(o)&&!(t&&JB.test(o))))}:()=>({}))},rl=({from:e,replacement:t,scope:n,version:r,ref:a,type:l="API"},o)=>{Ve(()=>c(o),i=>{},{immediate:!0})},Yk=(e,t,n)=>{let r={offsetX:0,offsetY:0};const a=i=>{const s=i.clientX,u=i.clientY,{offsetX:d,offsetY:f}=r,p=e.value.getBoundingClientRect(),b=p.left,A=p.top,h=p.width,m=p.height,v=document.documentElement.clientWidth,S=document.documentElement.clientHeight,y=-b+d,W=-A+f,k=v-b-h+d,V=S-A-m+f,T=x=>{const g=Math.min(Math.max(d+x.clientX-s,y),k),j=Math.min(Math.max(f+x.clientY-u,W),V);r={offsetX:g,offsetY:j},e.value.style.transform=`translate(${Ln(g)}, ${Ln(j)})`},P=()=>{document.removeEventListener("mousemove",T),document.removeEventListener("mouseup",P)};document.addEventListener("mousemove",T),document.addEventListener("mouseup",P)},l=()=>{t.value&&e.value&&t.value.addEventListener("mousedown",a)},o=()=>{t.value&&e.value&&t.value.removeEventListener("mousedown",a)};At(()=>{Dn(()=>{n.value?l():o()})}),tn(()=>{o()})};var FB={name:"en",el:{colorpicker:{confirm:"OK",clear:"Clear",defaultLabel:"color picker",description:"current color is {color}. press enter to select a new color."},datepicker:{now:"Now",today:"Today",cancel:"Cancel",clear:"Clear",confirm:"OK",dateTablePrompt:"Use the arrow keys and enter to select the day of the month",monthTablePrompt:"Use the arrow keys and enter to select the month",yearTablePrompt:"Use the arrow keys and enter to select the year",selectedDate:"Selected date",selectDate:"Select date",selectTime:"Select time",startDate:"Start Date",startTime:"Start Time",endDate:"End Date",endTime:"End Time",prevYear:"Previous Year",nextYear:"Next Year",prevMonth:"Previous Month",nextMonth:"Next Month",year:"",month1:"January",month2:"February",month3:"March",month4:"April",month5:"May",month6:"June",month7:"July",month8:"August",month9:"September",month10:"October",month11:"November",month12:"December",week:"week",weeks:{sun:"Sun",mon:"Mon",tue:"Tue",wed:"Wed",thu:"Thu",fri:"Fri",sat:"Sat"},weeksFull:{sun:"Sunday",mon:"Monday",tue:"Tuesday",wed:"Wednesday",thu:"Thursday",fri:"Friday",sat:"Saturday"},months:{jan:"Jan",feb:"Feb",mar:"Mar",apr:"Apr",may:"May",jun:"Jun",jul:"Jul",aug:"Aug",sep:"Sep",oct:"Oct",nov:"Nov",dec:"Dec"}},inputNumber:{decrease:"decrease number",increase:"increase number"},select:{loading:"Loading",noMatch:"No matching data",noData:"No data",placeholder:"Select"},dropdown:{toggleDropdown:"Toggle Dropdown"},cascader:{noMatch:"No matching data",loading:"Loading",placeholder:"Select",noData:"No data"},pagination:{goto:"Go to",pagesize:"/page",total:"Total {total}",pageClassifier:"",page:"Page",prev:"Go to previous page",next:"Go to next page",currentPage:"page {pager}",prevPages:"Previous {pager} pages",nextPages:"Next {pager} pages",deprecationWarning:"Deprecated usages detected, please refer to the el-pagination documentation for more details"},dialog:{close:"Close this dialog"},drawer:{close:"Close this dialog"},messagebox:{title:"Message",confirm:"OK",cancel:"Cancel",error:"Illegal input",close:"Close this dialog"},upload:{deleteTip:"press delete to remove",delete:"Delete",preview:"Preview",continue:"Continue"},slider:{defaultLabel:"slider between {min} and {max}",defaultRangeStartLabel:"pick start value",defaultRangeEndLabel:"pick end value"},table:{emptyText:"No Data",confirmFilter:"Confirm",resetFilter:"Reset",clearFilter:"All",sumText:"Sum"},tree:{emptyText:"No Data"},transfer:{noMatch:"No matching data",noData:"No data",titles:["List 1","List 2"],filterPlaceholder:"Enter keyword",noCheckedFormat:"{total} items",hasCheckedFormat:"{checked}/{total} checked"},image:{error:"FAILED"},pageHeader:{title:"Back"},popconfirm:{confirmButtonText:"Yes",cancelButtonText:"No"}}};const zB=e=>(t,n)=>HB(t,n,c(e)),HB=(e,t,n)=>jn(n,e,e).replace(/\{(\w+)\}/g,(r,a)=>{var l;return`${(l=t==null?void 0:t[a])!=null?l:`{${a}}`}`}),ZB=e=>{const t=X(()=>c(e).name),n=Qt(e)?e:J(e);return{lang:t,locale:n,t:zB(e)}},Qk=Symbol("localeContextKey"),It=e=>{const t=e||tt(Qk,J());return ZB(X(()=>t.value||FB))},Yu="el",GB="is-",Ho=(e,t,n,r,a)=>{let l=`${e}-${t}`;return n&&(l+=`-${n}`),r&&(l+=`__${r}`),a&&(l+=`--${a}`),l},_k=Symbol("namespaceContextKey"),Cm=e=>{const t=e||(Tt()?tt(_k,J(Yu)):J(Yu));return X(()=>c(t)||Yu)},ze=(e,t)=>{const n=Cm(t);return{namespace:n,b:(h="")=>Ho(n.value,e,h,"",""),e:h=>h?Ho(n.value,e,"",h,""):"",m:h=>h?Ho(n.value,e,"","",h):"",be:(h,m)=>h&&m?Ho(n.value,e,h,m,""):"",em:(h,m)=>h&&m?Ho(n.value,e,"",h,m):"",bm:(h,m)=>h&&m?Ho(n.value,e,h,"",m):"",bem:(h,m,v)=>h&&m&&v?Ho(n.value,e,h,m,v):"",is:(h,...m)=>{const v=m.length>=1?m[0]:!0;return h&&v?`${GB}${h}`:""},cssVar:h=>{const m={};for(const v in h)h[v]&&(m[`--${n.value}-${v}`]=h[v]);return m},cssVarName:h=>`--${n.value}-${h}`,cssVarBlock:h=>{const m={};for(const v in h)h[v]&&(m[`--${n.value}-${e}-${v}`]=h[v]);return m},cssVarBlockName:h=>`--${n.value}-${e}-${h}`}},$k=(e,t={})=>{Qt(e)||Gn("[useLockscreen]","You need to pass a ref param to this function");const n=t.ns||ze("popup"),r=o7(()=>n.bm("parent","hidden"));if(!Mt||La(document.body,r.value))return;let a=0,l=!1,o="0";const i=()=>{setTimeout(()=>{Hr(document==null?void 0:document.body,r.value),l&&document&&(document.body.style.width=o)},200)};Ve(e,s=>{if(!s){i();return}l=!La(document.body,r.value),l&&(o=document.body.style.width),a=Ok(n.namespace.value);const u=document.documentElement.clientHeight<document.body.scrollHeight,d=ao(document.body,"overflowY");a>0&&(u||d==="scroll")&&l&&(document.body.style.width=`calc(100% - ${a}px)`),Ea(document.body,r.value)}),A0(()=>i())},CB=Fa({type:ve(Boolean),default:null}),MB=Fa({type:ve(Function)}),DB=e=>{const t=`update:${e}`,n=`onUpdate:${e}`,r=[t],a={[e]:CB,[n]:MB};return{useModelToggle:({indicator:o,toggleReason:i,shouldHideWhenRouteChanges:s,shouldProceed:u,onShow:d,onHide:f})=>{const p=Tt(),{emit:b}=p,A=p.props,h=X(()=>ht(A[n])),m=X(()=>A[e]===null),v=T=>{o.value!==!0&&(o.value=!0,i&&(i.value=T),ht(d)&&d(T))},S=T=>{o.value!==!1&&(o.value=!1,i&&(i.value=T),ht(f)&&f(T))},y=T=>{if(A.disabled===!0||ht(u)&&!u())return;const P=h.value&&Mt;P&&b(t,!0),(m.value||!P)&&v(T)},W=T=>{if(A.disabled===!0||!Mt)return;const P=h.value&&Mt;P&&b(t,!1),(m.value||!P)&&S(T)},k=T=>{!Zn(T)||(A.disabled&&T?h.value&&b(t,!1):o.value!==T&&(T?v():S()))},V=()=>{o.value?W():y()};return Ve(()=>A[e],k),s&&p.appContext.config.globalProperties.$route!==void 0&&Ve(()=>({...p.proxy.$route}),()=>{s.value&&o.value&&W()}),At(()=>{k(A[e])}),{hide:W,show:y,toggle:V,hasUpdateHandler:h}},useModelToggleProps:a,useModelToggleEmits:r}},eV=e=>{const t=Tt();return X(()=>{var n,r;return(r=(n=t==null?void 0:t.proxy)==null?void 0:n.$props)==null?void 0:r[e]})};var Zr="top",Sa="bottom",ya="right",Gr="left",Mm="auto",md=[Zr,Sa,ya,Gr],Gs="start",xc="end",EB="clippingParents",tV="viewport",Nu="popper",IB="reference",O3=md.reduce(function(e,t){return e.concat([t+"-"+Gs,t+"-"+xc])},[]),Ui=[].concat(md,[Mm]).reduce(function(e,t){return e.concat([t,t+"-"+Gs,t+"-"+xc])},[]),BB="beforeRead",YB="read",QB="afterRead",_B="beforeMain",$B="main",eY="afterMain",tY="beforeWrite",nY="write",rY="afterWrite",aY=[BB,YB,QB,_B,$B,eY,tY,nY,rY];function al(e){return e?(e.nodeName||"").toLowerCase():null}function za(e){if(e==null)return window;if(e.toString()!=="[object Window]"){var t=e.ownerDocument;return t&&t.defaultView||window}return e}function Cs(e){var t=za(e).Element;return e instanceof t||e instanceof Element}function va(e){var t=za(e).HTMLElement;return e instanceof t||e instanceof HTMLElement}function Dm(e){if(typeof ShadowRoot>"u")return!1;var t=za(e).ShadowRoot;return e instanceof t||e instanceof ShadowRoot}function lY(e){var t=e.state;Object.keys(t.elements).forEach(function(n){var r=t.styles[n]||{},a=t.attributes[n]||{},l=t.elements[n];!va(l)||!al(l)||(Object.assign(l.style,r),Object.keys(a).forEach(function(o){var i=a[o];i===!1?l.removeAttribute(o):l.setAttribute(o,i===!0?"":i)}))})}function oY(e){var t=e.state,n={popper:{position:t.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(t.elements.popper.style,n.popper),t.styles=n,t.elements.arrow&&Object.assign(t.elements.arrow.style,n.arrow),function(){Object.keys(t.elements).forEach(function(r){var a=t.elements[r],l=t.attributes[r]||{},o=Object.keys(t.styles.hasOwnProperty(r)?t.styles[r]:n[r]),i=o.reduce(function(s,u){return s[u]="",s},{});!va(a)||!al(a)||(Object.assign(a.style,i),Object.keys(l).forEach(function(s){a.removeAttribute(s)}))})}}var nV={name:"applyStyles",enabled:!0,phase:"write",fn:lY,effect:oY,requires:["computeStyles"]};function $a(e){return e.split("-")[0]}var ci=Math.max,Np=Math.min,Ms=Math.round;function Ds(e,t){t===void 0&&(t=!1);var n=e.getBoundingClientRect(),r=1,a=1;if(va(e)&&t){var l=e.offsetHeight,o=e.offsetWidth;o>0&&(r=Ms(n.width)/o||1),l>0&&(a=Ms(n.height)/l||1)}return{width:n.width/r,height:n.height/a,top:n.top/a,right:n.right/r,bottom:n.bottom/a,left:n.left/r,x:n.left/r,y:n.top/a}}function Em(e){var t=Ds(e),n=e.offsetWidth,r=e.offsetHeight;return Math.abs(t.width-n)<=1&&(n=t.width),Math.abs(t.height-r)<=1&&(r=t.height),{x:e.offsetLeft,y:e.offsetTop,width:n,height:r}}function rV(e,t){var n=t.getRootNode&&t.getRootNode();if(e.contains(t))return!0;if(n&&Dm(n)){var r=t;do{if(r&&e.isSameNode(r))return!0;r=r.parentNode||r.host}while(r)}return!1}function Ol(e){return za(e).getComputedStyle(e)}function iY(e){return["table","td","th"].indexOf(al(e))>=0}function Oo(e){return((Cs(e)?e.ownerDocument:e.document)||window.document).documentElement}function Zv(e){return al(e)==="html"?e:e.assignedSlot||e.parentNode||(Dm(e)?e.host:null)||Oo(e)}function R3(e){return!va(e)||Ol(e).position==="fixed"?null:e.offsetParent}function sY(e){var t=navigator.userAgent.toLowerCase().indexOf("firefox")!==-1,n=navigator.userAgent.indexOf("Trident")!==-1;if(n&&va(e)){var r=Ol(e);if(r.position==="fixed")return null}var a=Zv(e);for(Dm(a)&&(a=a.host);va(a)&&["html","body"].indexOf(al(a))<0;){var l=Ol(a);if(l.transform!=="none"||l.perspective!=="none"||l.contain==="paint"||["transform","perspective"].indexOf(l.willChange)!==-1||t&&l.willChange==="filter"||t&&l.filter&&l.filter!=="none")return a;a=a.parentNode}return null}function Sd(e){for(var t=za(e),n=R3(e);n&&iY(n)&&Ol(n).position==="static";)n=R3(n);return n&&(al(n)==="html"||al(n)==="body"&&Ol(n).position==="static")?t:n||sY(e)||t}function Im(e){return["top","bottom"].indexOf(e)>=0?"x":"y"}function Qu(e,t,n){return ci(e,Np(t,n))}function uY(e,t,n){var r=Qu(e,t,n);return r>n?n:r}function aV(){return{top:0,right:0,bottom:0,left:0}}function lV(e){return Object.assign({},aV(),e)}function oV(e,t){return t.reduce(function(n,r){return n[r]=e,n},{})}var cY=function(e,t){return e=typeof e=="function"?e(Object.assign({},t.rects,{placement:t.placement})):e,lV(typeof e!="number"?e:oV(e,md))};function dY(e){var t,n=e.state,r=e.name,a=e.options,l=n.elements.arrow,o=n.modifiersData.popperOffsets,i=$a(n.placement),s=Im(i),u=[Gr,ya].indexOf(i)>=0,d=u?"height":"width";if(!(!l||!o)){var f=cY(a.padding,n),p=Em(l),b=s==="y"?Zr:Gr,A=s==="y"?Sa:ya,h=n.rects.reference[d]+n.rects.reference[s]-o[s]-n.rects.popper[d],m=o[s]-n.rects.reference[s],v=Sd(l),S=v?s==="y"?v.clientHeight||0:v.clientWidth||0:0,y=h/2-m/2,W=f[b],k=S-p[d]-f[A],V=S/2-p[d]/2+y,T=Qu(W,V,k),P=s;n.modifiersData[r]=(t={},t[P]=T,t.centerOffset=T-V,t)}}function fY(e){var t=e.state,n=e.options,r=n.element,a=r===void 0?"[data-popper-arrow]":r;a!=null&&(typeof a=="string"&&(a=t.elements.popper.querySelector(a),!a)||!rV(t.elements.popper,a)||(t.elements.arrow=a))}var pY={name:"arrow",enabled:!0,phase:"main",fn:dY,effect:fY,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function Es(e){return e.split("-")[1]}var vY={top:"auto",right:"auto",bottom:"auto",left:"auto"};function bY(e){var t=e.x,n=e.y,r=window,a=r.devicePixelRatio||1;return{x:Ms(t*a)/a||0,y:Ms(n*a)/a||0}}function J3(e){var t,n=e.popper,r=e.popperRect,a=e.placement,l=e.variation,o=e.offsets,i=e.position,s=e.gpuAcceleration,u=e.adaptive,d=e.roundOffsets,f=e.isFixed,p=o.x,b=p===void 0?0:p,A=o.y,h=A===void 0?0:A,m=typeof d=="function"?d({x:b,y:h}):{x:b,y:h};b=m.x,h=m.y;var v=o.hasOwnProperty("x"),S=o.hasOwnProperty("y"),y=Gr,W=Zr,k=window;if(u){var V=Sd(n),T="clientHeight",P="clientWidth";if(V===za(n)&&(V=Oo(n),Ol(V).position!=="static"&&i==="absolute"&&(T="scrollHeight",P="scrollWidth")),V=V,a===Zr||(a===Gr||a===ya)&&l===xc){W=Sa;var x=f&&V===k&&k.visualViewport?k.visualViewport.height:V[T];h-=x-r.height,h*=s?1:-1}if(a===Gr||(a===Zr||a===Sa)&&l===xc){y=ya;var g=f&&V===k&&k.visualViewport?k.visualViewport.width:V[P];b-=g-r.width,b*=s?1:-1}}var j=Object.assign({position:i},u&&vY),L=d===!0?bY({x:b,y:h}):{x:b,y:h};if(b=L.x,h=L.y,s){var w;return Object.assign({},j,(w={},w[W]=S?"0":"",w[y]=v?"0":"",w.transform=(k.devicePixelRatio||1)<=1?"translate("+b+"px, "+h+"px)":"translate3d("+b+"px, "+h+"px, 0)",w))}return Object.assign({},j,(t={},t[W]=S?h+"px":"",t[y]=v?b+"px":"",t.transform="",t))}function hY(e){var t=e.state,n=e.options,r=n.gpuAcceleration,a=r===void 0?!0:r,l=n.adaptive,o=l===void 0?!0:l,i=n.roundOffsets,s=i===void 0?!0:i,u={placement:$a(t.placement),variation:Es(t.placement),popper:t.elements.popper,popperRect:t.rects.popper,gpuAcceleration:a,isFixed:t.options.strategy==="fixed"};t.modifiersData.popperOffsets!=null&&(t.styles.popper=Object.assign({},t.styles.popper,J3(Object.assign({},u,{offsets:t.modifiersData.popperOffsets,position:t.options.strategy,adaptive:o,roundOffsets:s})))),t.modifiersData.arrow!=null&&(t.styles.arrow=Object.assign({},t.styles.arrow,J3(Object.assign({},u,{offsets:t.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:s})))),t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-placement":t.placement})}var iV={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:hY,data:{}},Id={passive:!0};function mY(e){var t=e.state,n=e.instance,r=e.options,a=r.scroll,l=a===void 0?!0:a,o=r.resize,i=o===void 0?!0:o,s=za(t.elements.popper),u=[].concat(t.scrollParents.reference,t.scrollParents.popper);return l&&u.forEach(function(d){d.addEventListener("scroll",n.update,Id)}),i&&s.addEventListener("resize",n.update,Id),function(){l&&u.forEach(function(d){d.removeEventListener("scroll",n.update,Id)}),i&&s.removeEventListener("resize",n.update,Id)}}var sV={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:mY,data:{}},SY={left:"right",right:"left",bottom:"top",top:"bottom"};function Nf(e){return e.replace(/left|right|bottom|top/g,function(t){return SY[t]})}var yY={start:"end",end:"start"};function F3(e){return e.replace(/start|end/g,function(t){return yY[t]})}function Bm(e){var t=za(e),n=t.pageXOffset,r=t.pageYOffset;return{scrollLeft:n,scrollTop:r}}function Ym(e){return Ds(Oo(e)).left+Bm(e).scrollLeft}function AY(e){var t=za(e),n=Oo(e),r=t.visualViewport,a=n.clientWidth,l=n.clientHeight,o=0,i=0;return r&&(a=r.width,l=r.height,/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||(o=r.offsetLeft,i=r.offsetTop)),{width:a,height:l,x:o+Ym(e),y:i}}function WY(e){var t,n=Oo(e),r=Bm(e),a=(t=e.ownerDocument)==null?void 0:t.body,l=ci(n.scrollWidth,n.clientWidth,a?a.scrollWidth:0,a?a.clientWidth:0),o=ci(n.scrollHeight,n.clientHeight,a?a.scrollHeight:0,a?a.clientHeight:0),i=-r.scrollLeft+Ym(e),s=-r.scrollTop;return Ol(a||n).direction==="rtl"&&(i+=ci(n.clientWidth,a?a.clientWidth:0)-l),{width:l,height:o,x:i,y:s}}function Qm(e){var t=Ol(e),n=t.overflow,r=t.overflowX,a=t.overflowY;return/auto|scroll|overlay|hidden/.test(n+a+r)}function uV(e){return["html","body","#document"].indexOf(al(e))>=0?e.ownerDocument.body:va(e)&&Qm(e)?e:uV(Zv(e))}function _u(e,t){var n;t===void 0&&(t=[]);var r=uV(e),a=r===((n=e.ownerDocument)==null?void 0:n.body),l=za(r),o=a?[l].concat(l.visualViewport||[],Qm(r)?r:[]):r,i=t.concat(o);return a?i:i.concat(_u(Zv(o)))}function Y1(e){return Object.assign({},e,{left:e.x,top:e.y,right:e.x+e.width,bottom:e.y+e.height})}function kY(e){var t=Ds(e);return t.top=t.top+e.clientTop,t.left=t.left+e.clientLeft,t.bottom=t.top+e.clientHeight,t.right=t.left+e.clientWidth,t.width=e.clientWidth,t.height=e.clientHeight,t.x=t.left,t.y=t.top,t}function z3(e,t){return t===tV?Y1(AY(e)):Cs(t)?kY(t):Y1(WY(Oo(e)))}function VY(e){var t=_u(Zv(e)),n=["absolute","fixed"].indexOf(Ol(e).position)>=0,r=n&&va(e)?Sd(e):e;return Cs(r)?t.filter(function(a){return Cs(a)&&rV(a,r)&&al(a)!=="body"}):[]}function PY(e,t,n){var r=t==="clippingParents"?VY(e):[].concat(t),a=[].concat(r,[n]),l=a[0],o=a.reduce(function(i,s){var u=z3(e,s);return i.top=ci(u.top,i.top),i.right=Np(u.right,i.right),i.bottom=Np(u.bottom,i.bottom),i.left=ci(u.left,i.left),i},z3(e,l));return o.width=o.right-o.left,o.height=o.bottom-o.top,o.x=o.left,o.y=o.top,o}function cV(e){var t=e.reference,n=e.element,r=e.placement,a=r?$a(r):null,l=r?Es(r):null,o=t.x+t.width/2-n.width/2,i=t.y+t.height/2-n.height/2,s;switch(a){case Zr:s={x:o,y:t.y-n.height};break;case Sa:s={x:o,y:t.y+t.height};break;case ya:s={x:t.x+t.width,y:i};break;case Gr:s={x:t.x-n.width,y:i};break;default:s={x:t.x,y:t.y}}var u=a?Im(a):null;if(u!=null){var d=u==="y"?"height":"width";switch(l){case Gs:s[u]=s[u]-(t[d]/2-n[d]/2);break;case xc:s[u]=s[u]+(t[d]/2-n[d]/2);break}}return s}function Xc(e,t){t===void 0&&(t={});var n=t,r=n.placement,a=r===void 0?e.placement:r,l=n.boundary,o=l===void 0?EB:l,i=n.rootBoundary,s=i===void 0?tV:i,u=n.elementContext,d=u===void 0?Nu:u,f=n.altBoundary,p=f===void 0?!1:f,b=n.padding,A=b===void 0?0:b,h=lV(typeof A!="number"?A:oV(A,md)),m=d===Nu?IB:Nu,v=e.rects.popper,S=e.elements[p?m:d],y=PY(Cs(S)?S:S.contextElement||Oo(e.elements.popper),o,s),W=Ds(e.elements.reference),k=cV({reference:W,element:v,strategy:"absolute",placement:a}),V=Y1(Object.assign({},v,k)),T=d===Nu?V:W,P={top:y.top-T.top+h.top,bottom:T.bottom-y.bottom+h.bottom,left:y.left-T.left+h.left,right:T.right-y.right+h.right},x=e.modifiersData.offset;if(d===Nu&&x){var g=x[a];Object.keys(P).forEach(function(j){var L=[ya,Sa].indexOf(j)>=0?1:-1,w=[Zr,Sa].indexOf(j)>=0?"y":"x";P[j]+=g[w]*L})}return P}function TY(e,t){t===void 0&&(t={});var n=t,r=n.placement,a=n.boundary,l=n.rootBoundary,o=n.padding,i=n.flipVariations,s=n.allowedAutoPlacements,u=s===void 0?Ui:s,d=Es(r),f=d?i?O3:O3.filter(function(A){return Es(A)===d}):md,p=f.filter(function(A){return u.indexOf(A)>=0});p.length===0&&(p=f);var b=p.reduce(function(A,h){return A[h]=Xc(e,{placement:h,boundary:a,rootBoundary:l,padding:o})[$a(h)],A},{});return Object.keys(b).sort(function(A,h){return b[A]-b[h]})}function KY(e){if($a(e)===Mm)return[];var t=Nf(e);return[F3(e),t,F3(t)]}function NY(e){var t=e.state,n=e.options,r=e.name;if(!t.modifiersData[r]._skip){for(var a=n.mainAxis,l=a===void 0?!0:a,o=n.altAxis,i=o===void 0?!0:o,s=n.fallbackPlacements,u=n.padding,d=n.boundary,f=n.rootBoundary,p=n.altBoundary,b=n.flipVariations,A=b===void 0?!0:b,h=n.allowedAutoPlacements,m=t.options.placement,v=$a(m),S=v===m,y=s||(S||!A?[Nf(m)]:KY(m)),W=[m].concat(y).reduce(function(oe,Ne){return oe.concat($a(Ne)===Mm?TY(t,{placement:Ne,boundary:d,rootBoundary:f,padding:u,flipVariations:A,allowedAutoPlacements:h}):Ne)},[]),k=t.rects.reference,V=t.rects.popper,T=new Map,P=!0,x=W[0],g=0;g<W.length;g++){var j=W[g],L=$a(j),w=Es(j)===Gs,R=[Zr,Sa].indexOf(L)>=0,Z=R?"width":"height",G=Xc(t,{placement:j,boundary:d,rootBoundary:f,altBoundary:p,padding:u}),U=R?w?ya:Gr:w?Sa:Zr;k[Z]>V[Z]&&(U=Nf(U));var H=Nf(U),O=[];if(l&&O.push(G[L]<=0),i&&O.push(G[U]<=0,G[H]<=0),O.every(function(oe){return oe})){x=j,P=!1;break}T.set(j,O)}if(P)for(var D=A?3:1,Y=function(oe){var Ne=W.find(function(pe){var me=T.get(pe);if(me)return me.slice(0,oe).every(function(ce){return ce})});if(Ne)return x=Ne,"break"},Q=D;Q>0;Q--){var ee=Y(Q);if(ee==="break")break}t.placement!==x&&(t.modifiersData[r]._skip=!0,t.placement=x,t.reset=!0)}}var xY={name:"flip",enabled:!0,phase:"main",fn:NY,requiresIfExists:["offset"],data:{_skip:!1}};function H3(e,t,n){return n===void 0&&(n={x:0,y:0}),{top:e.top-t.height-n.y,right:e.right-t.width+n.x,bottom:e.bottom-t.height+n.y,left:e.left-t.width-n.x}}function Z3(e){return[Zr,ya,Sa,Gr].some(function(t){return e[t]>=0})}function XY(e){var t=e.state,n=e.name,r=t.rects.reference,a=t.rects.popper,l=t.modifiersData.preventOverflow,o=Xc(t,{elementContext:"reference"}),i=Xc(t,{altBoundary:!0}),s=H3(o,r),u=H3(i,a,l),d=Z3(s),f=Z3(u);t.modifiersData[n]={referenceClippingOffsets:s,popperEscapeOffsets:u,isReferenceHidden:d,hasPopperEscaped:f},t.attributes.popper=Object.assign({},t.attributes.popper,{"data-popper-reference-hidden":d,"data-popper-escaped":f})}var gY={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:XY};function wY(e,t,n){var r=$a(e),a=[Gr,Zr].indexOf(r)>=0?-1:1,l=typeof n=="function"?n(Object.assign({},t,{placement:e})):n,o=l[0],i=l[1];return o=o||0,i=(i||0)*a,[Gr,ya].indexOf(r)>=0?{x:i,y:o}:{x:o,y:i}}function jY(e){var t=e.state,n=e.options,r=e.name,a=n.offset,l=a===void 0?[0,0]:a,o=Ui.reduce(function(d,f){return d[f]=wY(f,t.rects,l),d},{}),i=o[t.placement],s=i.x,u=i.y;t.modifiersData.popperOffsets!=null&&(t.modifiersData.popperOffsets.x+=s,t.modifiersData.popperOffsets.y+=u),t.modifiersData[r]=o}var LY={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:jY};function qY(e){var t=e.state,n=e.name;t.modifiersData[n]=cV({reference:t.rects.reference,element:t.rects.popper,strategy:"absolute",placement:t.placement})}var dV={name:"popperOffsets",enabled:!0,phase:"read",fn:qY,data:{}};function UY(e){return e==="x"?"y":"x"}function OY(e){var t=e.state,n=e.options,r=e.name,a=n.mainAxis,l=a===void 0?!0:a,o=n.altAxis,i=o===void 0?!1:o,s=n.boundary,u=n.rootBoundary,d=n.altBoundary,f=n.padding,p=n.tether,b=p===void 0?!0:p,A=n.tetherOffset,h=A===void 0?0:A,m=Xc(t,{boundary:s,rootBoundary:u,padding:f,altBoundary:d}),v=$a(t.placement),S=Es(t.placement),y=!S,W=Im(v),k=UY(W),V=t.modifiersData.popperOffsets,T=t.rects.reference,P=t.rects.popper,x=typeof h=="function"?h(Object.assign({},t.rects,{placement:t.placement})):h,g=typeof x=="number"?{mainAxis:x,altAxis:x}:Object.assign({mainAxis:0,altAxis:0},x),j=t.modifiersData.offset?t.modifiersData.offset[t.placement]:null,L={x:0,y:0};if(V){if(l){var w,R=W==="y"?Zr:Gr,Z=W==="y"?Sa:ya,G=W==="y"?"height":"width",U=V[W],H=U+m[R],O=U-m[Z],D=b?-P[G]/2:0,Y=S===Gs?T[G]:P[G],Q=S===Gs?-P[G]:-T[G],ee=t.elements.arrow,oe=b&&ee?Em(ee):{width:0,height:0},Ne=t.modifiersData["arrow#persistent"]?t.modifiersData["arrow#persistent"].padding:aV(),pe=Ne[R],me=Ne[Z],ce=Qu(0,T[G],oe[G]),Le=y?T[G]/2-D-ce-pe-g.mainAxis:Y-ce-pe-g.mainAxis,Te=y?-T[G]/2+D+ce+me+g.mainAxis:Q+ce+me+g.mainAxis,xe=t.elements.arrow&&Sd(t.elements.arrow),_=xe?W==="y"?xe.clientTop||0:xe.clientLeft||0:0,re=(w=j==null?void 0:j[W])!=null?w:0,ye=U+Le-re-_,ge=U+Te-re,Fe=Qu(b?Np(H,ye):H,U,b?ci(O,ge):O);V[W]=Fe,L[W]=Fe-U}if(i){var Ae,Ze=W==="x"?Zr:Gr,Ue=W==="x"?Sa:ya,Pe=V[k],qe=k==="y"?"height":"width",De=Pe+m[Ze],Me=Pe-m[Ue],_e=[Zr,Gr].indexOf(v)!==-1,Re=(Ae=j==null?void 0:j[k])!=null?Ae:0,$e=_e?De:Pe-T[qe]-P[qe]-Re+g.altAxis,dt=_e?Pe+T[qe]+P[qe]-Re-g.altAxis:Me,yt=b&&_e?uY($e,Pe,dt):Qu(b?$e:De,Pe,b?dt:Me);V[k]=yt,L[k]=yt-Pe}t.modifiersData[r]=L}}var RY={name:"preventOverflow",enabled:!0,phase:"main",fn:OY,requiresIfExists:["offset"]};function JY(e){return{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}}function FY(e){return e===za(e)||!va(e)?Bm(e):JY(e)}function zY(e){var t=e.getBoundingClientRect(),n=Ms(t.width)/e.offsetWidth||1,r=Ms(t.height)/e.offsetHeight||1;return n!==1||r!==1}function HY(e,t,n){n===void 0&&(n=!1);var r=va(t),a=va(t)&&zY(t),l=Oo(t),o=Ds(e,a),i={scrollLeft:0,scrollTop:0},s={x:0,y:0};return(r||!r&&!n)&&((al(t)!=="body"||Qm(l))&&(i=FY(t)),va(t)?(s=Ds(t,!0),s.x+=t.clientLeft,s.y+=t.clientTop):l&&(s.x=Ym(l))),{x:o.left+i.scrollLeft-s.x,y:o.top+i.scrollTop-s.y,width:o.width,height:o.height}}function ZY(e){var t=new Map,n=new Set,r=[];e.forEach(function(l){t.set(l.name,l)});function a(l){n.add(l.name);var o=[].concat(l.requires||[],l.requiresIfExists||[]);o.forEach(function(i){if(!n.has(i)){var s=t.get(i);s&&a(s)}}),r.push(l)}return e.forEach(function(l){n.has(l.name)||a(l)}),r}function GY(e){var t=ZY(e);return aY.reduce(function(n,r){return n.concat(t.filter(function(a){return a.phase===r}))},[])}function CY(e){var t;return function(){return t||(t=new Promise(function(n){Promise.resolve().then(function(){t=void 0,n(e())})})),t}}function MY(e){var t=e.reduce(function(n,r){var a=n[r.name];return n[r.name]=a?Object.assign({},a,r,{options:Object.assign({},a.options,r.options),data:Object.assign({},a.data,r.data)}):r,n},{});return Object.keys(t).map(function(n){return t[n]})}var G3={placement:"bottom",modifiers:[],strategy:"absolute"};function C3(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return!t.some(function(r){return!(r&&typeof r.getBoundingClientRect=="function")})}function _m(e){e===void 0&&(e={});var t=e,n=t.defaultModifiers,r=n===void 0?[]:n,a=t.defaultOptions,l=a===void 0?G3:a;return function(o,i,s){s===void 0&&(s=l);var u={placement:"bottom",orderedModifiers:[],options:Object.assign({},G3,l),modifiersData:{},elements:{reference:o,popper:i},attributes:{},styles:{}},d=[],f=!1,p={state:u,setOptions:function(h){var m=typeof h=="function"?h(u.options):h;A(),u.options=Object.assign({},l,u.options,m),u.scrollParents={reference:Cs(o)?_u(o):o.contextElement?_u(o.contextElement):[],popper:_u(i)};var v=GY(MY([].concat(r,u.options.modifiers)));return u.orderedModifiers=v.filter(function(S){return S.enabled}),b(),p.update()},forceUpdate:function(){if(!f){var h=u.elements,m=h.reference,v=h.popper;if(C3(m,v)){u.rects={reference:HY(m,Sd(v),u.options.strategy==="fixed"),popper:Em(v)},u.reset=!1,u.placement=u.options.placement,u.orderedModifiers.forEach(function(P){return u.modifiersData[P.name]=Object.assign({},P.data)});for(var S=0;S<u.orderedModifiers.length;S++){if(u.reset===!0){u.reset=!1,S=-1;continue}var y=u.orderedModifiers[S],W=y.fn,k=y.options,V=k===void 0?{}:k,T=y.name;typeof W=="function"&&(u=W({state:u,options:V,name:T,instance:p})||u)}}}},update:CY(function(){return new Promise(function(h){p.forceUpdate(),h(u)})}),destroy:function(){A(),f=!0}};if(!C3(o,i))return p;p.setOptions(s).then(function(h){!f&&s.onFirstUpdate&&s.onFirstUpdate(h)});function b(){u.orderedModifiers.forEach(function(h){var m=h.name,v=h.options,S=v===void 0?{}:v,y=h.effect;if(typeof y=="function"){var W=y({state:u,name:m,instance:p,options:S}),k=function(){};d.push(W||k)}})}function A(){d.forEach(function(h){return h()}),d=[]}return p}}_m();var DY=[sV,dV,iV,nV];_m({defaultModifiers:DY});var EY=[sV,dV,iV,nV,LY,xY,RY,pY,gY],fV=_m({defaultModifiers:EY});const IY=(e,t,n={})=>{const r={name:"updateState",enabled:!0,phase:"write",fn:({state:s})=>{const u=BY(s);Object.assign(o.value,u)},requires:["computeStyles"]},a=X(()=>{const{onFirstUpdate:s,placement:u,strategy:d,modifiers:f}=c(n);return{onFirstUpdate:s,placement:u||"bottom",strategy:d||"absolute",modifiers:[...f||[],r,{name:"applyStyles",enabled:!1}]}}),l=nn(),o=J({styles:{popper:{position:c(a).strategy,left:"0",top:"0"},arrow:{position:"absolute"}},attributes:{}}),i=()=>{!l.value||(l.value.destroy(),l.value=void 0)};return Ve(a,s=>{const u=c(l);u&&u.setOptions(s)},{deep:!0}),Ve([e,t],([s,u])=>{i(),!(!s||!u)&&(l.value=fV(s,u,c(a)))}),tn(()=>{i()}),{state:X(()=>{var s;return{...((s=c(l))==null?void 0:s.state)||{}}}),styles:X(()=>c(o).styles),attributes:X(()=>c(o).attributes),update:()=>{var s;return(s=c(l))==null?void 0:s.update()},forceUpdate:()=>{var s;return(s=c(l))==null?void 0:s.forceUpdate()},instanceRef:X(()=>c(l))}};function BY(e){const t=Object.keys(e.elements),n=Kp(t.map(a=>[a,e.styles[a]||{}])),r=Kp(t.map(a=>[a,e.attributes[a]]));return{styles:n,attributes:r}}const $m=e=>{if(!e)return{onClick:en,onMousedown:en,onMouseup:en};let t=!1,n=!1;return{onClick:o=>{t&&n&&e(o),t=n=!1},onMousedown:o=>{t=o.target===o.currentTarget},onMouseup:o=>{n=o.target===o.currentTarget}}},YY=(e,t=0)=>{if(t===0)return e;const n=J(!1);let r=0;const a=()=>{r&&clearTimeout(r),r=window.setTimeout(()=>{n.value=e.value},t)};return At(a),Ve(()=>e.value,l=>{l?a():n.value=l}),n};function M3(){let e;const t=(r,a)=>{n(),e=window.setTimeout(r,a)},n=()=>window.clearTimeout(e);return ou(()=>n()),{registerTimeout:t,cancelTimeout:n}}const D3={prefix:Math.floor(Math.random()*1e4),current:0},QY=Symbol("elIdInjection"),pV=()=>Tt()?tt(QY,D3):D3,Cr=e=>{const t=pV(),n=Cm();return X(()=>c(e)||`${n.value}-id-${t.prefix}-${t.current++}`)};let as=[];const E3=e=>{const t=e;t.key===ut.esc&&as.forEach(n=>n(t))},_Y=e=>{At(()=>{as.length===0&&document.addEventListener("keydown",E3),Mt&&as.push(e)}),tn(()=>{as=as.filter(t=>t!==e),as.length===0&&Mt&&document.removeEventListener("keydown",E3)})};let I3;const vV=()=>{const e=Cm(),t=pV(),n=X(()=>`${e.value}-popper-container-${t.prefix}`),r=X(()=>`#${n.value}`);return{id:n,selector:r}},$Y=e=>{const t=document.createElement("div");return t.id=e,document.body.appendChild(t),t},eQ=()=>{const{id:e,selector:t}=vV();return td(()=>{!Mt||!I3&&!document.body.querySelector(t.value)&&(I3=$Y(e.value))}),{id:e,selector:t}},tQ=Ie({showAfter:{type:Number,default:0},hideAfter:{type:Number,default:200},autoClose:{type:Number,default:0}}),bV=({showAfter:e,hideAfter:t,autoClose:n,open:r,close:a})=>{const{registerTimeout:l}=M3(),{registerTimeout:o,cancelTimeout:i}=M3();return{onOpen:d=>{l(()=>{r(d);const f=c(n);mt(f)&&f>0&&o(()=>{a(d)},f)},c(e))},onClose:d=>{i(),l(()=>{a(d)},c(t))}}},hV=Symbol("elForwardRef"),nQ=e=>{zt(hV,{setForwardRef:n=>{e.value=n}})},rQ=e=>({mounted(t){e(t)},updated(t){e(t)},unmounted(){e(null)}}),B3=J(0),mV=2e3,SV=Symbol("zIndexContextKey"),su=e=>{const t=e||(Tt()?tt(SV,void 0):void 0),n=X(()=>{const l=c(t);return mt(l)?l:mV}),r=X(()=>n.value+B3.value);return{initialZIndex:n,currentZIndex:r,nextZIndex:()=>(B3.value++,r.value)}};function e2(e){return e.split("-")[1]}function yV(e){return e==="y"?"height":"width"}function t2(e){return e.split("-")[0]}function n2(e){return["top","bottom"].includes(t2(e))?"x":"y"}function Y3(e,t,n){let{reference:r,floating:a}=e;const l=r.x+r.width/2-a.width/2,o=r.y+r.height/2-a.height/2,i=n2(t),s=yV(i),u=r[s]/2-a[s]/2,d=t2(t),f=i==="x";let p;switch(d){case"top":p={x:l,y:r.y-a.height};break;case"bottom":p={x:l,y:r.y+r.height};break;case"right":p={x:r.x+r.width,y:o};break;case"left":p={x:r.x-a.width,y:o};break;default:p={x:r.x,y:r.y}}switch(e2(t)){case"start":p[i]-=u*(n&&f?-1:1);break;case"end":p[i]+=u*(n&&f?-1:1);break}return p}const aQ=async(e,t,n)=>{const{placement:r="bottom",strategy:a="absolute",middleware:l=[],platform:o}=n,i=l.filter(Boolean),s=await(o.isRTL==null?void 0:o.isRTL(t));let u=await o.getElementRects({reference:e,floating:t,strategy:a}),{x:d,y:f}=Y3(u,r,s),p=r,b={},A=0;for(let h=0;h<i.length;h++){const{name:m,fn:v}=i[h],{x:S,y,data:W,reset:k}=await v({x:d,y:f,initialPlacement:r,placement:p,strategy:a,middlewareData:b,rects:u,platform:o,elements:{reference:e,floating:t}});if(d=S!=null?S:d,f=y!=null?y:f,b={...b,[m]:{...b[m],...W}},k&&A<=50){A++,typeof k=="object"&&(k.placement&&(p=k.placement),k.rects&&(u=k.rects===!0?await o.getElementRects({reference:e,floating:t,strategy:a}):k.rects),{x:d,y:f}=Y3(u,p,s)),h=-1;continue}}return{x:d,y:f,placement:p,strategy:a,middlewareData:b}};function lQ(e){return{top:0,right:0,bottom:0,left:0,...e}}function oQ(e){return typeof e!="number"?lQ(e):{top:e,right:e,bottom:e,left:e}}function AV(e){return{...e,top:e.y,left:e.x,right:e.x+e.width,bottom:e.y+e.height}}const iQ=Math.min,sQ=Math.max;function uQ(e,t,n){return sQ(e,iQ(t,n))}const cQ=e=>({name:"arrow",options:e,async fn(t){const{element:n,padding:r=0}=e||{},{x:a,y:l,placement:o,rects:i,platform:s,elements:u}=t;if(n==null)return{};const d=oQ(r),f={x:a,y:l},p=n2(o),b=yV(p),A=await s.getDimensions(n),h=p==="y",m=h?"top":"left",v=h?"bottom":"right",S=h?"clientHeight":"clientWidth",y=i.reference[b]+i.reference[p]-f[p]-i.floating[b],W=f[p]-i.reference[p],k=await(s.getOffsetParent==null?void 0:s.getOffsetParent(n));let V=k?k[S]:0;(!V||!await(s.isElement==null?void 0:s.isElement(k)))&&(V=u.floating[S]||i.floating[b]);const T=y/2-W/2,P=d[m],x=V-A[b]-d[v],g=V/2-A[b]/2+T,j=uQ(P,g,x),w=e2(o)!=null&&g!=j&&i.reference[b]/2-(g<P?d[m]:d[v])-A[b]/2<0?g<P?P-g:x-g:0;return{[p]:f[p]-w,data:{[p]:j,centerOffset:g-j}}}});async function dQ(e,t){const{placement:n,platform:r,elements:a}=e,l=await(r.isRTL==null?void 0:r.isRTL(a.floating)),o=t2(n),i=e2(n),s=n2(n)==="x",u=["left","top"].includes(o)?-1:1,d=l&&s?-1:1,f=typeof t=="function"?t(e):t;let{mainAxis:p,crossAxis:b,alignmentAxis:A}=typeof f=="number"?{mainAxis:f,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...f};return i&&typeof A=="number"&&(b=i==="end"?A*-1:A),s?{x:b*d,y:p*u}:{x:p*u,y:b*d}}const fQ=function(e){return e===void 0&&(e=0),{name:"offset",options:e,async fn(t){const{x:n,y:r}=t,a=await dQ(t,e);return{x:n+a.x,y:r+a.y,data:a}}}};function ea(e){var t;return((t=e.ownerDocument)==null?void 0:t.defaultView)||window}function Oa(e){return ea(e).getComputedStyle(e)}function WV(e){return e instanceof ea(e).Node}function Vo(e){return WV(e)?(e.nodeName||"").toLowerCase():""}let Bd;function kV(){if(Bd)return Bd;const e=navigator.userAgentData;return e&&Array.isArray(e.brands)?(Bd=e.brands.map(t=>t.brand+"/"+t.version).join(" "),Bd):navigator.userAgent}function Ra(e){return e instanceof ea(e).HTMLElement}function Rl(e){return e instanceof ea(e).Element}function Q3(e){if(typeof ShadowRoot>"u")return!1;const t=ea(e).ShadowRoot;return e instanceof t||e instanceof ShadowRoot}function yd(e){const{overflow:t,overflowX:n,overflowY:r,display:a}=Oa(e);return/auto|scroll|overlay|hidden|clip/.test(t+r+n)&&!["inline","contents"].includes(a)}function pQ(e){return["table","td","th"].includes(Vo(e))}function r2(e){const t=/firefox/i.test(kV()),n=Oa(e),r=n.backdropFilter||n.WebkitBackdropFilter;return n.transform!=="none"||n.perspective!=="none"||(r?r!=="none":!1)||t&&n.willChange==="filter"||t&&(n.filter?n.filter!=="none":!1)||["transform","perspective"].some(a=>n.willChange.includes(a))||["paint","layout","strict","content"].some(a=>{const l=n.contain;return l!=null?l.includes(a):!1})}function a2(){return/^((?!chrome|android).)*safari/i.test(kV())}function Gv(e){return["html","body","#document"].includes(Vo(e))}const _3=Math.min,$u=Math.max,xp=Math.round;function VV(e){const t=Oa(e);let n=parseFloat(t.width)||0,r=parseFloat(t.height)||0;const a=Ra(e),l=a?e.offsetWidth:n,o=a?e.offsetHeight:r,i=xp(n)!==l||xp(r)!==o;return i&&(n=l,r=o),{width:n,height:r,fallback:i}}function PV(e){return Rl(e)?e:e.contextElement}const TV={x:1,y:1};function ks(e){const t=PV(e);if(!Ra(t))return TV;const n=t.getBoundingClientRect(),{width:r,height:a,fallback:l}=VV(t);let o=(l?xp(n.width):n.width)/r,i=(l?xp(n.height):n.height)/a;return(!o||!Number.isFinite(o))&&(o=1),(!i||!Number.isFinite(i))&&(i=1),{x:o,y:i}}function gc(e,t,n,r){var a,l;t===void 0&&(t=!1),n===void 0&&(n=!1);const o=e.getBoundingClientRect(),i=PV(e);let s=TV;t&&(r?Rl(r)&&(s=ks(r)):s=ks(e));const u=i?ea(i):window,d=a2()&&n;let f=(o.left+(d&&((a=u.visualViewport)==null?void 0:a.offsetLeft)||0))/s.x,p=(o.top+(d&&((l=u.visualViewport)==null?void 0:l.offsetTop)||0))/s.y,b=o.width/s.x,A=o.height/s.y;if(i){const h=ea(i),m=r&&Rl(r)?ea(r):r;let v=h.frameElement;for(;v&&r&&m!==h;){const S=ks(v),y=v.getBoundingClientRect(),W=getComputedStyle(v);y.x+=(v.clientLeft+parseFloat(W.paddingLeft))*S.x,y.y+=(v.clientTop+parseFloat(W.paddingTop))*S.y,f*=S.x,p*=S.y,b*=S.x,A*=S.y,f+=y.x,p+=y.y,v=ea(v).frameElement}}return AV({width:b,height:A,x:f,y:p})}function Ro(e){return((WV(e)?e.ownerDocument:e.document)||window.document).documentElement}function Cv(e){return Rl(e)?{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}:{scrollLeft:e.pageXOffset,scrollTop:e.pageYOffset}}function vQ(e){let{rect:t,offsetParent:n,strategy:r}=e;const a=Ra(n),l=Ro(n);if(n===l)return t;let o={scrollLeft:0,scrollTop:0},i={x:1,y:1};const s={x:0,y:0};if((a||!a&&r!=="fixed")&&((Vo(n)!=="body"||yd(l))&&(o=Cv(n)),Ra(n))){const u=gc(n);i=ks(n),s.x=u.x+n.clientLeft,s.y=u.y+n.clientTop}return{width:t.width*i.x,height:t.height*i.y,x:t.x*i.x-o.scrollLeft*i.x+s.x,y:t.y*i.y-o.scrollTop*i.y+s.y}}function KV(e){return gc(Ro(e)).left+Cv(e).scrollLeft}function bQ(e){const t=Ro(e),n=Cv(e),r=e.ownerDocument.body,a=$u(t.scrollWidth,t.clientWidth,r.scrollWidth,r.clientWidth),l=$u(t.scrollHeight,t.clientHeight,r.scrollHeight,r.clientHeight);let o=-n.scrollLeft+KV(e);const i=-n.scrollTop;return Oa(r).direction==="rtl"&&(o+=$u(t.clientWidth,r.clientWidth)-a),{width:a,height:l,x:o,y:i}}function Is(e){if(Vo(e)==="html")return e;const t=e.assignedSlot||e.parentNode||Q3(e)&&e.host||Ro(e);return Q3(t)?t.host:t}function NV(e){const t=Is(e);return Gv(t)?t.ownerDocument.body:Ra(t)&&yd(t)?t:NV(t)}function xV(e,t){var n;t===void 0&&(t=[]);const r=NV(e),a=r===((n=e.ownerDocument)==null?void 0:n.body),l=ea(r);return a?t.concat(l,l.visualViewport||[],yd(r)?r:[]):t.concat(r,xV(r))}function hQ(e,t){const n=ea(e),r=Ro(e),a=n.visualViewport;let l=r.clientWidth,o=r.clientHeight,i=0,s=0;if(a){l=a.width,o=a.height;const u=a2();(!u||u&&t==="fixed")&&(i=a.offsetLeft,s=a.offsetTop)}return{width:l,height:o,x:i,y:s}}function mQ(e,t){const n=gc(e,!0,t==="fixed"),r=n.top+e.clientTop,a=n.left+e.clientLeft,l=Ra(e)?ks(e):{x:1,y:1},o=e.clientWidth*l.x,i=e.clientHeight*l.y,s=a*l.x,u=r*l.y;return{width:o,height:i,x:s,y:u}}function $3(e,t,n){let r;if(t==="viewport")r=hQ(e,n);else if(t==="document")r=bQ(Ro(e));else if(Rl(t))r=mQ(t,n);else{const o={...t};if(a2()){var a,l;const i=ea(e);o.x-=((a=i.visualViewport)==null?void 0:a.offsetLeft)||0,o.y-=((l=i.visualViewport)==null?void 0:l.offsetTop)||0}r=o}return AV(r)}function XV(e,t){const n=Is(e);return n===t||!Rl(n)||Gv(n)?!1:Oa(n).position==="fixed"||XV(n,t)}function SQ(e,t){const n=t.get(e);if(n)return n;let r=xV(e).filter(i=>Rl(i)&&Vo(i)!=="body"),a=null;const l=Oa(e).position==="fixed";let o=l?Is(e):e;for(;Rl(o)&&!Gv(o);){const i=Oa(o),s=r2(o);!s&&i.position==="fixed"&&(a=null),(l?!s&&!a:!s&&i.position==="static"&&!!a&&["absolute","fixed"].includes(a.position)||yd(o)&&!s&&XV(e,o))?r=r.filter(d=>d!==o):a=i,o=Is(o)}return t.set(e,r),r}function yQ(e){let{element:t,boundary:n,rootBoundary:r,strategy:a}=e;const o=[...n==="clippingAncestors"?SQ(t,this._c):[].concat(n),r],i=o[0],s=o.reduce((u,d)=>{const f=$3(t,d,a);return u.top=$u(f.top,u.top),u.right=_3(f.right,u.right),u.bottom=_3(f.bottom,u.bottom),u.left=$u(f.left,u.left),u},$3(t,i,a));return{width:s.right-s.left,height:s.bottom-s.top,x:s.left,y:s.top}}function AQ(e){return VV(e)}function e8(e,t){return!Ra(e)||Oa(e).position==="fixed"?null:t?t(e):e.offsetParent}function WQ(e){let t=Is(e);for(;Ra(t)&&!Gv(t);){if(r2(t))return t;t=Is(t)}return null}function t8(e,t){const n=ea(e);if(!Ra(e))return n;let r=e8(e,t);for(;r&&pQ(r)&&Oa(r).position==="static";)r=e8(r,t);return r&&(Vo(r)==="html"||Vo(r)==="body"&&Oa(r).position==="static"&&!r2(r))?n:r||WQ(e)||n}function kQ(e,t,n){const r=Ra(t),a=Ro(t),l=gc(e,!0,n==="fixed",t);let o={scrollLeft:0,scrollTop:0};const i={x:0,y:0};if(r||!r&&n!=="fixed")if((Vo(t)!=="body"||yd(a))&&(o=Cv(t)),Ra(t)){const s=gc(t,!0);i.x=s.x+t.clientLeft,i.y=s.y+t.clientTop}else a&&(i.x=KV(a));return{x:l.left+o.scrollLeft-i.x,y:l.top+o.scrollTop-i.y,width:l.width,height:l.height}}const VQ={getClippingRect:yQ,convertOffsetParentRelativeRectToViewportRelativeRect:vQ,isElement:Rl,getDimensions:AQ,getOffsetParent:t8,getDocumentElement:Ro,getScale:ks,async getElementRects(e){let{reference:t,floating:n,strategy:r}=e;const a=this.getOffsetParent||t8,l=this.getDimensions;return{reference:kQ(t,await a(n),r),floating:{x:0,y:0,...await l(n)}}},getClientRects:e=>Array.from(e.getClientRects()),isRTL:e=>Oa(e).direction==="rtl"},PQ=(e,t,n)=>{const r=new Map,a={platform:VQ,...n},l={...a.platform,_c:r};return aQ(e,t,{...a,platform:l})};Ie({});const TQ=e=>{if(!Mt)return;if(!e)return e;const t=Fr(e);return t||(Qt(e)?t:e)},KQ=({middleware:e,placement:t,strategy:n})=>{const r=J(),a=J(),l=J(),o=J(),i=J({}),s={x:l,y:o,placement:t,strategy:n,middlewareData:i},u=async()=>{if(!Mt)return;const d=TQ(r),f=Fr(a);if(!d||!f)return;const p=await PQ(d,f,{placement:c(t),strategy:c(n),middleware:c(e)});Nc(s).forEach(b=>{s[b].value=p[b]})};return At(()=>{Dn(()=>{u()})}),{...s,update:u,referenceRef:r,contentRef:a}},NQ=({arrowRef:e,padding:t})=>({name:"arrow",options:{element:e,padding:t},fn(n){const r=c(e);return r?cQ({element:r,padding:t}).fn(n):{}}});function xQ(e){const t=J();function n(){if(e.value==null)return;const{selectionStart:a,selectionEnd:l,value:o}=e.value;if(a==null||l==null)return;const i=o.slice(0,Math.max(0,a)),s=o.slice(Math.max(0,l));t.value={selectionStart:a,selectionEnd:l,value:o,beforeTxt:i,afterTxt:s}}function r(){if(e.value==null||t.value==null)return;const{value:a}=e.value,{beforeTxt:l,afterTxt:o,selectionStart:i}=t.value;if(l==null||o==null||i==null)return;let s=a.length;if(a.endsWith(o))s=a.length-o.length;else if(a.startsWith(l))s=l.length;else{const u=l[i-1],d=a.indexOf(u,i-1);d!==-1&&(s=d+1)}e.value.setSelectionRange(s,s)}return[n,r]}const XQ=(e,t,n)=>ui(e.subTree).filter(l=>{var o;return cn(l)&&((o=l.type)==null?void 0:o.name)===t&&!!l.component}).map(l=>l.component.uid).map(l=>n[l]).filter(l=>!!l),l2=(e,t)=>{const n={},r=nn([]);return{children:r,addChild:o=>{n[o.uid]=o,r.value=XQ(e,t,n)},removeChild:o=>{delete n[o],r.value=r.value.filter(i=>i.uid!==o)}}},ur=Fa({type:String,values:sl,required:!1}),gV=Symbol("size"),gQ=()=>{const e=tt(gV,{});return X(()=>c(e.size)||"")};function wV(e,{afterFocus:t,beforeBlur:n,afterBlur:r}={}){const a=Tt(),{emit:l}=a,o=nn(),i=J(!1),s=f=>{i.value||(i.value=!0,l("focus",f),t==null||t())},u=f=>{var p;(ht(n)?n(f):!1)||f.relatedTarget&&((p=o.value)==null?void 0:p.contains(f.relatedTarget))||(i.value=!1,l("blur",f),r==null||r())},d=()=>{var f;(f=e.value)==null||f.focus()};return Ve(o,f=>{f&&f.setAttribute("tabindex","-1")}),hn(o,"click",d),{wrapperRef:o,isFocused:i,handleFocus:s,handleBlur:u}}const jV=Symbol(),Xp=J();function Mv(e,t=void 0){const n=Tt()?tt(jV,Xp):Xp;return e?X(()=>{var r,a;return(a=(r=n.value)==null?void 0:r[e])!=null?a:t}):n}function Dv(e,t){const n=Mv(),r=ze(e,X(()=>{var i;return((i=n.value)==null?void 0:i.namespace)||Yu})),a=It(X(()=>{var i;return(i=n.value)==null?void 0:i.locale})),l=su(X(()=>{var i;return((i=n.value)==null?void 0:i.zIndex)||mV})),o=X(()=>{var i;return c(t)||((i=n.value)==null?void 0:i.size)||""});return o2(X(()=>c(n)||{})),{ns:r,locale:a,zIndex:l,size:o}}const o2=(e,t,n=!1)=>{var r;const a=!!Tt(),l=a?Mv():void 0,o=(r=t==null?void 0:t.provide)!=null?r:a?zt:void 0;if(!o)return;const i=X(()=>{const s=c(e);return l!=null&&l.value?wQ(l.value,s):s});return o(jV,i),o(Qk,X(()=>i.value.locale)),o(_k,X(()=>i.value.namespace)),o(SV,X(()=>i.value.zIndex)),o(gV,{size:X(()=>i.value.size||"")}),(n||!Xp.value)&&(Xp.value=i.value),i},wQ=(e,t)=>{var n;const r=[...new Set([...Nc(e),...Nc(t)])],a={};for(const l of r)a[l]=(n=t[l])!=null?n:e[l];return a},jQ=Ie({a11y:{type:Boolean,default:!0},locale:{type:ve(Object)},size:ur,button:{type:ve(Object)},experimentalFeatures:{type:ve(Object)},keyboardNavigation:{type:Boolean,default:!0},message:{type:ve(Object)},zIndex:Number,namespace:{type:String,default:"el"}}),Q1={},LQ=$({name:"ElConfigProvider",props:jQ,setup(e,{slots:t}){Ve(()=>e.message,r=>{Object.assign(Q1,r!=null?r:{})},{immediate:!0,deep:!0});const n=o2(e);return()=>ue(t,"default",{config:n==null?void 0:n.value})}}),qQ=qt(LQ),UQ="2.4.1",OQ=(e=[])=>({version:UQ,install:(n,r)=>{n[q3]||(n[q3]=!0,e.forEach(a=>n.use(a)),r&&o2(r,n,!0))}}),RQ=Ie({zIndex:{type:ve([Number,String]),default:100},target:{type:String,default:""},offset:{type:Number,default:0},position:{type:String,values:["top","bottom"],default:"top"}}),JQ={scroll:({scrollTop:e,fixed:t})=>mt(e)&&Zn(t),[mn]:e=>Zn(e)};var Be=(e,t)=>{const n=e.__vccOpts||e;for(const[r,a]of t)n[r]=a;return n};const LV="ElAffix",FQ=$({name:LV}),zQ=$({...FQ,props:RQ,emits:JQ,setup(e,{expose:t,emit:n}){const r=e,a=ze("affix"),l=nn(),o=nn(),i=nn(),{height:s}=SL(),{height:u,width:d,top:f,bottom:p,update:b}=cy(o,{windowScroll:!1}),A=cy(l),h=J(!1),m=J(0),v=J(0),S=X(()=>({height:h.value?`${u.value}px`:"",width:h.value?`${d.value}px`:""})),y=X(()=>{if(!h.value)return{};const V=r.offset?Ln(r.offset):0;return{height:`${u.value}px`,width:`${d.value}px`,top:r.position==="top"?V:"",bottom:r.position==="bottom"?V:"",transform:v.value?`translateY(${v.value}px)`:"",zIndex:r.zIndex}}),W=()=>{if(!!i.value)if(m.value=i.value instanceof Window?document.documentElement.scrollTop:i.value.scrollTop||0,r.position==="top")if(r.target){const V=A.bottom.value-r.offset-u.value;h.value=r.offset>f.value&&A.bottom.value>0,v.value=V<0?V:0}else h.value=r.offset>f.value;else if(r.target){const V=s.value-A.top.value-r.offset-u.value;h.value=s.value-r.offset<p.value&&s.value>A.top.value,v.value=V<0?-V:0}else h.value=s.value-r.offset<p.value},k=()=>{b(),n("scroll",{scrollTop:m.value,fixed:h.value})};return Ve(h,V=>n("change",V)),At(()=>{var V;r.target?(l.value=(V=document.querySelector(r.target))!=null?V:void 0,l.value||Gn(LV,`Target is not existed: ${r.target}`)):l.value=document.documentElement,i.value=Om(o.value,!0),b()}),hn(i,"scroll",k),Dn(W),t({update:W,updateRoot:b}),(V,T)=>(K(),F("div",{ref_key:"root",ref:o,class:q(c(a).b()),style:lt(c(S))},[z("div",{class:q({[c(a).m("fixed")]:h.value}),style:lt(c(y))},[ue(V.$slots,"default")],6)],6))}});var HQ=Be(zQ,[["__file","/home/runner/work/element-plus/element-plus/packages/components/affix/src/affix.vue"]]);const ZQ=qt(HQ),GQ=Ie({size:{type:ve([Number,String])},color:{type:String}}),CQ=$({name:"ElIcon",inheritAttrs:!1}),MQ=$({...CQ,props:GQ,setup(e){const t=e,n=ze("icon"),r=X(()=>{const{size:a,color:l}=t;return!a&&!l?{}:{fontSize:Hn(a)?void 0:Ln(a),"--color":l}});return(a,l)=>(K(),F("i",Ut({class:c(n).b(),style:c(r)},a.$attrs),[ue(a.$slots,"default")],16))}});var DQ=Be(MQ,[["__file","/home/runner/work/element-plus/element-plus/packages/components/icon/src/icon.vue"]]);const it=qt(DQ),EQ=["light","dark"],IQ=Ie({title:{type:String,default:""},description:{type:String,default:""},type:{type:String,values:Nc(ko),default:"info"},closable:{type:Boolean,default:!0},closeText:{type:String,default:""},showIcon:Boolean,center:Boolean,effect:{type:String,values:EQ,default:"light"}}),BQ={close:e=>e instanceof MouseEvent},YQ=$({name:"ElAlert"}),QQ=$({...YQ,props:IQ,emits:BQ,setup(e,{emit:t}){const n=e,{Close:r}=Hm,a=er(),l=ze("alert"),o=J(!0),i=X(()=>ko[n.type]),s=X(()=>[l.e("icon"),{[l.is("big")]:!!n.description||!!a.default}]),u=X(()=>({[l.is("bold")]:n.description||a.default})),d=f=>{o.value=!1,t("close",f)};return(f,p)=>(K(),ie(fn,{name:c(l).b("fade"),persisted:""},{default:B(()=>[Vt(z("div",{class:q([c(l).b(),c(l).m(f.type),c(l).is("center",f.center),c(l).is(f.effect)]),role:"alert"},[f.showIcon&&c(i)?(K(),ie(c(it),{key:0,class:q(c(s))},{default:B(()=>[(K(),ie(Ot(c(i))))]),_:1},8,["class"])):ae("v-if",!0),z("div",{class:q(c(l).e("content"))},[f.title||f.$slots.title?(K(),F("span",{key:0,class:q([c(l).e("title"),c(u)])},[ue(f.$slots,"title",{},()=>[Xt(je(f.title),1)])],2)):ae("v-if",!0),f.$slots.default||f.description?(K(),F("p",{key:1,class:q(c(l).e("description"))},[ue(f.$slots,"default",{},()=>[Xt(je(f.description),1)])],2)):ae("v-if",!0),f.closable?(K(),F(Qe,{key:2},[f.closeText?(K(),F("div",{key:0,class:q([c(l).e("close-btn"),c(l).is("customed")]),onClick:d},je(f.closeText),3)):(K(),ie(c(it),{key:1,class:q(c(l).e("close-btn")),onClick:d},{default:B(()=>[C(c(r))]),_:1},8,["class"]))],64)):ae("v-if",!0)],2)],2),[[Ct,o.value]])]),_:3},8,["name"]))}});var _Q=Be(QQ,[["__file","/home/runner/work/element-plus/element-plus/packages/components/alert/src/alert.vue"]]);const $Q=qt(_Q),Oi=Symbol("formContextKey"),ll=Symbol("formItemContextKey"),Cn=(e,t={})=>{const n=J(void 0),r=t.prop?n:eV("size"),a=t.global?n:gQ(),l=t.form?{size:void 0}:tt(Oi,void 0),o=t.formItem?{size:void 0}:tt(ll,void 0);return X(()=>r.value||c(e)||(o==null?void 0:o.size)||(l==null?void 0:l.size)||a.value||"")},Br=e=>{const t=eV("disabled"),n=tt(Oi,void 0);return X(()=>t.value||c(e)||(n==null?void 0:n.disabled)||!1)},wr=()=>{const e=tt(Oi,void 0),t=tt(ll,void 0);return{form:e,formItem:t}},Jo=(e,{formItemContext:t,disableIdGeneration:n,disableIdManagement:r})=>{n||(n=J(!1)),r||(r=J(!1));const a=J();let l;const o=X(()=>{var i;return!!(!e.label&&t&&t.inputIds&&((i=t.inputIds)==null?void 0:i.length)<=1)});return At(()=>{l=Ve([bn(e,"id"),n],([i,s])=>{const u=i!=null?i:s?void 0:Cr().value;u!==a.value&&(t!=null&&t.removeInputId&&(a.value&&t.removeInputId(a.value),!(r!=null&&r.value)&&!s&&u&&t.addInputId(u)),a.value=u)},{immediate:!0})}),mr(()=>{l&&l(),t!=null&&t.removeInputId&&a.value&&t.removeInputId(a.value)}),{isLabeledByFormItem:o,inputId:a}},e_=Ie({size:{type:String,values:sl},disabled:Boolean}),t_=Ie({...e_,model:Object,rules:{type:ve(Object)},labelPosition:{type:String,values:["left","right","top"],default:"right"},requireAsteriskPosition:{type:String,values:["left","right"],default:"left"},labelWidth:{type:[String,Number],default:""},labelSuffix:{type:String,default:""},inline:Boolean,inlineMessage:Boolean,statusIcon:Boolean,showMessage:{type:Boolean,default:!0},validateOnRuleChange:{type:Boolean,default:!0},hideRequiredAsterisk:Boolean,scrollToError:Boolean,scrollIntoViewOptions:{type:[Object,Boolean]}}),n_={validate:(e,t,n)=>(et(e)||Pt(e))&&Zn(t)&&Pt(n)};function r_(){const e=J([]),t=X(()=>{if(!e.value.length)return"0";const l=Math.max(...e.value);return l?`${l}px`:""});function n(l){const o=e.value.indexOf(l);return o===-1&&t.value,o}function r(l,o){if(l&&o){const i=n(o);e.value.splice(i,1,l)}else l&&e.value.push(l)}function a(l){const o=n(l);o>-1&&e.value.splice(o,1)}return{autoLabelWidth:t,registerLabelWidth:r,deregisterLabelWidth:a}}const Yd=(e,t)=>{const n=Vi(t);return n.length>0?e.filter(r=>r.prop&&n.includes(r.prop)):e},a_="ElForm",l_=$({name:a_}),o_=$({...l_,props:t_,emits:n_,setup(e,{expose:t,emit:n}){const r=e,a=[],l=Cn(),o=ze("form"),i=X(()=>{const{labelPosition:S,inline:y}=r;return[o.b(),o.m(l.value||"default"),{[o.m(`label-${S}`)]:S,[o.m("inline")]:y}]}),s=S=>{a.push(S)},u=S=>{S.prop&&a.splice(a.indexOf(S),1)},d=(S=[])=>{!r.model||Yd(a,S).forEach(y=>y.resetField())},f=(S=[])=>{Yd(a,S).forEach(y=>y.clearValidate())},p=X(()=>!!r.model),b=S=>{if(a.length===0)return[];const y=Yd(a,S);return y.length?y:[]},A=async S=>m(void 0,S),h=async(S=[])=>{if(!p.value)return!1;const y=b(S);if(y.length===0)return!0;let W={};for(const k of y)try{await k.validate("")}catch(V){W={...W,...V}}return Object.keys(W).length===0?!0:Promise.reject(W)},m=async(S=[],y)=>{const W=!ht(y);try{const k=await h(S);return k===!0&&(y==null||y(k)),k}catch(k){if(k instanceof Error)throw k;const V=k;return r.scrollToError&&v(Object.keys(V)[0]),y==null||y(!1,V),W&&Promise.reject(V)}},v=S=>{var y;const W=Yd(a,S)[0];W&&((y=W.$el)==null||y.scrollIntoView(r.scrollIntoViewOptions))};return Ve(()=>r.rules,()=>{r.validateOnRuleChange&&A().catch(S=>void 0)},{deep:!0}),zt(Oi,Bt({...Kn(r),emit:n,resetFields:d,clearValidate:f,validateField:m,addField:s,removeField:u,...r_()})),t({validate:A,validateField:m,resetFields:d,clearValidate:f,scrollToField:v}),(S,y)=>(K(),F("form",{class:q(c(i))},[ue(S.$slots,"default")],2))}});var i_=Be(o_,[["__file","/home/runner/work/element-plus/element-plus/packages/components/form/src/form.vue"]]);function _o(){return _o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},_o.apply(this,arguments)}function s_(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,wc(e,t)}function _1(e){return _1=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)},_1(e)}function wc(e,t){return wc=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(r,a){return r.__proto__=a,r},wc(e,t)}function u_(){if(typeof Reflect>"u"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function xf(e,t,n){return u_()?xf=Reflect.construct.bind():xf=function(a,l,o){var i=[null];i.push.apply(i,l);var s=Function.bind.apply(a,i),u=new s;return o&&wc(u,o.prototype),u},xf.apply(null,arguments)}function c_(e){return Function.toString.call(e).indexOf("[native code]")!==-1}function $1(e){var t=typeof Map=="function"?new Map:void 0;return $1=function(r){if(r===null||!c_(r))return r;if(typeof r!="function")throw new TypeError("Super expression must either be null or a function");if(typeof t<"u"){if(t.has(r))return t.get(r);t.set(r,a)}function a(){return xf(r,arguments,_1(this).constructor)}return a.prototype=Object.create(r.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),wc(a,r)},$1(e)}var d_=/%[sdj%]/g,f_=function(){};typeof process<"u"&&process.env;function eh(e){if(!e||!e.length)return null;var t={};return e.forEach(function(n){var r=n.field;t[r]=t[r]||[],t[r].push(n)}),t}function ta(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var a=0,l=n.length;if(typeof e=="function")return e.apply(null,n);if(typeof e=="string"){var o=e.replace(d_,function(i){if(i==="%%")return"%";if(a>=l)return i;switch(i){case"%s":return String(n[a++]);case"%d":return Number(n[a++]);case"%j":try{return JSON.stringify(n[a++])}catch{return"[Circular]"}break;default:return i}});return o}return e}function p_(e){return e==="string"||e==="url"||e==="hex"||e==="email"||e==="date"||e==="pattern"}function $n(e,t){return!!(e==null||t==="array"&&Array.isArray(e)&&!e.length||p_(t)&&typeof e=="string"&&!e)}function v_(e,t,n){var r=[],a=0,l=e.length;function o(i){r.push.apply(r,i||[]),a++,a===l&&n(r)}e.forEach(function(i){t(i,o)})}function n8(e,t,n){var r=0,a=e.length;function l(o){if(o&&o.length){n(o);return}var i=r;r=r+1,i<a?t(e[i],l):n([])}l([])}function b_(e){var t=[];return Object.keys(e).forEach(function(n){t.push.apply(t,e[n]||[])}),t}var r8=function(e){s_(t,e);function t(n,r){var a;return a=e.call(this,"Async Validation Error")||this,a.errors=n,a.fields=r,a}return t}($1(Error));function h_(e,t,n,r,a){if(t.first){var l=new Promise(function(p,b){var A=function(v){return r(v),v.length?b(new r8(v,eh(v))):p(a)},h=b_(e);n8(h,n,A)});return l.catch(function(p){return p}),l}var o=t.firstFields===!0?Object.keys(e):t.firstFields||[],i=Object.keys(e),s=i.length,u=0,d=[],f=new Promise(function(p,b){var A=function(m){if(d.push.apply(d,m),u++,u===s)return r(d),d.length?b(new r8(d,eh(d))):p(a)};i.length||(r(d),p(a)),i.forEach(function(h){var m=e[h];o.indexOf(h)!==-1?n8(m,n,A):v_(m,n,A)})});return f.catch(function(p){return p}),f}function m_(e){return!!(e&&e.message!==void 0)}function S_(e,t){for(var n=e,r=0;r<t.length;r++){if(n==null)return n;n=n[t[r]]}return n}function a8(e,t){return function(n){var r;return e.fullFields?r=S_(t,e.fullFields):r=t[n.field||e.fullField],m_(n)?(n.field=n.field||e.fullField,n.fieldValue=r,n):{message:typeof n=="function"?n():n,fieldValue:r,field:n.field||e.fullField}}}function l8(e,t){if(t){for(var n in t)if(t.hasOwnProperty(n)){var r=t[n];typeof r=="object"&&typeof e[n]=="object"?e[n]=_o({},e[n],r):e[n]=r}}return e}var qV=function(t,n,r,a,l,o){t.required&&(!r.hasOwnProperty(t.field)||$n(n,o||t.type))&&a.push(ta(l.messages.required,t.fullField))},y_=function(t,n,r,a,l){(/^\s+$/.test(n)||n==="")&&a.push(ta(l.messages.whitespace,t.fullField))},Qd,A_=function(){if(Qd)return Qd;var e="[a-fA-F\\d:]",t=function(W){return W&&W.includeBoundaries?"(?:(?<=\\s|^)(?="+e+")|(?<="+e+")(?=\\s|$))":""},n="(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",r="[a-fA-F\\d]{1,4}",a=(`
(?:
(?:`+r+":){7}(?:"+r+`|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:`+r+":){6}(?:"+n+"|:"+r+`|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:`+r+":){5}(?::"+n+"|(?::"+r+`){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:`+r+":){4}(?:(?::"+r+"){0,1}:"+n+"|(?::"+r+`){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:`+r+":){3}(?:(?::"+r+"){0,2}:"+n+"|(?::"+r+`){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:`+r+":){2}(?:(?::"+r+"){0,3}:"+n+"|(?::"+r+`){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:`+r+":){1}(?:(?::"+r+"){0,4}:"+n+"|(?::"+r+`){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::(?:(?::`+r+"){0,5}:"+n+"|(?::"+r+`){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1
`).replace(/\s*\/\/.*$/gm,"").replace(/\n/g,"").trim(),l=new RegExp("(?:^"+n+"$)|(?:^"+a+"$)"),o=new RegExp("^"+n+"$"),i=new RegExp("^"+a+"$"),s=function(W){return W&&W.exact?l:new RegExp("(?:"+t(W)+n+t(W)+")|(?:"+t(W)+a+t(W)+")","g")};s.v4=function(y){return y&&y.exact?o:new RegExp(""+t(y)+n+t(y),"g")},s.v6=function(y){return y&&y.exact?i:new RegExp(""+t(y)+a+t(y),"g")};var u="(?:(?:[a-z]+:)?//)",d="(?:\\S+(?::\\S*)?@)?",f=s.v4().source,p=s.v6().source,b="(?:(?:[a-z\\u00a1-\\uffff0-9][-_]*)*[a-z\\u00a1-\\uffff0-9]+)",A="(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*",h="(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))",m="(?::\\d{2,5})?",v='(?:[/?#][^\\s"]*)?',S="(?:"+u+"|www\\.)"+d+"(?:localhost|"+f+"|"+p+"|"+b+A+h+")"+m+v;return Qd=new RegExp("(?:^"+S+"$)","i"),Qd},o8={email:/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+\.)+[a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}))$/,hex:/^#?([a-f0-9]{6}|[a-f0-9]{3})$/i},qu={integer:function(t){return qu.number(t)&&parseInt(t,10)===t},float:function(t){return qu.number(t)&&!qu.integer(t)},array:function(t){return Array.isArray(t)},regexp:function(t){if(t instanceof RegExp)return!0;try{return!!new RegExp(t)}catch{return!1}},date:function(t){return typeof t.getTime=="function"&&typeof t.getMonth=="function"&&typeof t.getYear=="function"&&!isNaN(t.getTime())},number:function(t){return isNaN(t)?!1:typeof t=="number"},object:function(t){return typeof t=="object"&&!qu.array(t)},method:function(t){return typeof t=="function"},email:function(t){return typeof t=="string"&&t.length<=320&&!!t.match(o8.email)},url:function(t){return typeof t=="string"&&t.length<=2048&&!!t.match(A_())},hex:function(t){return typeof t=="string"&&!!t.match(o8.hex)}},W_=function(t,n,r,a,l){if(t.required&&n===void 0){qV(t,n,r,a,l);return}var o=["integer","float","array","regexp","object","method","email","number","date","url","hex"],i=t.type;o.indexOf(i)>-1?qu[i](n)||a.push(ta(l.messages.types[i],t.fullField,t.type)):i&&typeof n!==t.type&&a.push(ta(l.messages.types[i],t.fullField,t.type))},k_=function(t,n,r,a,l){var o=typeof t.len=="number",i=typeof t.min=="number",s=typeof t.max=="number",u=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,d=n,f=null,p=typeof n=="number",b=typeof n=="string",A=Array.isArray(n);if(p?f="number":b?f="string":A&&(f="array"),!f)return!1;A&&(d=n.length),b&&(d=n.replace(u,"_").length),o?d!==t.len&&a.push(ta(l.messages[f].len,t.fullField,t.len)):i&&!s&&d<t.min?a.push(ta(l.messages[f].min,t.fullField,t.min)):s&&!i&&d>t.max?a.push(ta(l.messages[f].max,t.fullField,t.max)):i&&s&&(d<t.min||d>t.max)&&a.push(ta(l.messages[f].range,t.fullField,t.min,t.max))},Ei="enum",V_=function(t,n,r,a,l){t[Ei]=Array.isArray(t[Ei])?t[Ei]:[],t[Ei].indexOf(n)===-1&&a.push(ta(l.messages[Ei],t.fullField,t[Ei].join(", ")))},P_=function(t,n,r,a,l){if(t.pattern){if(t.pattern instanceof RegExp)t.pattern.lastIndex=0,t.pattern.test(n)||a.push(ta(l.messages.pattern.mismatch,t.fullField,n,t.pattern));else if(typeof t.pattern=="string"){var o=new RegExp(t.pattern);o.test(n)||a.push(ta(l.messages.pattern.mismatch,t.fullField,n,t.pattern))}}},rn={required:qV,whitespace:y_,type:W_,range:k_,enum:V_,pattern:P_},T_=function(t,n,r,a,l){var o=[],i=t.required||!t.required&&a.hasOwnProperty(t.field);if(i){if($n(n,"string")&&!t.required)return r();rn.required(t,n,a,o,l,"string"),$n(n,"string")||(rn.type(t,n,a,o,l),rn.range(t,n,a,o,l),rn.pattern(t,n,a,o,l),t.whitespace===!0&&rn.whitespace(t,n,a,o,l))}r(o)},K_=function(t,n,r,a,l){var o=[],i=t.required||!t.required&&a.hasOwnProperty(t.field);if(i){if($n(n)&&!t.required)return r();rn.required(t,n,a,o,l),n!==void 0&&rn.type(t,n,a,o,l)}r(o)},N_=function(t,n,r,a,l){var o=[],i=t.required||!t.required&&a.hasOwnProperty(t.field);if(i){if(n===""&&(n=void 0),$n(n)&&!t.required)return r();rn.required(t,n,a,o,l),n!==void 0&&(rn.type(t,n,a,o,l),rn.range(t,n,a,o,l))}r(o)},x_=function(t,n,r,a,l){var o=[],i=t.required||!t.required&&a.hasOwnProperty(t.field);if(i){if($n(n)&&!t.required)return r();rn.required(t,n,a,o,l),n!==void 0&&rn.type(t,n,a,o,l)}r(o)},X_=function(t,n,r,a,l){var o=[],i=t.required||!t.required&&a.hasOwnProperty(t.field);if(i){if($n(n)&&!t.required)return r();rn.required(t,n,a,o,l),$n(n)||rn.type(t,n,a,o,l)}r(o)},g_=function(t,n,r,a,l){var o=[],i=t.required||!t.required&&a.hasOwnProperty(t.field);if(i){if($n(n)&&!t.required)return r();rn.required(t,n,a,o,l),n!==void 0&&(rn.type(t,n,a,o,l),rn.range(t,n,a,o,l))}r(o)},w_=function(t,n,r,a,l){var o=[],i=t.required||!t.required&&a.hasOwnProperty(t.field);if(i){if($n(n)&&!t.required)return r();rn.required(t,n,a,o,l),n!==void 0&&(rn.type(t,n,a,o,l),rn.range(t,n,a,o,l))}r(o)},j_=function(t,n,r,a,l){var o=[],i=t.required||!t.required&&a.hasOwnProperty(t.field);if(i){if(n==null&&!t.required)return r();rn.required(t,n,a,o,l,"array"),n!=null&&(rn.type(t,n,a,o,l),rn.range(t,n,a,o,l))}r(o)},L_=function(t,n,r,a,l){var o=[],i=t.required||!t.required&&a.hasOwnProperty(t.field);if(i){if($n(n)&&!t.required)return r();rn.required(t,n,a,o,l),n!==void 0&&rn.type(t,n,a,o,l)}r(o)},q_="enum",U_=function(t,n,r,a,l){var o=[],i=t.required||!t.required&&a.hasOwnProperty(t.field);if(i){if($n(n)&&!t.required)return r();rn.required(t,n,a,o,l),n!==void 0&&rn[q_](t,n,a,o,l)}r(o)},O_=function(t,n,r,a,l){var o=[],i=t.required||!t.required&&a.hasOwnProperty(t.field);if(i){if($n(n,"string")&&!t.required)return r();rn.required(t,n,a,o,l),$n(n,"string")||rn.pattern(t,n,a,o,l)}r(o)},R_=function(t,n,r,a,l){var o=[],i=t.required||!t.required&&a.hasOwnProperty(t.field);if(i){if($n(n,"date")&&!t.required)return r();if(rn.required(t,n,a,o,l),!$n(n,"date")){var s;n instanceof Date?s=n:s=new Date(n),rn.type(t,s,a,o,l),s&&rn.range(t,s.getTime(),a,o,l)}}r(o)},J_=function(t,n,r,a,l){var o=[],i=Array.isArray(n)?"array":typeof n;rn.required(t,n,a,o,l,i),r(o)},Ob=function(t,n,r,a,l){var o=t.type,i=[],s=t.required||!t.required&&a.hasOwnProperty(t.field);if(s){if($n(n,o)&&!t.required)return r();rn.required(t,n,a,i,l,o),$n(n,o)||rn.type(t,n,a,i,l)}r(i)},F_=function(t,n,r,a,l){var o=[],i=t.required||!t.required&&a.hasOwnProperty(t.field);if(i){if($n(n)&&!t.required)return r();rn.required(t,n,a,o,l)}r(o)},ec={string:T_,method:K_,number:N_,boolean:x_,regexp:X_,integer:g_,float:w_,array:j_,object:L_,enum:U_,pattern:O_,date:R_,url:Ob,hex:Ob,email:Ob,required:J_,any:F_};function th(){return{default:"Validation error on field %s",required:"%s is required",enum:"%s must be one of %s",whitespace:"%s cannot be empty",date:{format:"%s date %s is invalid for format %s",parse:"%s date could not be parsed, %s is invalid ",invalid:"%s date %s is invalid"},types:{string:"%s is not a %s",method:"%s is not a %s (function)",array:"%s is not an %s",object:"%s is not an %s",number:"%s is not a %s",date:"%s is not a %s",boolean:"%s is not a %s",integer:"%s is not an %s",float:"%s is not a %s",regexp:"%s is not a valid %s",email:"%s is not a valid %s",url:"%s is not a valid %s",hex:"%s is not a valid %s"},string:{len:"%s must be exactly %s characters",min:"%s must be at least %s characters",max:"%s cannot be longer than %s characters",range:"%s must be between %s and %s characters"},number:{len:"%s must equal %s",min:"%s cannot be less than %s",max:"%s cannot be greater than %s",range:"%s must be between %s and %s"},array:{len:"%s must be exactly %s in length",min:"%s cannot be less than %s in length",max:"%s cannot be greater than %s in length",range:"%s must be between %s and %s in length"},pattern:{mismatch:"%s value %s does not match pattern %s"},clone:function(){var t=JSON.parse(JSON.stringify(this));return t.clone=this.clone,t}}}var nh=th(),Ad=function(){function e(n){this.rules=null,this._messages=nh,this.define(n)}var t=e.prototype;return t.define=function(r){var a=this;if(!r)throw new Error("Cannot configure a schema with no rules");if(typeof r!="object"||Array.isArray(r))throw new Error("Rules must be an object");this.rules={},Object.keys(r).forEach(function(l){var o=r[l];a.rules[l]=Array.isArray(o)?o:[o]})},t.messages=function(r){return r&&(this._messages=l8(th(),r)),this._messages},t.validate=function(r,a,l){var o=this;a===void 0&&(a={}),l===void 0&&(l=function(){});var i=r,s=a,u=l;if(typeof s=="function"&&(u=s,s={}),!this.rules||Object.keys(this.rules).length===0)return u&&u(null,i),Promise.resolve(i);function d(h){var m=[],v={};function S(W){if(Array.isArray(W)){var k;m=(k=m).concat.apply(k,W)}else m.push(W)}for(var y=0;y<h.length;y++)S(h[y]);m.length?(v=eh(m),u(m,v)):u(null,i)}if(s.messages){var f=this.messages();f===nh&&(f=th()),l8(f,s.messages),s.messages=f}else s.messages=this.messages();var p={},b=s.keys||Object.keys(this.rules);b.forEach(function(h){var m=o.rules[h],v=i[h];m.forEach(function(S){var y=S;typeof y.transform=="function"&&(i===r&&(i=_o({},i)),v=i[h]=y.transform(v)),typeof y=="function"?y={validator:y}:y=_o({},y),y.validator=o.getValidationMethod(y),y.validator&&(y.field=h,y.fullField=y.fullField||h,y.type=o.getType(y),p[h]=p[h]||[],p[h].push({rule:y,value:v,source:i,field:h}))})});var A={};return h_(p,s,function(h,m){var v=h.rule,S=(v.type==="object"||v.type==="array")&&(typeof v.fields=="object"||typeof v.defaultField=="object");S=S&&(v.required||!v.required&&h.value),v.field=h.field;function y(V,T){return _o({},T,{fullField:v.fullField+"."+V,fullFields:v.fullFields?[].concat(v.fullFields,[V]):[V]})}function W(V){V===void 0&&(V=[]);var T=Array.isArray(V)?V:[V];!s.suppressWarning&&T.length&&e.warning("async-validator:",T),T.length&&v.message!==void 0&&(T=[].concat(v.message));var P=T.map(a8(v,i));if(s.first&&P.length)return A[v.field]=1,m(P);if(!S)m(P);else{if(v.required&&!h.value)return v.message!==void 0?P=[].concat(v.message).map(a8(v,i)):s.error&&(P=[s.error(v,ta(s.messages.required,v.field))]),m(P);var x={};v.defaultField&&Object.keys(h.value).map(function(L){x[L]=v.defaultField}),x=_o({},x,h.rule.fields);var g={};Object.keys(x).forEach(function(L){var w=x[L],R=Array.isArray(w)?w:[w];g[L]=R.map(y.bind(null,L))});var j=new e(g);j.messages(s.messages),h.rule.options&&(h.rule.options.messages=s.messages,h.rule.options.error=s.error),j.validate(h.value,h.rule.options||s,function(L){var w=[];P&&P.length&&w.push.apply(w,P),L&&L.length&&w.push.apply(w,L),m(w.length?w:null)})}}var k;if(v.asyncValidator)k=v.asyncValidator(v,h.value,W,h.source,s);else if(v.validator){try{k=v.validator(v,h.value,W,h.source,s)}catch(V){console.error==null||console.error(V),s.suppressValidatorError||setTimeout(function(){throw V},0),W(V.message)}k===!0?W():k===!1?W(typeof v.message=="function"?v.message(v.fullField||v.field):v.message||(v.fullField||v.field)+" fails"):k instanceof Array?W(k):k instanceof Error&&W(k.message)}k&&k.then&&k.then(function(){return W()},function(V){return W(V)})},function(h){d(h)},i)},t.getType=function(r){if(r.type===void 0&&r.pattern instanceof RegExp&&(r.type="pattern"),typeof r.validator!="function"&&r.type&&!ec.hasOwnProperty(r.type))throw new Error(ta("Unknown rule type %s",r.type));return r.type||"string"},t.getValidationMethod=function(r){if(typeof r.validator=="function")return r.validator;var a=Object.keys(r),l=a.indexOf("message");return l!==-1&&a.splice(l,1),a.length===1&&a[0]==="required"?ec.required:ec[this.getType(r)]||void 0},e}();Ad.register=function(t,n){if(typeof n!="function")throw new Error("Cannot register a validator by type, validator is not a function");ec[t]=n};Ad.warning=f_;Ad.messages=nh;Ad.validators=ec;const z_=["","error","validating","success"],H_=Ie({label:String,labelWidth:{type:[String,Number],default:""},prop:{type:ve([String,Array])},required:{type:Boolean,default:void 0},rules:{type:ve([Object,Array])},error:String,validateStatus:{type:String,values:z_},for:String,inlineMessage:{type:[String,Boolean],default:""},showMessage:{type:Boolean,default:!0},size:{type:String,values:sl}}),i8="ElLabelWrap";var Z_=$({name:i8,props:{isAutoWidth:Boolean,updateAll:Boolean},setup(e,{slots:t}){const n=tt(Oi,void 0),r=tt(ll);r||Gn(i8,"usage: <el-form-item><label-wrap /></el-form-item>");const a=ze("form"),l=J(),o=J(0),i=()=>{var d;if((d=l.value)!=null&&d.firstElementChild){const f=window.getComputedStyle(l.value.firstElementChild).width;return Math.ceil(Number.parseFloat(f))}else return 0},s=(d="update")=>{at(()=>{t.default&&e.isAutoWidth&&(d==="update"?o.value=i():d==="remove"&&(n==null||n.deregisterLabelWidth(o.value)))})},u=()=>s("update");return At(()=>{u()}),tn(()=>{s("remove")}),la(()=>u()),Ve(o,(d,f)=>{e.updateAll&&(n==null||n.registerLabelWidth(d,f))}),hr(X(()=>{var d,f;return(f=(d=l.value)==null?void 0:d.firstElementChild)!=null?f:null}),u),()=>{var d,f;if(!t)return null;const{isAutoWidth:p}=e;if(p){const b=n==null?void 0:n.autoLabelWidth,A=r==null?void 0:r.hasLabel,h={};if(A&&b&&b!=="auto"){const m=Math.max(0,Number.parseInt(b,10)-o.value),v=n.labelPosition==="left"?"marginRight":"marginLeft";m&&(h[v]=`${m}px`)}return C("div",{ref:l,class:[a.be("item","label-wrap")],style:h},[(d=t.default)==null?void 0:d.call(t)])}else return C(Qe,{ref:l},[(f=t.default)==null?void 0:f.call(t)])}}});const G_=["role","aria-labelledby"],C_=$({name:"ElFormItem"}),M_=$({...C_,props:H_,setup(e,{expose:t}){const n=e,r=er(),a=tt(Oi,void 0),l=tt(ll,void 0),o=Cn(void 0,{formItem:!1}),i=ze("form-item"),s=Cr().value,u=J([]),d=J(""),f=Y9(d,100),p=J(""),b=J();let A,h=!1;const m=X(()=>{if((a==null?void 0:a.labelPosition)==="top")return{};const me=Ln(n.labelWidth||(a==null?void 0:a.labelWidth)||"");return me?{width:me}:{}}),v=X(()=>{if((a==null?void 0:a.labelPosition)==="top"||(a==null?void 0:a.inline))return{};if(!n.label&&!n.labelWidth&&x)return{};const me=Ln(n.labelWidth||(a==null?void 0:a.labelWidth)||"");return!n.label&&!r.label?{marginLeft:me}:{}}),S=X(()=>[i.b(),i.m(o.value),i.is("error",d.value==="error"),i.is("validating",d.value==="validating"),i.is("success",d.value==="success"),i.is("required",R.value||n.required),i.is("no-asterisk",a==null?void 0:a.hideRequiredAsterisk),(a==null?void 0:a.requireAsteriskPosition)==="right"?"asterisk-right":"asterisk-left",{[i.m("feedback")]:a==null?void 0:a.statusIcon}]),y=X(()=>Zn(n.inlineMessage)?n.inlineMessage:(a==null?void 0:a.inlineMessage)||!1),W=X(()=>[i.e("error"),{[i.em("error","inline")]:y.value}]),k=X(()=>n.prop?Pt(n.prop)?n.prop:n.prop.join("."):""),V=X(()=>!!(n.label||r.label)),T=X(()=>n.for||(u.value.length===1?u.value[0]:void 0)),P=X(()=>!T.value&&V.value),x=!!l,g=X(()=>{const me=a==null?void 0:a.model;if(!(!me||!n.prop))return Kf(me,n.prop).value}),j=X(()=>{const{required:me}=n,ce=[];n.rules&&ce.push(...Vi(n.rules));const Le=a==null?void 0:a.rules;if(Le&&n.prop){const Te=Kf(Le,n.prop).value;Te&&ce.push(...Vi(Te))}if(me!==void 0){const Te=ce.map((xe,_)=>[xe,_]).filter(([xe])=>Object.keys(xe).includes("required"));if(Te.length>0)for(const[xe,_]of Te)xe.required!==me&&(ce[_]={...xe,required:me});else ce.push({required:me})}return ce}),L=X(()=>j.value.length>0),w=me=>j.value.filter(Le=>!Le.trigger||!me?!0:Array.isArray(Le.trigger)?Le.trigger.includes(me):Le.trigger===me).map(({trigger:Le,...Te})=>Te),R=X(()=>j.value.some(me=>me.required)),Z=X(()=>{var me;return f.value==="error"&&n.showMessage&&((me=a==null?void 0:a.showMessage)!=null?me:!0)}),G=X(()=>`${n.label||""}${(a==null?void 0:a.labelSuffix)||""}`),U=me=>{d.value=me},H=me=>{var ce,Le;const{errors:Te,fields:xe}=me;(!Te||!xe)&&console.error(me),U("error"),p.value=Te?(Le=(ce=Te==null?void 0:Te[0])==null?void 0:ce.message)!=null?Le:`${n.prop} is required`:"",a==null||a.emit("validate",n.prop,!1,p.value)},O=()=>{U("success"),a==null||a.emit("validate",n.prop,!0,"")},D=async me=>{const ce=k.value;return new Ad({[ce]:me}).validate({[ce]:g.value},{firstFields:!0}).then(()=>(O(),!0)).catch(Te=>(H(Te),Promise.reject(Te)))},Y=async(me,ce)=>{if(h||!n.prop)return!1;const Le=ht(ce);if(!L.value)return ce==null||ce(!1),!1;const Te=w(me);return Te.length===0?(ce==null||ce(!0),!0):(U("validating"),D(Te).then(()=>(ce==null||ce(!0),!0)).catch(xe=>{const{fields:_}=xe;return ce==null||ce(!1,_),Le?!1:Promise.reject(_)}))},Q=()=>{U(""),p.value="",h=!1},ee=async()=>{const me=a==null?void 0:a.model;if(!me||!n.prop)return;const ce=Kf(me,n.prop);h=!0,ce.value=x3(A),await at(),Q(),h=!1},oe=me=>{u.value.includes(me)||u.value.push(me)},Ne=me=>{u.value=u.value.filter(ce=>ce!==me)};Ve(()=>n.error,me=>{p.value=me||"",U(me?"error":"")},{immediate:!0}),Ve(()=>n.validateStatus,me=>U(me||""));const pe=Bt({...Kn(n),$el:b,size:o,validateState:d,labelId:s,inputIds:u,isGroup:P,hasLabel:V,addInputId:oe,removeInputId:Ne,resetField:ee,clearValidate:Q,validate:Y});return zt(ll,pe),At(()=>{n.prop&&(a==null||a.addField(pe),A=x3(g.value))}),tn(()=>{a==null||a.removeField(pe)}),t({size:o,validateMessage:p,validateState:d,validate:Y,clearValidate:Q,resetField:ee}),(me,ce)=>{var Le;return K(),F("div",{ref_key:"formItemRef",ref:b,class:q(c(S)),role:c(P)?"group":void 0,"aria-labelledby":c(P)?c(s):void 0},[C(c(Z_),{"is-auto-width":c(m).width==="auto","update-all":((Le=c(a))==null?void 0:Le.labelWidth)==="auto"},{default:B(()=>[c(V)?(K(),ie(Ot(c(T)?"label":"div"),{key:0,id:c(s),for:c(T),class:q(c(i).e("label")),style:lt(c(m))},{default:B(()=>[ue(me.$slots,"label",{label:c(G)},()=>[Xt(je(c(G)),1)])]),_:3},8,["id","for","class","style"])):ae("v-if",!0)]),_:3},8,["is-auto-width","update-all"]),z("div",{class:q(c(i).e("content")),style:lt(c(v))},[ue(me.$slots,"default"),C(bv,{name:`${c(i).namespace.value}-zoom-in-top`},{default:B(()=>[c(Z)?ue(me.$slots,"error",{key:0,error:p.value},()=>[z("div",{class:q(c(W))},je(p.value),3)]):ae("v-if",!0)]),_:3},8,["name"])],6)],10,G_)}}});var UV=Be(M_,[["__file","/home/runner/work/element-plus/element-plus/packages/components/form/src/form-item.vue"]]);const D_=qt(i_,{FormItem:UV}),E_=Nn(UV);let Va;const I_=`
  height:0 !important;
  visibility:hidden !important;
  ${Y4()?"":"overflow:hidden !important;"}
  position:absolute !important;
  z-index:-1000 !important;
  top:0 !important;
  right:0 !important;
`,B_=["letter-spacing","line-height","padding-top","padding-bottom","font-family","font-weight","font-size","text-rendering","text-transform","width","text-indent","padding-left","padding-right","border-width","box-sizing"];function Y_(e){const t=window.getComputedStyle(e),n=t.getPropertyValue("box-sizing"),r=Number.parseFloat(t.getPropertyValue("padding-bottom"))+Number.parseFloat(t.getPropertyValue("padding-top")),a=Number.parseFloat(t.getPropertyValue("border-bottom-width"))+Number.parseFloat(t.getPropertyValue("border-top-width"));return{contextStyle:B_.map(o=>`${o}:${t.getPropertyValue(o)}`).join(";"),paddingSize:r,borderSize:a,boxSizing:n}}function s8(e,t=1,n){var r;Va||(Va=document.createElement("textarea"),document.body.appendChild(Va));const{paddingSize:a,borderSize:l,boxSizing:o,contextStyle:i}=Y_(e);Va.setAttribute("style",`${i};${I_}`),Va.value=e.value||e.placeholder||"";let s=Va.scrollHeight;const u={};o==="border-box"?s=s+l:o==="content-box"&&(s=s-a),Va.value="";const d=Va.scrollHeight-a;if(mt(t)){let f=d*t;o==="border-box"&&(f=f+a+l),s=Math.max(f,s),u.minHeight=`${f}px`}if(mt(n)){let f=d*n;o==="border-box"&&(f=f+a+l),s=Math.min(f,s)}return u.height=`${s}px`,(r=Va.parentNode)==null||r.removeChild(Va),Va=void 0,u}const Q_=Ie({id:{type:String,default:void 0},size:ur,disabled:Boolean,modelValue:{type:ve([String,Number,Object]),default:""},type:{type:String,default:"text"},resize:{type:String,values:["none","both","horizontal","vertical"]},autosize:{type:ve([Boolean,Object]),default:!1},autocomplete:{type:String,default:"off"},formatter:{type:Function},parser:{type:Function},placeholder:{type:String},form:{type:String},readonly:{type:Boolean,default:!1},clearable:{type:Boolean,default:!1},showPassword:{type:Boolean,default:!1},showWordLimit:{type:Boolean,default:!1},suffixIcon:{type:un},prefixIcon:{type:un},containerRole:{type:String,default:void 0},label:{type:String,default:void 0},tabindex:{type:[String,Number],default:0},validateEvent:{type:Boolean,default:!0},inputStyle:{type:ve([Object,Array,String]),default:()=>An({})},autofocus:{type:Boolean,default:!1}}),__={[Rt]:e=>Pt(e),input:e=>Pt(e),change:e=>Pt(e),focus:e=>e instanceof FocusEvent,blur:e=>e instanceof FocusEvent,clear:()=>!0,mouseleave:e=>e instanceof MouseEvent,mouseenter:e=>e instanceof MouseEvent,keydown:e=>e instanceof Event,compositionstart:e=>e instanceof CompositionEvent,compositionupdate:e=>e instanceof CompositionEvent,compositionend:e=>e instanceof CompositionEvent},$_=["role"],e$=["id","type","disabled","formatter","parser","readonly","autocomplete","tabindex","aria-label","placeholder","form","autofocus"],t$=["id","tabindex","disabled","readonly","autocomplete","aria-label","placeholder","form","autofocus"],n$=$({name:"ElInput",inheritAttrs:!1}),r$=$({...n$,props:Q_,emits:__,setup(e,{expose:t,emit:n}){const r=e,a=Xo(),l=er(),o=X(()=>{const Re={};return r.containerRole==="combobox"&&(Re["aria-haspopup"]=a["aria-haspopup"],Re["aria-owns"]=a["aria-owns"],Re["aria-expanded"]=a["aria-expanded"]),Re}),i=X(()=>[r.type==="textarea"?m.b():h.b(),h.m(b.value),h.is("disabled",A.value),h.is("exceed",oe.value),{[h.b("group")]:l.prepend||l.append,[h.bm("group","append")]:l.append,[h.bm("group","prepend")]:l.prepend,[h.m("prefix")]:l.prefix||r.prefixIcon,[h.m("suffix")]:l.suffix||r.suffixIcon||r.clearable||r.showPassword,[h.bm("suffix","password-clear")]:D.value&&Y.value},a.class]),s=X(()=>[h.e("wrapper"),h.is("focus",g.value)]),u=Gm({excludeKeys:X(()=>Object.keys(o.value))}),{form:d,formItem:f}=wr(),{inputId:p}=Jo(r,{formItemContext:f}),b=Cn(),A=Br(),h=ze("input"),m=ze("textarea"),v=nn(),S=nn(),y=J(!1),W=J(!1),k=J(!1),V=J(),T=nn(r.inputStyle),P=X(()=>v.value||S.value),{wrapperRef:x,isFocused:g,handleFocus:j,handleBlur:L}=wV(P,{afterBlur(){var Re;r.validateEvent&&((Re=f==null?void 0:f.validate)==null||Re.call(f,"blur").catch($e=>void 0))}}),w=X(()=>{var Re;return(Re=d==null?void 0:d.statusIcon)!=null?Re:!1}),R=X(()=>(f==null?void 0:f.validateState)||""),Z=X(()=>R.value&&Zm[R.value]),G=X(()=>k.value?dB:$D),U=X(()=>[a.style,r.inputStyle]),H=X(()=>[r.inputStyle,T.value,{resize:r.resize}]),O=X(()=>On(r.modelValue)?"":String(r.modelValue)),D=X(()=>r.clearable&&!A.value&&!r.readonly&&!!O.value&&(g.value||y.value)),Y=X(()=>r.showPassword&&!A.value&&!r.readonly&&!!O.value&&(!!O.value||g.value)),Q=X(()=>r.showWordLimit&&!!u.value.maxlength&&(r.type==="text"||r.type==="textarea")&&!A.value&&!r.readonly&&!r.showPassword),ee=X(()=>O.value.length),oe=X(()=>!!Q.value&&ee.value>Number(u.value.maxlength)),Ne=X(()=>!!l.suffix||!!r.suffixIcon||D.value||r.showPassword||Q.value||!!R.value&&w.value),[pe,me]=xQ(v);hr(S,Re=>{if(Te(),!Q.value||r.resize!=="both")return;const $e=Re[0],{width:dt}=$e.contentRect;V.value={right:`calc(100% - ${dt+15+6}px)`}});const ce=()=>{const{type:Re,autosize:$e}=r;if(!(!Mt||Re!=="textarea"||!S.value))if($e){const dt=Jt($e)?$e.minRows:void 0,yt=Jt($e)?$e.maxRows:void 0,gt=s8(S.value,dt,yt);T.value={overflowY:"hidden",...gt},at(()=>{S.value.offsetHeight,T.value=gt})}else T.value={minHeight:s8(S.value).minHeight}},Te=(Re=>{let $e=!1;return()=>{var dt;if($e||!r.autosize)return;((dt=S.value)==null?void 0:dt.offsetParent)===null||(Re(),$e=!0)}})(ce),xe=()=>{const Re=P.value,$e=r.formatter?r.formatter(O.value):O.value;!Re||Re.value===$e||(Re.value=$e)},_=async Re=>{pe();let{value:$e}=Re.target;if(r.formatter&&($e=r.parser?r.parser($e):$e),!W.value){if($e===O.value){xe();return}n(Rt,$e),n("input",$e),await at(),xe(),me()}},re=Re=>{n("change",Re.target.value)},ye=Re=>{n("compositionstart",Re),W.value=!0},ge=Re=>{var $e;n("compositionupdate",Re);const dt=($e=Re.target)==null?void 0:$e.value,yt=dt[dt.length-1]||"";W.value=!Fv(yt)},Fe=Re=>{n("compositionend",Re),W.value&&(W.value=!1,_(Re))},Ae=()=>{k.value=!k.value,Ze()},Ze=async()=>{var Re;await at(),(Re=P.value)==null||Re.focus()},Ue=()=>{var Re;return(Re=P.value)==null?void 0:Re.blur()},Pe=Re=>{y.value=!1,n("mouseleave",Re)},qe=Re=>{y.value=!0,n("mouseenter",Re)},De=Re=>{n("keydown",Re)},Me=()=>{var Re;(Re=P.value)==null||Re.select()},_e=()=>{n(Rt,""),n("change",""),n("clear"),n("input","")};return Ve(()=>r.modelValue,()=>{var Re;at(()=>ce()),r.validateEvent&&((Re=f==null?void 0:f.validate)==null||Re.call(f,"change").catch($e=>void 0))}),Ve(O,()=>xe()),Ve(()=>r.type,async()=>{await at(),xe(),ce()}),At(()=>{!r.formatter&&r.parser,xe(),at(ce)}),t({input:v,textarea:S,ref:P,textareaStyle:H,autosize:bn(r,"autosize"),focus:Ze,blur:Ue,select:Me,clear:_e,resizeTextarea:ce}),(Re,$e)=>Vt((K(),F("div",Ut(c(o),{class:c(i),style:c(U),role:Re.containerRole,onMouseenter:qe,onMouseleave:Pe}),[ae(" input "),Re.type!=="textarea"?(K(),F(Qe,{key:0},[ae(" prepend slot "),Re.$slots.prepend?(K(),F("div",{key:0,class:q(c(h).be("group","prepend"))},[ue(Re.$slots,"prepend")],2)):ae("v-if",!0),z("div",{ref_key:"wrapperRef",ref:x,class:q(c(s))},[ae(" prefix slot "),Re.$slots.prefix||Re.prefixIcon?(K(),F("span",{key:0,class:q(c(h).e("prefix"))},[z("span",{class:q(c(h).e("prefix-inner"))},[ue(Re.$slots,"prefix"),Re.prefixIcon?(K(),ie(c(it),{key:0,class:q(c(h).e("icon"))},{default:B(()=>[(K(),ie(Ot(Re.prefixIcon)))]),_:1},8,["class"])):ae("v-if",!0)],2)],2)):ae("v-if",!0),z("input",Ut({id:c(p),ref_key:"input",ref:v,class:c(h).e("inner")},c(u),{type:Re.showPassword?k.value?"text":"password":Re.type,disabled:c(A),formatter:Re.formatter,parser:Re.parser,readonly:Re.readonly,autocomplete:Re.autocomplete,tabindex:Re.tabindex,"aria-label":Re.label,placeholder:Re.placeholder,style:Re.inputStyle,form:r.form,autofocus:r.autofocus,onCompositionstart:ye,onCompositionupdate:ge,onCompositionend:Fe,onInput:_,onFocus:$e[0]||($e[0]=(...dt)=>c(j)&&c(j)(...dt)),onBlur:$e[1]||($e[1]=(...dt)=>c(L)&&c(L)(...dt)),onChange:re,onKeydown:De}),null,16,e$),ae(" suffix slot "),c(Ne)?(K(),F("span",{key:1,class:q(c(h).e("suffix"))},[z("span",{class:q(c(h).e("suffix-inner"))},[!c(D)||!c(Y)||!c(Q)?(K(),F(Qe,{key:0},[ue(Re.$slots,"suffix"),Re.suffixIcon?(K(),ie(c(it),{key:0,class:q(c(h).e("icon"))},{default:B(()=>[(K(),ie(Ot(Re.suffixIcon)))]),_:1},8,["class"])):ae("v-if",!0)],64)):ae("v-if",!0),c(D)?(K(),ie(c(it),{key:1,class:q([c(h).e("icon"),c(h).e("clear")]),onMousedown:pt(c(en),["prevent"]),onClick:_e},{default:B(()=>[C(c(qo))]),_:1},8,["class","onMousedown"])):ae("v-if",!0),c(Y)?(K(),ie(c(it),{key:2,class:q([c(h).e("icon"),c(h).e("password")]),onClick:Ae},{default:B(()=>[(K(),ie(Ot(c(G))))]),_:1},8,["class"])):ae("v-if",!0),c(Q)?(K(),F("span",{key:3,class:q(c(h).e("count"))},[z("span",{class:q(c(h).e("count-inner"))},je(c(ee))+" / "+je(c(u).maxlength),3)],2)):ae("v-if",!0),c(R)&&c(Z)&&c(w)?(K(),ie(c(it),{key:4,class:q([c(h).e("icon"),c(h).e("validateIcon"),c(h).is("loading",c(R)==="validating")])},{default:B(()=>[(K(),ie(Ot(c(Z))))]),_:1},8,["class"])):ae("v-if",!0)],2)],2)):ae("v-if",!0)],2),ae(" append slot "),Re.$slots.append?(K(),F("div",{key:1,class:q(c(h).be("group","append"))},[ue(Re.$slots,"append")],2)):ae("v-if",!0)],64)):(K(),F(Qe,{key:1},[ae(" textarea "),z("textarea",Ut({id:c(p),ref_key:"textarea",ref:S,class:c(m).e("inner")},c(u),{tabindex:Re.tabindex,disabled:c(A),readonly:Re.readonly,autocomplete:Re.autocomplete,style:c(H),"aria-label":Re.label,placeholder:Re.placeholder,form:r.form,autofocus:r.autofocus,onCompositionstart:ye,onCompositionupdate:ge,onCompositionend:Fe,onInput:_,onFocus:$e[2]||($e[2]=(...dt)=>c(j)&&c(j)(...dt)),onBlur:$e[3]||($e[3]=(...dt)=>c(L)&&c(L)(...dt)),onChange:re,onKeydown:De}),null,16,t$),c(Q)?(K(),F("span",{key:0,style:lt(V.value),class:q(c(h).e("count"))},je(c(ee))+" / "+je(c(u).maxlength),7)):ae("v-if",!0)],64))],16,$_)),[[Ct,Re.type!=="hidden"]])}});var a$=Be(r$,[["__file","/home/runner/work/element-plus/element-plus/packages/components/input/src/input.vue"]]);const vr=qt(a$),cs=4,OV={vertical:{offset:"offsetHeight",scroll:"scrollTop",scrollSize:"scrollHeight",size:"height",key:"vertical",axis:"Y",client:"clientY",direction:"top"},horizontal:{offset:"offsetWidth",scroll:"scrollLeft",scrollSize:"scrollWidth",size:"width",key:"horizontal",axis:"X",client:"clientX",direction:"left"}},l$=({move:e,size:t,bar:n})=>({[n.size]:t,transform:`translate${n.axis}(${e}%)`}),RV=Symbol("scrollbarContextKey"),o$=Ie({vertical:Boolean,size:String,move:Number,ratio:{type:Number,required:!0},always:Boolean}),i$="Thumb",s$=$({__name:"thumb",props:o$,setup(e){const t=e,n=tt(RV),r=ze("scrollbar");n||Gn(i$,"can not inject scrollbar context");const a=J(),l=J(),o=J({}),i=J(!1);let s=!1,u=!1,d=Mt?document.onselectstart:null;const f=X(()=>OV[t.vertical?"vertical":"horizontal"]),p=X(()=>l$({size:t.size,move:t.move,bar:f.value})),b=X(()=>a.value[f.value.offset]**2/n.wrapElement[f.value.scrollSize]/t.ratio/l.value[f.value.offset]),A=V=>{var T;if(V.stopPropagation(),V.ctrlKey||[1,2].includes(V.button))return;(T=window.getSelection())==null||T.removeAllRanges(),m(V);const P=V.currentTarget;!P||(o.value[f.value.axis]=P[f.value.offset]-(V[f.value.client]-P.getBoundingClientRect()[f.value.direction]))},h=V=>{if(!l.value||!a.value||!n.wrapElement)return;const T=Math.abs(V.target.getBoundingClientRect()[f.value.direction]-V[f.value.client]),P=l.value[f.value.offset]/2,x=(T-P)*100*b.value/a.value[f.value.offset];n.wrapElement[f.value.scroll]=x*n.wrapElement[f.value.scrollSize]/100},m=V=>{V.stopImmediatePropagation(),s=!0,document.addEventListener("mousemove",v),document.addEventListener("mouseup",S),d=document.onselectstart,document.onselectstart=()=>!1},v=V=>{if(!a.value||!l.value||s===!1)return;const T=o.value[f.value.axis];if(!T)return;const P=(a.value.getBoundingClientRect()[f.value.direction]-V[f.value.client])*-1,x=l.value[f.value.offset]-T,g=(P-x)*100*b.value/a.value[f.value.offset];n.wrapElement[f.value.scroll]=g*n.wrapElement[f.value.scrollSize]/100},S=()=>{s=!1,o.value[f.value.axis]=0,document.removeEventListener("mousemove",v),document.removeEventListener("mouseup",S),k(),u&&(i.value=!1)},y=()=>{u=!1,i.value=!!t.size},W=()=>{u=!0,i.value=s};tn(()=>{k(),document.removeEventListener("mouseup",S)});const k=()=>{document.onselectstart!==d&&(document.onselectstart=d)};return hn(bn(n,"scrollbarElement"),"mousemove",y),hn(bn(n,"scrollbarElement"),"mouseleave",W),(V,T)=>(K(),ie(fn,{name:c(r).b("fade"),persisted:""},{default:B(()=>[Vt(z("div",{ref_key:"instance",ref:a,class:q([c(r).e("bar"),c(r).is(c(f).key)]),onMousedown:h},[z("div",{ref_key:"thumb",ref:l,class:q(c(r).e("thumb")),style:lt(c(p)),onMousedown:A},null,38)],34),[[Ct,V.always||i.value]])]),_:1},8,["name"]))}});var u8=Be(s$,[["__file","/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/thumb.vue"]]);const u$=Ie({always:{type:Boolean,default:!0},width:String,height:String,ratioX:{type:Number,default:1},ratioY:{type:Number,default:1}}),c$=$({__name:"bar",props:u$,setup(e,{expose:t}){const n=e,r=J(0),a=J(0);return t({handleScroll:o=>{if(o){const i=o.offsetHeight-cs,s=o.offsetWidth-cs;a.value=o.scrollTop*100/i*n.ratioY,r.value=o.scrollLeft*100/s*n.ratioX}}}),(o,i)=>(K(),F(Qe,null,[C(u8,{move:r.value,ratio:o.ratioX,size:o.width,always:o.always},null,8,["move","ratio","size","always"]),C(u8,{move:a.value,ratio:o.ratioY,size:o.height,vertical:"",always:o.always},null,8,["move","ratio","size","always"])],64))}});var d$=Be(c$,[["__file","/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/bar.vue"]]);const f$=Ie({height:{type:[String,Number],default:""},maxHeight:{type:[String,Number],default:""},native:{type:Boolean,default:!1},wrapStyle:{type:ve([String,Object,Array]),default:""},wrapClass:{type:[String,Array],default:""},viewClass:{type:[String,Array],default:""},viewStyle:{type:[String,Array,Object],default:""},noresize:Boolean,tag:{type:String,default:"div"},always:Boolean,minSize:{type:Number,default:20},id:String,role:String,ariaLabel:String,ariaOrientation:{type:String,values:["horizontal","vertical"]}}),p$={scroll:({scrollTop:e,scrollLeft:t})=>[e,t].every(mt)},v$="ElScrollbar",b$=$({name:v$}),h$=$({...b$,props:f$,emits:p$,setup(e,{expose:t,emit:n}){const r=e,a=ze("scrollbar");let l,o;const i=J(),s=J(),u=J(),d=J("0"),f=J("0"),p=J(),b=J(1),A=J(1),h=X(()=>{const T={};return r.height&&(T.height=Ln(r.height)),r.maxHeight&&(T.maxHeight=Ln(r.maxHeight)),[r.wrapStyle,T]}),m=X(()=>[r.wrapClass,a.e("wrap"),{[a.em("wrap","hidden-default")]:!r.native}]),v=X(()=>[a.e("view"),r.viewClass]),S=()=>{var T;s.value&&((T=p.value)==null||T.handleScroll(s.value),n("scroll",{scrollTop:s.value.scrollTop,scrollLeft:s.value.scrollLeft}))};function y(T,P){Jt(T)?s.value.scrollTo(T):mt(T)&&mt(P)&&s.value.scrollTo(T,P)}const W=T=>{!mt(T)||(s.value.scrollTop=T)},k=T=>{!mt(T)||(s.value.scrollLeft=T)},V=()=>{if(!s.value)return;const T=s.value.offsetHeight-cs,P=s.value.offsetWidth-cs,x=T**2/s.value.scrollHeight,g=P**2/s.value.scrollWidth,j=Math.max(x,r.minSize),L=Math.max(g,r.minSize);b.value=x/(T-x)/(j/(T-j)),A.value=g/(P-g)/(L/(P-L)),f.value=j+cs<T?`${j}px`:"",d.value=L+cs<P?`${L}px`:""};return Ve(()=>r.noresize,T=>{T?(l==null||l(),o==null||o()):({stop:l}=hr(u,V),o=hn("resize",V))},{immediate:!0}),Ve(()=>[r.maxHeight,r.height],()=>{r.native||at(()=>{var T;V(),s.value&&((T=p.value)==null||T.handleScroll(s.value))})}),zt(RV,Bt({scrollbarElement:i,wrapElement:s})),At(()=>{r.native||at(()=>{V()})}),la(()=>V()),t({wrapRef:s,update:V,scrollTo:y,setScrollTop:W,setScrollLeft:k,handleScroll:S}),(T,P)=>(K(),F("div",{ref_key:"scrollbarRef",ref:i,class:q(c(a).b())},[z("div",{ref_key:"wrapRef",ref:s,class:q(c(m)),style:lt(c(h)),onScroll:S},[(K(),ie(Ot(T.tag),{id:T.id,ref_key:"resizeRef",ref:u,class:q(c(v)),style:lt(T.viewStyle),role:T.role,"aria-label":T.ariaLabel,"aria-orientation":T.ariaOrientation},{default:B(()=>[ue(T.$slots,"default")]),_:3},8,["id","class","style","role","aria-label","aria-orientation"]))],38),T.native?ae("v-if",!0):(K(),ie(d$,{key:0,ref_key:"barRef",ref:p,height:f.value,width:d.value,always:T.always,"ratio-x":A.value,"ratio-y":b.value},null,8,["height","width","always","ratio-x","ratio-y"]))],2))}});var m$=Be(h$,[["__file","/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/scrollbar.vue"]]);const Cl=qt(m$),i2=Symbol("popper"),JV=Symbol("popperContent"),S$=["dialog","grid","group","listbox","menu","navigation","tooltip","tree"],FV=Ie({role:{type:String,values:S$,default:"tooltip"}}),y$=$({name:"ElPopper",inheritAttrs:!1}),A$=$({...y$,props:FV,setup(e,{expose:t}){const n=e,r=J(),a=J(),l=J(),o=J(),i=X(()=>n.role),s={triggerRef:r,popperInstanceRef:a,contentRef:l,referenceRef:o,role:i};return t(s),zt(i2,s),(u,d)=>ue(u.$slots,"default")}});var W$=Be(A$,[["__file","/home/runner/work/element-plus/element-plus/packages/components/popper/src/popper.vue"]]);const zV=Ie({arrowOffset:{type:Number,default:5}}),k$=$({name:"ElPopperArrow",inheritAttrs:!1}),V$=$({...k$,props:zV,setup(e,{expose:t}){const n=e,r=ze("popper"),{arrowOffset:a,arrowRef:l,arrowStyle:o}=tt(JV,void 0);return Ve(()=>n.arrowOffset,i=>{a.value=i}),tn(()=>{l.value=void 0}),t({arrowRef:l}),(i,s)=>(K(),F("span",{ref_key:"arrowRef",ref:l,class:q(c(r).e("arrow")),style:lt(c(o)),"data-popper-arrow":""},null,6))}});var P$=Be(V$,[["__file","/home/runner/work/element-plus/element-plus/packages/components/popper/src/arrow.vue"]]);const T$="ElOnlyChild",HV=$({name:T$,setup(e,{slots:t,attrs:n}){var r;const a=tt(hV),l=rQ((r=a==null?void 0:a.setForwardRef)!=null?r:en);return()=>{var o;const i=(o=t.default)==null?void 0:o.call(t,n);if(!i||i.length>1)return null;const s=ZV(i);return s?Vt(Ua(s,n),[[l]]):null}}});function ZV(e){if(!e)return null;const t=e;for(const n of t){if(Jt(n))switch(n.type){case Qn:continue;case mo:case"svg":return c8(n);case Qe:return ZV(n.children);default:return n}return c8(n)}return null}function c8(e){const t=ze("only-child");return C("span",{class:t.e("content")},[e])}const GV=Ie({virtualRef:{type:ve(Object)},virtualTriggering:Boolean,onMouseenter:{type:ve(Function)},onMouseleave:{type:ve(Function)},onClick:{type:ve(Function)},onKeydown:{type:ve(Function)},onFocus:{type:ve(Function)},onBlur:{type:ve(Function)},onContextmenu:{type:ve(Function)},id:String,open:Boolean}),K$=$({name:"ElPopperTrigger",inheritAttrs:!1}),N$=$({...K$,props:GV,setup(e,{expose:t}){const n=e,{role:r,triggerRef:a}=tt(i2,void 0);nQ(a);const l=X(()=>i.value?n.id:void 0),o=X(()=>{if(r&&r.value==="tooltip")return n.open&&n.id?n.id:void 0}),i=X(()=>{if(r&&r.value!=="tooltip")return r.value}),s=X(()=>i.value?`${n.open}`:void 0);let u;return At(()=>{Ve(()=>n.virtualRef,d=>{d&&(a.value=Fr(d))},{immediate:!0}),Ve(a,(d,f)=>{u==null||u(),u=void 0,ha(d)&&(["onMouseenter","onMouseleave","onClick","onKeydown","onFocus","onBlur","onContextmenu"].forEach(p=>{var b;const A=n[p];A&&(d.addEventListener(p.slice(2).toLowerCase(),A),(b=f==null?void 0:f.removeEventListener)==null||b.call(f,p.slice(2).toLowerCase(),A))}),u=Ve([l,o,i,s],p=>{["aria-controls","aria-describedby","aria-haspopup","aria-expanded"].forEach((b,A)=>{On(p[A])?d.removeAttribute(b):d.setAttribute(b,p[A])})},{immediate:!0})),ha(f)&&["aria-controls","aria-describedby","aria-haspopup","aria-expanded"].forEach(p=>f.removeAttribute(p))},{immediate:!0})}),tn(()=>{u==null||u(),u=void 0}),t({triggerRef:a}),(d,f)=>d.virtualTriggering?ae("v-if",!0):(K(),ie(c(HV),Ut({key:0},d.$attrs,{"aria-controls":c(l),"aria-describedby":c(o),"aria-expanded":c(s),"aria-haspopup":c(i)}),{default:B(()=>[ue(d.$slots,"default")]),_:3},16,["aria-controls","aria-describedby","aria-expanded","aria-haspopup"]))}});var x$=Be(N$,[["__file","/home/runner/work/element-plus/element-plus/packages/components/popper/src/trigger.vue"]]);const Rb="focus-trap.focus-after-trapped",Jb="focus-trap.focus-after-released",X$="focus-trap.focusout-prevented",d8={cancelable:!0,bubbles:!1},g$={cancelable:!0,bubbles:!1},f8="focusAfterTrapped",p8="focusAfterReleased",s2=Symbol("elFocusTrap"),u2=J(),Ev=J(0),c2=J(0);let _d=0;const CV=e=>{const t=[],n=document.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,{acceptNode:r=>{const a=r.tagName==="INPUT"&&r.type==="hidden";return r.disabled||r.hidden||a?NodeFilter.FILTER_SKIP:r.tabIndex>=0||r===document.activeElement?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP}});for(;n.nextNode();)t.push(n.currentNode);return t},v8=(e,t)=>{for(const n of e)if(!w$(n,t))return n},w$=(e,t)=>{if(getComputedStyle(e).visibility==="hidden")return!0;for(;e;){if(t&&e===t)return!1;if(getComputedStyle(e).display==="none")return!0;e=e.parentElement}return!1},j$=e=>{const t=CV(e),n=v8(t,e),r=v8(t.reverse(),e);return[n,r]},L$=e=>e instanceof HTMLInputElement&&"select"in e,Ql=(e,t)=>{if(e&&e.focus){const n=document.activeElement;e.focus({preventScroll:!0}),c2.value=window.performance.now(),e!==n&&L$(e)&&t&&e.select()}};function b8(e,t){const n=[...e],r=e.indexOf(t);return r!==-1&&n.splice(r,1),n}const q$=()=>{let e=[];return{push:r=>{const a=e[0];a&&r!==a&&a.pause(),e=b8(e,r),e.unshift(r)},remove:r=>{var a,l;e=b8(e,r),(l=(a=e[0])==null?void 0:a.resume)==null||l.call(a)}}},U$=(e,t=!1)=>{const n=document.activeElement;for(const r of e)if(Ql(r,t),document.activeElement!==n)return},h8=q$(),O$=()=>Ev.value>c2.value,$d=()=>{u2.value="pointer",Ev.value=window.performance.now()},m8=()=>{u2.value="keyboard",Ev.value=window.performance.now()},R$=()=>(At(()=>{_d===0&&(document.addEventListener("mousedown",$d),document.addEventListener("touchstart",$d),document.addEventListener("keydown",m8)),_d++}),tn(()=>{_d--,_d<=0&&(document.removeEventListener("mousedown",$d),document.removeEventListener("touchstart",$d),document.removeEventListener("keydown",m8))}),{focusReason:u2,lastUserFocusTimestamp:Ev,lastAutomatedFocusTimestamp:c2}),ef=e=>new CustomEvent(X$,{...g$,detail:e}),J$=$({name:"ElFocusTrap",inheritAttrs:!1,props:{loop:Boolean,trapped:Boolean,focusTrapEl:Object,focusStartEl:{type:[Object,String],default:"first"}},emits:[f8,p8,"focusin","focusout","focusout-prevented","release-requested"],setup(e,{emit:t}){const n=J();let r,a;const{focusReason:l}=R$();_Y(A=>{e.trapped&&!o.paused&&t("release-requested",A)});const o={paused:!1,pause(){this.paused=!0},resume(){this.paused=!1}},i=A=>{if(!e.loop&&!e.trapped||o.paused)return;const{key:h,altKey:m,ctrlKey:v,metaKey:S,currentTarget:y,shiftKey:W}=A,{loop:k}=e,V=h===ut.tab&&!m&&!v&&!S,T=document.activeElement;if(V&&T){const P=y,[x,g]=j$(P);if(x&&g){if(!W&&T===g){const L=ef({focusReason:l.value});t("focusout-prevented",L),L.defaultPrevented||(A.preventDefault(),k&&Ql(x,!0))}else if(W&&[x,P].includes(T)){const L=ef({focusReason:l.value});t("focusout-prevented",L),L.defaultPrevented||(A.preventDefault(),k&&Ql(g,!0))}}else if(T===P){const L=ef({focusReason:l.value});t("focusout-prevented",L),L.defaultPrevented||A.preventDefault()}}};zt(s2,{focusTrapRef:n,onKeydown:i}),Ve(()=>e.focusTrapEl,A=>{A&&(n.value=A)},{immediate:!0}),Ve([n],([A],[h])=>{A&&(A.addEventListener("keydown",i),A.addEventListener("focusin",d),A.addEventListener("focusout",f)),h&&(h.removeEventListener("keydown",i),h.removeEventListener("focusin",d),h.removeEventListener("focusout",f))});const s=A=>{t(f8,A)},u=A=>t(p8,A),d=A=>{const h=c(n);if(!h)return;const m=A.target,v=A.relatedTarget,S=m&&h.contains(m);e.trapped||v&&h.contains(v)||(r=v),S&&t("focusin",A),!o.paused&&e.trapped&&(S?a=m:Ql(a,!0))},f=A=>{const h=c(n);if(!(o.paused||!h))if(e.trapped){const m=A.relatedTarget;!On(m)&&!h.contains(m)&&setTimeout(()=>{if(!o.paused&&e.trapped){const v=ef({focusReason:l.value});t("focusout-prevented",v),v.defaultPrevented||Ql(a,!0)}},0)}else{const m=A.target;m&&h.contains(m)||t("focusout",A)}};async function p(){await at();const A=c(n);if(A){h8.push(o);const h=A.contains(document.activeElement)?r:document.activeElement;if(r=h,!A.contains(h)){const v=new Event(Rb,d8);A.addEventListener(Rb,s),A.dispatchEvent(v),v.defaultPrevented||at(()=>{let S=e.focusStartEl;Pt(S)||(Ql(S),document.activeElement!==S&&(S="first")),S==="first"&&U$(CV(A),!0),(document.activeElement===h||S==="container")&&Ql(A)})}}}function b(){const A=c(n);if(A){A.removeEventListener(Rb,s);const h=new CustomEvent(Jb,{...d8,detail:{focusReason:l.value}});A.addEventListener(Jb,u),A.dispatchEvent(h),!h.defaultPrevented&&(l.value=="keyboard"||!O$()||A.contains(document.activeElement))&&Ql(r!=null?r:document.body),A.removeEventListener(Jb,u),h8.remove(o)}}return At(()=>{e.trapped&&p(),Ve(()=>e.trapped,A=>{A?p():b()})}),tn(()=>{e.trapped&&b()}),{onKeydown:i}}});function F$(e,t,n,r,a,l){return ue(e.$slots,"default",{handleKeydown:e.onKeydown})}var Iv=Be(J$,[["render",F$],["__file","/home/runner/work/element-plus/element-plus/packages/components/focus-trap/src/focus-trap.vue"]]);const z$=["fixed","absolute"],H$=Ie({boundariesPadding:{type:Number,default:0},fallbackPlacements:{type:ve(Array),default:void 0},gpuAcceleration:{type:Boolean,default:!0},offset:{type:Number,default:12},placement:{type:String,values:Ui,default:"bottom"},popperOptions:{type:ve(Object),default:()=>({})},strategy:{type:String,values:z$,default:"absolute"}}),MV=Ie({...H$,id:String,style:{type:ve([String,Array,Object])},className:{type:ve([String,Array,Object])},effect:{type:String,default:"dark"},visible:Boolean,enterable:{type:Boolean,default:!0},pure:Boolean,focusOnShow:{type:Boolean,default:!1},trapping:{type:Boolean,default:!1},popperClass:{type:ve([String,Array,Object])},popperStyle:{type:ve([String,Array,Object])},referenceEl:{type:ve(Object)},triggerTargetEl:{type:ve(Object)},stopPopperMouseEvent:{type:Boolean,default:!0},ariaLabel:{type:String,default:void 0},virtualTriggering:Boolean,zIndex:Number}),Z$={mouseenter:e=>e instanceof MouseEvent,mouseleave:e=>e instanceof MouseEvent,focus:()=>!0,blur:()=>!0,close:()=>!0},G$=(e,t=[])=>{const{placement:n,strategy:r,popperOptions:a}=e,l={placement:n,strategy:r,...a,modifiers:[...M$(e),...t]};return D$(l,a==null?void 0:a.modifiers),l},C$=e=>{if(!!Mt)return Fr(e)};function M$(e){const{offset:t,gpuAcceleration:n,fallbackPlacements:r}=e;return[{name:"offset",options:{offset:[0,t!=null?t:12]}},{name:"preventOverflow",options:{padding:{top:2,bottom:2,left:5,right:5}}},{name:"flip",options:{padding:5,fallbackPlacements:r}},{name:"computeStyles",options:{gpuAcceleration:n}}]}function D$(e,t){t&&(e.modifiers=[...e.modifiers,...t!=null?t:[]])}const E$=0,I$=e=>{const{popperInstanceRef:t,contentRef:n,triggerRef:r,role:a}=tt(i2,void 0),l=J(),o=J(),i=X(()=>({name:"eventListeners",enabled:!!e.visible})),s=X(()=>{var v;const S=c(l),y=(v=c(o))!=null?v:E$;return{name:"arrow",enabled:!hC(S),options:{element:S,padding:y}}}),u=X(()=>({onFirstUpdate:()=>{A()},...G$(e,[c(s),c(i)])})),d=X(()=>C$(e.referenceEl)||c(r)),{attributes:f,state:p,styles:b,update:A,forceUpdate:h,instanceRef:m}=IY(d,n,u);return Ve(m,v=>t.value=v),At(()=>{Ve(()=>{var v;return(v=c(d))==null?void 0:v.getBoundingClientRect()},()=>{A()})}),{attributes:f,arrowRef:l,contentRef:n,instanceRef:m,state:p,styles:b,role:a,forceUpdate:h,update:A}},B$=(e,{attributes:t,styles:n,role:r})=>{const{nextZIndex:a}=su(),l=ze("popper"),o=X(()=>c(t).popper),i=J(mt(e.zIndex)?e.zIndex:a()),s=X(()=>[l.b(),l.is("pure",e.pure),l.is(e.effect),e.popperClass]),u=X(()=>[{zIndex:c(i)},c(n).popper,e.popperStyle||{}]),d=X(()=>r.value==="dialog"?"false":void 0),f=X(()=>c(n).arrow||{});return{ariaModal:d,arrowStyle:f,contentAttrs:o,contentClass:s,contentStyle:u,contentZIndex:i,updateZIndex:()=>{i.value=mt(e.zIndex)?e.zIndex:a()}}},Y$=(e,t)=>{const n=J(!1),r=J();return{focusStartRef:r,trapped:n,onFocusAfterReleased:u=>{var d;((d=u.detail)==null?void 0:d.focusReason)!=="pointer"&&(r.value="first",t("blur"))},onFocusAfterTrapped:()=>{t("focus")},onFocusInTrap:u=>{e.visible&&!n.value&&(u.target&&(r.value=u.target),n.value=!0)},onFocusoutPrevented:u=>{e.trapping||(u.detail.focusReason==="pointer"&&u.preventDefault(),n.value=!1)},onReleaseRequested:()=>{n.value=!1,t("close")}}},Q$=$({name:"ElPopperContent"}),_$=$({...Q$,props:MV,emits:Z$,setup(e,{expose:t,emit:n}){const r=e,{focusStartRef:a,trapped:l,onFocusAfterReleased:o,onFocusAfterTrapped:i,onFocusInTrap:s,onFocusoutPrevented:u,onReleaseRequested:d}=Y$(r,n),{attributes:f,arrowRef:p,contentRef:b,styles:A,instanceRef:h,role:m,update:v}=I$(r),{ariaModal:S,arrowStyle:y,contentAttrs:W,contentClass:k,contentStyle:V,updateZIndex:T}=B$(r,{styles:A,attributes:f,role:m}),P=tt(ll,void 0),x=J();zt(JV,{arrowStyle:y,arrowRef:p,arrowOffset:x}),P&&(P.addInputId||P.removeInputId)&&zt(ll,{...P,addInputId:en,removeInputId:en});let g;const j=(w=!0)=>{v(),w&&T()},L=()=>{j(!1),r.visible&&r.focusOnShow?l.value=!0:r.visible===!1&&(l.value=!1)};return At(()=>{Ve(()=>r.triggerTargetEl,(w,R)=>{g==null||g(),g=void 0;const Z=c(w||b.value),G=c(R||b.value);ha(Z)&&(g=Ve([m,()=>r.ariaLabel,S,()=>r.id],U=>{["role","aria-label","aria-modal","id"].forEach((H,O)=>{On(U[O])?Z.removeAttribute(H):Z.setAttribute(H,U[O])})},{immediate:!0})),G!==Z&&ha(G)&&["role","aria-label","aria-modal","id"].forEach(U=>{G.removeAttribute(U)})},{immediate:!0}),Ve(()=>r.visible,L,{immediate:!0})}),tn(()=>{g==null||g(),g=void 0}),t({popperContentRef:b,popperInstanceRef:h,updatePopper:j,contentStyle:V}),(w,R)=>(K(),F("div",Ut({ref_key:"contentRef",ref:b},c(W),{style:c(V),class:c(k),tabindex:"-1",onMouseenter:R[0]||(R[0]=Z=>w.$emit("mouseenter",Z)),onMouseleave:R[1]||(R[1]=Z=>w.$emit("mouseleave",Z))}),[C(c(Iv),{trapped:c(l),"trap-on-focus-in":!0,"focus-trap-el":c(b),"focus-start-el":c(a),onFocusAfterTrapped:c(i),onFocusAfterReleased:c(o),onFocusin:c(s),onFocusoutPrevented:c(u),onReleaseRequested:c(d)},{default:B(()=>[ue(w.$slots,"default")]),_:3},8,["trapped","focus-trap-el","focus-start-el","onFocusAfterTrapped","onFocusAfterReleased","onFocusin","onFocusoutPrevented","onReleaseRequested"])],16))}});var $$=Be(_$,[["__file","/home/runner/work/element-plus/element-plus/packages/components/popper/src/content.vue"]]);const DV=qt(W$),Bv=Symbol("elTooltip"),nr=Ie({...tQ,...MV,appendTo:{type:ve([String,Object])},content:{type:String,default:""},rawContent:{type:Boolean,default:!1},persistent:Boolean,ariaLabel:String,visible:{type:ve(Boolean),default:null},transition:String,teleported:{type:Boolean,default:!0},disabled:Boolean}),jc=Ie({...GV,disabled:Boolean,trigger:{type:ve([String,Array]),default:"hover"},triggerKeys:{type:ve(Array),default:()=>[ut.enter,ut.space]}}),{useModelToggleProps:eee,useModelToggleEmits:tee,useModelToggle:nee}=DB("visible"),ree=Ie({...FV,...eee,...nr,...jc,...zV,showArrow:{type:Boolean,default:!0}}),aee=[...tee,"before-show","before-hide","show","hide","open","close"],lee=(e,t)=>et(e)?e.includes(t):e===t,Ii=(e,t,n)=>r=>{lee(c(e),t)&&n(r)},oee=$({name:"ElTooltipTrigger"}),iee=$({...oee,props:jc,setup(e,{expose:t}){const n=e,r=ze("tooltip"),{controlled:a,id:l,open:o,onOpen:i,onClose:s,onToggle:u}=tt(Bv,void 0),d=J(null),f=()=>{if(c(a)||n.disabled)return!0},p=bn(n,"trigger"),b=Pn(f,Ii(p,"hover",i)),A=Pn(f,Ii(p,"hover",s)),h=Pn(f,Ii(p,"click",W=>{W.button===0&&u(W)})),m=Pn(f,Ii(p,"focus",i)),v=Pn(f,Ii(p,"focus",s)),S=Pn(f,Ii(p,"contextmenu",W=>{W.preventDefault(),u(W)})),y=Pn(f,W=>{const{code:k}=W;n.triggerKeys.includes(k)&&(W.preventDefault(),u(W))});return t({triggerRef:d}),(W,k)=>(K(),ie(c(x$),{id:c(l),"virtual-ref":W.virtualRef,open:c(o),"virtual-triggering":W.virtualTriggering,class:q(c(r).e("trigger")),onBlur:c(v),onClick:c(h),onContextmenu:c(S),onFocus:c(m),onMouseenter:c(b),onMouseleave:c(A),onKeydown:c(y)},{default:B(()=>[ue(W.$slots,"default")]),_:3},8,["id","virtual-ref","open","virtual-triggering","class","onBlur","onClick","onContextmenu","onFocus","onMouseenter","onMouseleave","onKeydown"]))}});var see=Be(iee,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/trigger.vue"]]);const uee=$({name:"ElTooltipContent",inheritAttrs:!1}),cee=$({...uee,props:nr,setup(e,{expose:t}){const n=e,{selector:r}=vV(),a=ze("tooltip"),l=J(null),o=J(!1),{controlled:i,id:s,open:u,trigger:d,onClose:f,onOpen:p,onShow:b,onHide:A,onBeforeShow:h,onBeforeHide:m}=tt(Bv,void 0),v=X(()=>n.transition||`${a.namespace.value}-fade-in-linear`),S=X(()=>n.persistent);tn(()=>{o.value=!0});const y=X(()=>c(S)?!0:c(u)),W=X(()=>n.disabled?!1:c(u)),k=X(()=>n.appendTo||r.value),V=X(()=>{var U;return(U=n.style)!=null?U:{}}),T=X(()=>!c(u)),P=()=>{A()},x=()=>{if(c(i))return!0},g=Pn(x,()=>{n.enterable&&c(d)==="hover"&&p()}),j=Pn(x,()=>{c(d)==="hover"&&f()}),L=()=>{var U,H;(H=(U=l.value)==null?void 0:U.updatePopper)==null||H.call(U),h==null||h()},w=()=>{m==null||m()},R=()=>{b(),G=_0(X(()=>{var U;return(U=l.value)==null?void 0:U.popperContentRef}),()=>{if(c(i))return;c(d)!=="hover"&&f()})},Z=()=>{n.virtualTriggering||f()};let G;return Ve(()=>c(u),U=>{U||G==null||G()},{flush:"post"}),Ve(()=>n.content,()=>{var U,H;(H=(U=l.value)==null?void 0:U.updatePopper)==null||H.call(U)}),t({contentRef:l}),(U,H)=>(K(),ie(au,{disabled:!U.teleported,to:c(k)},[C(fn,{name:c(v),onAfterLeave:P,onBeforeEnter:L,onAfterEnter:R,onBeforeLeave:w},{default:B(()=>[c(y)?Vt((K(),ie(c($$),Ut({key:0,id:c(s),ref_key:"contentRef",ref:l},U.$attrs,{"aria-label":U.ariaLabel,"aria-hidden":c(T),"boundaries-padding":U.boundariesPadding,"fallback-placements":U.fallbackPlacements,"gpu-acceleration":U.gpuAcceleration,offset:U.offset,placement:U.placement,"popper-options":U.popperOptions,strategy:U.strategy,effect:U.effect,enterable:U.enterable,pure:U.pure,"popper-class":U.popperClass,"popper-style":[U.popperStyle,c(V)],"reference-el":U.referenceEl,"trigger-target-el":U.triggerTargetEl,visible:c(W),"z-index":U.zIndex,onMouseenter:c(g),onMouseleave:c(j),onBlur:Z,onClose:c(f)}),{default:B(()=>[o.value?ae("v-if",!0):ue(U.$slots,"default",{key:0})]),_:3},16,["id","aria-label","aria-hidden","boundaries-padding","fallback-placements","gpu-acceleration","offset","placement","popper-options","strategy","effect","enterable","pure","popper-class","popper-style","reference-el","trigger-target-el","visible","z-index","onMouseenter","onMouseleave","onClose"])),[[Ct,c(W)]]):ae("v-if",!0)]),_:3},8,["name"])],8,["disabled","to"]))}});var dee=Be(cee,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/content.vue"]]);const fee=["innerHTML"],pee={key:1},vee=$({name:"ElTooltip"}),bee=$({...vee,props:ree,emits:aee,setup(e,{expose:t,emit:n}){const r=e;eQ();const a=Cr(),l=J(),o=J(),i=()=>{var v;const S=c(l);S&&((v=S.popperInstanceRef)==null||v.update())},s=J(!1),u=J(),{show:d,hide:f,hasUpdateHandler:p}=nee({indicator:s,toggleReason:u}),{onOpen:b,onClose:A}=bV({showAfter:bn(r,"showAfter"),hideAfter:bn(r,"hideAfter"),autoClose:bn(r,"autoClose"),open:d,close:f}),h=X(()=>Zn(r.visible)&&!p.value);zt(Bv,{controlled:h,id:a,open:xo(s),trigger:bn(r,"trigger"),onOpen:v=>{b(v)},onClose:v=>{A(v)},onToggle:v=>{c(s)?A(v):b(v)},onShow:()=>{n("show",u.value)},onHide:()=>{n("hide",u.value)},onBeforeShow:()=>{n("before-show",u.value)},onBeforeHide:()=>{n("before-hide",u.value)},updatePopper:i}),Ve(()=>r.disabled,v=>{v&&s.value&&(s.value=!1)});const m=v=>{var S,y;const W=(y=(S=o.value)==null?void 0:S.contentRef)==null?void 0:y.popperContentRef,k=(v==null?void 0:v.relatedTarget)||document.activeElement;return W&&W.contains(k)};return U0(()=>s.value&&f()),t({popperRef:l,contentRef:o,isFocusInsideContent:m,updatePopper:i,onOpen:b,onClose:A,hide:f}),(v,S)=>(K(),ie(c(DV),{ref_key:"popperRef",ref:l,role:v.role},{default:B(()=>[C(see,{disabled:v.disabled,trigger:v.trigger,"trigger-keys":v.triggerKeys,"virtual-ref":v.virtualRef,"virtual-triggering":v.virtualTriggering},{default:B(()=>[v.$slots.default?ue(v.$slots,"default",{key:0}):ae("v-if",!0)]),_:3},8,["disabled","trigger","trigger-keys","virtual-ref","virtual-triggering"]),C(dee,{ref_key:"contentRef",ref:o,"aria-label":v.ariaLabel,"boundaries-padding":v.boundariesPadding,content:v.content,disabled:v.disabled,effect:v.effect,enterable:v.enterable,"fallback-placements":v.fallbackPlacements,"hide-after":v.hideAfter,"gpu-acceleration":v.gpuAcceleration,offset:v.offset,persistent:v.persistent,"popper-class":v.popperClass,"popper-style":v.popperStyle,placement:v.placement,"popper-options":v.popperOptions,pure:v.pure,"raw-content":v.rawContent,"reference-el":v.referenceEl,"trigger-target-el":v.triggerTargetEl,"show-after":v.showAfter,strategy:v.strategy,teleported:v.teleported,transition:v.transition,"virtual-triggering":v.virtualTriggering,"z-index":v.zIndex,"append-to":v.appendTo},{default:B(()=>[ue(v.$slots,"content",{},()=>[v.rawContent?(K(),F("span",{key:0,innerHTML:v.content},null,8,fee)):(K(),F("span",pee,je(v.content),1))]),v.showArrow?(K(),ie(c(P$),{key:0,"arrow-offset":v.arrowOffset},null,8,["arrow-offset"])):ae("v-if",!0)]),_:3},8,["aria-label","boundaries-padding","content","disabled","effect","enterable","fallback-placements","hide-after","gpu-acceleration","offset","persistent","popper-class","popper-style","placement","popper-options","pure","raw-content","reference-el","trigger-target-el","show-after","strategy","teleported","transition","virtual-triggering","z-index","append-to"])]),_:3},8,["role"]))}});var hee=Be(bee,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/tooltip.vue"]]);const Xr=qt(hee),mee=Ie({valueKey:{type:String,default:"value"},modelValue:{type:[String,Number],default:""},debounce:{type:Number,default:300},placement:{type:ve(String),values:["top","top-start","top-end","bottom","bottom-start","bottom-end"],default:"bottom-start"},fetchSuggestions:{type:ve([Function,Array]),default:en},popperClass:{type:String,default:""},triggerOnFocus:{type:Boolean,default:!0},selectWhenUnmatched:{type:Boolean,default:!1},hideLoading:{type:Boolean,default:!1},label:{type:String},teleported:nr.teleported,highlightFirstItem:{type:Boolean,default:!1},fitInputWidth:{type:Boolean,default:!1},clearable:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},name:String}),See={[Rt]:e=>Pt(e),[Pr]:e=>Pt(e),[mn]:e=>Pt(e),focus:e=>e instanceof FocusEvent,blur:e=>e instanceof FocusEvent,clear:()=>!0,select:e=>Jt(e)},yee=["aria-expanded","aria-owns"],Aee={key:0},Wee=["id","aria-selected","onClick"],EV="ElAutocomplete",kee=$({name:EV,inheritAttrs:!1}),Vee=$({...kee,props:mee,emits:See,setup(e,{expose:t,emit:n}){const r=e,a=Gm(),l=Xo(),o=Br(),i=ze("autocomplete"),s=J(),u=J(),d=J(),f=J();let p=!1,b=!1;const A=J([]),h=J(-1),m=J(""),v=J(!1),S=J(!1),y=J(!1),W=X(()=>i.b(String(Hv()))),k=X(()=>l.style),V=X(()=>(A.value.length>0||y.value)&&v.value),T=X(()=>!r.hideLoading&&y.value),P=X(()=>s.value?Array.from(s.value.$el.querySelectorAll("input")):[]),x=()=>{V.value&&(m.value=`${s.value.$el.offsetWidth}px`)},g=()=>{h.value=-1},L=xr(async pe=>{if(S.value)return;const me=ce=>{y.value=!1,!S.value&&(et(ce)?(A.value=ce,h.value=r.highlightFirstItem?0:-1):Gn(EV,"autocomplete suggestions must be an array"))};if(y.value=!0,et(r.fetchSuggestions))me(r.fetchSuggestions);else{const ce=await r.fetchSuggestions(pe,me);et(ce)&&me(ce)}},r.debounce),w=pe=>{const me=!!pe;if(n(Pr,pe),n(Rt,pe),S.value=!1,v.value||(v.value=me),!r.triggerOnFocus&&!pe){S.value=!0,A.value=[];return}L(pe)},R=pe=>{var me;o.value||(((me=pe.target)==null?void 0:me.tagName)!=="INPUT"||P.value.includes(document.activeElement))&&(v.value=!0)},Z=pe=>{n(mn,pe)},G=pe=>{b?b=!1:(v.value=!0,n("focus",pe),r.triggerOnFocus&&!p&&L(String(r.modelValue)))},U=pe=>{setTimeout(()=>{var me;if((me=d.value)!=null&&me.isFocusInsideContent()){b=!0;return}v.value&&Y(),n("blur",pe)})},H=()=>{v.value=!1,n(Rt,""),n("clear")},O=async()=>{V.value&&h.value>=0&&h.value<A.value.length?oe(A.value[h.value]):r.selectWhenUnmatched&&(n("select",{value:r.modelValue}),A.value=[],h.value=-1)},D=pe=>{V.value&&(pe.preventDefault(),pe.stopPropagation(),Y())},Y=()=>{v.value=!1},Q=()=>{var pe;(pe=s.value)==null||pe.focus()},ee=()=>{var pe;(pe=s.value)==null||pe.blur()},oe=async pe=>{n(Pr,pe[r.valueKey]),n(Rt,pe[r.valueKey]),n("select",pe),A.value=[],h.value=-1},Ne=pe=>{if(!V.value||y.value)return;if(pe<0){h.value=-1;return}pe>=A.value.length&&(pe=A.value.length-1);const me=u.value.querySelector(`.${i.be("suggestion","wrap")}`),Le=me.querySelectorAll(`.${i.be("suggestion","list")} li`)[pe],Te=me.scrollTop,{offsetTop:xe,scrollHeight:_}=Le;xe+_>Te+me.clientHeight&&(me.scrollTop+=_),xe<Te&&(me.scrollTop-=_),h.value=pe,s.value.ref.setAttribute("aria-activedescendant",`${W.value}-item-${h.value}`)};return _0(f,()=>{V.value&&Y()}),At(()=>{s.value.ref.setAttribute("role","textbox"),s.value.ref.setAttribute("aria-autocomplete","list"),s.value.ref.setAttribute("aria-controls","id"),s.value.ref.setAttribute("aria-activedescendant",`${W.value}-item-${h.value}`),p=s.value.ref.hasAttribute("readonly")}),t({highlightedIndex:h,activated:v,loading:y,inputRef:s,popperRef:d,suggestions:A,handleSelect:oe,handleKeyEnter:O,focus:Q,blur:ee,close:Y,highlight:Ne}),(pe,me)=>(K(),ie(c(Xr),{ref_key:"popperRef",ref:d,visible:c(V),placement:pe.placement,"fallback-placements":["bottom-start","top-start"],"popper-class":[c(i).e("popper"),pe.popperClass],teleported:pe.teleported,"gpu-acceleration":!1,pure:"","manual-mode":"",effect:"light",trigger:"click",transition:`${c(i).namespace.value}-zoom-in-top`,persistent:"",role:"listbox",onBeforeShow:x,onHide:g},{content:B(()=>[z("div",{ref_key:"regionRef",ref:u,class:q([c(i).b("suggestion"),c(i).is("loading",c(T))]),style:lt({[pe.fitInputWidth?"width":"minWidth"]:m.value,outline:"none"}),role:"region"},[C(c(Cl),{id:c(W),tag:"ul","wrap-class":c(i).be("suggestion","wrap"),"view-class":c(i).be("suggestion","list"),role:"listbox"},{default:B(()=>[c(T)?(K(),F("li",Aee,[C(c(it),{class:q(c(i).is("loading"))},{default:B(()=>[C(c(Uo))]),_:1},8,["class"])])):(K(!0),F(Qe,{key:1},Nt(A.value,(ce,Le)=>(K(),F("li",{id:`${c(W)}-item-${Le}`,key:Le,class:q({highlighted:h.value===Le}),role:"option","aria-selected":h.value===Le,onClick:Te=>oe(ce)},[ue(pe.$slots,"default",{item:ce},()=>[Xt(je(ce[pe.valueKey]),1)])],10,Wee))),128))]),_:3},8,["id","wrap-class","view-class"])],6)]),default:B(()=>[z("div",{ref_key:"listboxRef",ref:f,class:q([c(i).b(),pe.$attrs.class]),style:lt(c(k)),role:"combobox","aria-haspopup":"listbox","aria-expanded":c(V),"aria-owns":c(W)},[C(c(vr),Ut({ref_key:"inputRef",ref:s},c(a),{clearable:pe.clearable,disabled:c(o),name:pe.name,"model-value":pe.modelValue,onInput:w,onChange:Z,onFocus:G,onBlur:U,onClear:H,onKeydown:[me[0]||(me[0]=Dt(pt(ce=>Ne(h.value-1),["prevent"]),["up"])),me[1]||(me[1]=Dt(pt(ce=>Ne(h.value+1),["prevent"]),["down"])),Dt(O,["enter"]),Dt(Y,["tab"]),Dt(D,["esc"])],onMousedown:R}),tl({_:2},[pe.$slots.prepend?{name:"prepend",fn:B(()=>[ue(pe.$slots,"prepend")])}:void 0,pe.$slots.append?{name:"append",fn:B(()=>[ue(pe.$slots,"append")])}:void 0,pe.$slots.prefix?{name:"prefix",fn:B(()=>[ue(pe.$slots,"prefix")])}:void 0,pe.$slots.suffix?{name:"suffix",fn:B(()=>[ue(pe.$slots,"suffix")])}:void 0]),1040,["clearable","disabled","name","model-value","onKeydown"])],14,yee)]),_:3},8,["visible","placement","popper-class","teleported","transition"]))}});var Pee=Be(Vee,[["__file","/home/runner/work/element-plus/element-plus/packages/components/autocomplete/src/autocomplete.vue"]]);const Tee=qt(Pee),Kee=Ie({size:{type:[Number,String],values:sl,default:"",validator:e=>mt(e)},shape:{type:String,values:["circle","square"],default:"circle"},icon:{type:un},src:{type:String,default:""},alt:String,srcSet:String,fit:{type:ve(String),default:"cover"}}),Nee={error:e=>e instanceof Event},xee=["src","alt","srcset"],Xee=$({name:"ElAvatar"}),gee=$({...Xee,props:Kee,emits:Nee,setup(e,{emit:t}){const n=e,r=ze("avatar"),a=J(!1),l=X(()=>{const{size:u,icon:d,shape:f}=n,p=[r.b()];return Pt(u)&&p.push(r.m(u)),d&&p.push(r.m("icon")),f&&p.push(r.m(f)),p}),o=X(()=>{const{size:u}=n;return mt(u)?r.cssVarBlock({size:Ln(u)||""}):void 0}),i=X(()=>({objectFit:n.fit}));Ve(()=>n.src,()=>a.value=!1);function s(u){a.value=!0,t("error",u)}return(u,d)=>(K(),F("span",{class:q(c(l)),style:lt(c(o))},[(u.src||u.srcSet)&&!a.value?(K(),F("img",{key:0,src:u.src,alt:u.alt,srcset:u.srcSet,style:lt(c(i)),onError:s},null,44,xee)):u.icon?(K(),ie(c(it),{key:1},{default:B(()=>[(K(),ie(Ot(u.icon)))]),_:1})):ue(u.$slots,"default",{key:2})],6))}});var wee=Be(gee,[["__file","/home/runner/work/element-plus/element-plus/packages/components/avatar/src/avatar.vue"]]);const jee=qt(wee),Lee={visibilityHeight:{type:Number,default:200},target:{type:String,default:""},right:{type:Number,default:40},bottom:{type:Number,default:40}},qee={click:e=>e instanceof MouseEvent},Uee=(e,t,n)=>{const r=nn(),a=nn(),l=J(!1),o=()=>{r.value&&(l.value=r.value.scrollTop>=e.visibilityHeight)},i=u=>{var d;(d=r.value)==null||d.scrollTo({top:0,behavior:"smooth"}),t("click",u)},s=Y0(o,300,!0);return hn(a,"scroll",s),At(()=>{var u;a.value=document,r.value=document.documentElement,e.target&&(r.value=(u=document.querySelector(e.target))!=null?u:void 0,r.value||Gn(n,`target does not exist: ${e.target}`),a.value=r.value),o()}),{visible:l,handleClick:i}},IV="ElBacktop",Oee=$({name:IV}),Ree=$({...Oee,props:Lee,emits:qee,setup(e,{emit:t}){const n=e,r=ze("backtop"),{handleClick:a,visible:l}=Uee(n,t,IV),o=X(()=>({right:`${n.right}px`,bottom:`${n.bottom}px`}));return(i,s)=>(K(),ie(fn,{name:`${c(r).namespace.value}-fade-in`},{default:B(()=>[c(l)?(K(),F("div",{key:0,style:lt(c(o)),class:q(c(r).b()),onClick:s[0]||(s[0]=pt((...u)=>c(a)&&c(a)(...u),["stop"]))},[ue(i.$slots,"default",{},()=>[C(c(it),{class:q(c(r).e("icon"))},{default:B(()=>[C(c(kM))]),_:1},8,["class"])])],6)):ae("v-if",!0)]),_:3},8,["name"]))}});var Jee=Be(Ree,[["__file","/home/runner/work/element-plus/element-plus/packages/components/backtop/src/backtop.vue"]]);const Fee=qt(Jee),zee=Ie({value:{type:[String,Number],default:""},max:{type:Number,default:99},isDot:Boolean,hidden:Boolean,type:{type:String,values:["primary","success","warning","info","danger"],default:"danger"}}),Hee=["textContent"],Zee=$({name:"ElBadge"}),Gee=$({...Zee,props:zee,setup(e,{expose:t}){const n=e,r=ze("badge"),a=X(()=>n.isDot?"":mt(n.value)&&mt(n.max)?n.max<n.value?`${n.max}+`:`${n.value}`:`${n.value}`);return t({content:a}),(l,o)=>(K(),F("div",{class:q(c(r).b())},[ue(l.$slots,"default"),C(fn,{name:`${c(r).namespace.value}-zoom-in-center`,persisted:""},{default:B(()=>[Vt(z("sup",{class:q([c(r).e("content"),c(r).em("content",l.type),c(r).is("fixed",!!l.$slots.default),c(r).is("dot",l.isDot)]),textContent:je(c(a))},null,10,Hee),[[Ct,!l.hidden&&(c(a)||l.isDot)]])]),_:1},8,["name"])],2))}});var Cee=Be(Gee,[["__file","/home/runner/work/element-plus/element-plus/packages/components/badge/src/badge.vue"]]);const BV=qt(Cee),YV=Symbol("breadcrumbKey"),Mee=Ie({separator:{type:String,default:"/"},separatorIcon:{type:un}}),Dee=$({name:"ElBreadcrumb"}),Eee=$({...Dee,props:Mee,setup(e){const t=e,n=ze("breadcrumb"),r=J();return zt(YV,t),At(()=>{const a=r.value.querySelectorAll(`.${n.e("item")}`);a.length&&a[a.length-1].setAttribute("aria-current","page")}),(a,l)=>(K(),F("div",{ref_key:"breadcrumb",ref:r,class:q(c(n).b()),"aria-label":"Breadcrumb",role:"navigation"},[ue(a.$slots,"default")],2))}});var Iee=Be(Eee,[["__file","/home/runner/work/element-plus/element-plus/packages/components/breadcrumb/src/breadcrumb.vue"]]);const Bee=Ie({to:{type:ve([String,Object]),default:""},replace:{type:Boolean,default:!1}}),Yee=$({name:"ElBreadcrumbItem"}),Qee=$({...Yee,props:Bee,setup(e){const t=e,n=Tt(),r=tt(YV,void 0),a=ze("breadcrumb"),l=n.appContext.config.globalProperties.$router,o=J(),i=()=>{!t.to||!l||(t.replace?l.replace(t.to):l.push(t.to))};return(s,u)=>{var d,f;return K(),F("span",{class:q(c(a).e("item"))},[z("span",{ref_key:"link",ref:o,class:q([c(a).e("inner"),c(a).is("link",!!s.to)]),role:"link",onClick:i},[ue(s.$slots,"default")],2),(d=c(r))!=null&&d.separatorIcon?(K(),ie(c(it),{key:0,class:q(c(a).e("separator"))},{default:B(()=>[(K(),ie(Ot(c(r).separatorIcon)))]),_:1},8,["class"])):(K(),F("span",{key:1,class:q(c(a).e("separator")),role:"presentation"},je((f=c(r))==null?void 0:f.separator),3))],2)}}});var QV=Be(Qee,[["__file","/home/runner/work/element-plus/element-plus/packages/components/breadcrumb/src/breadcrumb-item.vue"]]);const _ee=qt(Iee,{BreadcrumbItem:QV}),$ee=Nn(QV),_V=Symbol("buttonGroupContextKey"),ete=(e,t)=>{rl({from:"type.text",replacement:"link",version:"3.0.0",scope:"props",ref:"https://element-plus.org/en-US/component/button.html#button-attributes"},X(()=>e.type==="text"));const n=tt(_V,void 0),r=Mv("button"),{form:a}=wr(),l=Cn(X(()=>n==null?void 0:n.size)),o=Br(),i=J(),s=er(),u=X(()=>e.type||(n==null?void 0:n.type)||""),d=X(()=>{var A,h,m;return(m=(h=e.autoInsertSpace)!=null?h:(A=r.value)==null?void 0:A.autoInsertSpace)!=null?m:!1}),f=X(()=>e.tag==="button"?{ariaDisabled:o.value||e.loading,disabled:o.value||e.loading,autofocus:e.autofocus,type:e.nativeType}:{}),p=X(()=>{var A;const h=(A=s.default)==null?void 0:A.call(s);if(d.value&&(h==null?void 0:h.length)===1){const m=h[0];if((m==null?void 0:m.type)===mo){const v=m.children;return/^\p{Unified_Ideograph}{2}$/u.test(v.trim())}}return!1});return{_disabled:o,_size:l,_type:u,_ref:i,_props:f,shouldAddSpace:p,handleClick:A=>{e.nativeType==="reset"&&(a==null||a.resetFields()),t("click",A)}}},rh=["default","primary","success","warning","info","danger","text",""],tte=["button","submit","reset"],ah=Ie({size:ur,disabled:Boolean,type:{type:String,values:rh,default:""},icon:{type:un},nativeType:{type:String,values:tte,default:"button"},loading:Boolean,loadingIcon:{type:un,default:()=>Uo},plain:Boolean,text:Boolean,link:Boolean,bg:Boolean,autofocus:Boolean,round:Boolean,circle:Boolean,color:String,dark:Boolean,autoInsertSpace:{type:Boolean,default:void 0},tag:{type:ve([String,Object]),default:"button"}}),nte={click:e=>e instanceof MouseEvent};function ir(e,t){rte(e)&&(e="100%");var n=ate(e);return e=t===360?e:Math.min(t,Math.max(0,parseFloat(e))),n&&(e=parseInt(String(e*t),10)/100),Math.abs(e-t)<1e-6?1:(t===360?e=(e<0?e%t+t:e%t)/parseFloat(String(t)):e=e%t/parseFloat(String(t)),e)}function tf(e){return Math.min(1,Math.max(0,e))}function rte(e){return typeof e=="string"&&e.indexOf(".")!==-1&&parseFloat(e)===1}function ate(e){return typeof e=="string"&&e.indexOf("%")!==-1}function $V(e){return e=parseFloat(e),(isNaN(e)||e<0||e>1)&&(e=1),e}function nf(e){return e<=1?"".concat(Number(e)*100,"%"):e}function $o(e){return e.length===1?"0"+e:String(e)}function lte(e,t,n){return{r:ir(e,255)*255,g:ir(t,255)*255,b:ir(n,255)*255}}function S8(e,t,n){e=ir(e,255),t=ir(t,255),n=ir(n,255);var r=Math.max(e,t,n),a=Math.min(e,t,n),l=0,o=0,i=(r+a)/2;if(r===a)o=0,l=0;else{var s=r-a;switch(o=i>.5?s/(2-r-a):s/(r+a),r){case e:l=(t-n)/s+(t<n?6:0);break;case t:l=(n-e)/s+2;break;case n:l=(e-t)/s+4;break}l/=6}return{h:l,s:o,l:i}}function Fb(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*(6*n):n<1/2?t:n<2/3?e+(t-e)*(2/3-n)*6:e}function ote(e,t,n){var r,a,l;if(e=ir(e,360),t=ir(t,100),n=ir(n,100),t===0)a=n,l=n,r=n;else{var o=n<.5?n*(1+t):n+t-n*t,i=2*n-o;r=Fb(i,o,e+1/3),a=Fb(i,o,e),l=Fb(i,o,e-1/3)}return{r:r*255,g:a*255,b:l*255}}function y8(e,t,n){e=ir(e,255),t=ir(t,255),n=ir(n,255);var r=Math.max(e,t,n),a=Math.min(e,t,n),l=0,o=r,i=r-a,s=r===0?0:i/r;if(r===a)l=0;else{switch(r){case e:l=(t-n)/i+(t<n?6:0);break;case t:l=(n-e)/i+2;break;case n:l=(e-t)/i+4;break}l/=6}return{h:l,s,v:o}}function ite(e,t,n){e=ir(e,360)*6,t=ir(t,100),n=ir(n,100);var r=Math.floor(e),a=e-r,l=n*(1-t),o=n*(1-a*t),i=n*(1-(1-a)*t),s=r%6,u=[n,o,l,l,i,n][s],d=[i,n,n,o,l,l][s],f=[l,l,i,n,n,o][s];return{r:u*255,g:d*255,b:f*255}}function A8(e,t,n,r){var a=[$o(Math.round(e).toString(16)),$o(Math.round(t).toString(16)),$o(Math.round(n).toString(16))];return r&&a[0].startsWith(a[0].charAt(1))&&a[1].startsWith(a[1].charAt(1))&&a[2].startsWith(a[2].charAt(1))?a[0].charAt(0)+a[1].charAt(0)+a[2].charAt(0):a.join("")}function ste(e,t,n,r,a){var l=[$o(Math.round(e).toString(16)),$o(Math.round(t).toString(16)),$o(Math.round(n).toString(16)),$o(ute(r))];return a&&l[0].startsWith(l[0].charAt(1))&&l[1].startsWith(l[1].charAt(1))&&l[2].startsWith(l[2].charAt(1))&&l[3].startsWith(l[3].charAt(1))?l[0].charAt(0)+l[1].charAt(0)+l[2].charAt(0)+l[3].charAt(0):l.join("")}function ute(e){return Math.round(parseFloat(e)*255).toString(16)}function W8(e){return Yr(e)/255}function Yr(e){return parseInt(e,16)}function cte(e){return{r:e>>16,g:(e&65280)>>8,b:e&255}}var lh={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",goldenrod:"#daa520",gold:"#ffd700",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavenderblush:"#fff0f5",lavender:"#e6e6fa",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};function dte(e){var t={r:0,g:0,b:0},n=1,r=null,a=null,l=null,o=!1,i=!1;return typeof e=="string"&&(e=vte(e)),typeof e=="object"&&(dl(e.r)&&dl(e.g)&&dl(e.b)?(t=lte(e.r,e.g,e.b),o=!0,i=String(e.r).substr(-1)==="%"?"prgb":"rgb"):dl(e.h)&&dl(e.s)&&dl(e.v)?(r=nf(e.s),a=nf(e.v),t=ite(e.h,r,a),o=!0,i="hsv"):dl(e.h)&&dl(e.s)&&dl(e.l)&&(r=nf(e.s),l=nf(e.l),t=ote(e.h,r,l),o=!0,i="hsl"),Object.prototype.hasOwnProperty.call(e,"a")&&(n=e.a)),n=$V(n),{ok:o,format:e.format||i,r:Math.min(255,Math.max(t.r,0)),g:Math.min(255,Math.max(t.g,0)),b:Math.min(255,Math.max(t.b,0)),a:n}}var fte="[-\\+]?\\d+%?",pte="[-\\+]?\\d*\\.\\d+%?",io="(?:".concat(pte,")|(?:").concat(fte,")"),zb="[\\s|\\(]+(".concat(io,")[,|\\s]+(").concat(io,")[,|\\s]+(").concat(io,")\\s*\\)?"),Hb="[\\s|\\(]+(".concat(io,")[,|\\s]+(").concat(io,")[,|\\s]+(").concat(io,")[,|\\s]+(").concat(io,")\\s*\\)?"),Pa={CSS_UNIT:new RegExp(io),rgb:new RegExp("rgb"+zb),rgba:new RegExp("rgba"+Hb),hsl:new RegExp("hsl"+zb),hsla:new RegExp("hsla"+Hb),hsv:new RegExp("hsv"+zb),hsva:new RegExp("hsva"+Hb),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/};function vte(e){if(e=e.trim().toLowerCase(),e.length===0)return!1;var t=!1;if(lh[e])e=lh[e],t=!0;else if(e==="transparent")return{r:0,g:0,b:0,a:0,format:"name"};var n=Pa.rgb.exec(e);return n?{r:n[1],g:n[2],b:n[3]}:(n=Pa.rgba.exec(e),n?{r:n[1],g:n[2],b:n[3],a:n[4]}:(n=Pa.hsl.exec(e),n?{h:n[1],s:n[2],l:n[3]}:(n=Pa.hsla.exec(e),n?{h:n[1],s:n[2],l:n[3],a:n[4]}:(n=Pa.hsv.exec(e),n?{h:n[1],s:n[2],v:n[3]}:(n=Pa.hsva.exec(e),n?{h:n[1],s:n[2],v:n[3],a:n[4]}:(n=Pa.hex8.exec(e),n?{r:Yr(n[1]),g:Yr(n[2]),b:Yr(n[3]),a:W8(n[4]),format:t?"name":"hex8"}:(n=Pa.hex6.exec(e),n?{r:Yr(n[1]),g:Yr(n[2]),b:Yr(n[3]),format:t?"name":"hex"}:(n=Pa.hex4.exec(e),n?{r:Yr(n[1]+n[1]),g:Yr(n[2]+n[2]),b:Yr(n[3]+n[3]),a:W8(n[4]+n[4]),format:t?"name":"hex8"}:(n=Pa.hex3.exec(e),n?{r:Yr(n[1]+n[1]),g:Yr(n[2]+n[2]),b:Yr(n[3]+n[3]),format:t?"name":"hex"}:!1)))))))))}function dl(e){return Boolean(Pa.CSS_UNIT.exec(String(e)))}var eP=function(){function e(t,n){t===void 0&&(t=""),n===void 0&&(n={});var r;if(t instanceof e)return t;typeof t=="number"&&(t=cte(t)),this.originalInput=t;var a=dte(t);this.originalInput=t,this.r=a.r,this.g=a.g,this.b=a.b,this.a=a.a,this.roundA=Math.round(100*this.a)/100,this.format=(r=n.format)!==null&&r!==void 0?r:a.format,this.gradientType=n.gradientType,this.r<1&&(this.r=Math.round(this.r)),this.g<1&&(this.g=Math.round(this.g)),this.b<1&&(this.b=Math.round(this.b)),this.isValid=a.ok}return e.prototype.isDark=function(){return this.getBrightness()<128},e.prototype.isLight=function(){return!this.isDark()},e.prototype.getBrightness=function(){var t=this.toRgb();return(t.r*299+t.g*587+t.b*114)/1e3},e.prototype.getLuminance=function(){var t=this.toRgb(),n,r,a,l=t.r/255,o=t.g/255,i=t.b/255;return l<=.03928?n=l/12.92:n=Math.pow((l+.055)/1.055,2.4),o<=.03928?r=o/12.92:r=Math.pow((o+.055)/1.055,2.4),i<=.03928?a=i/12.92:a=Math.pow((i+.055)/1.055,2.4),.2126*n+.7152*r+.0722*a},e.prototype.getAlpha=function(){return this.a},e.prototype.setAlpha=function(t){return this.a=$V(t),this.roundA=Math.round(100*this.a)/100,this},e.prototype.isMonochrome=function(){var t=this.toHsl().s;return t===0},e.prototype.toHsv=function(){var t=y8(this.r,this.g,this.b);return{h:t.h*360,s:t.s,v:t.v,a:this.a}},e.prototype.toHsvString=function(){var t=y8(this.r,this.g,this.b),n=Math.round(t.h*360),r=Math.round(t.s*100),a=Math.round(t.v*100);return this.a===1?"hsv(".concat(n,", ").concat(r,"%, ").concat(a,"%)"):"hsva(".concat(n,", ").concat(r,"%, ").concat(a,"%, ").concat(this.roundA,")")},e.prototype.toHsl=function(){var t=S8(this.r,this.g,this.b);return{h:t.h*360,s:t.s,l:t.l,a:this.a}},e.prototype.toHslString=function(){var t=S8(this.r,this.g,this.b),n=Math.round(t.h*360),r=Math.round(t.s*100),a=Math.round(t.l*100);return this.a===1?"hsl(".concat(n,", ").concat(r,"%, ").concat(a,"%)"):"hsla(".concat(n,", ").concat(r,"%, ").concat(a,"%, ").concat(this.roundA,")")},e.prototype.toHex=function(t){return t===void 0&&(t=!1),A8(this.r,this.g,this.b,t)},e.prototype.toHexString=function(t){return t===void 0&&(t=!1),"#"+this.toHex(t)},e.prototype.toHex8=function(t){return t===void 0&&(t=!1),ste(this.r,this.g,this.b,this.a,t)},e.prototype.toHex8String=function(t){return t===void 0&&(t=!1),"#"+this.toHex8(t)},e.prototype.toHexShortString=function(t){return t===void 0&&(t=!1),this.a===1?this.toHexString(t):this.toHex8String(t)},e.prototype.toRgb=function(){return{r:Math.round(this.r),g:Math.round(this.g),b:Math.round(this.b),a:this.a}},e.prototype.toRgbString=function(){var t=Math.round(this.r),n=Math.round(this.g),r=Math.round(this.b);return this.a===1?"rgb(".concat(t,", ").concat(n,", ").concat(r,")"):"rgba(".concat(t,", ").concat(n,", ").concat(r,", ").concat(this.roundA,")")},e.prototype.toPercentageRgb=function(){var t=function(n){return"".concat(Math.round(ir(n,255)*100),"%")};return{r:t(this.r),g:t(this.g),b:t(this.b),a:this.a}},e.prototype.toPercentageRgbString=function(){var t=function(n){return Math.round(ir(n,255)*100)};return this.a===1?"rgb(".concat(t(this.r),"%, ").concat(t(this.g),"%, ").concat(t(this.b),"%)"):"rgba(".concat(t(this.r),"%, ").concat(t(this.g),"%, ").concat(t(this.b),"%, ").concat(this.roundA,")")},e.prototype.toName=function(){if(this.a===0)return"transparent";if(this.a<1)return!1;for(var t="#"+A8(this.r,this.g,this.b,!1),n=0,r=Object.entries(lh);n<r.length;n++){var a=r[n],l=a[0],o=a[1];if(t===o)return l}return!1},e.prototype.toString=function(t){var n=Boolean(t);t=t!=null?t:this.format;var r=!1,a=this.a<1&&this.a>=0,l=!n&&a&&(t.startsWith("hex")||t==="name");return l?t==="name"&&this.a===0?this.toName():this.toRgbString():(t==="rgb"&&(r=this.toRgbString()),t==="prgb"&&(r=this.toPercentageRgbString()),(t==="hex"||t==="hex6")&&(r=this.toHexString()),t==="hex3"&&(r=this.toHexString(!0)),t==="hex4"&&(r=this.toHex8String(!0)),t==="hex8"&&(r=this.toHex8String()),t==="name"&&(r=this.toName()),t==="hsl"&&(r=this.toHslString()),t==="hsv"&&(r=this.toHsvString()),r||this.toHexString())},e.prototype.toNumber=function(){return(Math.round(this.r)<<16)+(Math.round(this.g)<<8)+Math.round(this.b)},e.prototype.clone=function(){return new e(this.toString())},e.prototype.lighten=function(t){t===void 0&&(t=10);var n=this.toHsl();return n.l+=t/100,n.l=tf(n.l),new e(n)},e.prototype.brighten=function(t){t===void 0&&(t=10);var n=this.toRgb();return n.r=Math.max(0,Math.min(255,n.r-Math.round(255*-(t/100)))),n.g=Math.max(0,Math.min(255,n.g-Math.round(255*-(t/100)))),n.b=Math.max(0,Math.min(255,n.b-Math.round(255*-(t/100)))),new e(n)},e.prototype.darken=function(t){t===void 0&&(t=10);var n=this.toHsl();return n.l-=t/100,n.l=tf(n.l),new e(n)},e.prototype.tint=function(t){return t===void 0&&(t=10),this.mix("white",t)},e.prototype.shade=function(t){return t===void 0&&(t=10),this.mix("black",t)},e.prototype.desaturate=function(t){t===void 0&&(t=10);var n=this.toHsl();return n.s-=t/100,n.s=tf(n.s),new e(n)},e.prototype.saturate=function(t){t===void 0&&(t=10);var n=this.toHsl();return n.s+=t/100,n.s=tf(n.s),new e(n)},e.prototype.greyscale=function(){return this.desaturate(100)},e.prototype.spin=function(t){var n=this.toHsl(),r=(n.h+t)%360;return n.h=r<0?360+r:r,new e(n)},e.prototype.mix=function(t,n){n===void 0&&(n=50);var r=this.toRgb(),a=new e(t).toRgb(),l=n/100,o={r:(a.r-r.r)*l+r.r,g:(a.g-r.g)*l+r.g,b:(a.b-r.b)*l+r.b,a:(a.a-r.a)*l+r.a};return new e(o)},e.prototype.analogous=function(t,n){t===void 0&&(t=6),n===void 0&&(n=30);var r=this.toHsl(),a=360/n,l=[this];for(r.h=(r.h-(a*t>>1)+720)%360;--t;)r.h=(r.h+a)%360,l.push(new e(r));return l},e.prototype.complement=function(){var t=this.toHsl();return t.h=(t.h+180)%360,new e(t)},e.prototype.monochromatic=function(t){t===void 0&&(t=6);for(var n=this.toHsv(),r=n.h,a=n.s,l=n.v,o=[],i=1/t;t--;)o.push(new e({h:r,s:a,v:l})),l=(l+i)%1;return o},e.prototype.splitcomplement=function(){var t=this.toHsl(),n=t.h;return[this,new e({h:(n+72)%360,s:t.s,l:t.l}),new e({h:(n+216)%360,s:t.s,l:t.l})]},e.prototype.onBackground=function(t){var n=this.toRgb(),r=new e(t).toRgb(),a=n.a+r.a*(1-n.a);return new e({r:(n.r*n.a+r.r*r.a*(1-n.a))/a,g:(n.g*n.a+r.g*r.a*(1-n.a))/a,b:(n.b*n.a+r.b*r.a*(1-n.a))/a,a})},e.prototype.triad=function(){return this.polyad(3)},e.prototype.tetrad=function(){return this.polyad(4)},e.prototype.polyad=function(t){for(var n=this.toHsl(),r=n.h,a=[this],l=360/t,o=1;o<t;o++)a.push(new e({h:(r+o*l)%360,s:n.s,l:n.l}));return a},e.prototype.equals=function(t){return this.toRgbString()===new e(t).toRgbString()},e}();function Bl(e,t=20){return e.mix("#141414",t).toString()}function bte(e){const t=Br(),n=ze("button");return X(()=>{let r={};const a=e.color;if(a){const l=new eP(a),o=e.dark?l.tint(20).toString():Bl(l,20);if(e.plain)r=n.cssVarBlock({"bg-color":e.dark?Bl(l,90):l.tint(90).toString(),"text-color":a,"border-color":e.dark?Bl(l,50):l.tint(50).toString(),"hover-text-color":`var(${n.cssVarName("color-white")})`,"hover-bg-color":a,"hover-border-color":a,"active-bg-color":o,"active-text-color":`var(${n.cssVarName("color-white")})`,"active-border-color":o}),t.value&&(r[n.cssVarBlockName("disabled-bg-color")]=e.dark?Bl(l,90):l.tint(90).toString(),r[n.cssVarBlockName("disabled-text-color")]=e.dark?Bl(l,50):l.tint(50).toString(),r[n.cssVarBlockName("disabled-border-color")]=e.dark?Bl(l,80):l.tint(80).toString());else{const i=e.dark?Bl(l,30):l.tint(30).toString(),s=l.isDark()?`var(${n.cssVarName("color-white")})`:`var(${n.cssVarName("color-black")})`;if(r=n.cssVarBlock({"bg-color":a,"text-color":s,"border-color":a,"hover-bg-color":i,"hover-text-color":s,"hover-border-color":i,"active-bg-color":o,"active-border-color":o}),t.value){const u=e.dark?Bl(l,50):l.tint(50).toString();r[n.cssVarBlockName("disabled-bg-color")]=u,r[n.cssVarBlockName("disabled-text-color")]=e.dark?"rgba(255, 255, 255, 0.5)":`var(${n.cssVarName("color-white")})`,r[n.cssVarBlockName("disabled-border-color")]=u}}}return r})}const hte=$({name:"ElButton"}),mte=$({...hte,props:ah,emits:nte,setup(e,{expose:t,emit:n}){const r=e,a=bte(r),l=ze("button"),{_ref:o,_size:i,_type:s,_disabled:u,_props:d,shouldAddSpace:f,handleClick:p}=ete(r,n);return t({ref:o,size:i,type:s,disabled:u,shouldAddSpace:f}),(b,A)=>(K(),ie(Ot(b.tag),Ut({ref_key:"_ref",ref:o},c(d),{class:[c(l).b(),c(l).m(c(s)),c(l).m(c(i)),c(l).is("disabled",c(u)),c(l).is("loading",b.loading),c(l).is("plain",b.plain),c(l).is("round",b.round),c(l).is("circle",b.circle),c(l).is("text",b.text),c(l).is("link",b.link),c(l).is("has-bg",b.bg)],style:c(a),onClick:c(p)}),{default:B(()=>[b.loading?(K(),F(Qe,{key:0},[b.$slots.loading?ue(b.$slots,"loading",{key:0}):(K(),ie(c(it),{key:1,class:q(c(l).is("loading"))},{default:B(()=>[(K(),ie(Ot(b.loadingIcon)))]),_:1},8,["class"]))],64)):b.icon||b.$slots.icon?(K(),ie(c(it),{key:1},{default:B(()=>[b.icon?(K(),ie(Ot(b.icon),{key:0})):ue(b.$slots,"icon",{key:1})]),_:3})):ae("v-if",!0),b.$slots.default?(K(),F("span",{key:2,class:q({[c(l).em("text","expand")]:c(f)})},[ue(b.$slots,"default")],2)):ae("v-if",!0)]),_:3},16,["class","style","onClick"]))}});var Ste=Be(mte,[["__file","/home/runner/work/element-plus/element-plus/packages/components/button/src/button.vue"]]);const yte={size:ah.size,type:ah.type},Ate=$({name:"ElButtonGroup"}),Wte=$({...Ate,props:yte,setup(e){const t=e;zt(_V,Bt({size:bn(t,"size"),type:bn(t,"type")}));const n=ze("button");return(r,a)=>(K(),F("div",{class:q(`${c(n).b("group")}`)},[ue(r.$slots,"default")],2))}});var tP=Be(Wte,[["__file","/home/runner/work/element-plus/element-plus/packages/components/button/src/button-group.vue"]]);const sr=qt(Ste,{ButtonGroup:tP}),nP=Nn(tP);var rP={exports:{}};(function(e,t){(function(n,r){e.exports=r()})(Tn,function(){var n=1e3,r=6e4,a=36e5,l="millisecond",o="second",i="minute",s="hour",u="day",d="week",f="month",p="quarter",b="year",A="date",h="Invalid Date",m=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,v=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,S={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(w){var R=["th","st","nd","rd"],Z=w%100;return"["+w+(R[(Z-20)%10]||R[Z]||R[0])+"]"}},y=function(w,R,Z){var G=String(w);return!G||G.length>=R?w:""+Array(R+1-G.length).join(Z)+w},W={s:y,z:function(w){var R=-w.utcOffset(),Z=Math.abs(R),G=Math.floor(Z/60),U=Z%60;return(R<=0?"+":"-")+y(G,2,"0")+":"+y(U,2,"0")},m:function w(R,Z){if(R.date()<Z.date())return-w(Z,R);var G=12*(Z.year()-R.year())+(Z.month()-R.month()),U=R.clone().add(G,f),H=Z-U<0,O=R.clone().add(G+(H?-1:1),f);return+(-(G+(Z-U)/(H?U-O:O-U))||0)},a:function(w){return w<0?Math.ceil(w)||0:Math.floor(w)},p:function(w){return{M:f,y:b,w:d,d:u,D:A,h:s,m:i,s:o,ms:l,Q:p}[w]||String(w||"").toLowerCase().replace(/s$/,"")},u:function(w){return w===void 0}},k="en",V={};V[k]=S;var T=function(w){return w instanceof j},P=function w(R,Z,G){var U;if(!R)return k;if(typeof R=="string"){var H=R.toLowerCase();V[H]&&(U=H),Z&&(V[H]=Z,U=H);var O=R.split("-");if(!U&&O.length>1)return w(O[0])}else{var D=R.name;V[D]=R,U=D}return!G&&U&&(k=U),U||!G&&k},x=function(w,R){if(T(w))return w.clone();var Z=typeof R=="object"?R:{};return Z.date=w,Z.args=arguments,new j(Z)},g=W;g.l=P,g.i=T,g.w=function(w,R){return x(w,{locale:R.$L,utc:R.$u,x:R.$x,$offset:R.$offset})};var j=function(){function w(Z){this.$L=P(Z.locale,null,!0),this.parse(Z)}var R=w.prototype;return R.parse=function(Z){this.$d=function(G){var U=G.date,H=G.utc;if(U===null)return new Date(NaN);if(g.u(U))return new Date;if(U instanceof Date)return new Date(U);if(typeof U=="string"&&!/Z$/i.test(U)){var O=U.match(m);if(O){var D=O[2]-1||0,Y=(O[7]||"0").substring(0,3);return H?new Date(Date.UTC(O[1],D,O[3]||1,O[4]||0,O[5]||0,O[6]||0,Y)):new Date(O[1],D,O[3]||1,O[4]||0,O[5]||0,O[6]||0,Y)}}return new Date(U)}(Z),this.$x=Z.x||{},this.init()},R.init=function(){var Z=this.$d;this.$y=Z.getFullYear(),this.$M=Z.getMonth(),this.$D=Z.getDate(),this.$W=Z.getDay(),this.$H=Z.getHours(),this.$m=Z.getMinutes(),this.$s=Z.getSeconds(),this.$ms=Z.getMilliseconds()},R.$utils=function(){return g},R.isValid=function(){return this.$d.toString()!==h},R.isSame=function(Z,G){var U=x(Z);return this.startOf(G)<=U&&U<=this.endOf(G)},R.isAfter=function(Z,G){return x(Z)<this.startOf(G)},R.isBefore=function(Z,G){return this.endOf(G)<x(Z)},R.$g=function(Z,G,U){return g.u(Z)?this[G]:this.set(U,Z)},R.unix=function(){return Math.floor(this.valueOf()/1e3)},R.valueOf=function(){return this.$d.getTime()},R.startOf=function(Z,G){var U=this,H=!!g.u(G)||G,O=g.p(Z),D=function(ce,Le){var Te=g.w(U.$u?Date.UTC(U.$y,Le,ce):new Date(U.$y,Le,ce),U);return H?Te:Te.endOf(u)},Y=function(ce,Le){return g.w(U.toDate()[ce].apply(U.toDate("s"),(H?[0,0,0,0]:[23,59,59,999]).slice(Le)),U)},Q=this.$W,ee=this.$M,oe=this.$D,Ne="set"+(this.$u?"UTC":"");switch(O){case b:return H?D(1,0):D(31,11);case f:return H?D(1,ee):D(0,ee+1);case d:var pe=this.$locale().weekStart||0,me=(Q<pe?Q+7:Q)-pe;return D(H?oe-me:oe+(6-me),ee);case u:case A:return Y(Ne+"Hours",0);case s:return Y(Ne+"Minutes",1);case i:return Y(Ne+"Seconds",2);case o:return Y(Ne+"Milliseconds",3);default:return this.clone()}},R.endOf=function(Z){return this.startOf(Z,!1)},R.$set=function(Z,G){var U,H=g.p(Z),O="set"+(this.$u?"UTC":""),D=(U={},U[u]=O+"Date",U[A]=O+"Date",U[f]=O+"Month",U[b]=O+"FullYear",U[s]=O+"Hours",U[i]=O+"Minutes",U[o]=O+"Seconds",U[l]=O+"Milliseconds",U)[H],Y=H===u?this.$D+(G-this.$W):G;if(H===f||H===b){var Q=this.clone().set(A,1);Q.$d[D](Y),Q.init(),this.$d=Q.set(A,Math.min(this.$D,Q.daysInMonth())).$d}else D&&this.$d[D](Y);return this.init(),this},R.set=function(Z,G){return this.clone().$set(Z,G)},R.get=function(Z){return this[g.p(Z)]()},R.add=function(Z,G){var U,H=this;Z=Number(Z);var O=g.p(G),D=function(ee){var oe=x(H);return g.w(oe.date(oe.date()+Math.round(ee*Z)),H)};if(O===f)return this.set(f,this.$M+Z);if(O===b)return this.set(b,this.$y+Z);if(O===u)return D(1);if(O===d)return D(7);var Y=(U={},U[i]=r,U[s]=a,U[o]=n,U)[O]||1,Q=this.$d.getTime()+Z*Y;return g.w(Q,this)},R.subtract=function(Z,G){return this.add(-1*Z,G)},R.format=function(Z){var G=this,U=this.$locale();if(!this.isValid())return U.invalidDate||h;var H=Z||"YYYY-MM-DDTHH:mm:ssZ",O=g.z(this),D=this.$H,Y=this.$m,Q=this.$M,ee=U.weekdays,oe=U.months,Ne=function(Le,Te,xe,_){return Le&&(Le[Te]||Le(G,H))||xe[Te].slice(0,_)},pe=function(Le){return g.s(D%12||12,Le,"0")},me=U.meridiem||function(Le,Te,xe){var _=Le<12?"AM":"PM";return xe?_.toLowerCase():_},ce={YY:String(this.$y).slice(-2),YYYY:this.$y,M:Q+1,MM:g.s(Q+1,2,"0"),MMM:Ne(U.monthsShort,Q,oe,3),MMMM:Ne(oe,Q),D:this.$D,DD:g.s(this.$D,2,"0"),d:String(this.$W),dd:Ne(U.weekdaysMin,this.$W,ee,2),ddd:Ne(U.weekdaysShort,this.$W,ee,3),dddd:ee[this.$W],H:String(D),HH:g.s(D,2,"0"),h:pe(1),hh:pe(2),a:me(D,Y,!0),A:me(D,Y,!1),m:String(Y),mm:g.s(Y,2,"0"),s:String(this.$s),ss:g.s(this.$s,2,"0"),SSS:g.s(this.$ms,3,"0"),Z:O};return H.replace(v,function(Le,Te){return Te||ce[Le]||O.replace(":","")})},R.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},R.diff=function(Z,G,U){var H,O=g.p(G),D=x(Z),Y=(D.utcOffset()-this.utcOffset())*r,Q=this-D,ee=g.m(this,D);return ee=(H={},H[b]=ee/12,H[f]=ee,H[p]=ee/3,H[d]=(Q-Y)/6048e5,H[u]=(Q-Y)/864e5,H[s]=Q/a,H[i]=Q/r,H[o]=Q/n,H)[O]||Q,U?ee:g.a(ee)},R.daysInMonth=function(){return this.endOf(f).$D},R.$locale=function(){return V[this.$L]},R.locale=function(Z,G){if(!Z)return this.$L;var U=this.clone(),H=P(Z,G,!0);return H&&(U.$L=H),U},R.clone=function(){return g.w(this.$d,this)},R.toDate=function(){return new Date(this.valueOf())},R.toJSON=function(){return this.isValid()?this.toISOString():null},R.toISOString=function(){return this.$d.toISOString()},R.toString=function(){return this.$d.toUTCString()},w}(),L=j.prototype;return x.prototype=L,[["$ms",l],["$s",o],["$m",i],["$H",s],["$W",u],["$M",f],["$y",b],["$D",A]].forEach(function(w){L[w[1]]=function(R){return this.$g(R,w[0],w[1])}}),x.extend=function(w,R){return w.$i||(w(R,j,x),w.$i=!0),x},x.locale=P,x.isDayjs=T,x.unix=function(w){return x(1e3*w)},x.en=V[k],x.Ls=V,x.p={},x})})(rP);const Lt=rP.exports;var aP={exports:{}};(function(e,t){(function(n,r){e.exports=r()})(Tn,function(){var n={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},r=/(\[[^[]*\])|([-_:/.,()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,a=/\d\d/,l=/\d\d?/,o=/\d*[^-_:/,()\s\d]+/,i={},s=function(h){return(h=+h)+(h>68?1900:2e3)},u=function(h){return function(m){this[h]=+m}},d=[/[+-]\d\d:?(\d\d)?|Z/,function(h){(this.zone||(this.zone={})).offset=function(m){if(!m||m==="Z")return 0;var v=m.match(/([+-]|\d\d)/g),S=60*v[1]+(+v[2]||0);return S===0?0:v[0]==="+"?-S:S}(h)}],f=function(h){var m=i[h];return m&&(m.indexOf?m:m.s.concat(m.f))},p=function(h,m){var v,S=i.meridiem;if(S){for(var y=1;y<=24;y+=1)if(h.indexOf(S(y,0,m))>-1){v=y>12;break}}else v=h===(m?"pm":"PM");return v},b={A:[o,function(h){this.afternoon=p(h,!1)}],a:[o,function(h){this.afternoon=p(h,!0)}],S:[/\d/,function(h){this.milliseconds=100*+h}],SS:[a,function(h){this.milliseconds=10*+h}],SSS:[/\d{3}/,function(h){this.milliseconds=+h}],s:[l,u("seconds")],ss:[l,u("seconds")],m:[l,u("minutes")],mm:[l,u("minutes")],H:[l,u("hours")],h:[l,u("hours")],HH:[l,u("hours")],hh:[l,u("hours")],D:[l,u("day")],DD:[a,u("day")],Do:[o,function(h){var m=i.ordinal,v=h.match(/\d+/);if(this.day=v[0],m)for(var S=1;S<=31;S+=1)m(S).replace(/\[|\]/g,"")===h&&(this.day=S)}],M:[l,u("month")],MM:[a,u("month")],MMM:[o,function(h){var m=f("months"),v=(f("monthsShort")||m.map(function(S){return S.slice(0,3)})).indexOf(h)+1;if(v<1)throw new Error;this.month=v%12||v}],MMMM:[o,function(h){var m=f("months").indexOf(h)+1;if(m<1)throw new Error;this.month=m%12||m}],Y:[/[+-]?\d+/,u("year")],YY:[a,function(h){this.year=s(h)}],YYYY:[/\d{4}/,u("year")],Z:d,ZZ:d};function A(h){var m,v;m=h,v=i&&i.formats;for(var S=(h=m.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g,function(x,g,j){var L=j&&j.toUpperCase();return g||v[j]||n[j]||v[L].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,function(w,R,Z){return R||Z.slice(1)})})).match(r),y=S.length,W=0;W<y;W+=1){var k=S[W],V=b[k],T=V&&V[0],P=V&&V[1];S[W]=P?{regex:T,parser:P}:k.replace(/^\[|\]$/g,"")}return function(x){for(var g={},j=0,L=0;j<y;j+=1){var w=S[j];if(typeof w=="string")L+=w.length;else{var R=w.regex,Z=w.parser,G=x.slice(L),U=R.exec(G)[0];Z.call(g,U),x=x.replace(U,"")}}return function(H){var O=H.afternoon;if(O!==void 0){var D=H.hours;O?D<12&&(H.hours+=12):D===12&&(H.hours=0),delete H.afternoon}}(g),g}}return function(h,m,v){v.p.customParseFormat=!0,h&&h.parseTwoDigitYear&&(s=h.parseTwoDigitYear);var S=m.prototype,y=S.parse;S.parse=function(W){var k=W.date,V=W.utc,T=W.args;this.$u=V;var P=T[1];if(typeof P=="string"){var x=T[2]===!0,g=T[3]===!0,j=x||g,L=T[2];g&&(L=T[2]),i=this.$locale(),!x&&L&&(i=v.Ls[L]),this.$d=function(G,U,H){try{if(["x","X"].indexOf(U)>-1)return new Date((U==="X"?1e3:1)*G);var O=A(U)(G),D=O.year,Y=O.month,Q=O.day,ee=O.hours,oe=O.minutes,Ne=O.seconds,pe=O.milliseconds,me=O.zone,ce=new Date,Le=Q||(D||Y?1:ce.getDate()),Te=D||ce.getFullYear(),xe=0;D&&!Y||(xe=Y>0?Y-1:ce.getMonth());var _=ee||0,re=oe||0,ye=Ne||0,ge=pe||0;return me?new Date(Date.UTC(Te,xe,Le,_,re,ye,ge+60*me.offset*1e3)):H?new Date(Date.UTC(Te,xe,Le,_,re,ye,ge)):new Date(Te,xe,Le,_,re,ye,ge)}catch{return new Date("")}}(k,P,V),this.init(),L&&L!==!0&&(this.$L=this.locale(L).$L),j&&k!=this.format(P)&&(this.$d=new Date("")),i={}}else if(P instanceof Array)for(var w=P.length,R=1;R<=w;R+=1){T[1]=P[R-1];var Z=v.apply(this,T);if(Z.isValid()){this.$d=Z.$d,this.$L=Z.$L,this.init();break}R===w&&(this.$d=new Date(""))}else y.call(this,W)}}})})(aP);const d2=aP.exports,k8=["hours","minutes","seconds"],oh="HH:mm:ss",ls="YYYY-MM-DD",kte={date:ls,dates:ls,week:"gggg[w]ww",year:"YYYY",month:"YYYY-MM",datetime:`${ls} ${oh}`,monthrange:"YYYY-MM",daterange:ls,datetimerange:`${ls} ${oh}`},Zb=(e,t)=>[e>0?e-1:void 0,e,e<t?e+1:void 0],po=e=>Array.from(Array.from({length:e}).keys()),lP=e=>e.replace(/\W?m{1,2}|\W?ZZ/g,"").replace(/\W?h{1,2}|\W?s{1,3}|\W?a/gi,"").trim(),oP=e=>e.replace(/\W?D{1,2}|\W?Do|\W?d{1,4}|\W?M{1,4}|\W?Y{2,4}/g,"").trim(),V8=function(e,t){const n=bi(e),r=bi(t);return n&&r?e.getTime()===t.getTime():!n&&!r?e===t:!1},P8=function(e,t){const n=et(e),r=et(t);return n&&r?e.length!==t.length?!1:e.every((a,l)=>V8(a,t[l])):!n&&!r?V8(e,t):!1},T8=function(e,t,n){const r=da(t)||t==="x"?Lt(e).locale(n):Lt(e,t).locale(n);return r.isValid()?r:void 0},K8=function(e,t,n){return da(t)?e:t==="x"?+e:Lt(e).locale(n).format(t)},Gb=(e,t)=>{var n;const r=[],a=t==null?void 0:t();for(let l=0;l<e;l++)r.push((n=a==null?void 0:a.includes(l))!=null?n:!1);return r},iP=Ie({disabledHours:{type:ve(Function)},disabledMinutes:{type:ve(Function)},disabledSeconds:{type:ve(Function)}}),sP=Ie({visible:Boolean,actualVisible:{type:Boolean,default:void 0},format:{type:String,default:""}}),f2=Ie({id:{type:ve([Array,String])},name:{type:ve([Array,String]),default:""},popperClass:{type:String,default:""},format:String,valueFormat:String,dateFormat:String,timeFormat:String,type:{type:String,default:""},clearable:{type:Boolean,default:!0},clearIcon:{type:ve([String,Object]),default:qo},editable:{type:Boolean,default:!0},prefixIcon:{type:ve([String,Object]),default:""},size:ur,readonly:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},placeholder:{type:String,default:""},popperOptions:{type:ve(Object),default:()=>({})},modelValue:{type:ve([Date,Array,String,Number]),default:""},rangeSeparator:{type:String,default:"-"},startPlaceholder:String,endPlaceholder:String,defaultValue:{type:ve([Date,Array])},defaultTime:{type:ve([Date,Array])},isRange:{type:Boolean,default:!1},...iP,disabledDate:{type:Function},cellClassName:{type:Function},shortcuts:{type:Array,default:()=>[]},arrowControl:{type:Boolean,default:!1},label:{type:String,default:void 0},tabindex:{type:ve([String,Number]),default:0},validateEvent:{type:Boolean,default:!0},unlinkPanels:Boolean}),Vte=["id","name","placeholder","value","disabled","readonly"],Pte=["id","name","placeholder","value","disabled","readonly"],Tte=$({name:"Picker"}),Kte=$({...Tte,props:f2,emits:["update:modelValue","change","focus","blur","calendar-change","panel-change","visible-change","keydown"],setup(e,{expose:t,emit:n}){const r=e,a=Xo(),{lang:l}=It(),o=ze("date"),i=ze("input"),s=ze("range"),{form:u,formItem:d}=wr(),f=tt("ElPopperOptions",{}),p=J(),b=J(),A=J(!1),h=J(!1),m=J(null);let v=!1,S=!1;const y=X(()=>[o.b("editor"),o.bm("editor",r.type),i.e("wrapper"),o.is("disabled",Q.value),o.is("active",A.value),s.b("editor"),Ae?s.bm("editor",Ae.value):"",a.class]),W=X(()=>[i.e("icon"),s.e("close-icon"),Le.value?"":s.e("close-icon--hidden")]);Ve(A,ne=>{ne?at(()=>{ne&&(m.value=r.modelValue)}):(Pe.value=null,at(()=>{k(r.modelValue)}))});const k=(ne,M)=>{(M||!P8(ne,m.value))&&(n("change",ne),r.validateEvent&&(d==null||d.validate("change").catch(Oe=>void 0)))},V=ne=>{if(!P8(r.modelValue,ne)){let M;et(ne)?M=ne.map(Oe=>K8(Oe,r.valueFormat,l.value)):ne&&(M=K8(ne,r.valueFormat,l.value)),n("update:modelValue",ne&&M,l.value)}},T=ne=>{n("keydown",ne)},P=X(()=>{if(b.value){const ne=Fe.value?b.value:b.value.$el;return Array.from(ne.querySelectorAll("input"))}return[]}),x=(ne,M,Oe)=>{const Ee=P.value;!Ee.length||(!Oe||Oe==="min"?(Ee[0].setSelectionRange(ne,M),Ee[0].focus()):Oe==="max"&&(Ee[1].setSelectionRange(ne,M),Ee[1].focus()))},g=()=>{H(!0,!0),at(()=>{S=!1})},j=(ne="",M=!1)=>{M||(S=!0),A.value=M;let Oe;et(ne)?Oe=ne.map(Ee=>Ee.toDate()):Oe=ne&&ne.toDate(),Pe.value=null,V(Oe)},L=()=>{h.value=!0},w=()=>{n("visible-change",!0)},R=ne=>{(ne==null?void 0:ne.key)===ut.esc&&H(!0,!0)},Z=()=>{h.value=!1,A.value=!1,S=!1,n("visible-change",!1)},G=()=>{A.value=!0},U=()=>{A.value=!1},H=(ne=!0,M=!1)=>{S=M;const[Oe,Ee]=c(P);let ft=Oe;!ne&&Fe.value&&(ft=Ee),ft&&ft.focus()},O=ne=>{r.readonly||Q.value||A.value||S||(A.value=!0,n("focus",ne))};let D;const Y=ne=>{const M=async()=>{setTimeout(()=>{var Oe;D===M&&(!(((Oe=p.value)==null?void 0:Oe.isFocusInsideContent())&&!v)&&P.value.filter(Ee=>Ee.contains(document.activeElement)).length===0&&(qe(),A.value=!1,n("blur",ne),r.validateEvent&&(d==null||d.validate("blur").catch(Ee=>void 0))),v=!1)},0)};D=M,M()},Q=X(()=>r.disabled||(u==null?void 0:u.disabled)),ee=X(()=>{let ne;if(xe.value?ke.value.getDefaultValue&&(ne=ke.value.getDefaultValue()):et(r.modelValue)?ne=r.modelValue.map(M=>T8(M,r.valueFormat,l.value)):ne=T8(r.modelValue,r.valueFormat,l.value),ke.value.getRangeAvailableTime){const M=ke.value.getRangeAvailableTime(ne);zr(M,ne)||(ne=M,V(et(ne)?ne.map(Oe=>Oe.toDate()):ne.toDate()))}return et(ne)&&ne.some(M=>!M)&&(ne=[]),ne}),oe=X(()=>{if(!ke.value.panelReady)return"";const ne=Me(ee.value);return et(Pe.value)?[Pe.value[0]||ne&&ne[0]||"",Pe.value[1]||ne&&ne[1]||""]:Pe.value!==null?Pe.value:!pe.value&&xe.value||!A.value&&xe.value?"":ne?me.value?ne.join(", "):ne:""}),Ne=X(()=>r.type.includes("time")),pe=X(()=>r.type.startsWith("time")),me=X(()=>r.type==="dates"),ce=X(()=>r.prefixIcon||(Ne.value?zk:dM)),Le=J(!1),Te=ne=>{r.readonly||Q.value||Le.value&&(ne.stopPropagation(),g(),V(null),k(null,!0),Le.value=!1,A.value=!1,ke.value.handleClear&&ke.value.handleClear())},xe=X(()=>{const{modelValue:ne}=r;return!ne||et(ne)&&!ne.filter(Boolean).length}),_=async ne=>{var M;r.readonly||Q.value||(((M=ne.target)==null?void 0:M.tagName)!=="INPUT"||P.value.includes(document.activeElement))&&(A.value=!0)},re=()=>{r.readonly||Q.value||!xe.value&&r.clearable&&(Le.value=!0)},ye=()=>{Le.value=!1},ge=ne=>{var M;r.readonly||Q.value||(((M=ne.touches[0].target)==null?void 0:M.tagName)!=="INPUT"||P.value.includes(document.activeElement))&&(A.value=!0)},Fe=X(()=>r.type.includes("range")),Ae=Cn(),Ze=X(()=>{var ne,M;return(M=(ne=c(p))==null?void 0:ne.popperRef)==null?void 0:M.contentRef}),Ue=X(()=>{var ne;return c(Fe)?c(b):(ne=c(b))==null?void 0:ne.$el});_0(Ue,ne=>{const M=c(Ze),Oe=c(Ue);M&&(ne.target===M||ne.composedPath().includes(M))||ne.target===Oe||ne.composedPath().includes(Oe)||(A.value=!1)});const Pe=J(null),qe=()=>{if(Pe.value){const ne=De(oe.value);ne&&_e(ne)&&(V(et(ne)?ne.map(M=>M.toDate()):ne.toDate()),Pe.value=null)}Pe.value===""&&(V(null),k(null),Pe.value=null)},De=ne=>ne?ke.value.parseUserInput(ne):null,Me=ne=>ne?ke.value.formatToString(ne):null,_e=ne=>ke.value.isValidValue(ne),Re=async ne=>{if(r.readonly||Q.value)return;const{code:M}=ne;if(T(ne),M===ut.esc){A.value===!0&&(A.value=!1,ne.preventDefault(),ne.stopPropagation());return}if(M===ut.down&&(ke.value.handleFocusPicker&&(ne.preventDefault(),ne.stopPropagation()),A.value===!1&&(A.value=!0,await at()),ke.value.handleFocusPicker)){ke.value.handleFocusPicker();return}if(M===ut.tab){v=!0;return}if(M===ut.enter||M===ut.numpadEnter){(Pe.value===null||Pe.value===""||_e(De(oe.value)))&&(qe(),A.value=!1),ne.stopPropagation();return}if(Pe.value){ne.stopPropagation();return}ke.value.handleKeydownInput&&ke.value.handleKeydownInput(ne)},$e=ne=>{Pe.value=ne,A.value||(A.value=!0)},dt=ne=>{const M=ne.target;Pe.value?Pe.value=[M.value,Pe.value[1]]:Pe.value=[M.value,null]},yt=ne=>{const M=ne.target;Pe.value?Pe.value=[Pe.value[0],M.value]:Pe.value=[null,M.value]},gt=()=>{var ne;const M=Pe.value,Oe=De(M&&M[0]),Ee=c(ee);if(Oe&&Oe.isValid()){Pe.value=[Me(Oe),((ne=oe.value)==null?void 0:ne[1])||null];const ft=[Oe,Ee&&(Ee[1]||null)];_e(ft)&&(V(ft),Pe.value=null)}},ot=()=>{var ne;const M=c(Pe),Oe=De(M&&M[1]),Ee=c(ee);if(Oe&&Oe.isValid()){Pe.value=[((ne=c(oe))==null?void 0:ne[0])||null,Me(Oe)];const ft=[Ee&&Ee[0],Oe];_e(ft)&&(V(ft),Pe.value=null)}},ke=J({}),be=ne=>{ke.value[ne[0]]=ne[1],ke.value.panelReady=!0},fe=ne=>{n("calendar-change",ne)},Xe=(ne,M,Oe)=>{n("panel-change",ne,M,Oe)};return zt("EP_PICKER_BASE",{props:r}),t({focus:H,handleFocusInput:O,handleBlurInput:Y,handleOpen:G,handleClose:U,onPick:j}),(ne,M)=>(K(),ie(c(Xr),Ut({ref_key:"refPopper",ref:p,visible:A.value,effect:"light",pure:"",trigger:"click"},ne.$attrs,{role:"dialog",teleported:"",transition:`${c(o).namespace.value}-zoom-in-top`,"popper-class":[`${c(o).namespace.value}-picker__popper`,ne.popperClass],"popper-options":c(f),"fallback-placements":["bottom","top","right","left"],"gpu-acceleration":!1,"stop-popper-mouse-event":!1,"hide-after":0,persistent:"",onBeforeShow:L,onShow:w,onHide:Z}),{default:B(()=>[c(Fe)?(K(),F("div",{key:1,ref_key:"inputRef",ref:b,class:q(c(y)),style:lt(ne.$attrs.style),onClick:O,onMouseenter:re,onMouseleave:ye,onTouchstart:ge,onKeydown:Re},[c(ce)?(K(),ie(c(it),{key:0,class:q([c(i).e("icon"),c(s).e("icon")]),onMousedown:pt(_,["prevent"]),onTouchstart:ge},{default:B(()=>[(K(),ie(Ot(c(ce))))]),_:1},8,["class","onMousedown"])):ae("v-if",!0),z("input",{id:ne.id&&ne.id[0],autocomplete:"off",name:ne.name&&ne.name[0],placeholder:ne.startPlaceholder,value:c(oe)&&c(oe)[0],disabled:c(Q),readonly:!ne.editable||ne.readonly,class:q(c(s).b("input")),onMousedown:_,onInput:dt,onChange:gt,onFocus:O,onBlur:Y},null,42,Vte),ue(ne.$slots,"range-separator",{},()=>[z("span",{class:q(c(s).b("separator"))},je(ne.rangeSeparator),3)]),z("input",{id:ne.id&&ne.id[1],autocomplete:"off",name:ne.name&&ne.name[1],placeholder:ne.endPlaceholder,value:c(oe)&&c(oe)[1],disabled:c(Q),readonly:!ne.editable||ne.readonly,class:q(c(s).b("input")),onMousedown:_,onFocus:O,onBlur:Y,onInput:yt,onChange:ot},null,42,Pte),ne.clearIcon?(K(),ie(c(it),{key:1,class:q(c(W)),onClick:Te},{default:B(()=>[(K(),ie(Ot(ne.clearIcon)))]),_:1},8,["class"])):ae("v-if",!0)],38)):(K(),ie(c(vr),{key:0,id:ne.id,ref_key:"inputRef",ref:b,"container-role":"combobox","model-value":c(oe),name:ne.name,size:c(Ae),disabled:c(Q),placeholder:ne.placeholder,class:q([c(o).b("editor"),c(o).bm("editor",ne.type),ne.$attrs.class]),style:lt(ne.$attrs.style),readonly:!ne.editable||ne.readonly||c(me)||ne.type==="week",label:ne.label,tabindex:ne.tabindex,"validate-event":!1,onInput:$e,onFocus:O,onBlur:Y,onKeydown:Re,onChange:qe,onMousedown:_,onMouseenter:re,onMouseleave:ye,onTouchstart:ge,onClick:M[0]||(M[0]=pt(()=>{},["stop"]))},{prefix:B(()=>[c(ce)?(K(),ie(c(it),{key:0,class:q(c(i).e("icon")),onMousedown:pt(_,["prevent"]),onTouchstart:ge},{default:B(()=>[(K(),ie(Ot(c(ce))))]),_:1},8,["class","onMousedown"])):ae("v-if",!0)]),suffix:B(()=>[Le.value&&ne.clearIcon?(K(),ie(c(it),{key:0,class:q(`${c(i).e("icon")} clear-icon`),onClick:pt(Te,["stop"])},{default:B(()=>[(K(),ie(Ot(ne.clearIcon)))]),_:1},8,["class","onClick"])):ae("v-if",!0)]),_:1},8,["id","model-value","name","size","disabled","placeholder","class","style","readonly","label","tabindex","onKeydown"]))]),content:B(()=>[ue(ne.$slots,"default",{visible:A.value,actualVisible:h.value,parsedValue:c(ee),format:ne.format,dateFormat:ne.dateFormat,timeFormat:ne.timeFormat,unlinkPanels:ne.unlinkPanels,type:ne.type,defaultValue:ne.defaultValue,onPick:j,onSelectRange:x,onSetPickerOption:be,onCalendarChange:fe,onPanelChange:Xe,onKeydown:R,onMousedown:M[1]||(M[1]=pt(()=>{},["stop"]))})]),_:3},16,["visible","transition","popper-class","popper-options"]))}});var uP=Be(Kte,[["__file","/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/common/picker.vue"]]);const Nte=Ie({...sP,datetimeRole:String,parsedValue:{type:ve(Object)}}),cP=({getAvailableHours:e,getAvailableMinutes:t,getAvailableSeconds:n})=>{const r=(o,i,s,u)=>{const d={hour:e,minute:t,second:n};let f=o;return["hour","minute","second"].forEach(p=>{if(d[p]){let b;const A=d[p];switch(p){case"minute":{b=A(f.hour(),i,u);break}case"second":{b=A(f.hour(),f.minute(),i,u);break}default:{b=A(i,u);break}}if((b==null?void 0:b.length)&&!b.includes(f[p]())){const h=s?0:b.length-1;f=f[p](b[h])}}}),f},a={};return{timePickerOptions:a,getAvailableTime:r,onSetOption:([o,i])=>{a[o]=i}}},Cb=e=>{const t=(r,a)=>r||a,n=r=>r!==!0;return e.map(t).filter(n)},dP=(e,t,n)=>({getHoursList:(o,i)=>Gb(24,e&&(()=>e==null?void 0:e(o,i))),getMinutesList:(o,i,s)=>Gb(60,t&&(()=>t==null?void 0:t(o,i,s))),getSecondsList:(o,i,s,u)=>Gb(60,n&&(()=>n==null?void 0:n(o,i,s,u)))}),fP=(e,t,n)=>{const{getHoursList:r,getMinutesList:a,getSecondsList:l}=dP(e,t,n);return{getAvailableHours:(u,d)=>Cb(r(u,d)),getAvailableMinutes:(u,d,f)=>Cb(a(u,d,f)),getAvailableSeconds:(u,d,f,p)=>Cb(l(u,d,f,p))}},pP=e=>{const t=J(e.parsedValue);return Ve(()=>e.visible,n=>{n||(t.value=e.parsedValue)}),t},_l=new Map;let N8;Mt&&(document.addEventListener("mousedown",e=>N8=e),document.addEventListener("mouseup",e=>{for(const t of _l.values())for(const{documentHandler:n}of t)n(e,N8)}));function x8(e,t){let n=[];return Array.isArray(t.arg)?n=t.arg:ha(t.arg)&&n.push(t.arg),function(r,a){const l=t.instance.popperRef,o=r.target,i=a==null?void 0:a.target,s=!t||!t.instance,u=!o||!i,d=e.contains(o)||e.contains(i),f=e===o,p=n.length&&n.some(A=>A==null?void 0:A.contains(o))||n.length&&n.includes(i),b=l&&(l.contains(o)||l.contains(i));s||u||d||f||p||b||t.value(r,a)}}const Po={beforeMount(e,t){_l.has(e)||_l.set(e,[]),_l.get(e).push({documentHandler:x8(e,t),bindingFn:t.value})},updated(e,t){_l.has(e)||_l.set(e,[]);const n=_l.get(e),r=n.findIndex(l=>l.bindingFn===t.oldValue),a={documentHandler:x8(e,t),bindingFn:t.value};r>=0?n.splice(r,1,a):n.push(a)},unmounted(e){_l.delete(e)}},xte=100,Xte=600,gp={beforeMount(e,t){const n=t.value,{interval:r=xte,delay:a=Xte}=ht(n)?{}:n;let l,o;const i=()=>ht(n)?n():n.handler(),s=()=>{o&&(clearTimeout(o),o=void 0),l&&(clearInterval(l),l=void 0)};e.addEventListener("mousedown",u=>{u.button===0&&(s(),i(),document.addEventListener("mouseup",()=>s(),{once:!0}),o=setTimeout(()=>{l=setInterval(()=>{i()},r)},a))})}},ih="_trap-focus-children",ei=[],X8=e=>{if(ei.length===0)return;const t=ei[ei.length-1][ih];if(t.length>0&&e.code===ut.tab){if(t.length===1){e.preventDefault(),document.activeElement!==t[0]&&t[0].focus();return}const n=e.shiftKey,r=e.target===t[0],a=e.target===t[t.length-1];r&&n&&(e.preventDefault(),t[t.length-1].focus()),a&&!n&&(e.preventDefault(),t[0].focus())}},gte={beforeMount(e){e[ih]=$y(e),ei.push(e),ei.length<=1&&document.addEventListener("keydown",X8)},updated(e){at(()=>{e[ih]=$y(e)})},unmounted(){ei.shift(),ei.length===0&&document.removeEventListener("keydown",X8)}};var g8=!1,Io,sh,uh,Xf,gf,vP,wf,ch,dh,fh,bP,ph,vh,hP,mP;function Lr(){if(!g8){g8=!0;var e=navigator.userAgent,t=/(?:MSIE.(\d+\.\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\d+\.\d+))|(?:Opera(?:.+Version.|.)(\d+\.\d+))|(?:AppleWebKit.(\d+(?:\.\d+)?))|(?:Trident\/\d+\.\d+.*rv:(\d+\.\d+))/.exec(e),n=/(Mac OS X)|(Windows)|(Linux)/.exec(e);if(ph=/\b(iPhone|iP[ao]d)/.exec(e),vh=/\b(iP[ao]d)/.exec(e),fh=/Android/i.exec(e),hP=/FBAN\/\w+;/i.exec(e),mP=/Mobile/i.exec(e),bP=!!/Win64/.exec(e),t){Io=t[1]?parseFloat(t[1]):t[5]?parseFloat(t[5]):NaN,Io&&document&&document.documentMode&&(Io=document.documentMode);var r=/(?:Trident\/(\d+.\d+))/.exec(e);vP=r?parseFloat(r[1])+4:Io,sh=t[2]?parseFloat(t[2]):NaN,uh=t[3]?parseFloat(t[3]):NaN,Xf=t[4]?parseFloat(t[4]):NaN,Xf?(t=/(?:Chrome\/(\d+\.\d+))/.exec(e),gf=t&&t[1]?parseFloat(t[1]):NaN):gf=NaN}else Io=sh=uh=gf=Xf=NaN;if(n){if(n[1]){var a=/(?:Mac OS X (\d+(?:[._]\d+)?))/.exec(e);wf=a?parseFloat(a[1].replace("_",".")):!0}else wf=!1;ch=!!n[2],dh=!!n[3]}else wf=ch=dh=!1}}var bh={ie:function(){return Lr()||Io},ieCompatibilityMode:function(){return Lr()||vP>Io},ie64:function(){return bh.ie()&&bP},firefox:function(){return Lr()||sh},opera:function(){return Lr()||uh},webkit:function(){return Lr()||Xf},safari:function(){return bh.webkit()},chrome:function(){return Lr()||gf},windows:function(){return Lr()||ch},osx:function(){return Lr()||wf},linux:function(){return Lr()||dh},iphone:function(){return Lr()||ph},mobile:function(){return Lr()||ph||vh||fh||mP},nativeApp:function(){return Lr()||hP},android:function(){return Lr()||fh},ipad:function(){return Lr()||vh}},wte=bh,rf=!!(typeof window<"u"&&window.document&&window.document.createElement),jte={canUseDOM:rf,canUseWorkers:typeof Worker<"u",canUseEventListeners:rf&&!!(window.addEventListener||window.attachEvent),canUseViewport:rf&&!!window.screen,isInWorker:!rf},SP=jte,yP;SP.canUseDOM&&(yP=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0);function Lte(e,t){if(!SP.canUseDOM||t&&!("addEventListener"in document))return!1;var n="on"+e,r=n in document;if(!r){var a=document.createElement("div");a.setAttribute(n,"return;"),r=typeof a[n]=="function"}return!r&&yP&&e==="wheel"&&(r=document.implementation.hasFeature("Events.wheel","3.0")),r}var qte=Lte,w8=10,j8=40,L8=800;function AP(e){var t=0,n=0,r=0,a=0;return"detail"in e&&(n=e.detail),"wheelDelta"in e&&(n=-e.wheelDelta/120),"wheelDeltaY"in e&&(n=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=n,n=0),r=t*w8,a=n*w8,"deltaY"in e&&(a=e.deltaY),"deltaX"in e&&(r=e.deltaX),(r||a)&&e.deltaMode&&(e.deltaMode==1?(r*=j8,a*=j8):(r*=L8,a*=L8)),r&&!t&&(t=r<1?-1:1),a&&!n&&(n=a<1?-1:1),{spinX:t,spinY:n,pixelX:r,pixelY:a}}AP.getEventType=function(){return wte.firefox()?"DOMMouseScroll":qte("wheel")?"wheel":"mousewheel"};var Ute=AP;/**
* Checks if an event is supported in the current execution environment.
*
* NOTE: This will not work correctly for non-generic events such as `change`,
* `reset`, `load`, `error`, and `select`.
*
* Borrows from Modernizr.
*
* @param {string} eventNameSuffix Event name, e.g. "click".
* @param {?boolean} capture Check if the capture phase is supported.
* @return {boolean} True if the event is supported.
* @internal
* @license Modernizr 3.0.0pre (Custom Build) | MIT
*/const Ote=function(e,t){if(e&&e.addEventListener){const n=function(r){const a=Ute(r);t&&Reflect.apply(t,this,[r,a])};e.addEventListener("wheel",n,{passive:!0})}},Rte={beforeMount(e,t){Ote(e,t.value)}},Jte=Ie({role:{type:String,required:!0},spinnerDate:{type:ve(Object),required:!0},showSeconds:{type:Boolean,default:!0},arrowControl:Boolean,amPmMode:{type:ve(String),default:""},...iP}),Fte=["onClick"],zte=["onMouseenter"],Hte=$({__name:"basic-time-spinner",props:Jte,emits:["change","select-range","set-option"],setup(e,{emit:t}){const n=e,r=ze("time"),{getHoursList:a,getMinutesList:l,getSecondsList:o}=dP(n.disabledHours,n.disabledMinutes,n.disabledSeconds);let i=!1;const s=J(),u=J(),d=J(),f=J(),p={hours:u,minutes:d,seconds:f},b=X(()=>n.showSeconds?k8:k8.slice(0,2)),A=X(()=>{const{spinnerDate:O}=n,D=O.hour(),Y=O.minute(),Q=O.second();return{hours:D,minutes:Y,seconds:Q}}),h=X(()=>{const{hours:O,minutes:D}=c(A);return{hours:a(n.role),minutes:l(O,n.role),seconds:o(O,D,n.role)}}),m=X(()=>{const{hours:O,minutes:D,seconds:Y}=c(A);return{hours:Zb(O,23),minutes:Zb(D,59),seconds:Zb(Y,59)}}),v=xr(O=>{i=!1,W(O)},200),S=O=>{if(!!!n.amPmMode)return"";const Y=n.amPmMode==="A";let Q=O<12?" am":" pm";return Y&&(Q=Q.toUpperCase()),Q},y=O=>{let D;switch(O){case"hours":D=[0,2];break;case"minutes":D=[3,5];break;case"seconds":D=[6,8];break}const[Y,Q]=D;t("select-range",Y,Q),s.value=O},W=O=>{T(O,c(A)[O])},k=()=>{W("hours"),W("minutes"),W("seconds")},V=O=>O.querySelector(`.${r.namespace.value}-scrollbar__wrap`),T=(O,D)=>{if(n.arrowControl)return;const Y=c(p[O]);Y&&Y.$el&&(V(Y.$el).scrollTop=Math.max(0,D*P(O)))},P=O=>{const D=c(p[O]),Y=D==null?void 0:D.$el.querySelector("li");return Y&&Number.parseFloat(ao(Y,"height"))||0},x=()=>{j(1)},g=()=>{j(-1)},j=O=>{s.value||y("hours");const D=s.value,Y=c(A)[D],Q=s.value==="hours"?24:60,ee=L(D,Y,O,Q);w(D,ee),T(D,ee),at(()=>y(D))},L=(O,D,Y,Q)=>{let ee=(D+Y+Q)%Q;const oe=c(h)[O];for(;oe[ee]&&ee!==D;)ee=(ee+Y+Q)%Q;return ee},w=(O,D)=>{if(c(h)[O][D])return;const{hours:ee,minutes:oe,seconds:Ne}=c(A);let pe;switch(O){case"hours":pe=n.spinnerDate.hour(D).minute(oe).second(Ne);break;case"minutes":pe=n.spinnerDate.hour(ee).minute(D).second(Ne);break;case"seconds":pe=n.spinnerDate.hour(ee).minute(oe).second(D);break}t("change",pe)},R=(O,{value:D,disabled:Y})=>{Y||(w(O,D),y(O),T(O,D))},Z=O=>{i=!0,v(O);const D=Math.min(Math.round((V(c(p[O]).$el).scrollTop-(G(O)*.5-10)/P(O)+3)/P(O)),O==="hours"?23:59);w(O,D)},G=O=>c(p[O]).$el.offsetHeight,U=()=>{const O=D=>{const Y=c(p[D]);Y&&Y.$el&&(V(Y.$el).onscroll=()=>{Z(D)})};O("hours"),O("minutes"),O("seconds")};At(()=>{at(()=>{!n.arrowControl&&U(),k(),n.role==="start"&&y("hours")})});const H=(O,D)=>{p[D].value=O};return t("set-option",[`${n.role}_scrollDown`,j]),t("set-option",[`${n.role}_emitSelectRange`,y]),Ve(()=>n.spinnerDate,()=>{i||k()}),(O,D)=>(K(),F("div",{class:q([c(r).b("spinner"),{"has-seconds":O.showSeconds}])},[O.arrowControl?ae("v-if",!0):(K(!0),F(Qe,{key:0},Nt(c(b),Y=>(K(),ie(c(Cl),{key:Y,ref_for:!0,ref:Q=>H(Q,Y),class:q(c(r).be("spinner","wrapper")),"wrap-style":"max-height: inherit;","view-class":c(r).be("spinner","list"),noresize:"",tag:"ul",onMouseenter:Q=>y(Y),onMousemove:Q=>W(Y)},{default:B(()=>[(K(!0),F(Qe,null,Nt(c(h)[Y],(Q,ee)=>(K(),F("li",{key:ee,class:q([c(r).be("spinner","item"),c(r).is("active",ee===c(A)[Y]),c(r).is("disabled",Q)]),onClick:oe=>R(Y,{value:ee,disabled:Q})},[Y==="hours"?(K(),F(Qe,{key:0},[Xt(je(("0"+(O.amPmMode?ee%12||12:ee)).slice(-2))+je(S(ee)),1)],64)):(K(),F(Qe,{key:1},[Xt(je(("0"+ee).slice(-2)),1)],64))],10,Fte))),128))]),_:2},1032,["class","view-class","onMouseenter","onMousemove"]))),128)),O.arrowControl?(K(!0),F(Qe,{key:1},Nt(c(b),Y=>(K(),F("div",{key:Y,class:q([c(r).be("spinner","wrapper"),c(r).is("arrow")]),onMouseenter:Q=>y(Y)},[Vt((K(),ie(c(it),{class:q(["arrow-up",c(r).be("spinner","arrow")])},{default:B(()=>[C(c(Uv))]),_:1},8,["class"])),[[c(gp),g]]),Vt((K(),ie(c(it),{class:q(["arrow-down",c(r).be("spinner","arrow")])},{default:B(()=>[C(c(Lo))]),_:1},8,["class"])),[[c(gp),x]]),z("ul",{class:q(c(r).be("spinner","list"))},[(K(!0),F(Qe,null,Nt(c(m)[Y],(Q,ee)=>(K(),F("li",{key:ee,class:q([c(r).be("spinner","item"),c(r).is("active",Q===c(A)[Y]),c(r).is("disabled",c(h)[Y][Q])])},[typeof Q=="number"?(K(),F(Qe,{key:0},[Y==="hours"?(K(),F(Qe,{key:0},[Xt(je(("0"+(O.amPmMode?Q%12||12:Q)).slice(-2))+je(S(Q)),1)],64)):(K(),F(Qe,{key:1},[Xt(je(("0"+Q).slice(-2)),1)],64))],64)):ae("v-if",!0)],2))),128))],2)],42,zte))),128)):ae("v-if",!0)],2))}});var hh=Be(Hte,[["__file","/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/basic-time-spinner.vue"]]);const Zte=$({__name:"panel-time-pick",props:Nte,emits:["pick","select-range","set-picker-option"],setup(e,{emit:t}){const n=e,r=tt("EP_PICKER_BASE"),{arrowControl:a,disabledHours:l,disabledMinutes:o,disabledSeconds:i,defaultValue:s}=r.props,{getAvailableHours:u,getAvailableMinutes:d,getAvailableSeconds:f}=fP(l,o,i),p=ze("time"),{t:b,lang:A}=It(),h=J([0,2]),m=pP(n),v=X(()=>Hn(n.actualVisible)?`${p.namespace.value}-zoom-in-top`:""),S=X(()=>n.format.includes("ss")),y=X(()=>n.format.includes("A")?"A":n.format.includes("a")?"a":""),W=H=>{const O=Lt(H).locale(A.value),D=R(O);return O.isSame(D)},k=()=>{t("pick",m.value,!1)},V=(H=!1,O=!1)=>{O||t("pick",n.parsedValue,H)},T=H=>{if(!n.visible)return;const O=R(H).millisecond(0);t("pick",O,!0)},P=(H,O)=>{t("select-range",H,O),h.value=[H,O]},x=H=>{const O=[0,3].concat(S.value?[6]:[]),D=["hours","minutes"].concat(S.value?["seconds"]:[]),Q=(O.indexOf(h.value[0])+H+O.length)%O.length;j.start_emitSelectRange(D[Q])},g=H=>{const O=H.code,{left:D,right:Y,up:Q,down:ee}=ut;if([D,Y].includes(O)){x(O===D?-1:1),H.preventDefault();return}if([Q,ee].includes(O)){const oe=O===Q?-1:1;j.start_scrollDown(oe),H.preventDefault();return}},{timePickerOptions:j,onSetOption:L,getAvailableTime:w}=cP({getAvailableHours:u,getAvailableMinutes:d,getAvailableSeconds:f}),R=H=>w(H,n.datetimeRole||"",!0),Z=H=>H?Lt(H,n.format).locale(A.value):null,G=H=>H?H.format(n.format):null,U=()=>Lt(s).locale(A.value);return t("set-picker-option",["isValidValue",W]),t("set-picker-option",["formatToString",G]),t("set-picker-option",["parseUserInput",Z]),t("set-picker-option",["handleKeydownInput",g]),t("set-picker-option",["getRangeAvailableTime",R]),t("set-picker-option",["getDefaultValue",U]),(H,O)=>(K(),ie(fn,{name:c(v)},{default:B(()=>[H.actualVisible||H.visible?(K(),F("div",{key:0,class:q(c(p).b("panel"))},[z("div",{class:q([c(p).be("panel","content"),{"has-seconds":c(S)}])},[C(hh,{ref:"spinner",role:H.datetimeRole||"start","arrow-control":c(a),"show-seconds":c(S),"am-pm-mode":c(y),"spinner-date":H.parsedValue,"disabled-hours":c(l),"disabled-minutes":c(o),"disabled-seconds":c(i),onChange:T,onSetOption:c(L),onSelectRange:P},null,8,["role","arrow-control","show-seconds","am-pm-mode","spinner-date","disabled-hours","disabled-minutes","disabled-seconds","onSetOption"])],2),z("div",{class:q(c(p).be("panel","footer"))},[z("button",{type:"button",class:q([c(p).be("panel","btn"),"cancel"]),onClick:k},je(c(b)("el.datepicker.cancel")),3),z("button",{type:"button",class:q([c(p).be("panel","btn"),"confirm"]),onClick:O[0]||(O[0]=D=>V())},je(c(b)("el.datepicker.confirm")),3)],2)],2)):ae("v-if",!0)]),_:1},8,["name"]))}});var wp=Be(Zte,[["__file","/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/panel-time-pick.vue"]]);const Gte=Ie({...sP,parsedValue:{type:ve(Array)}}),Cte=["disabled"],Mte=$({__name:"panel-time-range",props:Gte,emits:["pick","select-range","set-picker-option"],setup(e,{emit:t}){const n=e,r=(xe,_)=>{const re=[];for(let ye=xe;ye<=_;ye++)re.push(ye);return re},{t:a,lang:l}=It(),o=ze("time"),i=ze("picker"),s=tt("EP_PICKER_BASE"),{arrowControl:u,disabledHours:d,disabledMinutes:f,disabledSeconds:p,defaultValue:b}=s.props,A=X(()=>[o.be("range-picker","body"),o.be("panel","content"),o.is("arrow",u),W.value?"has-seconds":""]),h=X(()=>[o.be("range-picker","body"),o.be("panel","content"),o.is("arrow",u),W.value?"has-seconds":""]),m=X(()=>n.parsedValue[0]),v=X(()=>n.parsedValue[1]),S=pP(n),y=()=>{t("pick",S.value,!1)},W=X(()=>n.format.includes("ss")),k=X(()=>n.format.includes("A")?"A":n.format.includes("a")?"a":""),V=(xe=!1)=>{t("pick",[m.value,v.value],xe)},T=xe=>{g(xe.millisecond(0),v.value)},P=xe=>{g(m.value,xe.millisecond(0))},x=xe=>{const _=xe.map(ye=>Lt(ye).locale(l.value)),re=Y(_);return _[0].isSame(re[0])&&_[1].isSame(re[1])},g=(xe,_)=>{t("pick",[xe,_],!0)},j=X(()=>m.value>v.value),L=J([0,2]),w=(xe,_)=>{t("select-range",xe,_,"min"),L.value=[xe,_]},R=X(()=>W.value?11:8),Z=(xe,_)=>{t("select-range",xe,_,"max");const re=c(R);L.value=[xe+re,_+re]},G=xe=>{const _=W.value?[0,3,6,11,14,17]:[0,3,8,11],re=["hours","minutes"].concat(W.value?["seconds"]:[]),ge=(_.indexOf(L.value[0])+xe+_.length)%_.length,Fe=_.length/2;ge<Fe?Ne.start_emitSelectRange(re[ge]):Ne.end_emitSelectRange(re[ge-Fe])},U=xe=>{const _=xe.code,{left:re,right:ye,up:ge,down:Fe}=ut;if([re,ye].includes(_)){G(_===re?-1:1),xe.preventDefault();return}if([ge,Fe].includes(_)){const Ae=_===ge?-1:1,Ze=L.value[0]<R.value?"start":"end";Ne[`${Ze}_scrollDown`](Ae),xe.preventDefault();return}},H=(xe,_)=>{const re=d?d(xe):[],ye=xe==="start",Fe=(_||(ye?v.value:m.value)).hour(),Ae=ye?r(Fe+1,23):r(0,Fe-1);return qb(re,Ae)},O=(xe,_,re)=>{const ye=f?f(xe,_):[],ge=_==="start",Fe=re||(ge?v.value:m.value),Ae=Fe.hour();if(xe!==Ae)return ye;const Ze=Fe.minute(),Ue=ge?r(Ze+1,59):r(0,Ze-1);return qb(ye,Ue)},D=(xe,_,re,ye)=>{const ge=p?p(xe,_,re):[],Fe=re==="start",Ae=ye||(Fe?v.value:m.value),Ze=Ae.hour(),Ue=Ae.minute();if(xe!==Ze||_!==Ue)return ge;const Pe=Ae.second(),qe=Fe?r(Pe+1,59):r(0,Pe-1);return qb(ge,qe)},Y=([xe,_])=>[pe(xe,"start",!0,_),pe(_,"end",!1,xe)],{getAvailableHours:Q,getAvailableMinutes:ee,getAvailableSeconds:oe}=fP(H,O,D),{timePickerOptions:Ne,getAvailableTime:pe,onSetOption:me}=cP({getAvailableHours:Q,getAvailableMinutes:ee,getAvailableSeconds:oe}),ce=xe=>xe?et(xe)?xe.map(_=>Lt(_,n.format).locale(l.value)):Lt(xe,n.format).locale(l.value):null,Le=xe=>xe?et(xe)?xe.map(_=>_.format(n.format)):xe.format(n.format):null,Te=()=>{if(et(b))return b.map(_=>Lt(_).locale(l.value));const xe=Lt(b).locale(l.value);return[xe,xe.add(60,"m")]};return t("set-picker-option",["formatToString",Le]),t("set-picker-option",["parseUserInput",ce]),t("set-picker-option",["isValidValue",x]),t("set-picker-option",["handleKeydownInput",U]),t("set-picker-option",["getDefaultValue",Te]),t("set-picker-option",["getRangeAvailableTime",Y]),(xe,_)=>xe.actualVisible?(K(),F("div",{key:0,class:q([c(o).b("range-picker"),c(i).b("panel")])},[z("div",{class:q(c(o).be("range-picker","content"))},[z("div",{class:q(c(o).be("range-picker","cell"))},[z("div",{class:q(c(o).be("range-picker","header"))},je(c(a)("el.datepicker.startTime")),3),z("div",{class:q(c(A))},[C(hh,{ref:"minSpinner",role:"start","show-seconds":c(W),"am-pm-mode":c(k),"arrow-control":c(u),"spinner-date":c(m),"disabled-hours":H,"disabled-minutes":O,"disabled-seconds":D,onChange:T,onSetOption:c(me),onSelectRange:w},null,8,["show-seconds","am-pm-mode","arrow-control","spinner-date","onSetOption"])],2)],2),z("div",{class:q(c(o).be("range-picker","cell"))},[z("div",{class:q(c(o).be("range-picker","header"))},je(c(a)("el.datepicker.endTime")),3),z("div",{class:q(c(h))},[C(hh,{ref:"maxSpinner",role:"end","show-seconds":c(W),"am-pm-mode":c(k),"arrow-control":c(u),"spinner-date":c(v),"disabled-hours":H,"disabled-minutes":O,"disabled-seconds":D,onChange:P,onSetOption:c(me),onSelectRange:Z},null,8,["show-seconds","am-pm-mode","arrow-control","spinner-date","onSetOption"])],2)],2)],2),z("div",{class:q(c(o).be("panel","footer"))},[z("button",{type:"button",class:q([c(o).be("panel","btn"),"cancel"]),onClick:_[0]||(_[0]=re=>y())},je(c(a)("el.datepicker.cancel")),3),z("button",{type:"button",class:q([c(o).be("panel","btn"),"confirm"]),disabled:c(j),onClick:_[1]||(_[1]=re=>V())},je(c(a)("el.datepicker.confirm")),11,Cte)],2)],2)):ae("v-if",!0)}});var Dte=Be(Mte,[["__file","/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/panel-time-range.vue"]]);Lt.extend(d2);var Ete=$({name:"ElTimePicker",install:null,props:{...f2,isRange:{type:Boolean,default:!1}},emits:["update:modelValue"],setup(e,t){const n=J(),[r,a]=e.isRange?["timerange",Dte]:["time",wp],l=o=>t.emit("update:modelValue",o);return zt("ElPopperOptions",e.popperOptions),t.expose({focus:o=>{var i;(i=n.value)==null||i.handleFocusInput(o)},blur:o=>{var i;(i=n.value)==null||i.handleBlurInput(o)},handleOpen:()=>{var o;(o=n.value)==null||o.handleOpen()},handleClose:()=>{var o;(o=n.value)==null||o.handleClose()}}),()=>{var o;const i=(o=e.format)!=null?o:oh;return C(uP,Ut(e,{ref:n,type:r,format:i,"onUpdate:modelValue":l}),{default:s=>C(a,s,null)})}}});const jf=Ete;jf.install=e=>{e.component(jf.name,jf)};const Ite=jf,Bte=(e,t)=>{const n=e.subtract(1,"month").endOf("month").date();return po(t).map((r,a)=>n-(t-a-1))},Yte=e=>{const t=e.daysInMonth();return po(t).map((n,r)=>r+1)},Qte=e=>po(e.length/7).map(t=>{const n=t*7;return e.slice(n,n+7)}),_te=Ie({selectedDay:{type:ve(Object)},range:{type:ve(Array)},date:{type:ve(Object),required:!0},hideHeader:{type:Boolean}}),$te={pick:e=>Jt(e)};var WP={exports:{}};(function(e,t){(function(n,r){e.exports=r()})(Tn,function(){return function(n,r,a){var l=r.prototype,o=function(f){return f&&(f.indexOf?f:f.s)},i=function(f,p,b,A,h){var m=f.name?f:f.$locale(),v=o(m[p]),S=o(m[b]),y=v||S.map(function(k){return k.slice(0,A)});if(!h)return y;var W=m.weekStart;return y.map(function(k,V){return y[(V+(W||0))%7]})},s=function(){return a.Ls[a.locale()]},u=function(f,p){return f.formats[p]||function(b){return b.replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,function(A,h,m){return h||m.slice(1)})}(f.formats[p.toUpperCase()])},d=function(){var f=this;return{months:function(p){return p?p.format("MMMM"):i(f,"months")},monthsShort:function(p){return p?p.format("MMM"):i(f,"monthsShort","months",3)},firstDayOfWeek:function(){return f.$locale().weekStart||0},weekdays:function(p){return p?p.format("dddd"):i(f,"weekdays")},weekdaysMin:function(p){return p?p.format("dd"):i(f,"weekdaysMin","weekdays",2)},weekdaysShort:function(p){return p?p.format("ddd"):i(f,"weekdaysShort","weekdays",3)},longDateFormat:function(p){return u(f.$locale(),p)},meridiem:this.$locale().meridiem,ordinal:this.$locale().ordinal}};l.localeData=function(){return d.bind(this)()},a.localeData=function(){var f=s();return{firstDayOfWeek:function(){return f.weekStart||0},weekdays:function(){return a.weekdays()},weekdaysShort:function(){return a.weekdaysShort()},weekdaysMin:function(){return a.weekdaysMin()},months:function(){return a.months()},monthsShort:function(){return a.monthsShort()},longDateFormat:function(p){return u(f,p)},meridiem:f.meridiem,ordinal:f.ordinal}},a.months=function(){return i(s(),"months")},a.monthsShort=function(){return i(s(),"monthsShort","months",3)},a.weekdays=function(f){return i(s(),"weekdays",null,null,f)},a.weekdaysShort=function(f){return i(s(),"weekdaysShort","weekdays",3,f)},a.weekdaysMin=function(f){return i(s(),"weekdaysMin","weekdays",2,f)}}})})(WP);const kP=WP.exports,ene=(e,t)=>{Lt.extend(kP);const n=Lt.localeData().firstDayOfWeek(),{t:r,lang:a}=It(),l=Lt().locale(a.value),o=X(()=>!!e.range&&!!e.range.length),i=X(()=>{let p=[];if(o.value){const[b,A]=e.range,h=po(A.date()-b.date()+1).map(S=>({text:b.date()+S,type:"current"}));let m=h.length%7;m=m===0?0:7-m;const v=po(m).map((S,y)=>({text:y+1,type:"next"}));p=h.concat(v)}else{const b=e.date.startOf("month").day(),A=Bte(e.date,(b-n+7)%7).map(S=>({text:S,type:"prev"})),h=Yte(e.date).map(S=>({text:S,type:"current"}));p=[...A,...h];const m=7-(p.length%7||7),v=po(m).map((S,y)=>({text:y+1,type:"next"}));p=p.concat(v)}return Qte(p)}),s=X(()=>{const p=n;return p===0?Ub.map(b=>r(`el.datepicker.weeks.${b}`)):Ub.slice(p).concat(Ub.slice(0,p)).map(b=>r(`el.datepicker.weeks.${b}`))}),u=(p,b)=>{switch(b){case"prev":return e.date.startOf("month").subtract(1,"month").date(p);case"next":return e.date.startOf("month").add(1,"month").date(p);case"current":return e.date.date(p)}};return{now:l,isInRange:o,rows:i,weekDays:s,getFormattedDate:u,handlePickDay:({text:p,type:b})=>{const A=u(p,b);t("pick",A)},getSlotData:({text:p,type:b})=>{const A=u(p,b);return{isSelected:A.isSame(e.selectedDay),type:`${b}-month`,day:A.format("YYYY-MM-DD"),date:A.toDate()}}}},tne={key:0},nne=["onClick"],rne=$({name:"DateTable"}),ane=$({...rne,props:_te,emits:$te,setup(e,{expose:t,emit:n}){const r=e,{isInRange:a,now:l,rows:o,weekDays:i,getFormattedDate:s,handlePickDay:u,getSlotData:d}=ene(r,n),f=ze("calendar-table"),p=ze("calendar-day"),b=({text:A,type:h})=>{const m=[h];if(h==="current"){const v=s(A,h);v.isSame(r.selectedDay,"day")&&m.push(p.is("selected")),v.isSame(l,"day")&&m.push(p.is("today"))}return m};return t({getFormattedDate:s}),(A,h)=>(K(),F("table",{class:q([c(f).b(),c(f).is("range",c(a))]),cellspacing:"0",cellpadding:"0"},[A.hideHeader?ae("v-if",!0):(K(),F("thead",tne,[(K(!0),F(Qe,null,Nt(c(i),m=>(K(),F("th",{key:m},je(m),1))),128))])),z("tbody",null,[(K(!0),F(Qe,null,Nt(c(o),(m,v)=>(K(),F("tr",{key:v,class:q({[c(f).e("row")]:!0,[c(f).em("row","hide-border")]:v===0&&A.hideHeader})},[(K(!0),F(Qe,null,Nt(m,(S,y)=>(K(),F("td",{key:y,class:q(b(S)),onClick:W=>c(u)(S)},[z("div",{class:q(c(p).b())},[ue(A.$slots,"date-cell",{data:c(d)(S)},()=>[z("span",null,je(S.text),1)])],2)],10,nne))),128))],2))),128))])],2))}});var q8=Be(ane,[["__file","/home/runner/work/element-plus/element-plus/packages/components/calendar/src/date-table.vue"]]);const lne=(e,t)=>{const n=e.endOf("month"),r=t.startOf("month"),l=n.isSame(r,"week")?r.add(1,"week"):r;return[[e,n],[l.startOf("week"),t]]},one=(e,t)=>{const n=e.endOf("month"),r=e.add(1,"month").startOf("month"),a=n.isSame(r,"week")?r.add(1,"week"):r,l=a.endOf("month"),o=t.startOf("month"),i=l.isSame(o,"week")?o.add(1,"week"):o;return[[e,n],[a.startOf("week"),l],[i.startOf("week"),t]]},ine=(e,t,n)=>{const r=er(),{lang:a}=It(),l=J(),o=Lt().locale(a.value),i=X({get(){return e.modelValue?u.value:l.value},set(v){if(!v)return;l.value=v;const S=v.toDate();t(Pr,S),t(Rt,S)}}),s=X(()=>{if(!e.range)return[];const v=e.range.map(W=>Lt(W).locale(a.value)),[S,y]=v;return S.isAfter(y)?[]:S.isSame(y,"month")?A(S,y):S.add(1,"month").month()!==y.month()?[]:A(S,y)}),u=X(()=>e.modelValue?Lt(e.modelValue).locale(a.value):i.value||(s.value.length?s.value[0][0]:o)),d=X(()=>u.value.subtract(1,"month").date(1)),f=X(()=>u.value.add(1,"month").date(1)),p=X(()=>u.value.subtract(1,"year").date(1)),b=X(()=>u.value.add(1,"year").date(1)),A=(v,S)=>{const y=v.startOf("week"),W=S.endOf("week"),k=y.get("month"),V=W.get("month");return k===V?[[y,W]]:(k+1)%12===V?lne(y,W):k+2===V||(k+1)%11===V?one(y,W):[]},h=v=>{i.value=v},m=v=>{const y={"prev-month":d.value,"next-month":f.value,"prev-year":p.value,"next-year":b.value,today:o}[v];y.isSame(u.value,"day")||h(y)};return rl({from:'"dateCell"',replacement:'"date-cell"',scope:"ElCalendar",version:"2.3.0",ref:"https://element-plus.org/en-US/component/calendar.html#slots",type:"Slot"},X(()=>!!r.dateCell)),{calculateValidatedDateRange:A,date:u,realSelectedDay:i,pickDay:h,selectDate:m,validatedRange:s}},sne=e=>et(e)&&e.length===2&&e.every(t=>bi(t)),une=Ie({modelValue:{type:Date},range:{type:ve(Array),validator:sne}}),cne={[Rt]:e=>bi(e),[Pr]:e=>bi(e)},dne="ElCalendar",fne=$({name:dne}),pne=$({...fne,props:une,emits:cne,setup(e,{expose:t,emit:n}){const r=e,a=ze("calendar"),{calculateValidatedDateRange:l,date:o,pickDay:i,realSelectedDay:s,selectDate:u,validatedRange:d}=ine(r,n),{t:f}=It(),p=X(()=>{const b=`el.datepicker.month${o.value.format("M")}`;return`${o.value.year()} ${f("el.datepicker.year")} ${f(b)}`});return t({selectedDay:s,pickDay:i,selectDate:u,calculateValidatedDateRange:l}),(b,A)=>(K(),F("div",{class:q(c(a).b())},[z("div",{class:q(c(a).e("header"))},[ue(b.$slots,"header",{date:c(p)},()=>[z("div",{class:q(c(a).e("title"))},je(c(p)),3),c(d).length===0?(K(),F("div",{key:0,class:q(c(a).e("button-group"))},[C(c(nP),null,{default:B(()=>[C(c(sr),{size:"small",onClick:A[0]||(A[0]=h=>c(u)("prev-month"))},{default:B(()=>[Xt(je(c(f)("el.datepicker.prevMonth")),1)]),_:1}),C(c(sr),{size:"small",onClick:A[1]||(A[1]=h=>c(u)("today"))},{default:B(()=>[Xt(je(c(f)("el.datepicker.today")),1)]),_:1}),C(c(sr),{size:"small",onClick:A[2]||(A[2]=h=>c(u)("next-month"))},{default:B(()=>[Xt(je(c(f)("el.datepicker.nextMonth")),1)]),_:1})]),_:1})],2)):ae("v-if",!0)])],2),c(d).length===0?(K(),F("div",{key:0,class:q(c(a).e("body"))},[C(q8,{date:c(o),"selected-day":c(s),onPick:c(i)},tl({_:2},[b.$slots["date-cell"]||b.$slots.dateCell?{name:"date-cell",fn:B(h=>[b.$slots["date-cell"]?ue(b.$slots,"date-cell",fa(Ut({key:0},h))):ue(b.$slots,"dateCell",fa(Ut({key:1},h)))])}:void 0]),1032,["date","selected-day","onPick"])],2)):(K(),F("div",{key:1,class:q(c(a).e("body"))},[(K(!0),F(Qe,null,Nt(c(d),(h,m)=>(K(),ie(q8,{key:m,date:h[0],"selected-day":c(s),range:h,"hide-header":m!==0,onPick:c(i)},tl({_:2},[b.$slots["date-cell"]||b.$slots.dateCell?{name:"date-cell",fn:B(v=>[b.$slots["date-cell"]?ue(b.$slots,"date-cell",fa(Ut({key:0},v))):ue(b.$slots,"dateCell",fa(Ut({key:1},v)))])}:void 0]),1032,["date","selected-day","range","hide-header","onPick"]))),128))],2))],2))}});var vne=Be(pne,[["__file","/home/runner/work/element-plus/element-plus/packages/components/calendar/src/calendar.vue"]]);const bne=qt(vne),hne=Ie({header:{type:String,default:""},bodyStyle:{type:ve([String,Object,Array]),default:""},bodyClass:String,shadow:{type:String,values:["always","hover","never"],default:"always"}}),mne=$({name:"ElCard"}),Sne=$({...mne,props:hne,setup(e){const t=ze("card");return(n,r)=>(K(),F("div",{class:q([c(t).b(),c(t).is(`${n.shadow}-shadow`)])},[n.$slots.header||n.header?(K(),F("div",{key:0,class:q(c(t).e("header"))},[ue(n.$slots,"header",{},()=>[Xt(je(n.header),1)])],2)):ae("v-if",!0),z("div",{class:q([c(t).e("body"),n.bodyClass]),style:lt(n.bodyStyle)},[ue(n.$slots,"default")],6)],2))}});var yne=Be(Sne,[["__file","/home/runner/work/element-plus/element-plus/packages/components/card/src/card.vue"]]);const Ane=qt(yne),Wne=Ie({initialIndex:{type:Number,default:0},height:{type:String,default:""},trigger:{type:String,values:["hover","click"],default:"hover"},autoplay:{type:Boolean,default:!0},interval:{type:Number,default:3e3},indicatorPosition:{type:String,values:["","none","outside"],default:""},arrow:{type:String,values:["always","hover","never"],default:"hover"},type:{type:String,values:["","card"],default:""},loop:{type:Boolean,default:!0},direction:{type:String,values:["horizontal","vertical"],default:"horizontal"},pauseOnHover:{type:Boolean,default:!0}}),kne={change:(e,t)=>[e,t].every(mt)},VP=Symbol("carouselContextKey"),U8=300,Vne=(e,t,n)=>{const{children:r,addChild:a,removeChild:l}=l2(Tt(),"ElCarouselItem"),o=er(),i=J(-1),s=J(null),u=J(!1),d=J(),f=J(0),p=J(!0),b=X(()=>e.arrow!=="never"&&!c(m)),A=X(()=>r.value.some(ee=>ee.props.label.toString().length>0)),h=X(()=>e.type==="card"),m=X(()=>e.direction==="vertical"),v=X(()=>e.height!=="auto"?{height:e.height}:{height:`${f.value}px`,overflow:"hidden"}),S=si(ee=>{P(ee)},U8,{trailing:!0}),y=si(ee=>{G(ee)},U8),W=ee=>p.value?i.value<=1?ee<=1:ee>1:!0;function k(){s.value&&(clearInterval(s.value),s.value=null)}function V(){e.interval<=0||!e.autoplay||s.value||(s.value=setInterval(()=>T(),e.interval))}const T=()=>{i.value<r.value.length-1?i.value=i.value+1:e.loop&&(i.value=0)};function P(ee){if(Pt(ee)){const pe=r.value.filter(me=>me.props.name===ee);pe.length>0&&(ee=r.value.indexOf(pe[0]))}if(ee=Number(ee),Number.isNaN(ee)||ee!==Math.floor(ee))return;const oe=r.value.length,Ne=i.value;ee<0?i.value=e.loop?oe-1:0:ee>=oe?i.value=e.loop?0:oe-1:i.value=ee,Ne===i.value&&x(Ne),O()}function x(ee){r.value.forEach((oe,Ne)=>{oe.translateItem(Ne,i.value,ee)})}function g(ee,oe){var Ne,pe,me,ce;const Le=c(r),Te=Le.length;if(Te===0||!ee.states.inStage)return!1;const xe=oe+1,_=oe-1,re=Te-1,ye=Le[re].states.active,ge=Le[0].states.active,Fe=(pe=(Ne=Le[xe])==null?void 0:Ne.states)==null?void 0:pe.active,Ae=(ce=(me=Le[_])==null?void 0:me.states)==null?void 0:ce.active;return oe===re&&ge||Fe?"left":oe===0&&ye||Ae?"right":!1}function j(){u.value=!0,e.pauseOnHover&&k()}function L(){u.value=!1,V()}function w(ee){c(m)||r.value.forEach((oe,Ne)=>{ee===g(oe,Ne)&&(oe.states.hover=!0)})}function R(){c(m)||r.value.forEach(ee=>{ee.states.hover=!1})}function Z(ee){i.value=ee}function G(ee){e.trigger==="hover"&&ee!==i.value&&(i.value=ee)}function U(){P(i.value-1)}function H(){P(i.value+1)}function O(){k(),e.pauseOnHover||V()}function D(ee){e.height==="auto"&&(f.value=ee)}function Y(){var ee;const oe=(ee=o.default)==null?void 0:ee.call(o);if(!oe)return null;const Ne=ui(oe),pe="ElCarouselItem",me=Ne.filter(ce=>cn(ce)&&ce.type.name===pe);return(me==null?void 0:me.length)===2&&e.loop&&!h.value?(p.value=!0,me):(p.value=!1,null)}Ve(()=>i.value,(ee,oe)=>{x(oe),p.value&&(ee=ee%2,oe=oe%2),oe>-1&&t("change",ee,oe)}),Ve(()=>e.autoplay,ee=>{ee?V():k()}),Ve(()=>e.loop,()=>{P(i.value)}),Ve(()=>e.interval,()=>{O()});const Q=nn();return At(()=>{Ve(()=>r.value,()=>{r.value.length>0&&P(e.initialIndex)},{immediate:!0}),Q.value=hr(d.value,()=>{x()}),V()}),tn(()=>{k(),d.value&&Q.value&&Q.value.stop()}),zt(VP,{root:d,isCardType:h,isVertical:m,items:r,loop:e.loop,addItem:a,removeItem:l,setActiveItem:P,setContainerHeight:D}),{root:d,activeIndex:i,arrowDisplay:b,hasLabel:A,hover:u,isCardType:h,items:r,isVertical:m,containerStyle:v,isItemsTwoLength:p,handleButtonEnter:w,handleButtonLeave:R,handleIndicatorClick:Z,handleMouseEnter:j,handleMouseLeave:L,setActiveItem:P,prev:U,next:H,PlaceholderItem:Y,isTwoLengthShow:W,throttledArrowClick:S,throttledIndicatorHover:y}},Pne=["onMouseenter","onClick"],Tne={key:0},Kne="ElCarousel",Nne=$({name:Kne}),xne=$({...Nne,props:Wne,emits:kne,setup(e,{expose:t,emit:n}){const r=e,{root:a,activeIndex:l,arrowDisplay:o,hasLabel:i,hover:s,isCardType:u,items:d,isVertical:f,containerStyle:p,handleButtonEnter:b,handleButtonLeave:A,handleIndicatorClick:h,handleMouseEnter:m,handleMouseLeave:v,setActiveItem:S,prev:y,next:W,PlaceholderItem:k,isTwoLengthShow:V,throttledArrowClick:T,throttledIndicatorHover:P}=Vne(r,n),x=ze("carousel"),g=X(()=>{const L=[x.b(),x.m(r.direction)];return c(u)&&L.push(x.m("card")),L}),j=X(()=>{const L=[x.e("indicators"),x.em("indicators",r.direction)];return c(i)&&L.push(x.em("indicators","labels")),r.indicatorPosition==="outside"&&L.push(x.em("indicators","outside")),c(f)&&L.push(x.em("indicators","right")),L});return t({setActiveItem:S,prev:y,next:W}),(L,w)=>(K(),F("div",{ref_key:"root",ref:a,class:q(c(g)),onMouseenter:w[6]||(w[6]=pt((...R)=>c(m)&&c(m)(...R),["stop"])),onMouseleave:w[7]||(w[7]=pt((...R)=>c(v)&&c(v)(...R),["stop"]))},[z("div",{class:q(c(x).e("container")),style:lt(c(p))},[c(o)?(K(),ie(fn,{key:0,name:"carousel-arrow-left",persisted:""},{default:B(()=>[Vt(z("button",{type:"button",class:q([c(x).e("arrow"),c(x).em("arrow","left")]),onMouseenter:w[0]||(w[0]=R=>c(b)("left")),onMouseleave:w[1]||(w[1]=(...R)=>c(A)&&c(A)(...R)),onClick:w[2]||(w[2]=pt(R=>c(T)(c(l)-1),["stop"]))},[C(c(it),null,{default:B(()=>[C(c(Wo))]),_:1})],34),[[Ct,(L.arrow==="always"||c(s))&&(r.loop||c(l)>0)]])]),_:1})):ae("v-if",!0),c(o)?(K(),ie(fn,{key:1,name:"carousel-arrow-right",persisted:""},{default:B(()=>[Vt(z("button",{type:"button",class:q([c(x).e("arrow"),c(x).em("arrow","right")]),onMouseenter:w[3]||(w[3]=R=>c(b)("right")),onMouseleave:w[4]||(w[4]=(...R)=>c(A)&&c(A)(...R)),onClick:w[5]||(w[5]=pt(R=>c(T)(c(l)+1),["stop"]))},[C(c(it),null,{default:B(()=>[C(c(Vr))]),_:1})],34),[[Ct,(L.arrow==="always"||c(s))&&(r.loop||c(l)<c(d).length-1)]])]),_:1})):ae("v-if",!0),C(c(k)),ue(L.$slots,"default")],6),L.indicatorPosition!=="none"?(K(),F("ul",{key:0,class:q(c(j))},[(K(!0),F(Qe,null,Nt(c(d),(R,Z)=>Vt((K(),F("li",{key:Z,class:q([c(x).e("indicator"),c(x).em("indicator",L.direction),c(x).is("active",Z===c(l))]),onMouseenter:G=>c(P)(Z),onClick:pt(G=>c(h)(Z),["stop"])},[z("button",{class:q(c(x).e("button"))},[c(i)?(K(),F("span",Tne,je(R.props.label),1)):ae("v-if",!0)],2)],42,Pne)),[[Ct,c(V)(Z)]])),128))],2)):ae("v-if",!0)],34))}});var Xne=Be(xne,[["__file","/home/runner/work/element-plus/element-plus/packages/components/carousel/src/carousel.vue"]]);const gne=Ie({name:{type:String,default:""},label:{type:[String,Number],default:""}}),wne=(e,t)=>{const n=tt(VP),r=Tt(),a=.83,l=J(),o=J(!1),i=J(0),s=J(1),u=J(!1),d=J(!1),f=J(!1),p=J(!1),{isCardType:b,isVertical:A}=n;function h(W,k,V){const T=V-1,P=k-1,x=k+1,g=V/2;return k===0&&W===T?-1:k===T&&W===0?V:W<P&&k-W>=g?V+1:W>x&&W-k>=g?-2:W}function m(W,k){var V,T;const P=c(A)?((V=n.root.value)==null?void 0:V.offsetHeight)||0:((T=n.root.value)==null?void 0:T.offsetWidth)||0;return f.value?P*((2-a)*(W-k)+1)/4:W<k?-(1+a)*P/4:(3+a)*P/4}function v(W,k,V){const T=n.root.value;return T?((V?T.offsetHeight:T.offsetWidth)||0)*(W-k):0}const S=(W,k,V)=>{var T;const P=c(b),x=(T=n.items.value.length)!=null?T:Number.NaN,g=W===k;!P&&!Hn(V)&&(p.value=g||W===V),!g&&x>2&&n.loop&&(W=h(W,k,x));const j=c(A);u.value=g,P?(f.value=Math.round(Math.abs(W-k))<=1,i.value=m(W,k),s.value=c(u)?1:a):i.value=v(W,k,j),d.value=!0,g&&l.value&&n.setContainerHeight(l.value.offsetHeight)};function y(){if(n&&c(b)){const W=n.items.value.findIndex(({uid:k})=>k===r.uid);n.setActiveItem(W)}}return At(()=>{n.addItem({props:e,states:Bt({hover:o,translate:i,scale:s,active:u,ready:d,inStage:f,animating:p}),uid:r.uid,translateItem:S})}),mr(()=>{n.removeItem(r.uid)}),{carouselItemRef:l,active:u,animating:p,hover:o,inStage:f,isVertical:A,translate:i,isCardType:b,scale:s,ready:d,handleItemClick:y}},jne=$({name:"ElCarouselItem"}),Lne=$({...jne,props:gne,setup(e){const t=e,n=ze("carousel"),{carouselItemRef:r,active:a,animating:l,hover:o,inStage:i,isVertical:s,translate:u,isCardType:d,scale:f,ready:p,handleItemClick:b}=wne(t),A=X(()=>{const m=`${`translate${c(s)?"Y":"X"}`}(${c(u)}px)`,v=`scale(${c(f)})`;return{transform:[m,v].join(" ")}});return(h,m)=>Vt((K(),F("div",{ref_key:"carouselItemRef",ref:r,class:q([c(n).e("item"),c(n).is("active",c(a)),c(n).is("in-stage",c(i)),c(n).is("hover",c(o)),c(n).is("animating",c(l)),{[c(n).em("item","card")]:c(d),[c(n).em("item","card-vertical")]:c(d)&&c(s)}]),style:lt(c(A)),onClick:m[0]||(m[0]=(...v)=>c(b)&&c(b)(...v))},[c(d)?Vt((K(),F("div",{key:0,class:q(c(n).e("mask"))},null,2)),[[Ct,!c(a)]]):ae("v-if",!0),ue(h.$slots,"default")],6)),[[Ct,c(p)]])}});var PP=Be(Lne,[["__file","/home/runner/work/element-plus/element-plus/packages/components/carousel/src/carousel-item.vue"]]);const qne=qt(Xne,{CarouselItem:PP}),Une=Nn(PP),TP={modelValue:{type:[Number,String,Boolean],default:void 0},label:{type:[String,Boolean,Number,Object],default:void 0},indeterminate:Boolean,disabled:Boolean,checked:Boolean,name:{type:String,default:void 0},trueLabel:{type:[String,Number],default:void 0},falseLabel:{type:[String,Number],default:void 0},id:{type:String,default:void 0},controls:{type:String,default:void 0},border:Boolean,size:ur,tabindex:[String,Number],validateEvent:{type:Boolean,default:!0}},KP={[Rt]:e=>Pt(e)||mt(e)||Zn(e),change:e=>Pt(e)||mt(e)||Zn(e)},uu=Symbol("checkboxGroupContextKey"),One=({model:e,isChecked:t})=>{const n=tt(uu,void 0),r=X(()=>{var l,o;const i=(l=n==null?void 0:n.max)==null?void 0:l.value,s=(o=n==null?void 0:n.min)==null?void 0:o.value;return!Hn(i)&&e.value.length>=i&&!t.value||!Hn(s)&&e.value.length<=s&&t.value});return{isDisabled:Br(X(()=>(n==null?void 0:n.disabled.value)||r.value)),isLimitDisabled:r}},Rne=(e,{model:t,isLimitExceeded:n,hasOwnLabel:r,isDisabled:a,isLabeledByFormItem:l})=>{const o=tt(uu,void 0),{formItem:i}=wr(),{emit:s}=Tt();function u(A){var h,m;return A===e.trueLabel||A===!0?(h=e.trueLabel)!=null?h:!0:(m=e.falseLabel)!=null?m:!1}function d(A,h){s("change",u(A),h)}function f(A){if(n.value)return;const h=A.target;s("change",u(h.checked),A)}async function p(A){n.value||!r.value&&!a.value&&l.value&&(A.composedPath().some(v=>v.tagName==="LABEL")||(t.value=u([!1,e.falseLabel].includes(t.value)),await at(),d(t.value,A)))}const b=X(()=>(o==null?void 0:o.validateEvent)||e.validateEvent);return Ve(()=>e.modelValue,()=>{b.value&&(i==null||i.validate("change").catch(A=>void 0))}),{handleChange:f,onClickRoot:p}},Jne=e=>{const t=J(!1),{emit:n}=Tt(),r=tt(uu,void 0),a=X(()=>Hn(r)===!1),l=J(!1);return{model:X({get(){var i,s;return a.value?(i=r==null?void 0:r.modelValue)==null?void 0:i.value:(s=e.modelValue)!=null?s:t.value},set(i){var s,u;a.value&&et(i)?(l.value=((s=r==null?void 0:r.max)==null?void 0:s.value)!==void 0&&i.length>(r==null?void 0:r.max.value),l.value===!1&&((u=r==null?void 0:r.changeEvent)==null||u.call(r,i))):(n(Rt,i),t.value=i)}}),isGroup:a,isLimitExceeded:l}},Fne=(e,t,{model:n})=>{const r=tt(uu,void 0),a=J(!1),l=X(()=>{const u=n.value;return Zn(u)?u:et(u)?Jt(e.label)?u.map(_t).some(d=>zr(d,e.label)):u.map(_t).includes(e.label):u!=null?u===e.trueLabel:!!u}),o=Cn(X(()=>{var u;return(u=r==null?void 0:r.size)==null?void 0:u.value}),{prop:!0}),i=Cn(X(()=>{var u;return(u=r==null?void 0:r.size)==null?void 0:u.value})),s=X(()=>!!t.default||!On(e.label));return{checkboxButtonSize:o,isChecked:l,isFocused:a,checkboxSize:i,hasOwnLabel:s}},zne=(e,{model:t})=>{function n(){et(t.value)&&!t.value.includes(e.label)?t.value.push(e.label):t.value=e.trueLabel||!0}e.checked&&n()},NP=(e,t)=>{const{formItem:n}=wr(),{model:r,isGroup:a,isLimitExceeded:l}=Jne(e),{isFocused:o,isChecked:i,checkboxButtonSize:s,checkboxSize:u,hasOwnLabel:d}=Fne(e,t,{model:r}),{isDisabled:f}=One({model:r,isChecked:i}),{inputId:p,isLabeledByFormItem:b}=Jo(e,{formItemContext:n,disableIdGeneration:d,disableIdManagement:a}),{handleChange:A,onClickRoot:h}=Rne(e,{model:r,isLimitExceeded:l,hasOwnLabel:d,isDisabled:f,isLabeledByFormItem:b});return zne(e,{model:r}),{inputId:p,isLabeledByFormItem:b,isChecked:i,isDisabled:f,isFocused:o,checkboxButtonSize:s,checkboxSize:u,hasOwnLabel:d,model:r,handleChange:A,onClickRoot:h}},Hne=["id","indeterminate","name","tabindex","disabled","true-value","false-value"],Zne=["id","indeterminate","disabled","value","name","tabindex"],Gne=$({name:"ElCheckbox"}),Cne=$({...Gne,props:TP,emits:KP,setup(e){const t=e,n=er(),{inputId:r,isLabeledByFormItem:a,isChecked:l,isDisabled:o,isFocused:i,checkboxSize:s,hasOwnLabel:u,model:d,handleChange:f,onClickRoot:p}=NP(t,n),b=ze("checkbox"),A=X(()=>[b.b(),b.m(s.value),b.is("disabled",o.value),b.is("bordered",t.border),b.is("checked",l.value)]),h=X(()=>[b.e("input"),b.is("disabled",o.value),b.is("checked",l.value),b.is("indeterminate",t.indeterminate),b.is("focus",i.value)]);return(m,v)=>(K(),ie(Ot(!c(u)&&c(a)?"span":"label"),{class:q(c(A)),"aria-controls":m.indeterminate?m.controls:null,onClick:c(p)},{default:B(()=>[z("span",{class:q(c(h))},[m.trueLabel||m.falseLabel?Vt((K(),F("input",{key:0,id:c(r),"onUpdate:modelValue":v[0]||(v[0]=S=>Qt(d)?d.value=S:null),class:q(c(b).e("original")),type:"checkbox",indeterminate:m.indeterminate,name:m.name,tabindex:m.tabindex,disabled:c(o),"true-value":m.trueLabel,"false-value":m.falseLabel,onChange:v[1]||(v[1]=(...S)=>c(f)&&c(f)(...S)),onFocus:v[2]||(v[2]=S=>i.value=!0),onBlur:v[3]||(v[3]=S=>i.value=!1),onClick:v[4]||(v[4]=pt(()=>{},["stop"]))},null,42,Hne)),[[Ai,c(d)]]):Vt((K(),F("input",{key:1,id:c(r),"onUpdate:modelValue":v[5]||(v[5]=S=>Qt(d)?d.value=S:null),class:q(c(b).e("original")),type:"checkbox",indeterminate:m.indeterminate,disabled:c(o),value:m.label,name:m.name,tabindex:m.tabindex,onChange:v[6]||(v[6]=(...S)=>c(f)&&c(f)(...S)),onFocus:v[7]||(v[7]=S=>i.value=!0),onBlur:v[8]||(v[8]=S=>i.value=!1),onClick:v[9]||(v[9]=pt(()=>{},["stop"]))},null,42,Zne)),[[Ai,c(d)]]),z("span",{class:q(c(b).e("inner"))},null,2)],2),c(u)?(K(),F("span",{key:0,class:q(c(b).e("label"))},[ue(m.$slots,"default"),m.$slots.default?ae("v-if",!0):(K(),F(Qe,{key:0},[Xt(je(m.label),1)],64))],2)):ae("v-if",!0)]),_:3},8,["class","aria-controls","onClick"]))}});var Mne=Be(Cne,[["__file","/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox.vue"]]);const Dne=["name","tabindex","disabled","true-value","false-value"],Ene=["name","tabindex","disabled","value"],Ine=$({name:"ElCheckboxButton"}),Bne=$({...Ine,props:TP,emits:KP,setup(e){const t=e,n=er(),{isFocused:r,isChecked:a,isDisabled:l,checkboxButtonSize:o,model:i,handleChange:s}=NP(t,n),u=tt(uu,void 0),d=ze("checkbox"),f=X(()=>{var b,A,h,m;const v=(A=(b=u==null?void 0:u.fill)==null?void 0:b.value)!=null?A:"";return{backgroundColor:v,borderColor:v,color:(m=(h=u==null?void 0:u.textColor)==null?void 0:h.value)!=null?m:"",boxShadow:v?`-1px 0 0 0 ${v}`:void 0}}),p=X(()=>[d.b("button"),d.bm("button",o.value),d.is("disabled",l.value),d.is("checked",a.value),d.is("focus",r.value)]);return(b,A)=>(K(),F("label",{class:q(c(p))},[b.trueLabel||b.falseLabel?Vt((K(),F("input",{key:0,"onUpdate:modelValue":A[0]||(A[0]=h=>Qt(i)?i.value=h:null),class:q(c(d).be("button","original")),type:"checkbox",name:b.name,tabindex:b.tabindex,disabled:c(l),"true-value":b.trueLabel,"false-value":b.falseLabel,onChange:A[1]||(A[1]=(...h)=>c(s)&&c(s)(...h)),onFocus:A[2]||(A[2]=h=>r.value=!0),onBlur:A[3]||(A[3]=h=>r.value=!1),onClick:A[4]||(A[4]=pt(()=>{},["stop"]))},null,42,Dne)),[[Ai,c(i)]]):Vt((K(),F("input",{key:1,"onUpdate:modelValue":A[5]||(A[5]=h=>Qt(i)?i.value=h:null),class:q(c(d).be("button","original")),type:"checkbox",name:b.name,tabindex:b.tabindex,disabled:c(l),value:b.label,onChange:A[6]||(A[6]=(...h)=>c(s)&&c(s)(...h)),onFocus:A[7]||(A[7]=h=>r.value=!0),onBlur:A[8]||(A[8]=h=>r.value=!1),onClick:A[9]||(A[9]=pt(()=>{},["stop"]))},null,42,Ene)),[[Ai,c(i)]]),b.$slots.default||b.label?(K(),F("span",{key:2,class:q(c(d).be("button","inner")),style:lt(c(a)?c(f):void 0)},[ue(b.$slots,"default",{},()=>[Xt(je(b.label),1)])],6)):ae("v-if",!0)],2))}});var xP=Be(Bne,[["__file","/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox-button.vue"]]);const Yne=Ie({modelValue:{type:ve(Array),default:()=>[]},disabled:Boolean,min:Number,max:Number,size:ur,label:String,fill:String,textColor:String,tag:{type:String,default:"div"},validateEvent:{type:Boolean,default:!0}}),Qne={[Rt]:e=>et(e),change:e=>et(e)},_ne=$({name:"ElCheckboxGroup"}),$ne=$({..._ne,props:Yne,emits:Qne,setup(e,{emit:t}){const n=e,r=ze("checkbox"),{formItem:a}=wr(),{inputId:l,isLabeledByFormItem:o}=Jo(n,{formItemContext:a}),i=async u=>{t(Rt,u),await at(),t("change",u)},s=X({get(){return n.modelValue},set(u){i(u)}});return zt(uu,{...kl(Kn(n),["size","min","max","disabled","validateEvent","fill","textColor"]),modelValue:s,changeEvent:i}),Ve(()=>n.modelValue,()=>{n.validateEvent&&(a==null||a.validate("change").catch(u=>void 0))}),(u,d)=>{var f;return K(),ie(Ot(u.tag),{id:c(l),class:q(c(r).b("group")),role:"group","aria-label":c(o)?void 0:u.label||"checkbox-group","aria-labelledby":c(o)?(f=c(a))==null?void 0:f.labelId:void 0},{default:B(()=>[ue(u.$slots,"default")]),_:3},8,["id","class","aria-label","aria-labelledby"])}}});var XP=Be($ne,[["__file","/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox-group.vue"]]);const Aa=qt(Mne,{CheckboxButton:xP,CheckboxGroup:XP}),ere=Nn(xP),gP=Nn(XP),wP=Ie({size:ur,disabled:Boolean,label:{type:[String,Number,Boolean],default:""}}),tre=Ie({...wP,modelValue:{type:[String,Number,Boolean],default:""},name:{type:String,default:""},border:Boolean}),jP={[Rt]:e=>Pt(e)||mt(e)||Zn(e),[mn]:e=>Pt(e)||mt(e)||Zn(e)},LP=Symbol("radioGroupKey"),qP=(e,t)=>{const n=J(),r=tt(LP,void 0),a=X(()=>!!r),l=X({get(){return a.value?r.modelValue:e.modelValue},set(d){a.value?r.changeEvent(d):t&&t(Rt,d),n.value.checked=e.modelValue===e.label}}),o=Cn(X(()=>r==null?void 0:r.size)),i=Br(X(()=>r==null?void 0:r.disabled)),s=J(!1),u=X(()=>i.value||a.value&&l.value!==e.label?-1:0);return{radioRef:n,isGroup:a,radioGroup:r,focus:s,size:o,disabled:i,tabIndex:u,modelValue:l}},nre=["value","name","disabled"],rre=$({name:"ElRadio"}),are=$({...rre,props:tre,emits:jP,setup(e,{emit:t}){const n=e,r=ze("radio"),{radioRef:a,radioGroup:l,focus:o,size:i,disabled:s,modelValue:u}=qP(n,t);function d(){at(()=>t("change",u.value))}return(f,p)=>{var b;return K(),F("label",{class:q([c(r).b(),c(r).is("disabled",c(s)),c(r).is("focus",c(o)),c(r).is("bordered",f.border),c(r).is("checked",c(u)===f.label),c(r).m(c(i))])},[z("span",{class:q([c(r).e("input"),c(r).is("disabled",c(s)),c(r).is("checked",c(u)===f.label)])},[Vt(z("input",{ref_key:"radioRef",ref:a,"onUpdate:modelValue":p[0]||(p[0]=A=>Qt(u)?u.value=A:null),class:q(c(r).e("original")),value:f.label,name:f.name||((b=c(l))==null?void 0:b.name),disabled:c(s),type:"radio",onFocus:p[1]||(p[1]=A=>o.value=!0),onBlur:p[2]||(p[2]=A=>o.value=!1),onChange:d,onClick:p[3]||(p[3]=pt(()=>{},["stop"]))},null,42,nre),[[rd,c(u)]]),z("span",{class:q(c(r).e("inner"))},null,2)],2),z("span",{class:q(c(r).e("label")),onKeydown:p[4]||(p[4]=pt(()=>{},["stop"]))},[ue(f.$slots,"default",{},()=>[Xt(je(f.label),1)])],34)],2)}}});var lre=Be(are,[["__file","/home/runner/work/element-plus/element-plus/packages/components/radio/src/radio.vue"]]);const ore=Ie({...wP,name:{type:String,default:""}}),ire=["value","name","disabled"],sre=$({name:"ElRadioButton"}),ure=$({...sre,props:ore,setup(e){const t=e,n=ze("radio"),{radioRef:r,focus:a,size:l,disabled:o,modelValue:i,radioGroup:s}=qP(t),u=X(()=>({backgroundColor:(s==null?void 0:s.fill)||"",borderColor:(s==null?void 0:s.fill)||"",boxShadow:s!=null&&s.fill?`-1px 0 0 0 ${s.fill}`:"",color:(s==null?void 0:s.textColor)||""}));return(d,f)=>{var p;return K(),F("label",{class:q([c(n).b("button"),c(n).is("active",c(i)===d.label),c(n).is("disabled",c(o)),c(n).is("focus",c(a)),c(n).bm("button",c(l))])},[Vt(z("input",{ref_key:"radioRef",ref:r,"onUpdate:modelValue":f[0]||(f[0]=b=>Qt(i)?i.value=b:null),class:q(c(n).be("button","original-radio")),value:d.label,type:"radio",name:d.name||((p=c(s))==null?void 0:p.name),disabled:c(o),onFocus:f[1]||(f[1]=b=>a.value=!0),onBlur:f[2]||(f[2]=b=>a.value=!1),onClick:f[3]||(f[3]=pt(()=>{},["stop"]))},null,42,ire),[[rd,c(i)]]),z("span",{class:q(c(n).be("button","inner")),style:lt(c(i)===d.label?c(u):{}),onKeydown:f[4]||(f[4]=pt(()=>{},["stop"]))},[ue(d.$slots,"default",{},()=>[Xt(je(d.label),1)])],38)],2)}}});var UP=Be(ure,[["__file","/home/runner/work/element-plus/element-plus/packages/components/radio/src/radio-button.vue"]]);const cre=Ie({id:{type:String,default:void 0},size:ur,disabled:Boolean,modelValue:{type:[String,Number,Boolean],default:""},fill:{type:String,default:""},label:{type:String,default:void 0},textColor:{type:String,default:""},name:{type:String,default:void 0},validateEvent:{type:Boolean,default:!0}}),dre=jP,fre=["id","aria-label","aria-labelledby"],pre=$({name:"ElRadioGroup"}),vre=$({...pre,props:cre,emits:dre,setup(e,{emit:t}){const n=e,r=ze("radio"),a=Cr(),l=J(),{formItem:o}=wr(),{inputId:i,isLabeledByFormItem:s}=Jo(n,{formItemContext:o}),u=f=>{t(Rt,f),at(()=>t("change",f))};At(()=>{const f=l.value.querySelectorAll("[type=radio]"),p=f[0];!Array.from(f).some(b=>b.checked)&&p&&(p.tabIndex=0)});const d=X(()=>n.name||a.value);return zt(LP,Bt({...Kn(n),changeEvent:u,name:d})),Ve(()=>n.modelValue,()=>{n.validateEvent&&(o==null||o.validate("change").catch(f=>void 0))}),(f,p)=>(K(),F("div",{id:c(i),ref_key:"radioGroupRef",ref:l,class:q(c(r).b("group")),role:"radiogroup","aria-label":c(s)?void 0:f.label||"radio-group","aria-labelledby":c(s)?c(o).labelId:void 0},[ue(f.$slots,"default")],10,fre))}});var OP=Be(vre,[["__file","/home/runner/work/element-plus/element-plus/packages/components/radio/src/radio-group.vue"]]);const RP=qt(lre,{RadioButton:UP,RadioGroup:OP}),bre=Nn(OP),hre=Nn(UP);var mre=$({name:"NodeContent",setup(){return{ns:ze("cascader-node")}},render(){const{ns:e}=this,{node:t,panel:n}=this.$parent,{data:r,label:a}=t,{renderLabelFn:l}=n;return st("span",{class:e.e("label")},l?l({node:t,data:r}):a)}});const p2=Symbol(),Sre=$({name:"ElCascaderNode",components:{ElCheckbox:Aa,ElRadio:RP,NodeContent:mre,ElIcon:it,Check:hd,Loading:Uo,ArrowRight:Vr},props:{node:{type:Object,required:!0},menuId:String},emits:["expand"],setup(e,{emit:t}){const n=tt(p2),r=ze("cascader-node"),a=X(()=>n.isHoverMenu),l=X(()=>n.config.multiple),o=X(()=>n.config.checkStrictly),i=X(()=>{var V;return(V=n.checkedNodes[0])==null?void 0:V.uid}),s=X(()=>e.node.isDisabled),u=X(()=>e.node.isLeaf),d=X(()=>o.value&&!u.value||!s.value),f=X(()=>b(n.expandingNode)),p=X(()=>o.value&&n.checkedNodes.some(b)),b=V=>{var T;const{level:P,uid:x}=e.node;return((T=V==null?void 0:V.pathNodes[P-1])==null?void 0:T.uid)===x},A=()=>{f.value||n.expandNode(e.node)},h=V=>{const{node:T}=e;V!==T.checked&&n.handleCheckChange(T,V)},m=()=>{n.lazyLoad(e.node,()=>{u.value||A()})},v=V=>{!a.value||(S(),!u.value&&t("expand",V))},S=()=>{const{node:V}=e;!d.value||V.loading||(V.loaded?A():m())},y=()=>{a.value&&!u.value||(u.value&&!s.value&&!o.value&&!l.value?k(!0):S())},W=V=>{o.value?(h(V),e.node.loaded&&A()):k(V)},k=V=>{e.node.loaded?(h(V),!o.value&&A()):m()};return{panel:n,isHoverMenu:a,multiple:l,checkStrictly:o,checkedNodeId:i,isDisabled:s,isLeaf:u,expandable:d,inExpandingPath:f,inCheckedPath:p,ns:r,handleHoverExpand:v,handleExpand:S,handleClick:y,handleCheck:k,handleSelectCheck:W}}}),yre=["id","aria-haspopup","aria-owns","aria-expanded","tabindex"],Are=z("span",null,null,-1);function Wre(e,t,n,r,a,l){const o=rt("el-checkbox"),i=rt("el-radio"),s=rt("check"),u=rt("el-icon"),d=rt("node-content"),f=rt("loading"),p=rt("arrow-right");return K(),F("li",{id:`${e.menuId}-${e.node.uid}`,role:"menuitem","aria-haspopup":!e.isLeaf,"aria-owns":e.isLeaf?null:e.menuId,"aria-expanded":e.inExpandingPath,tabindex:e.expandable?-1:void 0,class:q([e.ns.b(),e.ns.is("selectable",e.checkStrictly),e.ns.is("active",e.node.checked),e.ns.is("disabled",!e.expandable),e.inExpandingPath&&"in-active-path",e.inCheckedPath&&"in-checked-path"]),onMouseenter:t[2]||(t[2]=(...b)=>e.handleHoverExpand&&e.handleHoverExpand(...b)),onFocus:t[3]||(t[3]=(...b)=>e.handleHoverExpand&&e.handleHoverExpand(...b)),onClick:t[4]||(t[4]=(...b)=>e.handleClick&&e.handleClick(...b))},[ae(" prefix "),e.multiple?(K(),ie(o,{key:0,"model-value":e.node.checked,indeterminate:e.node.indeterminate,disabled:e.isDisabled,onClick:t[0]||(t[0]=pt(()=>{},["stop"])),"onUpdate:modelValue":e.handleSelectCheck},null,8,["model-value","indeterminate","disabled","onUpdate:modelValue"])):e.checkStrictly?(K(),ie(i,{key:1,"model-value":e.checkedNodeId,label:e.node.uid,disabled:e.isDisabled,"onUpdate:modelValue":e.handleSelectCheck,onClick:t[1]||(t[1]=pt(()=>{},["stop"]))},{default:B(()=>[ae(`
        Add an empty element to avoid render label,
        do not use empty fragment here for https://github.com/vuejs/vue-next/pull/2485
      `),Are]),_:1},8,["model-value","label","disabled","onUpdate:modelValue"])):e.isLeaf&&e.node.checked?(K(),ie(u,{key:2,class:q(e.ns.e("prefix"))},{default:B(()=>[C(s)]),_:1},8,["class"])):ae("v-if",!0),ae(" content "),C(d),ae(" postfix "),e.isLeaf?ae("v-if",!0):(K(),F(Qe,{key:3},[e.node.loading?(K(),ie(u,{key:0,class:q([e.ns.is("loading"),e.ns.e("postfix")])},{default:B(()=>[C(f)]),_:1},8,["class"])):(K(),ie(u,{key:1,class:q(["arrow-right",e.ns.e("postfix")])},{default:B(()=>[C(p)]),_:1},8,["class"]))],64))],42,yre)}var kre=Be(Sre,[["render",Wre],["__file","/home/runner/work/element-plus/element-plus/packages/components/cascader-panel/src/node.vue"]]);const Vre=$({name:"ElCascaderMenu",components:{Loading:Uo,ElIcon:it,ElScrollbar:Cl,ElCascaderNode:kre},props:{nodes:{type:Array,required:!0},index:{type:Number,required:!0}},setup(e){const t=Tt(),n=ze("cascader-menu"),{t:r}=It(),a=Hv();let l=null,o=null;const i=tt(p2),s=J(null),u=X(()=>!e.nodes.length),d=X(()=>!i.initialLoaded),f=X(()=>`cascader-menu-${a}-${e.index}`),p=m=>{l=m.target},b=m=>{if(!(!i.isHoverMenu||!l||!s.value))if(l.contains(m.target)){A();const v=t.vnode.el,{left:S}=v.getBoundingClientRect(),{offsetWidth:y,offsetHeight:W}=v,k=m.clientX-S,V=l.offsetTop,T=V+l.offsetHeight;s.value.innerHTML=`
          <path style="pointer-events: auto;" fill="transparent" d="M${k} ${V} L${y} 0 V${V} Z" />
          <path style="pointer-events: auto;" fill="transparent" d="M${k} ${T} L${y} ${W} V${T} Z" />
        `}else o||(o=window.setTimeout(h,i.config.hoverThreshold))},A=()=>{!o||(clearTimeout(o),o=null)},h=()=>{!s.value||(s.value.innerHTML="",A())};return{ns:n,panel:i,hoverZone:s,isEmpty:u,isLoading:d,menuId:f,t:r,handleExpand:p,handleMouseMove:b,clearHoverZone:h}}});function Pre(e,t,n,r,a,l){const o=rt("el-cascader-node"),i=rt("loading"),s=rt("el-icon"),u=rt("el-scrollbar");return K(),ie(u,{key:e.menuId,tag:"ul",role:"menu",class:q(e.ns.b()),"wrap-class":e.ns.e("wrap"),"view-class":[e.ns.e("list"),e.ns.is("empty",e.isEmpty)],onMousemove:e.handleMouseMove,onMouseleave:e.clearHoverZone},{default:B(()=>{var d;return[(K(!0),F(Qe,null,Nt(e.nodes,f=>(K(),ie(o,{key:f.uid,node:f,"menu-id":e.menuId,onExpand:e.handleExpand},null,8,["node","menu-id","onExpand"]))),128)),e.isLoading?(K(),F("div",{key:0,class:q(e.ns.e("empty-text"))},[C(s,{size:"14",class:q(e.ns.is("loading"))},{default:B(()=>[C(i)]),_:1},8,["class"]),Xt(" "+je(e.t("el.cascader.loading")),1)],2)):e.isEmpty?(K(),F("div",{key:1,class:q(e.ns.e("empty-text"))},je(e.t("el.cascader.noData")),3)):(d=e.panel)!=null&&d.isHoverMenu?(K(),F("svg",{key:2,ref:"hoverZone",class:q(e.ns.e("hover-zone"))},null,2)):ae("v-if",!0)]}),_:1},8,["class","wrap-class","view-class","onMousemove","onMouseleave"])}var Tre=Be(Vre,[["render",Pre],["__file","/home/runner/work/element-plus/element-plus/packages/components/cascader-panel/src/menu.vue"]]);let Kre=0;const Nre=e=>{const t=[e];let{parent:n}=e;for(;n;)t.unshift(n),n=n.parent;return t};class Bs{constructor(t,n,r,a=!1){this.data=t,this.config=n,this.parent=r,this.root=a,this.uid=Kre++,this.checked=!1,this.indeterminate=!1,this.loading=!1;const{value:l,label:o,children:i}=n,s=t[i],u=Nre(this);this.level=a?0:r?r.level+1:1,this.value=t[l],this.label=t[o],this.pathNodes=u,this.pathValues=u.map(d=>d.value),this.pathLabels=u.map(d=>d.label),this.childrenData=s,this.children=(s||[]).map(d=>new Bs(d,n,this)),this.loaded=!n.lazy||this.isLeaf||!da(s)}get isDisabled(){const{data:t,parent:n,config:r}=this,{disabled:a,checkStrictly:l}=r;return(ht(a)?a(t,this):!!t[a])||!l&&(n==null?void 0:n.isDisabled)}get isLeaf(){const{data:t,config:n,childrenData:r,loaded:a}=this,{lazy:l,leaf:o}=n,i=ht(o)?o(t,this):t[o];return Hn(i)?l&&!a?!1:!(Array.isArray(r)&&r.length):!!i}get valueByOption(){return this.config.emitPath?this.pathValues:this.value}appendChild(t){const{childrenData:n,children:r}=this,a=new Bs(t,this.config,this);return Array.isArray(n)?n.push(t):this.childrenData=[t],r.push(a),a}calcText(t,n){const r=t?this.pathLabels.join(n):this.label;return this.text=r,r}broadcast(t,...n){const r=`onParent${Da(t)}`;this.children.forEach(a=>{a&&(a.broadcast(t,...n),a[r]&&a[r](...n))})}emit(t,...n){const{parent:r}=this,a=`onChild${Da(t)}`;r&&(r[a]&&r[a](...n),r.emit(t,...n))}onParentCheck(t){this.isDisabled||this.setCheckState(t)}onChildCheck(){const{children:t}=this,n=t.filter(a=>!a.isDisabled),r=n.length?n.every(a=>a.checked):!1;this.setCheckState(r)}setCheckState(t){const n=this.children.length,r=this.children.reduce((a,l)=>{const o=l.checked?1:l.indeterminate?.5:0;return a+o},0);this.checked=this.loaded&&this.children.filter(a=>!a.isDisabled).every(a=>a.loaded&&a.checked)&&t,this.indeterminate=this.loaded&&r!==n&&r>0}doCheck(t){if(this.checked===t)return;const{checkStrictly:n,multiple:r}=this.config;n||!r?this.checked=t:(this.broadcast("check",t),this.setCheckState(t),this.emit("check"))}}const mh=(e,t)=>e.reduce((n,r)=>(r.isLeaf?n.push(r):(!t&&n.push(r),n=n.concat(mh(r.children,t))),n),[]);class O8{constructor(t,n){this.config=n;const r=(t||[]).map(a=>new Bs(a,this.config));this.nodes=r,this.allNodes=mh(r,!1),this.leafNodes=mh(r,!0)}getNodes(){return this.nodes}getFlattedNodes(t){return t?this.leafNodes:this.allNodes}appendNode(t,n){const r=n?n.appendChild(t):new Bs(t,this.config);n||this.nodes.push(r),this.allNodes.push(r),r.isLeaf&&this.leafNodes.push(r)}appendNodes(t,n){t.forEach(r=>this.appendNode(r,n))}getNodeByValue(t,n=!1){return!t&&t!==0?null:this.getFlattedNodes(n).find(a=>zr(a.value,t)||zr(a.pathValues,t))||null}getSameNode(t){return t&&this.getFlattedNodes(!1).find(({value:r,level:a})=>zr(t.value,r)&&t.level===a)||null}}const JP=Ie({modelValue:{type:ve([Number,String,Array])},options:{type:ve(Array),default:()=>[]},props:{type:ve(Object),default:()=>({})}}),xre={expandTrigger:"click",multiple:!1,checkStrictly:!1,emitPath:!0,lazy:!1,lazyLoad:en,value:"value",label:"label",children:"children",leaf:"leaf",disabled:"disabled",hoverThreshold:500},Xre=e=>X(()=>({...xre,...e.props})),R8=e=>{if(!e)return 0;const t=e.id.split("-");return Number(t[t.length-2])},gre=e=>{if(!e)return;const t=e.querySelector("input");t?t.click():I4(e)&&e.click()},wre=(e,t)=>{const n=t.slice(0),r=n.map(l=>l.uid),a=e.reduce((l,o)=>{const i=r.indexOf(o.uid);return i>-1&&(l.push(o),n.splice(i,1),r.splice(i,1)),l},[]);return a.push(...n),a},jre=$({name:"ElCascaderPanel",components:{ElCascaderMenu:Tre},props:{...JP,border:{type:Boolean,default:!0},renderLabel:Function},emits:[Rt,mn,"close","expand-change"],setup(e,{emit:t,slots:n}){let r=!1;const a=ze("cascader"),l=Xre(e);let o=null;const i=J(!0),s=J([]),u=J(null),d=J([]),f=J(null),p=J([]),b=X(()=>l.value.expandTrigger==="hover"),A=X(()=>e.renderLabel||n.default),h=()=>{const{options:L}=e,w=l.value;r=!1,o=new O8(L,w),d.value=[o.getNodes()],w.lazy&&da(e.options)?(i.value=!1,m(void 0,R=>{R&&(o=new O8(R,w),d.value=[o.getNodes()]),i.value=!0,P(!1,!0)})):P(!1,!0)},m=(L,w)=>{const R=l.value;L=L||new Bs({},R,void 0,!0),L.loading=!0;const Z=G=>{const U=L,H=U.root?null:U;G&&(o==null||o.appendNodes(G,H)),U.loading=!1,U.loaded=!0,U.childrenData=U.childrenData||[],w&&w(G)};R.lazyLoad(L,Z)},v=(L,w)=>{var R;const{level:Z}=L,G=d.value.slice(0,Z);let U;L.isLeaf?U=L.pathNodes[Z-2]:(U=L,G.push(L.children)),((R=f.value)==null?void 0:R.uid)!==(U==null?void 0:U.uid)&&(f.value=L,d.value=G,!w&&t("expand-change",(L==null?void 0:L.pathValues)||[]))},S=(L,w,R=!0)=>{const{checkStrictly:Z,multiple:G}=l.value,U=p.value[0];r=!0,!G&&(U==null||U.doCheck(!1)),L.doCheck(w),T(),R&&!G&&!Z&&t("close"),!R&&!G&&!Z&&y(L)},y=L=>{!L||(L=L.parent,y(L),L&&v(L))},W=L=>o==null?void 0:o.getFlattedNodes(L),k=L=>{var w;return(w=W(L))==null?void 0:w.filter(R=>R.checked!==!1)},V=()=>{p.value.forEach(L=>L.doCheck(!1)),T(),d.value=d.value.slice(0,1),f.value=null,t("expand-change",[])},T=()=>{var L;const{checkStrictly:w,multiple:R}=l.value,Z=p.value,G=k(!w),U=wre(Z,G),H=U.map(O=>O.valueByOption);p.value=U,u.value=R?H:(L=H[0])!=null?L:null},P=(L=!1,w=!1)=>{const{modelValue:R}=e,{lazy:Z,multiple:G,checkStrictly:U}=l.value,H=!U;if(!(!i.value||r||!w&&zr(R,u.value)))if(Z&&!L){const D=U3(bC(Kl(R))).map(Y=>o==null?void 0:o.getNodeByValue(Y)).filter(Y=>!!Y&&!Y.loaded&&!Y.loading);D.length?D.forEach(Y=>{m(Y,()=>P(!1,w))}):P(!0,w)}else{const O=G?Kl(R):[R],D=U3(O.map(Y=>o==null?void 0:o.getNodeByValue(Y,H)));x(D,w),u.value=Tp(R)}},x=(L,w=!0)=>{const{checkStrictly:R}=l.value,Z=p.value,G=L.filter(O=>!!O&&(R||O.isLeaf)),U=o==null?void 0:o.getSameNode(f.value),H=w&&U||G[0];H?H.pathNodes.forEach(O=>v(O,!0)):f.value=null,Z.forEach(O=>O.doCheck(!1)),e.props.multiple?Bt(G).forEach(O=>O.doCheck(!0)):G.forEach(O=>O.doCheck(!0)),p.value=G,at(g)},g=()=>{!Mt||s.value.forEach(L=>{const w=L==null?void 0:L.$el;if(w){const R=w.querySelector(`.${a.namespace.value}-scrollbar__wrap`),Z=w.querySelector(`.${a.b("node")}.${a.is("active")}`)||w.querySelector(`.${a.b("node")}.in-active-path`);Rk(R,Z)}})},j=L=>{const w=L.target,{code:R}=L;switch(R){case ut.up:case ut.down:{L.preventDefault();const Z=R===ut.up?-1:1;Tf(B4(w,Z,`.${a.b("node")}[tabindex="-1"]`));break}case ut.left:{L.preventDefault();const Z=s.value[R8(w)-1],G=Z==null?void 0:Z.$el.querySelector(`.${a.b("node")}[aria-expanded="true"]`);Tf(G);break}case ut.right:{L.preventDefault();const Z=s.value[R8(w)+1],G=Z==null?void 0:Z.$el.querySelector(`.${a.b("node")}[tabindex="-1"]`);Tf(G);break}case ut.enter:gre(w);break}};return zt(p2,Bt({config:l,expandingNode:f,checkedNodes:p,isHoverMenu:b,initialLoaded:i,renderLabelFn:A,lazyLoad:m,expandNode:v,handleCheckChange:S})),Ve([l,()=>e.options],h,{deep:!0,immediate:!0}),Ve(()=>e.modelValue,()=>{r=!1,P()},{deep:!0}),Ve(()=>u.value,L=>{zr(L,e.modelValue)||(t(Rt,L),t(mn,L))}),O0(()=>s.value=[]),At(()=>!da(e.modelValue)&&P()),{ns:a,menuList:s,menus:d,checkedNodes:p,handleKeyDown:j,handleCheckChange:S,getFlattedNodes:W,getCheckedNodes:k,clearCheckedNodes:V,calculateCheckedValue:T,scrollToExpandingNode:g}}});function Lre(e,t,n,r,a,l){const o=rt("el-cascader-menu");return K(),F("div",{class:q([e.ns.b("panel"),e.ns.is("bordered",e.border)]),onKeydown:t[0]||(t[0]=(...i)=>e.handleKeyDown&&e.handleKeyDown(...i))},[(K(!0),F(Qe,null,Nt(e.menus,(i,s)=>(K(),ie(o,{key:s,ref_for:!0,ref:u=>e.menuList[s]=u,index:s,nodes:[...i]},null,8,["index","nodes"]))),128))],34)}var Lf=Be(jre,[["render",Lre],["__file","/home/runner/work/element-plus/element-plus/packages/components/cascader-panel/src/index.vue"]]);Lf.install=e=>{e.component(Lf.name,Lf)};const FP=Lf,qre=FP,v2=Ie({type:{type:String,values:["success","info","warning","danger",""],default:""},closable:Boolean,disableTransitions:Boolean,hit:Boolean,color:{type:String,default:""},size:{type:String,values:sl,default:""},effect:{type:String,values:["dark","light","plain"],default:"light"},round:Boolean}),Ure={close:e=>e instanceof MouseEvent,click:e=>e instanceof MouseEvent},Ore=$({name:"ElTag"}),Rre=$({...Ore,props:v2,emits:Ure,setup(e,{emit:t}){const n=e,r=Cn(),a=ze("tag"),l=X(()=>{const{type:s,hit:u,effect:d,closable:f,round:p}=n;return[a.b(),a.is("closable",f),a.m(s),a.m(r.value),a.m(d),a.is("hit",u),a.is("round",p)]}),o=s=>{t("close",s)},i=s=>{t("click",s)};return(s,u)=>s.disableTransitions?(K(),F("span",{key:0,class:q(c(l)),style:lt({backgroundColor:s.color}),onClick:i},[z("span",{class:q(c(a).e("content"))},[ue(s.$slots,"default")],2),s.closable?(K(),ie(c(it),{key:0,class:q(c(a).e("close")),onClick:pt(o,["stop"])},{default:B(()=>[C(c(ma))]),_:1},8,["class","onClick"])):ae("v-if",!0)],6)):(K(),ie(fn,{key:1,name:`${c(a).namespace.value}-zoom-in-center`,appear:""},{default:B(()=>[z("span",{class:q(c(l)),style:lt({backgroundColor:s.color}),onClick:i},[z("span",{class:q(c(a).e("content"))},[ue(s.$slots,"default")],2),s.closable?(K(),ie(c(it),{key:0,class:q(c(a).e("close")),onClick:pt(o,["stop"])},{default:B(()=>[C(c(ma))]),_:1},8,["class","onClick"])):ae("v-if",!0)],6)]),_:3},8,["name"]))}});var Jre=Be(Rre,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tag/src/tag.vue"]]);const Lc=qt(Jre),Fre=Ie({...JP,size:ur,placeholder:String,disabled:Boolean,clearable:Boolean,filterable:Boolean,filterMethod:{type:ve(Function),default:(e,t)=>e.text.includes(t)},separator:{type:String,default:" / "},showAllLevels:{type:Boolean,default:!0},collapseTags:Boolean,maxCollapseTags:{type:Number,default:1},collapseTagsTooltip:{type:Boolean,default:!1},debounce:{type:Number,default:300},beforeFilter:{type:ve(Function),default:()=>!0},popperClass:{type:String,default:""},teleported:nr.teleported,tagType:{...v2.type,default:"info"},validateEvent:{type:Boolean,default:!0}}),zre={[Rt]:e=>!!e||e===null,[mn]:e=>!!e||e===null,focus:e=>e instanceof FocusEvent,blur:e=>e instanceof FocusEvent,visibleChange:e=>Zn(e),expandChange:e=>!!e,removeTag:e=>!!e},Hre={key:0},Zre=["placeholder","onKeydown"],Gre=["onClick"],Cre="ElCascader",Mre=$({name:Cre}),Dre=$({...Mre,props:Fre,emits:zre,setup(e,{expose:t,emit:n}){const r=e,a={modifiers:[{name:"arrowPosition",enabled:!0,phase:"main",fn:({state:be})=>{const{modifiersData:fe,placement:Xe}=be;["right","left","bottom","top"].includes(Xe)||(fe.arrow.x=35)},requires:["arrow"]}]},l=Xo();let o=0,i=0;const s=ze("cascader"),u=ze("input"),{t:d}=It(),{form:f,formItem:p}=wr(),b=J(null),A=J(null),h=J(null),m=J(null),v=J(null),S=J(!1),y=J(!1),W=J(!1),k=J(!1),V=J(""),T=J(""),P=J([]),x=J([]),g=J([]),j=J(!1),L=X(()=>l.style),w=X(()=>r.disabled||(f==null?void 0:f.disabled)),R=X(()=>r.placeholder||d("el.cascader.placeholder")),Z=X(()=>T.value||P.value.length>0||j.value?"":R.value),G=Cn(),U=X(()=>["small"].includes(G.value)?"small":"default"),H=X(()=>!!r.props.multiple),O=X(()=>!r.filterable||H.value),D=X(()=>H.value?T.value:V.value),Y=X(()=>{var be;return((be=m.value)==null?void 0:be.checkedNodes)||[]}),Q=X(()=>!r.clearable||w.value||W.value||!y.value?!1:!!Y.value.length),ee=X(()=>{const{showAllLevels:be,separator:fe}=r,Xe=Y.value;return Xe.length?H.value?"":Xe[0].calcText(be,fe):""}),oe=X({get(){return Tp(r.modelValue)},set(be){n(Rt,be),n(mn,be),r.validateEvent&&(p==null||p.validate("change").catch(fe=>void 0))}}),Ne=X(()=>[s.b(),s.m(G.value),s.is("disabled",w.value),l.class]),pe=X(()=>[u.e("icon"),"icon-arrow-down",s.is("reverse",S.value)]),me=X(()=>s.is("focus",S.value||k.value)),ce=X(()=>{var be,fe;return(fe=(be=b.value)==null?void 0:be.popperRef)==null?void 0:fe.contentRef}),Le=be=>{var fe,Xe,ne;w.value||(be=be!=null?be:!S.value,be!==S.value&&(S.value=be,(Xe=(fe=A.value)==null?void 0:fe.input)==null||Xe.setAttribute("aria-expanded",`${be}`),be?(Te(),at((ne=m.value)==null?void 0:ne.scrollToExpandingNode)):r.filterable&&Me(),n("visibleChange",be)))},Te=()=>{at(()=>{var be;(be=b.value)==null||be.updatePopper()})},xe=()=>{W.value=!1},_=be=>{const{showAllLevels:fe,separator:Xe}=r;return{node:be,key:be.uid,text:be.calcText(fe,Xe),hitState:!1,closable:!w.value&&!be.isDisabled,isCollapseTag:!1}},re=be=>{var fe;const Xe=be.node;Xe.doCheck(!1),(fe=m.value)==null||fe.calculateCheckedValue(),n("removeTag",Xe.valueByOption)},ye=()=>{if(!H.value)return;const be=Y.value,fe=[],Xe=[];if(be.forEach(ne=>Xe.push(_(ne))),x.value=Xe,be.length){be.slice(0,r.maxCollapseTags).forEach(Oe=>fe.push(_(Oe)));const ne=be.slice(r.maxCollapseTags),M=ne.length;M&&(r.collapseTags?fe.push({key:-1,text:`+ ${M}`,closable:!1,isCollapseTag:!0}):ne.forEach(Oe=>fe.push(_(Oe))))}P.value=fe},ge=()=>{var be,fe;const{filterMethod:Xe,showAllLevels:ne,separator:M}=r,Oe=(fe=(be=m.value)==null?void 0:be.getFlattedNodes(!r.props.checkStrictly))==null?void 0:fe.filter(Ee=>Ee.isDisabled?!1:(Ee.calcText(ne,M),Xe(Ee,D.value)));H.value&&(P.value.forEach(Ee=>{Ee.hitState=!1}),x.value.forEach(Ee=>{Ee.hitState=!1})),W.value=!0,g.value=Oe,Te()},Fe=()=>{var be;let fe;W.value&&v.value?fe=v.value.$el.querySelector(`.${s.e("suggestion-item")}`):fe=(be=m.value)==null?void 0:be.$el.querySelector(`.${s.b("node")}[tabindex="-1"]`),fe&&(fe.focus(),!W.value&&fe.click())},Ae=()=>{var be,fe;const Xe=(be=A.value)==null?void 0:be.input,ne=h.value,M=(fe=v.value)==null?void 0:fe.$el;if(!(!Mt||!Xe)){if(M){const Oe=M.querySelector(`.${s.e("suggestion-list")}`);Oe.style.minWidth=`${Xe.offsetWidth}px`}if(ne){const{offsetHeight:Oe}=ne,Ee=P.value.length>0?`${Math.max(Oe+6,o)}px`:`${o}px`;Xe.style.height=Ee,Te()}}},Ze=be=>{var fe;return(fe=m.value)==null?void 0:fe.getCheckedNodes(be)},Ue=be=>{Te(),n("expandChange",be)},Pe=be=>{var fe;const Xe=(fe=be.target)==null?void 0:fe.value;if(be.type==="compositionend")j.value=!1,at(()=>ot(Xe));else{const ne=Xe[Xe.length-1]||"";j.value=!Fv(ne)}},qe=be=>{if(!j.value)switch(be.code){case ut.enter:Le();break;case ut.down:Le(!0),at(Fe),be.preventDefault();break;case ut.esc:S.value===!0&&(be.preventDefault(),be.stopPropagation(),Le(!1));break;case ut.tab:Le(!1);break}},De=()=>{var be;(be=m.value)==null||be.clearCheckedNodes(),!S.value&&r.filterable&&Me(),Le(!1)},Me=()=>{const{value:be}=ee;V.value=be,T.value=be},_e=be=>{var fe,Xe;const{checked:ne}=be;H.value?(fe=m.value)==null||fe.handleCheckChange(be,!ne,!1):(!ne&&((Xe=m.value)==null||Xe.handleCheckChange(be,!0,!1)),Le(!1))},Re=be=>{const fe=be.target,{code:Xe}=be;switch(Xe){case ut.up:case ut.down:{const ne=Xe===ut.up?-1:1;Tf(B4(fe,ne,`.${s.e("suggestion-item")}[tabindex="-1"]`));break}case ut.enter:fe.click();break}},$e=()=>{const be=P.value,fe=be[be.length-1];i=T.value?0:i+1,!(!fe||!i||r.collapseTags&&be.length>1)&&(fe.hitState?re(fe):fe.hitState=!0)},dt=be=>{const fe=be.target,Xe=s.e("search-input");fe.className===Xe&&(k.value=!0),n("focus",be)},yt=be=>{k.value=!1,n("blur",be)},gt=xr(()=>{const{value:be}=D;if(!be)return;const fe=r.beforeFilter(be);xs(fe)?fe.then(ge).catch(()=>{}):fe!==!1?ge():xe()},r.debounce),ot=(be,fe)=>{!S.value&&Le(!0),!(fe!=null&&fe.isComposing)&&(be?gt():xe())},ke=be=>Number.parseFloat(nL(u.cssVarName("input-height"),be).value)-2;return Ve(W,Te),Ve([Y,w],ye),Ve(P,()=>{at(()=>Ae())}),Ve(G,async()=>{await at();const be=A.value.input;o=ke(be)||o,Ae()}),Ve(ee,Me,{immediate:!0}),At(()=>{const be=A.value.input,fe=ke(be);o=be.offsetHeight||fe,hr(be,Ae)}),t({getCheckedNodes:Ze,cascaderPanelRef:m,togglePopperVisible:Le,contentRef:ce}),(be,fe)=>(K(),ie(c(Xr),{ref_key:"tooltipRef",ref:b,visible:S.value,teleported:be.teleported,"popper-class":[c(s).e("dropdown"),be.popperClass],"popper-options":a,"fallback-placements":["bottom-start","bottom","top-start","top","right","left"],"stop-popper-mouse-event":!1,"gpu-acceleration":!1,placement:"bottom-start",transition:`${c(s).namespace.value}-zoom-in-top`,effect:"light",pure:"",persistent:"",onHide:xe},{default:B(()=>[Vt((K(),F("div",{class:q(c(Ne)),style:lt(c(L)),onClick:fe[5]||(fe[5]=()=>Le(c(O)?void 0:!0)),onKeydown:qe,onMouseenter:fe[6]||(fe[6]=Xe=>y.value=!0),onMouseleave:fe[7]||(fe[7]=Xe=>y.value=!1)},[C(c(vr),{ref_key:"input",ref:A,modelValue:V.value,"onUpdate:modelValue":fe[1]||(fe[1]=Xe=>V.value=Xe),placeholder:c(Z),readonly:c(O),disabled:c(w),"validate-event":!1,size:c(G),class:q(c(me)),tabindex:c(H)&&be.filterable&&!c(w)?-1:void 0,onCompositionstart:Pe,onCompositionupdate:Pe,onCompositionend:Pe,onFocus:dt,onBlur:yt,onInput:ot},{suffix:B(()=>[c(Q)?(K(),ie(c(it),{key:"clear",class:q([c(u).e("icon"),"icon-circle-close"]),onClick:pt(De,["stop"])},{default:B(()=>[C(c(qo))]),_:1},8,["class","onClick"])):(K(),ie(c(it),{key:"arrow-down",class:q(c(pe)),onClick:fe[0]||(fe[0]=pt(Xe=>Le(),["stop"]))},{default:B(()=>[C(c(Lo))]),_:1},8,["class"]))]),_:1},8,["modelValue","placeholder","readonly","disabled","size","class","tabindex"]),c(H)?(K(),F("div",{key:0,ref_key:"tagWrapper",ref:h,class:q(c(s).e("tags"))},[(K(!0),F(Qe,null,Nt(P.value,Xe=>(K(),ie(c(Lc),{key:Xe.key,type:be.tagType,size:c(U),hit:Xe.hitState,closable:Xe.closable,"disable-transitions":"",onClose:ne=>re(Xe)},{default:B(()=>[Xe.isCollapseTag===!1?(K(),F("span",Hre,je(Xe.text),1)):(K(),ie(c(Xr),{key:1,disabled:S.value||!be.collapseTagsTooltip,"fallback-placements":["bottom","top","right","left"],placement:"bottom",effect:"light"},{default:B(()=>[z("span",null,je(Xe.text),1)]),content:B(()=>[z("div",{class:q(c(s).e("collapse-tags"))},[(K(!0),F(Qe,null,Nt(x.value.slice(be.maxCollapseTags),(ne,M)=>(K(),F("div",{key:M,class:q(c(s).e("collapse-tag"))},[(K(),ie(c(Lc),{key:ne.key,class:"in-tooltip",type:be.tagType,size:c(U),hit:ne.hitState,closable:ne.closable,"disable-transitions":"",onClose:Oe=>re(ne)},{default:B(()=>[z("span",null,je(ne.text),1)]),_:2},1032,["type","size","hit","closable","onClose"]))],2))),128))],2)]),_:2},1032,["disabled"]))]),_:2},1032,["type","size","hit","closable","onClose"]))),128)),be.filterable&&!c(w)?Vt((K(),F("input",{key:0,"onUpdate:modelValue":fe[2]||(fe[2]=Xe=>T.value=Xe),type:"text",class:q(c(s).e("search-input")),placeholder:c(ee)?"":c(R),onInput:fe[3]||(fe[3]=Xe=>ot(T.value,Xe)),onClick:fe[4]||(fe[4]=pt(Xe=>Le(!0),["stop"])),onKeydown:Dt($e,["delete"]),onCompositionstart:Pe,onCompositionupdate:Pe,onCompositionend:Pe,onFocus:dt,onBlur:yt},null,42,Zre)),[[yi,T.value]]):ae("v-if",!0)],2)):ae("v-if",!0)],38)),[[c(Po),()=>Le(!1),c(ce)]])]),content:B(()=>[Vt(C(c(FP),{ref_key:"cascaderPanelRef",ref:m,modelValue:c(oe),"onUpdate:modelValue":fe[8]||(fe[8]=Xe=>Qt(oe)?oe.value=Xe:null),options:be.options,props:r.props,border:!1,"render-label":be.$slots.default,onExpandChange:Ue,onClose:fe[9]||(fe[9]=Xe=>be.$nextTick(()=>Le(!1)))},null,8,["modelValue","options","props","render-label"]),[[Ct,!W.value]]),be.filterable?Vt((K(),ie(c(Cl),{key:0,ref_key:"suggestionPanel",ref:v,tag:"ul",class:q(c(s).e("suggestion-panel")),"view-class":c(s).e("suggestion-list"),onKeydown:Re},{default:B(()=>[g.value.length?(K(!0),F(Qe,{key:0},Nt(g.value,Xe=>(K(),F("li",{key:Xe.uid,class:q([c(s).e("suggestion-item"),c(s).is("checked",Xe.checked)]),tabindex:-1,onClick:ne=>_e(Xe)},[z("span",null,je(Xe.text),1),Xe.checked?(K(),ie(c(it),{key:0},{default:B(()=>[C(c(hd))]),_:1})):ae("v-if",!0)],10,Gre))),128)):ue(be.$slots,"empty",{key:1},()=>[z("li",{class:q(c(s).e("empty-text"))},je(c(d)("el.cascader.noMatch")),3)])]),_:3},8,["class","view-class"])),[[Ct,W.value]]):ae("v-if",!0)]),_:3},8,["visible","teleported","popper-class","transition"]))}});var qf=Be(Dre,[["__file","/home/runner/work/element-plus/element-plus/packages/components/cascader/src/cascader.vue"]]);qf.install=e=>{e.component(qf.name,qf)};const Ere=qf,Ire=Ere,Bre=Ie({checked:{type:Boolean,default:!1}}),Yre={"update:checked":e=>Zn(e),[mn]:e=>Zn(e)},Qre=$({name:"ElCheckTag"}),_re=$({...Qre,props:Bre,emits:Yre,setup(e,{emit:t}){const n=e,r=ze("check-tag"),a=X(()=>[r.b(),r.is("checked",n.checked)]),l=()=>{const o=!n.checked;t(mn,o),t("update:checked",o)};return(o,i)=>(K(),F("span",{class:q(c(a)),onClick:l},[ue(o.$slots,"default")],2))}});var $re=Be(_re,[["__file","/home/runner/work/element-plus/element-plus/packages/components/check-tag/src/check-tag.vue"]]);const eae=qt($re),zP=Symbol("rowContextKey"),tae=["start","center","end","space-around","space-between","space-evenly"],nae=["top","middle","bottom"],rae=Ie({tag:{type:String,default:"div"},gutter:{type:Number,default:0},justify:{type:String,values:tae,default:"start"},align:{type:String,values:nae}}),aae=$({name:"ElRow"}),lae=$({...aae,props:rae,setup(e){const t=e,n=ze("row"),r=X(()=>t.gutter);zt(zP,{gutter:r});const a=X(()=>{const o={};return t.gutter&&(o.marginRight=o.marginLeft=`-${t.gutter/2}px`),o}),l=X(()=>[n.b(),n.is(`justify-${t.justify}`,t.justify!=="start"),n.is(`align-${t.align}`,!!t.align)]);return(o,i)=>(K(),ie(Ot(o.tag),{class:q(c(l)),style:lt(c(a))},{default:B(()=>[ue(o.$slots,"default")]),_:3},8,["class","style"]))}});var oae=Be(lae,[["__file","/home/runner/work/element-plus/element-plus/packages/components/row/src/row.vue"]]);const iae=qt(oae),sae=Ie({tag:{type:String,default:"div"},span:{type:Number,default:24},offset:{type:Number,default:0},pull:{type:Number,default:0},push:{type:Number,default:0},xs:{type:ve([Number,Object]),default:()=>An({})},sm:{type:ve([Number,Object]),default:()=>An({})},md:{type:ve([Number,Object]),default:()=>An({})},lg:{type:ve([Number,Object]),default:()=>An({})},xl:{type:ve([Number,Object]),default:()=>An({})}}),uae=$({name:"ElCol"}),cae=$({...uae,props:sae,setup(e){const t=e,{gutter:n}=tt(zP,{gutter:X(()=>0)}),r=ze("col"),a=X(()=>{const o={};return n.value&&(o.paddingLeft=o.paddingRight=`${n.value/2}px`),o}),l=X(()=>{const o=[];return["span","offset","pull","push"].forEach(u=>{const d=t[u];mt(d)&&(u==="span"?o.push(r.b(`${t[u]}`)):d>0&&o.push(r.b(`${u}-${t[u]}`)))}),["xs","sm","md","lg","xl"].forEach(u=>{mt(t[u])?o.push(r.b(`${u}-${t[u]}`)):Jt(t[u])&&Object.entries(t[u]).forEach(([d,f])=>{o.push(d!=="span"?r.b(`${u}-${d}-${f}`):r.b(`${u}-${f}`))})}),n.value&&o.push(r.is("guttered")),[r.b(),o]});return(o,i)=>(K(),ie(Ot(o.tag),{class:q(c(l)),style:lt(c(a))},{default:B(()=>[ue(o.$slots,"default")]),_:3},8,["class","style"]))}});var dae=Be(cae,[["__file","/home/runner/work/element-plus/element-plus/packages/components/col/src/col.vue"]]);const fae=qt(dae),J8=e=>typeof mt(e),pae=Ie({accordion:Boolean,modelValue:{type:ve([Array,String,Number]),default:()=>An([])}}),vae={[Rt]:J8,[mn]:J8},HP=Symbol("collapseContextKey"),bae=(e,t)=>{const n=J(Vi(e.modelValue)),r=l=>{n.value=l;const o=e.accordion?n.value[0]:n.value;t(Rt,o),t(mn,o)},a=l=>{if(e.accordion)r([n.value[0]===l?"":l]);else{const o=[...n.value],i=o.indexOf(l);i>-1?o.splice(i,1):o.push(l),r(o)}};return Ve(()=>e.modelValue,()=>n.value=Vi(e.modelValue),{deep:!0}),zt(HP,{activeNames:n,handleItemClick:a}),{activeNames:n,setActiveNames:r}},hae=()=>{const e=ze("collapse");return{rootKls:X(()=>e.b())}},mae=$({name:"ElCollapse"}),Sae=$({...mae,props:pae,emits:vae,setup(e,{expose:t,emit:n}){const r=e,{activeNames:a,setActiveNames:l}=bae(r,n),{rootKls:o}=hae();return t({activeNames:a,setActiveNames:l}),(i,s)=>(K(),F("div",{class:q(c(o))},[ue(i.$slots,"default")],2))}});var yae=Be(Sae,[["__file","/home/runner/work/element-plus/element-plus/packages/components/collapse/src/collapse.vue"]]);const Aae=$({name:"ElCollapseTransition"}),Wae=$({...Aae,setup(e){const t=ze("collapse-transition"),n=a=>{a.style.maxHeight="",a.style.overflow=a.dataset.oldOverflow,a.style.paddingTop=a.dataset.oldPaddingTop,a.style.paddingBottom=a.dataset.oldPaddingBottom},r={beforeEnter(a){a.dataset||(a.dataset={}),a.dataset.oldPaddingTop=a.style.paddingTop,a.dataset.oldPaddingBottom=a.style.paddingBottom,a.style.maxHeight=0,a.style.paddingTop=0,a.style.paddingBottom=0},enter(a){a.dataset.oldOverflow=a.style.overflow,a.scrollHeight!==0?a.style.maxHeight=`${a.scrollHeight}px`:a.style.maxHeight=0,a.style.paddingTop=a.dataset.oldPaddingTop,a.style.paddingBottom=a.dataset.oldPaddingBottom,a.style.overflow="hidden"},afterEnter(a){a.style.maxHeight="",a.style.overflow=a.dataset.oldOverflow},enterCancelled(a){n(a)},beforeLeave(a){a.dataset||(a.dataset={}),a.dataset.oldPaddingTop=a.style.paddingTop,a.dataset.oldPaddingBottom=a.style.paddingBottom,a.dataset.oldOverflow=a.style.overflow,a.style.maxHeight=`${a.scrollHeight}px`,a.style.overflow="hidden"},leave(a){a.scrollHeight!==0&&(a.style.maxHeight=0,a.style.paddingTop=0,a.style.paddingBottom=0)},afterLeave(a){n(a)},leaveCancelled(a){n(a)}};return(a,l)=>(K(),ie(fn,Ut({name:c(t).b()},T7(r)),{default:B(()=>[ue(a.$slots,"default")]),_:3},16,["name"]))}});var Uf=Be(Wae,[["__file","/home/runner/work/element-plus/element-plus/packages/components/collapse-transition/src/collapse-transition.vue"]]);Uf.install=e=>{e.component(Uf.name,Uf)};const Yv=Uf,kae=Yv,Vae=Ie({title:{type:String,default:""},name:{type:ve([String,Number]),default:()=>Hv()},disabled:Boolean}),Pae=e=>{const t=tt(HP),n=J(!1),r=J(!1),a=J(Hv()),l=X(()=>t==null?void 0:t.activeNames.value.includes(e.name));return{focusing:n,id:a,isActive:l,handleFocus:()=>{setTimeout(()=>{r.value?r.value=!1:n.value=!0},50)},handleHeaderClick:()=>{e.disabled||(t==null||t.handleItemClick(e.name),n.value=!1,r.value=!0)},handleEnterClick:()=>{t==null||t.handleItemClick(e.name)}}},Tae=(e,{focusing:t,isActive:n,id:r})=>{const a=ze("collapse"),l=X(()=>[a.b("item"),a.is("active",c(n)),a.is("disabled",e.disabled)]),o=X(()=>[a.be("item","header"),a.is("active",c(n)),{focusing:c(t)&&!e.disabled}]),i=X(()=>[a.be("item","arrow"),a.is("active",c(n))]),s=X(()=>a.be("item","wrap")),u=X(()=>a.be("item","content")),d=X(()=>a.b(`content-${c(r)}`)),f=X(()=>a.b(`head-${c(r)}`));return{arrowKls:i,headKls:o,rootKls:l,itemWrapperKls:s,itemContentKls:u,scopedContentId:d,scopedHeadId:f}},Kae=["id","aria-expanded","aria-controls","aria-describedby","tabindex"],Nae=["id","aria-hidden","aria-labelledby"],xae=$({name:"ElCollapseItem"}),Xae=$({...xae,props:Vae,setup(e,{expose:t}){const n=e,{focusing:r,id:a,isActive:l,handleFocus:o,handleHeaderClick:i,handleEnterClick:s}=Pae(n),{arrowKls:u,headKls:d,rootKls:f,itemWrapperKls:p,itemContentKls:b,scopedContentId:A,scopedHeadId:h}=Tae(n,{focusing:r,isActive:l,id:a});return t({isActive:l}),(m,v)=>(K(),F("div",{class:q(c(f))},[z("button",{id:c(h),class:q(c(d)),"aria-expanded":c(l),"aria-controls":c(A),"aria-describedby":c(A),tabindex:m.disabled?-1:0,type:"button",onClick:v[0]||(v[0]=(...S)=>c(i)&&c(i)(...S)),onKeydown:v[1]||(v[1]=Dt(pt((...S)=>c(s)&&c(s)(...S),["stop","prevent"]),["space","enter"])),onFocus:v[2]||(v[2]=(...S)=>c(o)&&c(o)(...S)),onBlur:v[3]||(v[3]=S=>r.value=!1)},[ue(m.$slots,"title",{},()=>[Xt(je(m.title),1)]),C(c(it),{class:q(c(u))},{default:B(()=>[C(c(Vr))]),_:1},8,["class"])],42,Kae),C(c(Yv),null,{default:B(()=>[Vt(z("div",{id:c(A),role:"region",class:q(c(p)),"aria-hidden":!c(l),"aria-labelledby":c(h)},[z("div",{class:q(c(b))},[ue(m.$slots,"default")],2)],10,Nae),[[Ct,c(l)]])]),_:3})],2))}});var ZP=Be(Xae,[["__file","/home/runner/work/element-plus/element-plus/packages/components/collapse/src/collapse-item.vue"]]);const gae=qt(yae,{CollapseItem:ZP}),wae=Nn(ZP),jae=Ie({color:{type:ve(Object),required:!0},vertical:{type:Boolean,default:!1}});let Mb=!1;function qc(e,t){if(!Mt)return;const n=function(l){var o;(o=t.drag)==null||o.call(t,l)},r=function(l){var o;document.removeEventListener("mousemove",n),document.removeEventListener("mouseup",r),document.removeEventListener("touchmove",n),document.removeEventListener("touchend",r),document.onselectstart=null,document.ondragstart=null,Mb=!1,(o=t.end)==null||o.call(t,l)},a=function(l){var o;Mb||(l.preventDefault(),document.onselectstart=()=>!1,document.ondragstart=()=>!1,document.addEventListener("mousemove",n),document.addEventListener("mouseup",r),document.addEventListener("touchmove",n),document.addEventListener("touchend",r),Mb=!0,(o=t.start)==null||o.call(t,l))};e.addEventListener("mousedown",a),e.addEventListener("touchstart",a)}const Lae=e=>{const t=Tt(),n=nn(),r=nn();function a(o){o.target!==n.value&&l(o)}function l(o){if(!r.value||!n.value)return;const s=t.vnode.el.getBoundingClientRect(),{clientX:u,clientY:d}=Am(o);if(e.vertical){let f=d-s.top;f=Math.max(n.value.offsetHeight/2,f),f=Math.min(f,s.height-n.value.offsetHeight/2),e.color.set("alpha",Math.round((f-n.value.offsetHeight/2)/(s.height-n.value.offsetHeight)*100))}else{let f=u-s.left;f=Math.max(n.value.offsetWidth/2,f),f=Math.min(f,s.width-n.value.offsetWidth/2),e.color.set("alpha",Math.round((f-n.value.offsetWidth/2)/(s.width-n.value.offsetWidth)*100))}}return{thumb:n,bar:r,handleDrag:l,handleClick:a}},qae=(e,{bar:t,thumb:n,handleDrag:r})=>{const a=Tt(),l=ze("color-alpha-slider"),o=J(0),i=J(0),s=J();function u(){if(!n.value||e.vertical)return 0;const S=a.vnode.el,y=e.color.get("alpha");return S?Math.round(y*(S.offsetWidth-n.value.offsetWidth/2)/100):0}function d(){if(!n.value)return 0;const S=a.vnode.el;if(!e.vertical)return 0;const y=e.color.get("alpha");return S?Math.round(y*(S.offsetHeight-n.value.offsetHeight/2)/100):0}function f(){if(e.color&&e.color.value){const{r:S,g:y,b:W}=e.color.toRgb();return`linear-gradient(to right, rgba(${S}, ${y}, ${W}, 0) 0%, rgba(${S}, ${y}, ${W}, 1) 100%)`}return""}function p(){o.value=u(),i.value=d(),s.value=f()}At(()=>{if(!t.value||!n.value)return;const S={drag:y=>{r(y)},end:y=>{r(y)}};qc(t.value,S),qc(n.value,S),p()}),Ve(()=>e.color.get("alpha"),()=>p()),Ve(()=>e.color.value,()=>p());const b=X(()=>[l.b(),l.is("vertical",e.vertical)]),A=X(()=>l.e("bar")),h=X(()=>l.e("thumb")),m=X(()=>({background:s.value})),v=X(()=>({left:Ln(o.value),top:Ln(i.value)}));return{rootKls:b,barKls:A,barStyle:m,thumbKls:h,thumbStyle:v,update:p}},Uae="ElColorAlphaSlider",Oae=$({name:Uae}),Rae=$({...Oae,props:jae,setup(e,{expose:t}){const n=e,{bar:r,thumb:a,handleDrag:l,handleClick:o}=Lae(n),{rootKls:i,barKls:s,barStyle:u,thumbKls:d,thumbStyle:f,update:p}=qae(n,{bar:r,thumb:a,handleDrag:l});return t({update:p,bar:r,thumb:a}),(b,A)=>(K(),F("div",{class:q(c(i))},[z("div",{ref_key:"bar",ref:r,class:q(c(s)),style:lt(c(u)),onClick:A[0]||(A[0]=(...h)=>c(o)&&c(o)(...h))},null,6),z("div",{ref_key:"thumb",ref:a,class:q(c(d)),style:lt(c(f))},null,6)],2))}});var Jae=Be(Rae,[["__file","/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/alpha-slider.vue"]]);const Fae=$({name:"ElColorHueSlider",props:{color:{type:Object,required:!0},vertical:Boolean},setup(e){const t=ze("color-hue-slider"),n=Tt(),r=J(),a=J(),l=J(0),o=J(0),i=X(()=>e.color.get("hue"));Ve(()=>i.value,()=>{p()});function s(b){b.target!==r.value&&u(b)}function u(b){if(!a.value||!r.value)return;const h=n.vnode.el.getBoundingClientRect(),{clientX:m,clientY:v}=Am(b);let S;if(e.vertical){let y=v-h.top;y=Math.min(y,h.height-r.value.offsetHeight/2),y=Math.max(r.value.offsetHeight/2,y),S=Math.round((y-r.value.offsetHeight/2)/(h.height-r.value.offsetHeight)*360)}else{let y=m-h.left;y=Math.min(y,h.width-r.value.offsetWidth/2),y=Math.max(r.value.offsetWidth/2,y),S=Math.round((y-r.value.offsetWidth/2)/(h.width-r.value.offsetWidth)*360)}e.color.set("hue",S)}function d(){if(!r.value)return 0;const b=n.vnode.el;if(e.vertical)return 0;const A=e.color.get("hue");return b?Math.round(A*(b.offsetWidth-r.value.offsetWidth/2)/360):0}function f(){if(!r.value)return 0;const b=n.vnode.el;if(!e.vertical)return 0;const A=e.color.get("hue");return b?Math.round(A*(b.offsetHeight-r.value.offsetHeight/2)/360):0}function p(){l.value=d(),o.value=f()}return At(()=>{if(!a.value||!r.value)return;const b={drag:A=>{u(A)},end:A=>{u(A)}};qc(a.value,b),qc(r.value,b),p()}),{bar:a,thumb:r,thumbLeft:l,thumbTop:o,hueValue:i,handleClick:s,update:p,ns:t}}});function zae(e,t,n,r,a,l){return K(),F("div",{class:q([e.ns.b(),e.ns.is("vertical",e.vertical)])},[z("div",{ref:"bar",class:q(e.ns.e("bar")),onClick:t[0]||(t[0]=(...o)=>e.handleClick&&e.handleClick(...o))},null,2),z("div",{ref:"thumb",class:q(e.ns.e("thumb")),style:lt({left:e.thumbLeft+"px",top:e.thumbTop+"px"})},null,6)],2)}var Hae=Be(Fae,[["render",zae],["__file","/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/hue-slider.vue"]]);const Zae=Ie({modelValue:String,id:String,showAlpha:Boolean,colorFormat:String,disabled:Boolean,size:ur,popperClass:{type:String,default:""},label:{type:String,default:void 0},tabindex:{type:[String,Number],default:0},predefine:{type:ve(Array)},validateEvent:{type:Boolean,default:!0}}),Gae={[Rt]:e=>Pt(e)||On(e),[mn]:e=>Pt(e)||On(e),activeChange:e=>Pt(e)||On(e),focus:e=>e instanceof FocusEvent,blur:e=>e instanceof FocusEvent},GP=Symbol("colorPickerContextKey"),F8=function(e,t,n){return[e,t*n/((e=(2-t)*n)<1?e:2-e)||0,e/2]},Cae=function(e){return typeof e=="string"&&e.includes(".")&&Number.parseFloat(e)===1},Mae=function(e){return typeof e=="string"&&e.includes("%")},Vs=function(e,t){Cae(e)&&(e="100%");const n=Mae(e);return e=Math.min(t,Math.max(0,Number.parseFloat(`${e}`))),n&&(e=Number.parseInt(`${e*t}`,10)/100),Math.abs(e-t)<1e-6?1:e%t/Number.parseFloat(t)},z8={10:"A",11:"B",12:"C",13:"D",14:"E",15:"F"},Of=e=>{e=Math.min(Math.round(e),255);const t=Math.floor(e/16),n=e%16;return`${z8[t]||t}${z8[n]||n}`},H8=function({r:e,g:t,b:n}){return Number.isNaN(+e)||Number.isNaN(+t)||Number.isNaN(+n)?"":`#${Of(e)}${Of(t)}${Of(n)}`},Db={A:10,B:11,C:12,D:13,E:14,F:15},Zo=function(e){return e.length===2?(Db[e[0].toUpperCase()]||+e[0])*16+(Db[e[1].toUpperCase()]||+e[1]):Db[e[1].toUpperCase()]||+e[1]},Dae=function(e,t,n){t=t/100,n=n/100;let r=t;const a=Math.max(n,.01);n*=2,t*=n<=1?n:2-n,r*=a<=1?a:2-a;const l=(n+t)/2,o=n===0?2*r/(a+r):2*t/(n+t);return{h:e,s:o*100,v:l*100}},Z8=(e,t,n)=>{e=Vs(e,255),t=Vs(t,255),n=Vs(n,255);const r=Math.max(e,t,n),a=Math.min(e,t,n);let l;const o=r,i=r-a,s=r===0?0:i/r;if(r===a)l=0;else{switch(r){case e:{l=(t-n)/i+(t<n?6:0);break}case t:{l=(n-e)/i+2;break}case n:{l=(e-t)/i+4;break}}l/=6}return{h:l*360,s:s*100,v:o*100}},xu=function(e,t,n){e=Vs(e,360)*6,t=Vs(t,100),n=Vs(n,100);const r=Math.floor(e),a=e-r,l=n*(1-t),o=n*(1-a*t),i=n*(1-(1-a)*t),s=r%6,u=[n,o,l,l,i,n][s],d=[i,n,n,o,l,l][s],f=[l,l,i,n,n,o][s];return{r:Math.round(u*255),g:Math.round(d*255),b:Math.round(f*255)}};class tc{constructor(t={}){this._hue=0,this._saturation=100,this._value=100,this._alpha=100,this.enableAlpha=!1,this.format="hex",this.value="";for(const n in t)Zt(t,n)&&(this[n]=t[n]);t.value?this.fromString(t.value):this.doOnChange()}set(t,n){if(arguments.length===1&&typeof t=="object"){for(const r in t)Zt(t,r)&&this.set(r,t[r]);return}this[`_${t}`]=n,this.doOnChange()}get(t){return t==="alpha"?Math.floor(this[`_${t}`]):this[`_${t}`]}toRgb(){return xu(this._hue,this._saturation,this._value)}fromString(t){if(!t){this._hue=0,this._saturation=100,this._value=100,this.doOnChange();return}const n=(r,a,l)=>{this._hue=Math.max(0,Math.min(360,r)),this._saturation=Math.max(0,Math.min(100,a)),this._value=Math.max(0,Math.min(100,l)),this.doOnChange()};if(t.includes("hsl")){const r=t.replace(/hsla|hsl|\(|\)/gm,"").split(/\s|,/g).filter(a=>a!=="").map((a,l)=>l>2?Number.parseFloat(a):Number.parseInt(a,10));if(r.length===4?this._alpha=Number.parseFloat(r[3])*100:r.length===3&&(this._alpha=100),r.length>=3){const{h:a,s:l,v:o}=Dae(r[0],r[1],r[2]);n(a,l,o)}}else if(t.includes("hsv")){const r=t.replace(/hsva|hsv|\(|\)/gm,"").split(/\s|,/g).filter(a=>a!=="").map((a,l)=>l>2?Number.parseFloat(a):Number.parseInt(a,10));r.length===4?this._alpha=Number.parseFloat(r[3])*100:r.length===3&&(this._alpha=100),r.length>=3&&n(r[0],r[1],r[2])}else if(t.includes("rgb")){const r=t.replace(/rgba|rgb|\(|\)/gm,"").split(/\s|,/g).filter(a=>a!=="").map((a,l)=>l>2?Number.parseFloat(a):Number.parseInt(a,10));if(r.length===4?this._alpha=Number.parseFloat(r[3])*100:r.length===3&&(this._alpha=100),r.length>=3){const{h:a,s:l,v:o}=Z8(r[0],r[1],r[2]);n(a,l,o)}}else if(t.includes("#")){const r=t.replace("#","").trim();if(!/^[0-9a-fA-F]{3}$|^[0-9a-fA-F]{6}$|^[0-9a-fA-F]{8}$/.test(r))return;let a,l,o;r.length===3?(a=Zo(r[0]+r[0]),l=Zo(r[1]+r[1]),o=Zo(r[2]+r[2])):(r.length===6||r.length===8)&&(a=Zo(r.slice(0,2)),l=Zo(r.slice(2,4)),o=Zo(r.slice(4,6))),r.length===8?this._alpha=Zo(r.slice(6))/255*100:(r.length===3||r.length===6)&&(this._alpha=100);const{h:i,s,v:u}=Z8(a,l,o);n(i,s,u)}}compare(t){return Math.abs(t._hue-this._hue)<2&&Math.abs(t._saturation-this._saturation)<1&&Math.abs(t._value-this._value)<1&&Math.abs(t._alpha-this._alpha)<1}doOnChange(){const{_hue:t,_saturation:n,_value:r,_alpha:a,format:l}=this;if(this.enableAlpha)switch(l){case"hsl":{const o=F8(t,n/100,r/100);this.value=`hsla(${t}, ${Math.round(o[1]*100)}%, ${Math.round(o[2]*100)}%, ${this.get("alpha")/100})`;break}case"hsv":{this.value=`hsva(${t}, ${Math.round(n)}%, ${Math.round(r)}%, ${this.get("alpha")/100})`;break}case"hex":{this.value=`${H8(xu(t,n,r))}${Of(a*255/100)}`;break}default:{const{r:o,g:i,b:s}=xu(t,n,r);this.value=`rgba(${o}, ${i}, ${s}, ${this.get("alpha")/100})`}}else switch(l){case"hsl":{const o=F8(t,n/100,r/100);this.value=`hsl(${t}, ${Math.round(o[1]*100)}%, ${Math.round(o[2]*100)}%)`;break}case"hsv":{this.value=`hsv(${t}, ${Math.round(n)}%, ${Math.round(r)}%)`;break}case"rgb":{const{r:o,g:i,b:s}=xu(t,n,r);this.value=`rgb(${o}, ${i}, ${s})`;break}default:this.value=H8(xu(t,n,r))}}}const Eae=$({props:{colors:{type:Array,required:!0},color:{type:Object,required:!0}},setup(e){const t=ze("color-predefine"),{currentColor:n}=tt(GP),r=J(l(e.colors,e.color));Ve(()=>n.value,o=>{const i=new tc;i.fromString(o),r.value.forEach(s=>{s.selected=i.compare(s)})}),Dn(()=>{r.value=l(e.colors,e.color)});function a(o){e.color.fromString(e.colors[o])}function l(o,i){return o.map(s=>{const u=new tc;return u.enableAlpha=!0,u.format="rgba",u.fromString(s),u.selected=u.value===i.value,u})}return{rgbaColors:r,handleSelect:a,ns:t}}}),Iae=["onClick"];function Bae(e,t,n,r,a,l){return K(),F("div",{class:q(e.ns.b())},[z("div",{class:q(e.ns.e("colors"))},[(K(!0),F(Qe,null,Nt(e.rgbaColors,(o,i)=>(K(),F("div",{key:e.colors[i],class:q([e.ns.e("color-selector"),e.ns.is("alpha",o._alpha<100),{selected:o.selected}]),onClick:s=>e.handleSelect(i)},[z("div",{style:lt({backgroundColor:o.value})},null,4)],10,Iae))),128))],2)],2)}var Yae=Be(Eae,[["render",Bae],["__file","/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/predefine.vue"]]);const Qae=$({name:"ElSlPanel",props:{color:{type:Object,required:!0}},setup(e){const t=ze("color-svpanel"),n=Tt(),r=J(0),a=J(0),l=J("hsl(0, 100%, 50%)"),o=X(()=>{const u=e.color.get("hue"),d=e.color.get("value");return{hue:u,value:d}});function i(){const u=e.color.get("saturation"),d=e.color.get("value"),f=n.vnode.el,{clientWidth:p,clientHeight:b}=f;a.value=u*p/100,r.value=(100-d)*b/100,l.value=`hsl(${e.color.get("hue")}, 100%, 50%)`}function s(u){const f=n.vnode.el.getBoundingClientRect(),{clientX:p,clientY:b}=Am(u);let A=p-f.left,h=b-f.top;A=Math.max(0,A),A=Math.min(A,f.width),h=Math.max(0,h),h=Math.min(h,f.height),a.value=A,r.value=h,e.color.set({saturation:A/f.width*100,value:100-h/f.height*100})}return Ve(()=>o.value,()=>{i()}),At(()=>{qc(n.vnode.el,{drag:u=>{s(u)},end:u=>{s(u)}}),i()}),{cursorTop:r,cursorLeft:a,background:l,colorValue:o,handleDrag:s,update:i,ns:t}}}),_ae=z("div",null,null,-1),$ae=[_ae];function ele(e,t,n,r,a,l){return K(),F("div",{class:q(e.ns.b()),style:lt({backgroundColor:e.background})},[z("div",{class:q(e.ns.e("white"))},null,2),z("div",{class:q(e.ns.e("black"))},null,2),z("div",{class:q(e.ns.e("cursor")),style:lt({top:e.cursorTop+"px",left:e.cursorLeft+"px"})},$ae,6)],6)}var tle=Be(Qae,[["render",ele],["__file","/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/sv-panel.vue"]]);const nle=["onKeydown"],rle=["id","aria-label","aria-labelledby","aria-description","aria-disabled","tabindex"],ale=$({name:"ElColorPicker"}),lle=$({...ale,props:Zae,emits:Gae,setup(e,{expose:t,emit:n}){const r=e,{t:a}=It(),l=ze("color"),{formItem:o}=wr(),i=Cn(),s=Br(),{inputId:u,isLabeledByFormItem:d}=Jo(r,{formItemContext:o}),f=J(),p=J(),b=J(),A=J(),h=J(),m=J(),{isFocused:v,handleFocus:S,handleBlur:y}=wV(h,{beforeBlur(Te){var xe;return(xe=A.value)==null?void 0:xe.isFocusInsideContent(Te)},afterBlur(){G(!1),D()}}),W=Te=>{if(s.value)return Le();S(Te)};let k=!0;const V=Bt(new tc({enableAlpha:r.showAlpha,format:r.colorFormat||"",value:r.modelValue})),T=J(!1),P=J(!1),x=J(""),g=X(()=>!r.modelValue&&!P.value?"transparent":Z(V,r.showAlpha)),j=X(()=>!r.modelValue&&!P.value?"":V.value),L=X(()=>d.value?void 0:r.label||a("el.colorpicker.defaultLabel")),w=X(()=>d.value?o==null?void 0:o.labelId:void 0),R=X(()=>[l.b("picker"),l.is("disabled",s.value),l.bm("picker",i.value),l.is("focused",v.value)]);function Z(Te,xe){if(!(Te instanceof tc))throw new TypeError("color should be instance of _color Class");const{r:_,g:re,b:ye}=Te.toRgb();return xe?`rgba(${_}, ${re}, ${ye}, ${Te.get("alpha")/100})`:`rgb(${_}, ${re}, ${ye})`}function G(Te){T.value=Te}const U=xr(G,100,{leading:!0});function H(){s.value||G(!0)}function O(){U(!1),D()}function D(){at(()=>{r.modelValue?V.fromString(r.modelValue):(V.value="",at(()=>{P.value=!1}))})}function Y(){s.value||U(!T.value)}function Q(){V.fromString(x.value)}function ee(){const Te=V.value;n(Rt,Te),n("change",Te),r.validateEvent&&(o==null||o.validate("change").catch(xe=>void 0)),U(!1),at(()=>{const xe=new tc({enableAlpha:r.showAlpha,format:r.colorFormat||"",value:r.modelValue});V.compare(xe)||D()})}function oe(){U(!1),n(Rt,null),n("change",null),r.modelValue!==null&&r.validateEvent&&(o==null||o.validate("change").catch(Te=>void 0)),D()}function Ne(Te){if(!!T.value&&(O(),v.value)){const xe=new FocusEvent("focus",Te);y(xe)}}function pe(Te){Te.preventDefault(),Te.stopPropagation(),G(!1),D()}function me(Te){switch(Te.code){case ut.enter:case ut.space:Te.preventDefault(),Te.stopPropagation(),H(),m.value.focus();break;case ut.esc:pe(Te);break}}function ce(){h.value.focus()}function Le(){h.value.blur()}return At(()=>{r.modelValue&&(x.value=j.value)}),Ve(()=>r.modelValue,Te=>{Te?Te&&Te!==V.value&&(k=!1,V.fromString(Te)):P.value=!1}),Ve(()=>j.value,Te=>{x.value=Te,k&&n("activeChange",Te),k=!0}),Ve(()=>V.value,()=>{!r.modelValue&&!P.value&&(P.value=!0)}),Ve(()=>T.value,()=>{at(()=>{var Te,xe,_;(Te=f.value)==null||Te.update(),(xe=p.value)==null||xe.update(),(_=b.value)==null||_.update()})}),zt(GP,{currentColor:j}),t({color:V,show:H,hide:O,focus:ce,blur:Le}),(Te,xe)=>(K(),ie(c(Xr),{ref_key:"popper",ref:A,visible:T.value,"show-arrow":!1,"fallback-placements":["bottom","top","right","left"],offset:0,"gpu-acceleration":!1,"popper-class":[c(l).be("picker","panel"),c(l).b("dropdown"),Te.popperClass],"stop-popper-mouse-event":!1,effect:"light",trigger:"click",transition:`${c(l).namespace.value}-zoom-in-top`,persistent:"",onHide:xe[2]||(xe[2]=_=>G(!1))},{content:B(()=>[Vt((K(),F("div",{onKeydown:Dt(pe,["esc"])},[z("div",{class:q(c(l).be("dropdown","main-wrapper"))},[C(Hae,{ref_key:"hue",ref:f,class:"hue-slider",color:c(V),vertical:""},null,8,["color"]),C(tle,{ref_key:"sv",ref:p,color:c(V)},null,8,["color"])],2),Te.showAlpha?(K(),ie(Jae,{key:0,ref_key:"alpha",ref:b,color:c(V)},null,8,["color"])):ae("v-if",!0),Te.predefine?(K(),ie(Yae,{key:1,ref:"predefine",color:c(V),colors:Te.predefine},null,8,["color","colors"])):ae("v-if",!0),z("div",{class:q(c(l).be("dropdown","btns"))},[z("span",{class:q(c(l).be("dropdown","value"))},[C(c(vr),{ref_key:"inputRef",ref:m,modelValue:x.value,"onUpdate:modelValue":xe[0]||(xe[0]=_=>x.value=_),"validate-event":!1,size:"small",onKeyup:Dt(Q,["enter"]),onBlur:Q},null,8,["modelValue","onKeyup"])],2),C(c(sr),{class:q(c(l).be("dropdown","link-btn")),text:"",size:"small",onClick:oe},{default:B(()=>[Xt(je(c(a)("el.colorpicker.clear")),1)]),_:1},8,["class"]),C(c(sr),{plain:"",size:"small",class:q(c(l).be("dropdown","btn")),onClick:ee},{default:B(()=>[Xt(je(c(a)("el.colorpicker.confirm")),1)]),_:1},8,["class"])],2)],40,nle)),[[c(Po),Ne]])]),default:B(()=>[z("div",{id:c(u),ref_key:"triggerRef",ref:h,class:q(c(R)),role:"button","aria-label":c(L),"aria-labelledby":c(w),"aria-description":c(a)("el.colorpicker.description",{color:Te.modelValue||""}),"aria-disabled":c(s),tabindex:c(s)?-1:Te.tabindex,onKeydown:me,onFocus:W,onBlur:xe[1]||(xe[1]=(..._)=>c(y)&&c(y)(..._))},[c(s)?(K(),F("div",{key:0,class:q(c(l).be("picker","mask"))},null,2)):ae("v-if",!0),z("div",{class:q(c(l).be("picker","trigger")),onClick:Y},[z("span",{class:q([c(l).be("picker","color"),c(l).is("alpha",Te.showAlpha)])},[z("span",{class:q(c(l).be("picker","color-inner")),style:lt({backgroundColor:c(g)})},[Vt(C(c(it),{class:q([c(l).be("picker","icon"),c(l).is("icon-arrow-down")])},{default:B(()=>[C(c(Lo))]),_:1},8,["class"]),[[Ct,Te.modelValue||P.value]]),Vt(C(c(it),{class:q([c(l).be("picker","empty"),c(l).is("icon-close")])},{default:B(()=>[C(c(ma))]),_:1},8,["class"]),[[Ct,!Te.modelValue&&!P.value]])],6)],2)],2)],42,rle)]),_:1},8,["visible","popper-class","transition"]))}});var ole=Be(lle,[["__file","/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/color-picker.vue"]]);const ile=qt(ole),sle=$({name:"ElContainer"}),ule=$({...sle,props:{direction:{type:String}},setup(e){const t=e,n=er(),r=ze("container"),a=X(()=>t.direction==="vertical"?!0:t.direction==="horizontal"?!1:n&&n.default?n.default().some(o=>{const i=o.type.name;return i==="ElHeader"||i==="ElFooter"}):!1);return(l,o)=>(K(),F("section",{class:q([c(r).b(),c(r).is("vertical",c(a))])},[ue(l.$slots,"default")],2))}});var cle=Be(ule,[["__file","/home/runner/work/element-plus/element-plus/packages/components/container/src/container.vue"]]);const dle=$({name:"ElAside"}),fle=$({...dle,props:{width:{type:String,default:null}},setup(e){const t=e,n=ze("aside"),r=X(()=>t.width?n.cssVarBlock({width:t.width}):{});return(a,l)=>(K(),F("aside",{class:q(c(n).b()),style:lt(c(r))},[ue(a.$slots,"default")],6))}});var CP=Be(fle,[["__file","/home/runner/work/element-plus/element-plus/packages/components/container/src/aside.vue"]]);const ple=$({name:"ElFooter"}),vle=$({...ple,props:{height:{type:String,default:null}},setup(e){const t=e,n=ze("footer"),r=X(()=>t.height?n.cssVarBlock({height:t.height}):{});return(a,l)=>(K(),F("footer",{class:q(c(n).b()),style:lt(c(r))},[ue(a.$slots,"default")],6))}});var MP=Be(vle,[["__file","/home/runner/work/element-plus/element-plus/packages/components/container/src/footer.vue"]]);const ble=$({name:"ElHeader"}),hle=$({...ble,props:{height:{type:String,default:null}},setup(e){const t=e,n=ze("header"),r=X(()=>t.height?n.cssVarBlock({height:t.height}):{});return(a,l)=>(K(),F("header",{class:q(c(n).b()),style:lt(c(r))},[ue(a.$slots,"default")],6))}});var DP=Be(hle,[["__file","/home/runner/work/element-plus/element-plus/packages/components/container/src/header.vue"]]);const mle=$({name:"ElMain"}),Sle=$({...mle,setup(e){const t=ze("main");return(n,r)=>(K(),F("main",{class:q(c(t).b())},[ue(n.$slots,"default")],2))}});var EP=Be(Sle,[["__file","/home/runner/work/element-plus/element-plus/packages/components/container/src/main.vue"]]);const yle=qt(cle,{Aside:CP,Footer:MP,Header:DP,Main:EP}),Ale=Nn(CP),Wle=Nn(MP),kle=Nn(DP),Vle=Nn(EP);var IP={exports:{}};(function(e,t){(function(n,r){e.exports=r()})(Tn,function(){return function(n,r){var a=r.prototype,l=a.format;a.format=function(o){var i=this,s=this.$locale();if(!this.isValid())return l.bind(this)(o);var u=this.$utils(),d=(o||"YYYY-MM-DDTHH:mm:ssZ").replace(/\[([^\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,function(f){switch(f){case"Q":return Math.ceil((i.$M+1)/3);case"Do":return s.ordinal(i.$D);case"gggg":return i.weekYear();case"GGGG":return i.isoWeekYear();case"wo":return s.ordinal(i.week(),"W");case"w":case"ww":return u.s(i.week(),f==="w"?1:2,"0");case"W":case"WW":return u.s(i.isoWeek(),f==="W"?1:2,"0");case"k":case"kk":return u.s(String(i.$H===0?24:i.$H),f==="k"?1:2,"0");case"X":return Math.floor(i.$d.getTime()/1e3);case"x":return i.$d.getTime();case"z":return"["+i.offsetName()+"]";case"zzz":return"["+i.offsetName("long")+"]";default:return f}});return l.bind(this)(d)}}})})(IP);const Ple=IP.exports;var BP={exports:{}};(function(e,t){(function(n,r){e.exports=r()})(Tn,function(){var n="week",r="year";return function(a,l,o){var i=l.prototype;i.week=function(s){if(s===void 0&&(s=null),s!==null)return this.add(7*(s-this.week()),"day");var u=this.$locale().yearStart||1;if(this.month()===11&&this.date()>25){var d=o(this).startOf(r).add(1,r).date(u),f=o(this).endOf(n);if(d.isBefore(f))return 1}var p=o(this).startOf(r).date(u).startOf(n).subtract(1,"millisecond"),b=this.diff(p,n,!0);return b<0?o(this).startOf("week").week():Math.ceil(b)},i.weeks=function(s){return s===void 0&&(s=null),this.week(s)}}})})(BP);const Tle=BP.exports;var YP={exports:{}};(function(e,t){(function(n,r){e.exports=r()})(Tn,function(){return function(n,r){r.prototype.weekYear=function(){var a=this.month(),l=this.week(),o=this.year();return l===1&&a===11?o+1:a===0&&l>=52?o-1:o}}})})(YP);const Kle=YP.exports;var QP={exports:{}};(function(e,t){(function(n,r){e.exports=r()})(Tn,function(){return function(n,r,a){r.prototype.dayOfYear=function(l){var o=Math.round((a(this).startOf("day")-a(this).startOf("year"))/864e5)+1;return l==null?o:this.add(l-o,"day")}}})})(QP);const Nle=QP.exports;var _P={exports:{}};(function(e,t){(function(n,r){e.exports=r()})(Tn,function(){return function(n,r){r.prototype.isSameOrAfter=function(a,l){return this.isSame(a,l)||this.isAfter(a,l)}}})})(_P);const xle=_P.exports;var $P={exports:{}};(function(e,t){(function(n,r){e.exports=r()})(Tn,function(){return function(n,r){r.prototype.isSameOrBefore=function(a,l){return this.isSame(a,l)||this.isBefore(a,l)}}})})($P);const Xle=$P.exports,b2=Symbol(),gle=Ie({...f2,type:{type:ve(String),default:"date"}}),wle=["date","dates","year","month","week","range"],h2=Ie({disabledDate:{type:ve(Function)},date:{type:ve(Object),required:!0},minDate:{type:ve(Object)},maxDate:{type:ve(Object)},parsedValue:{type:ve([Object,Array])},rangeState:{type:ve(Object),default:()=>({endDate:null,selecting:!1})}}),eT=Ie({type:{type:ve(String),required:!0,values:gB},dateFormat:String,timeFormat:String}),tT=Ie({unlinkPanels:Boolean,parsedValue:{type:ve(Array)}}),nT=e=>({type:String,values:wle,default:e}),jle=Ie({...eT,parsedValue:{type:ve([Object,Array])},visible:{type:Boolean},format:{type:String,default:""}}),Lle=Ie({...h2,cellClassName:{type:ve(Function)},showWeekNumber:Boolean,selectionMode:nT("date")}),qle=["changerange","pick","select"],Sh=e=>{if(!et(e))return!1;const[t,n]=e;return Lt.isDayjs(t)&&Lt.isDayjs(n)&&t.isSameOrBefore(n)},rT=(e,{lang:t,unit:n,unlinkPanels:r})=>{let a;if(et(e)){let[l,o]=e.map(i=>Lt(i).locale(t));return r||(o=l.add(1,n)),[l,o]}else e?a=Lt(e):a=Lt();return a=a.locale(t),[a,a.add(1,n)]},Ule=(e,t,{columnIndexOffset:n,startDate:r,nextEndDate:a,now:l,unit:o,relativeDateGetter:i,setCellMetadata:s,setRowMetadata:u})=>{for(let d=0;d<e.row;d++){const f=t[d];for(let p=0;p<e.column;p++){let b=f[p+n];b||(b={row:d,column:p,type:"normal",inRange:!1,start:!1,end:!1});const A=d*e.column+p,h=i(A);b.dayjs=h,b.date=h.toDate(),b.timestamp=h.valueOf(),b.type="normal",b.inRange=!!(r&&h.isSameOrAfter(r,o)&&a&&h.isSameOrBefore(a,o))||!!(r&&h.isSameOrBefore(r,o)&&a&&h.isSameOrAfter(a,o)),r!=null&&r.isSameOrAfter(a)?(b.start=!!a&&h.isSame(a,o),b.end=r&&h.isSame(r,o)):(b.start=!!r&&h.isSame(r,o),b.end=!!a&&h.isSame(a,o)),h.isSame(l,o)&&(b.type="today"),s==null||s(b,{rowIndex:d,columnIndex:p}),f[p+n]=b}u==null||u(f)}},yh=(e="")=>["normal","today"].includes(e),Ole=(e,t)=>{const{lang:n}=It(),r=J(),a=J(),l=J(),o=J(),i=J([[],[],[],[],[],[]]);let s=!1;const u=e.date.$locale().weekStart||7,d=e.date.locale("en").localeData().weekdaysShort().map(O=>O.toLowerCase()),f=X(()=>u>3?7-u:-u),p=X(()=>{const O=e.date.startOf("month");return O.subtract(O.day()||7,"day")}),b=X(()=>d.concat(d).slice(u,u+7)),A=X(()=>dk(c(W)).some(O=>O.isCurrent)),h=X(()=>{const O=e.date.startOf("month"),D=O.day()||7,Y=O.daysInMonth(),Q=O.subtract(1,"month").daysInMonth();return{startOfMonthDay:D,dateCountOfMonth:Y,dateCountOfLastMonth:Q}}),m=X(()=>e.selectionMode==="dates"?Kl(e.parsedValue):[]),v=(O,{count:D,rowIndex:Y,columnIndex:Q})=>{const{startOfMonthDay:ee,dateCountOfMonth:oe,dateCountOfLastMonth:Ne}=c(h),pe=c(f);if(Y>=0&&Y<=1){const me=ee+pe<0?7+ee+pe:ee+pe;if(Q+Y*7>=me)return O.text=D,!0;O.text=Ne-(me-Q%7)+1+Y*7,O.type="prev-month"}else return D<=oe?O.text=D:(O.text=D-oe,O.type="next-month"),!0;return!1},S=(O,{columnIndex:D,rowIndex:Y},Q)=>{const{disabledDate:ee,cellClassName:oe}=e,Ne=c(m),pe=v(O,{count:Q,rowIndex:Y,columnIndex:D}),me=O.dayjs.toDate();return O.selected=Ne.find(ce=>ce.valueOf()===O.dayjs.valueOf()),O.isSelected=!!O.selected,O.isCurrent=V(O),O.disabled=ee==null?void 0:ee(me),O.customClass=oe==null?void 0:oe(me),pe},y=O=>{if(e.selectionMode==="week"){const[D,Y]=e.showWeekNumber?[1,7]:[0,6],Q=H(O[D+1]);O[D].inRange=Q,O[D].start=Q,O[Y].inRange=Q,O[Y].end=Q}},W=X(()=>{const{minDate:O,maxDate:D,rangeState:Y,showWeekNumber:Q}=e,ee=c(f),oe=c(i),Ne="day";let pe=1;if(Q)for(let me=0;me<6;me++)oe[me][0]||(oe[me][0]={type:"week",text:c(p).add(me*7+1,Ne).week()});return Ule({row:6,column:7},oe,{startDate:O,columnIndexOffset:Q?1:0,nextEndDate:Y.endDate||D||Y.selecting&&O||null,now:Lt().locale(c(n)).startOf(Ne),unit:Ne,relativeDateGetter:me=>c(p).add(me-ee,Ne),setCellMetadata:(...me)=>{S(...me,pe)&&(pe+=1)},setRowMetadata:y}),oe});Ve(()=>e.date,async()=>{var O;(O=c(r))!=null&&O.contains(document.activeElement)&&(await at(),await k())});const k=async()=>{var O;return(O=c(a))==null?void 0:O.focus()},V=O=>e.selectionMode==="date"&&yh(O.type)&&T(O,e.parsedValue),T=(O,D)=>D?Lt(D).locale(c(n)).isSame(e.date.date(Number(O.text)),"day"):!1,P=(O,D)=>{const Y=O*7+(D-(e.showWeekNumber?1:0))-c(f);return c(p).add(Y,"day")},x=O=>{var D;if(!e.rangeState.selecting)return;let Y=O.target;if(Y.tagName==="SPAN"&&(Y=(D=Y.parentNode)==null?void 0:D.parentNode),Y.tagName==="DIV"&&(Y=Y.parentNode),Y.tagName!=="TD")return;const Q=Y.parentNode.rowIndex-1,ee=Y.cellIndex;c(W)[Q][ee].disabled||(Q!==c(l)||ee!==c(o))&&(l.value=Q,o.value=ee,t("changerange",{selecting:!0,endDate:P(Q,ee)}))},g=O=>!c(A)&&(O==null?void 0:O.text)===1&&O.type==="normal"||O.isCurrent,j=O=>{s||c(A)||e.selectionMode!=="date"||U(O,!0)},L=O=>{!O.target.closest("td")||(s=!0)},w=O=>{!O.target.closest("td")||(s=!1)},R=O=>{!e.rangeState.selecting||!e.minDate?(t("pick",{minDate:O,maxDate:null}),t("select",!0)):(O>=e.minDate?t("pick",{minDate:e.minDate,maxDate:O}):t("pick",{minDate:O,maxDate:e.minDate}),t("select",!1))},Z=O=>{const D=O.week(),Y=`${O.year()}w${D}`;t("pick",{year:O.year(),week:D,value:Y,date:O.startOf("week")})},G=(O,D)=>{const Y=D?Kl(e.parsedValue).filter(Q=>(Q==null?void 0:Q.valueOf())!==O.valueOf()):Kl(e.parsedValue).concat([O]);t("pick",Y)},U=(O,D=!1)=>{const Y=O.target.closest("td");if(!Y)return;const Q=Y.parentNode.rowIndex-1,ee=Y.cellIndex,oe=c(W)[Q][ee];if(oe.disabled||oe.type==="week")return;const Ne=P(Q,ee);switch(e.selectionMode){case"range":{R(Ne);break}case"date":{t("pick",Ne,D);break}case"week":{Z(Ne);break}case"dates":{G(Ne,!!oe.selected);break}}},H=O=>{if(e.selectionMode!=="week")return!1;let D=e.date.startOf("day");if(O.type==="prev-month"&&(D=D.subtract(1,"month")),O.type==="next-month"&&(D=D.add(1,"month")),D=D.date(Number.parseInt(O.text,10)),e.parsedValue&&!Array.isArray(e.parsedValue)){const Y=(e.parsedValue.day()-u+7)%7-1;return e.parsedValue.subtract(Y,"day").isSame(D,"day")}return!1};return{WEEKS:b,rows:W,tbodyRef:r,currentCellRef:a,focus:k,isCurrent:V,isWeekActive:H,isSelectedCell:g,handlePickDate:U,handleMouseUp:w,handleMouseDown:L,handleMouseMove:x,handleFocus:j}},Rle=(e,{isCurrent:t,isWeekActive:n})=>{const r=ze("date-table"),{t:a}=It(),l=X(()=>[r.b(),{"is-week-mode":e.selectionMode==="week"}]),o=X(()=>a("el.datepicker.dateTablePrompt")),i=X(()=>a("el.datepicker.week"));return{tableKls:l,tableLabel:o,weekLabel:i,getCellClasses:d=>{const f=[];return yh(d.type)&&!d.disabled?(f.push("available"),d.type==="today"&&f.push("today")):f.push(d.type),t(d)&&f.push("current"),d.inRange&&(yh(d.type)||e.selectionMode==="week")&&(f.push("in-range"),d.start&&f.push("start-date"),d.end&&f.push("end-date")),d.disabled&&f.push("disabled"),d.selected&&f.push("selected"),d.customClass&&f.push(d.customClass),f.join(" ")},getRowKls:d=>[r.e("row"),{current:n(d)}],t:a}},Jle=Ie({cell:{type:ve(Object)}});var Fle=$({name:"ElDatePickerCell",props:Jle,setup(e){const t=ze("date-table-cell"),{slots:n}=tt(b2);return()=>{const{cell:r}=e;if(n.default){const a=n.default(r).filter(l=>l.patchFlag!==-2&&l.type.toString()!=="Symbol(Comment)"&&l.type.toString()!=="Symbol(v-cmt)");if(a.length)return a}return C("div",{class:t.b()},[C("span",{class:t.e("text")},[r==null?void 0:r.text])])}}});const zle=["aria-label"],Hle={key:0,scope:"col"},Zle=["aria-label"],Gle=["aria-current","aria-selected","tabindex"],Cle=$({__name:"basic-date-table",props:Lle,emits:qle,setup(e,{expose:t,emit:n}){const r=e,{WEEKS:a,rows:l,tbodyRef:o,currentCellRef:i,focus:s,isCurrent:u,isWeekActive:d,isSelectedCell:f,handlePickDate:p,handleMouseUp:b,handleMouseDown:A,handleMouseMove:h,handleFocus:m}=Ole(r,n),{tableLabel:v,tableKls:S,weekLabel:y,getCellClasses:W,getRowKls:k,t:V}=Rle(r,{isCurrent:u,isWeekActive:d});return t({focus:s}),(T,P)=>(K(),F("table",{"aria-label":c(v),class:q(c(S)),cellspacing:"0",cellpadding:"0",role:"grid",onClick:P[1]||(P[1]=(...x)=>c(p)&&c(p)(...x)),onMousemove:P[2]||(P[2]=(...x)=>c(h)&&c(h)(...x)),onMousedown:P[3]||(P[3]=pt((...x)=>c(A)&&c(A)(...x),["prevent"])),onMouseup:P[4]||(P[4]=(...x)=>c(b)&&c(b)(...x))},[z("tbody",{ref_key:"tbodyRef",ref:o},[z("tr",null,[T.showWeekNumber?(K(),F("th",Hle,je(c(y)),1)):ae("v-if",!0),(K(!0),F(Qe,null,Nt(c(a),(x,g)=>(K(),F("th",{key:g,"aria-label":c(V)("el.datepicker.weeksFull."+x),scope:"col"},je(c(V)("el.datepicker.weeks."+x)),9,Zle))),128))]),(K(!0),F(Qe,null,Nt(c(l),(x,g)=>(K(),F("tr",{key:g,class:q(c(k)(x[1]))},[(K(!0),F(Qe,null,Nt(x,(j,L)=>(K(),F("td",{key:`${g}.${L}`,ref_for:!0,ref:w=>c(f)(j)&&(i.value=w),class:q(c(W)(j)),"aria-current":j.isCurrent?"date":void 0,"aria-selected":j.isCurrent,tabindex:c(f)(j)?0:-1,onFocus:P[0]||(P[0]=(...w)=>c(m)&&c(m)(...w))},[C(c(Fle),{cell:j},null,8,["cell"])],42,Gle))),128))],2))),128))],512)],42,zle))}});var Ah=Be(Cle,[["__file","/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/basic-date-table.vue"]]);const Mle=Ie({...h2,selectionMode:nT("month")}),Dle=["aria-label"],Ele=["aria-selected","aria-label","tabindex","onKeydown"],Ile={class:"cell"},Ble=$({__name:"basic-month-table",props:Mle,emits:["changerange","pick","select"],setup(e,{expose:t,emit:n}){const r=e,a=(W,k,V)=>{const T=Lt().locale(V).startOf("month").month(k).year(W),P=T.daysInMonth();return po(P).map(x=>T.add(x,"day").toDate())},l=ze("month-table"),{t:o,lang:i}=It(),s=J(),u=J(),d=J(r.date.locale("en").localeData().monthsShort().map(W=>W.toLowerCase())),f=J([[],[],[]]),p=J(),b=J(),A=X(()=>{var W,k;const V=f.value,T=Lt().locale(i.value).startOf("month");for(let P=0;P<3;P++){const x=V[P];for(let g=0;g<4;g++){const j=x[g]||(x[g]={row:P,column:g,type:"normal",inRange:!1,start:!1,end:!1,text:-1,disabled:!1});j.type="normal";const L=P*4+g,w=r.date.startOf("year").month(L),R=r.rangeState.endDate||r.maxDate||r.rangeState.selecting&&r.minDate||null;j.inRange=!!(r.minDate&&w.isSameOrAfter(r.minDate,"month")&&R&&w.isSameOrBefore(R,"month"))||!!(r.minDate&&w.isSameOrBefore(r.minDate,"month")&&R&&w.isSameOrAfter(R,"month")),(W=r.minDate)!=null&&W.isSameOrAfter(R)?(j.start=!!(R&&w.isSame(R,"month")),j.end=r.minDate&&w.isSame(r.minDate,"month")):(j.start=!!(r.minDate&&w.isSame(r.minDate,"month")),j.end=!!(R&&w.isSame(R,"month"))),T.isSame(w)&&(j.type="today"),j.text=L,j.disabled=((k=r.disabledDate)==null?void 0:k.call(r,w.toDate()))||!1}}return V}),h=()=>{var W;(W=u.value)==null||W.focus()},m=W=>{const k={},V=r.date.year(),T=new Date,P=W.text;return k.disabled=r.disabledDate?a(V,P,i.value).every(r.disabledDate):!1,k.current=Kl(r.parsedValue).findIndex(x=>Lt.isDayjs(x)&&x.year()===V&&x.month()===P)>=0,k.today=T.getFullYear()===V&&T.getMonth()===P,W.inRange&&(k["in-range"]=!0,W.start&&(k["start-date"]=!0),W.end&&(k["end-date"]=!0)),k},v=W=>{const k=r.date.year(),V=W.text;return Kl(r.date).findIndex(T=>T.year()===k&&T.month()===V)>=0},S=W=>{var k;if(!r.rangeState.selecting)return;let V=W.target;if(V.tagName==="A"&&(V=(k=V.parentNode)==null?void 0:k.parentNode),V.tagName==="DIV"&&(V=V.parentNode),V.tagName!=="TD")return;const T=V.parentNode.rowIndex,P=V.cellIndex;A.value[T][P].disabled||(T!==p.value||P!==b.value)&&(p.value=T,b.value=P,n("changerange",{selecting:!0,endDate:r.date.startOf("year").month(T*4+P)}))},y=W=>{var k;const V=(k=W.target)==null?void 0:k.closest("td");if((V==null?void 0:V.tagName)!=="TD"||La(V,"disabled"))return;const T=V.cellIndex,x=V.parentNode.rowIndex*4+T,g=r.date.startOf("year").month(x);r.selectionMode==="range"?r.rangeState.selecting?(r.minDate&&g>=r.minDate?n("pick",{minDate:r.minDate,maxDate:g}):n("pick",{minDate:g,maxDate:r.minDate}),n("select",!1)):(n("pick",{minDate:g,maxDate:null}),n("select",!0)):n("pick",x)};return Ve(()=>r.date,async()=>{var W,k;(W=s.value)!=null&&W.contains(document.activeElement)&&(await at(),(k=u.value)==null||k.focus())}),t({focus:h}),(W,k)=>(K(),F("table",{role:"grid","aria-label":c(o)("el.datepicker.monthTablePrompt"),class:q(c(l).b()),onClick:y,onMousemove:S},[z("tbody",{ref_key:"tbodyRef",ref:s},[(K(!0),F(Qe,null,Nt(c(A),(V,T)=>(K(),F("tr",{key:T},[(K(!0),F(Qe,null,Nt(V,(P,x)=>(K(),F("td",{key:x,ref_for:!0,ref:g=>v(P)&&(u.value=g),class:q(m(P)),"aria-selected":`${v(P)}`,"aria-label":c(o)(`el.datepicker.month${+P.text+1}`),tabindex:v(P)?0:-1,onKeydown:[Dt(pt(y,["prevent","stop"]),["space"]),Dt(pt(y,["prevent","stop"]),["enter"])]},[z("div",null,[z("span",Ile,je(c(o)("el.datepicker.months."+d.value[P.text])),1)])],42,Ele))),128))]))),128))],512)],42,Dle))}});var Wh=Be(Ble,[["__file","/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/basic-month-table.vue"]]);const{date:Yle,disabledDate:Qle,parsedValue:_le}=h2,$le=Ie({date:Yle,disabledDate:Qle,parsedValue:_le}),eoe=["aria-label"],toe=["aria-selected","tabindex","onKeydown"],noe={class:"cell"},roe={key:1},aoe=$({__name:"basic-year-table",props:$le,emits:["pick"],setup(e,{expose:t,emit:n}){const r=e,a=(h,m)=>{const v=Lt(String(h)).locale(m).startOf("year"),y=v.endOf("year").dayOfYear();return po(y).map(W=>v.add(W,"day").toDate())},l=ze("year-table"),{t:o,lang:i}=It(),s=J(),u=J(),d=X(()=>Math.floor(r.date.year()/10)*10),f=()=>{var h;(h=u.value)==null||h.focus()},p=h=>{const m={},v=Lt().locale(i.value);return m.disabled=r.disabledDate?a(h,i.value).every(r.disabledDate):!1,m.current=Kl(r.parsedValue).findIndex(S=>S.year()===h)>=0,m.today=v.year()===h,m},b=h=>h===d.value&&r.date.year()<d.value&&r.date.year()>d.value+9||Kl(r.date).findIndex(m=>m.year()===h)>=0,A=h=>{const v=h.target.closest("td");if(v&&v.textContent){if(La(v,"disabled"))return;const S=v.textContent||v.innerText;n("pick",Number(S))}};return Ve(()=>r.date,async()=>{var h,m;(h=s.value)!=null&&h.contains(document.activeElement)&&(await at(),(m=u.value)==null||m.focus())}),t({focus:f}),(h,m)=>(K(),F("table",{role:"grid","aria-label":c(o)("el.datepicker.yearTablePrompt"),class:q(c(l).b()),onClick:A},[z("tbody",{ref_key:"tbodyRef",ref:s},[(K(),F(Qe,null,Nt(3,(v,S)=>z("tr",{key:S},[(K(),F(Qe,null,Nt(4,(y,W)=>(K(),F(Qe,{key:S+"_"+W},[S*4+W<10?(K(),F("td",{key:0,ref_for:!0,ref:k=>b(c(d)+S*4+W)&&(u.value=k),class:q(["available",p(c(d)+S*4+W)]),"aria-selected":`${b(c(d)+S*4+W)}`,tabindex:b(c(d)+S*4+W)?0:-1,onKeydown:[Dt(pt(A,["prevent","stop"]),["space"]),Dt(pt(A,["prevent","stop"]),["enter"])]},[z("span",noe,je(c(d)+S*4+W),1)],42,toe)):(K(),F("td",roe))],64))),64))])),64))],512)],10,eoe))}});var loe=Be(aoe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/basic-year-table.vue"]]);const ooe=["onClick"],ioe=["aria-label"],soe=["aria-label"],uoe=["aria-label"],coe=["aria-label"],doe=$({__name:"panel-date-pick",props:jle,emits:["pick","set-picker-option","panel-change"],setup(e,{emit:t}){const n=e,r=(ke,be,fe)=>!0,a=ze("picker-panel"),l=ze("date-picker"),o=Xo(),i=er(),{t:s,lang:u}=It(),d=tt("EP_PICKER_BASE"),f=tt(Bv),{shortcuts:p,disabledDate:b,cellClassName:A,defaultTime:h}=d.props,m=bn(d.props,"defaultValue"),v=J(),S=J(Lt().locale(u.value)),y=J(!1);let W=!1;const k=X(()=>Lt(h).locale(u.value)),V=X(()=>S.value.month()),T=X(()=>S.value.year()),P=J([]),x=J(null),g=J(null),j=ke=>P.value.length>0?r(ke,P.value,n.format||"HH:mm:ss"):!0,L=ke=>h&&!ye.value&&!y.value&&!W?k.value.year(ke.year()).month(ke.month()).date(ke.date()):pe.value?ke.millisecond(0):ke.startOf("day"),w=(ke,...be)=>{if(!ke)t("pick",ke,...be);else if(et(ke)){const fe=ke.map(L);t("pick",fe,...be)}else t("pick",L(ke),...be);x.value=null,g.value=null,y.value=!1,W=!1},R=(ke,be)=>{if(D.value==="date"){ke=ke;let fe=n.parsedValue?n.parsedValue.year(ke.year()).month(ke.month()).date(ke.date()):ke;j(fe)||(fe=P.value[0][0].year(ke.year()).month(ke.month()).date(ke.date())),S.value=fe,w(fe,pe.value||be)}else D.value==="week"?w(ke.date):D.value==="dates"&&w(ke,!0)},Z=ke=>{const be=ke?"add":"subtract";S.value=S.value[be](1,"month"),ot("month")},G=ke=>{const be=S.value,fe=ke?"add":"subtract";S.value=U.value==="year"?be[fe](10,"year"):be[fe](1,"year"),ot("year")},U=J("date"),H=X(()=>{const ke=s("el.datepicker.year");if(U.value==="year"){const be=Math.floor(T.value/10)*10;return ke?`${be} ${ke} - ${be+9} ${ke}`:`${be} - ${be+9}`}return`${T.value} ${ke}`}),O=ke=>{const be=ht(ke.value)?ke.value():ke.value;if(be){W=!0,w(Lt(be).locale(u.value));return}ke.onClick&&ke.onClick({attrs:o,slots:i,emit:t})},D=X(()=>{const{type:ke}=n;return["week","month","year","dates"].includes(ke)?ke:"date"}),Y=X(()=>D.value==="date"?U.value:D.value),Q=X(()=>!!p.length),ee=async ke=>{S.value=S.value.startOf("month").month(ke),D.value==="month"?w(S.value,!1):(U.value="date",["month","year","date","week"].includes(D.value)&&(w(S.value,!0),await at(),dt())),ot("month")},oe=async ke=>{D.value==="year"?(S.value=S.value.startOf("year").year(ke),w(S.value,!1)):(S.value=S.value.year(ke),U.value="month",["month","year","date","week"].includes(D.value)&&(w(S.value,!0),await at(),dt())),ot("year")},Ne=async ke=>{U.value=ke,await at(),dt()},pe=X(()=>n.type==="datetime"||n.type==="datetimerange"),me=X(()=>pe.value||D.value==="dates"),ce=X(()=>b?n.parsedValue?et(n.parsedValue)?b(n.parsedValue[0].toDate()):b(n.parsedValue.toDate()):!0:!1),Le=()=>{if(D.value==="dates")w(n.parsedValue);else{let ke=n.parsedValue;if(!ke){const be=Lt(h).locale(u.value),fe=$e();ke=be.year(fe.year()).month(fe.month()).date(fe.date())}S.value=ke,w(ke)}},Te=X(()=>b?b(Lt().locale(u.value).toDate()):!1),xe=()=>{const be=Lt().locale(u.value).toDate();y.value=!0,(!b||!b(be))&&j(be)&&(S.value=Lt().locale(u.value),w(S.value))},_=X(()=>n.timeFormat||oP(n.format)),re=X(()=>n.dateFormat||lP(n.format)),ye=X(()=>{if(g.value)return g.value;if(!(!n.parsedValue&&!m.value))return(n.parsedValue||S.value).format(_.value)}),ge=X(()=>{if(x.value)return x.value;if(!(!n.parsedValue&&!m.value))return(n.parsedValue||S.value).format(re.value)}),Fe=J(!1),Ae=()=>{Fe.value=!0},Ze=()=>{Fe.value=!1},Ue=ke=>({hour:ke.hour(),minute:ke.minute(),second:ke.second(),year:ke.year(),month:ke.month(),date:ke.date()}),Pe=(ke,be,fe)=>{const{hour:Xe,minute:ne,second:M}=Ue(ke),Oe=n.parsedValue?n.parsedValue.hour(Xe).minute(ne).second(M):ke;S.value=Oe,w(S.value,!0),fe||(Fe.value=be)},qe=ke=>{const be=Lt(ke,_.value).locale(u.value);if(be.isValid()&&j(be)){const{year:fe,month:Xe,date:ne}=Ue(S.value);S.value=be.year(fe).month(Xe).date(ne),g.value=null,Fe.value=!1,w(S.value,!0)}},De=ke=>{const be=Lt(ke,re.value).locale(u.value);if(be.isValid()){if(b&&b(be.toDate()))return;const{hour:fe,minute:Xe,second:ne}=Ue(S.value);S.value=be.hour(fe).minute(Xe).second(ne),x.value=null,w(S.value,!0)}},Me=ke=>Lt.isDayjs(ke)&&ke.isValid()&&(b?!b(ke.toDate()):!0),_e=ke=>D.value==="dates"?ke.map(be=>be.format(n.format)):ke.format(n.format),Re=ke=>Lt(ke,n.format).locale(u.value),$e=()=>{const ke=Lt(m.value).locale(u.value);if(!m.value){const be=k.value;return Lt().hour(be.hour()).minute(be.minute()).second(be.second()).locale(u.value)}return ke},dt=async()=>{var ke;["week","month","year","date"].includes(D.value)&&((ke=v.value)==null||ke.focus(),D.value==="week"&&gt(ut.down))},yt=ke=>{const{code:be}=ke;[ut.up,ut.down,ut.left,ut.right,ut.home,ut.end,ut.pageUp,ut.pageDown].includes(be)&&(gt(be),ke.stopPropagation(),ke.preventDefault()),[ut.enter,ut.space,ut.numpadEnter].includes(be)&&x.value===null&&g.value===null&&(ke.preventDefault(),w(S.value,!1))},gt=ke=>{var be;const{up:fe,down:Xe,left:ne,right:M,home:Oe,end:Ee,pageUp:ft,pageDown:Se}=ut,Ye={year:{[fe]:-4,[Xe]:4,[ne]:-1,[M]:1,offset:(le,He)=>le.setFullYear(le.getFullYear()+He)},month:{[fe]:-4,[Xe]:4,[ne]:-1,[M]:1,offset:(le,He)=>le.setMonth(le.getMonth()+He)},week:{[fe]:-1,[Xe]:1,[ne]:-1,[M]:1,offset:(le,He)=>le.setDate(le.getDate()+He*7)},date:{[fe]:-7,[Xe]:7,[ne]:-1,[M]:1,[Oe]:le=>-le.getDay(),[Ee]:le=>-le.getDay()+6,[ft]:le=>-new Date(le.getFullYear(),le.getMonth(),0).getDate(),[Se]:le=>new Date(le.getFullYear(),le.getMonth()+1,0).getDate(),offset:(le,He)=>le.setDate(le.getDate()+He)}},E=S.value.toDate();for(;Math.abs(S.value.diff(E,"year",!0))<1;){const le=Ye[Y.value];if(!le)return;if(le.offset(E,ht(le[ke])?le[ke](E):(be=le[ke])!=null?be:0),b&&b(E))break;const He=Lt(E).locale(u.value);S.value=He,t("pick",He,!0);break}},ot=ke=>{t("panel-change",S.value.toDate(),ke,U.value)};return Ve(()=>D.value,ke=>{if(["month","year"].includes(ke)){U.value=ke;return}U.value="date"},{immediate:!0}),Ve(()=>U.value,()=>{f==null||f.updatePopper()}),Ve(()=>m.value,ke=>{ke&&(S.value=$e())},{immediate:!0}),Ve(()=>n.parsedValue,ke=>{if(ke){if(D.value==="dates"||Array.isArray(ke))return;S.value=ke}else S.value=$e()},{immediate:!0}),t("set-picker-option",["isValidValue",Me]),t("set-picker-option",["formatToString",_e]),t("set-picker-option",["parseUserInput",Re]),t("set-picker-option",["handleFocusPicker",dt]),(ke,be)=>(K(),F("div",{class:q([c(a).b(),c(l).b(),{"has-sidebar":ke.$slots.sidebar||c(Q),"has-time":c(pe)}])},[z("div",{class:q(c(a).e("body-wrapper"))},[ue(ke.$slots,"sidebar",{class:q(c(a).e("sidebar"))}),c(Q)?(K(),F("div",{key:0,class:q(c(a).e("sidebar"))},[(K(!0),F(Qe,null,Nt(c(p),(fe,Xe)=>(K(),F("button",{key:Xe,type:"button",class:q(c(a).e("shortcut")),onClick:ne=>O(fe)},je(fe.text),11,ooe))),128))],2)):ae("v-if",!0),z("div",{class:q(c(a).e("body"))},[c(pe)?(K(),F("div",{key:0,class:q(c(l).e("time-header"))},[z("span",{class:q(c(l).e("editor-wrap"))},[C(c(vr),{placeholder:c(s)("el.datepicker.selectDate"),"model-value":c(ge),size:"small","validate-event":!1,onInput:be[0]||(be[0]=fe=>x.value=fe),onChange:De},null,8,["placeholder","model-value"])],2),Vt((K(),F("span",{class:q(c(l).e("editor-wrap"))},[C(c(vr),{placeholder:c(s)("el.datepicker.selectTime"),"model-value":c(ye),size:"small","validate-event":!1,onFocus:Ae,onInput:be[1]||(be[1]=fe=>g.value=fe),onChange:qe},null,8,["placeholder","model-value"]),C(c(wp),{visible:Fe.value,format:c(_),"parsed-value":S.value,onPick:Pe},null,8,["visible","format","parsed-value"])],2)),[[c(Po),Ze]])],2)):ae("v-if",!0),Vt(z("div",{class:q([c(l).e("header"),(U.value==="year"||U.value==="month")&&c(l).e("header--bordered")])},[z("span",{class:q(c(l).e("prev-btn"))},[z("button",{type:"button","aria-label":c(s)("el.datepicker.prevYear"),class:q(["d-arrow-left",c(a).e("icon-btn")]),onClick:be[2]||(be[2]=fe=>G(!1))},[C(c(it),null,{default:B(()=>[C(c(zs))]),_:1})],10,ioe),Vt(z("button",{type:"button","aria-label":c(s)("el.datepicker.prevMonth"),class:q([c(a).e("icon-btn"),"arrow-left"]),onClick:be[3]||(be[3]=fe=>Z(!1))},[C(c(it),null,{default:B(()=>[C(c(Wo))]),_:1})],10,soe),[[Ct,U.value==="date"]])],2),z("span",{role:"button",class:q(c(l).e("header-label")),"aria-live":"polite",tabindex:"0",onKeydown:be[4]||(be[4]=Dt(fe=>Ne("year"),["enter"])),onClick:be[5]||(be[5]=fe=>Ne("year"))},je(c(H)),35),Vt(z("span",{role:"button","aria-live":"polite",tabindex:"0",class:q([c(l).e("header-label"),{active:U.value==="month"}]),onKeydown:be[6]||(be[6]=Dt(fe=>Ne("month"),["enter"])),onClick:be[7]||(be[7]=fe=>Ne("month"))},je(c(s)(`el.datepicker.month${c(V)+1}`)),35),[[Ct,U.value==="date"]]),z("span",{class:q(c(l).e("next-btn"))},[Vt(z("button",{type:"button","aria-label":c(s)("el.datepicker.nextMonth"),class:q([c(a).e("icon-btn"),"arrow-right"]),onClick:be[8]||(be[8]=fe=>Z(!0))},[C(c(it),null,{default:B(()=>[C(c(Vr))]),_:1})],10,uoe),[[Ct,U.value==="date"]]),z("button",{type:"button","aria-label":c(s)("el.datepicker.nextYear"),class:q([c(a).e("icon-btn"),"d-arrow-right"]),onClick:be[9]||(be[9]=fe=>G(!0))},[C(c(it),null,{default:B(()=>[C(c(Hs))]),_:1})],10,coe)],2)],2),[[Ct,U.value!=="time"]]),z("div",{class:q(c(a).e("content")),onKeydown:yt},[U.value==="date"?(K(),ie(Ah,{key:0,ref_key:"currentViewRef",ref:v,"selection-mode":c(D),date:S.value,"parsed-value":ke.parsedValue,"disabled-date":c(b),"cell-class-name":c(A),onPick:R},null,8,["selection-mode","date","parsed-value","disabled-date","cell-class-name"])):ae("v-if",!0),U.value==="year"?(K(),ie(loe,{key:1,ref_key:"currentViewRef",ref:v,date:S.value,"disabled-date":c(b),"parsed-value":ke.parsedValue,onPick:oe},null,8,["date","disabled-date","parsed-value"])):ae("v-if",!0),U.value==="month"?(K(),ie(Wh,{key:2,ref_key:"currentViewRef",ref:v,date:S.value,"parsed-value":ke.parsedValue,"disabled-date":c(b),onPick:ee},null,8,["date","parsed-value","disabled-date"])):ae("v-if",!0)],34)],2)],2),Vt(z("div",{class:q(c(a).e("footer"))},[Vt(C(c(sr),{text:"",size:"small",class:q(c(a).e("link-btn")),disabled:c(Te),onClick:xe},{default:B(()=>[Xt(je(c(s)("el.datepicker.now")),1)]),_:1},8,["class","disabled"]),[[Ct,c(D)!=="dates"]]),C(c(sr),{plain:"",size:"small",class:q(c(a).e("link-btn")),disabled:c(ce),onClick:Le},{default:B(()=>[Xt(je(c(s)("el.datepicker.confirm")),1)]),_:1},8,["class","disabled"])],2),[[Ct,c(me)&&U.value==="date"]])],2))}});var foe=Be(doe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/panel-date-pick.vue"]]);const poe=Ie({...eT,...tT}),voe=e=>{const{emit:t}=Tt(),n=Xo(),r=er();return l=>{const o=ht(l.value)?l.value():l.value;if(o){t("pick",[Lt(o[0]).locale(e.value),Lt(o[1]).locale(e.value)]);return}l.onClick&&l.onClick({attrs:n,slots:r,emit:t})}},aT=(e,{defaultValue:t,leftDate:n,rightDate:r,unit:a,onParsedValueChanged:l})=>{const{emit:o}=Tt(),{pickerNs:i}=tt(b2),s=ze("date-range-picker"),{t:u,lang:d}=It(),f=voe(d),p=J(),b=J(),A=J({endDate:null,selecting:!1}),h=y=>{A.value=y},m=(y=!1)=>{const W=c(p),k=c(b);Sh([W,k])&&o("pick",[W,k],y)},v=y=>{A.value.selecting=y,y||(A.value.endDate=null)},S=()=>{const[y,W]=rT(c(t),{lang:c(d),unit:a,unlinkPanels:e.unlinkPanels});p.value=void 0,b.value=void 0,n.value=y,r.value=W};return Ve(t,y=>{y&&S()},{immediate:!0}),Ve(()=>e.parsedValue,y=>{if(et(y)&&y.length===2){const[W,k]=y;p.value=W,n.value=W,b.value=k,l(c(p),c(b))}else S()},{immediate:!0}),{minDate:p,maxDate:b,rangeState:A,lang:d,ppNs:i,drpNs:s,handleChangeRange:h,handleRangeConfirm:m,handleShortcutClick:f,onSelect:v,t:u}},boe=["onClick"],hoe=["aria-label"],moe=["aria-label"],Soe=["disabled","aria-label"],yoe=["disabled","aria-label"],Aoe=["disabled","aria-label"],Woe=["disabled","aria-label"],koe=["aria-label"],Voe=["aria-label"],af="month",Poe=$({__name:"panel-date-range",props:poe,emits:["pick","set-picker-option","calendar-change","panel-change"],setup(e,{emit:t}){const n=e,r=tt("EP_PICKER_BASE"),{disabledDate:a,cellClassName:l,format:o,defaultTime:i,clearable:s}=r.props,u=bn(r.props,"shortcuts"),d=bn(r.props,"defaultValue"),{lang:f}=It(),p=J(Lt().locale(f.value)),b=J(Lt().locale(f.value).add(1,af)),{minDate:A,maxDate:h,rangeState:m,ppNs:v,drpNs:S,handleChangeRange:y,handleRangeConfirm:W,handleShortcutClick:k,onSelect:V,t:T}=aT(n,{defaultValue:d,leftDate:p,rightDate:b,unit:af,onParsedValueChanged:be}),P=J({min:null,max:null}),x=J({min:null,max:null}),g=X(()=>`${p.value.year()} ${T("el.datepicker.year")} ${T(`el.datepicker.month${p.value.month()+1}`)}`),j=X(()=>`${b.value.year()} ${T("el.datepicker.year")} ${T(`el.datepicker.month${b.value.month()+1}`)}`),L=X(()=>p.value.year()),w=X(()=>p.value.month()),R=X(()=>b.value.year()),Z=X(()=>b.value.month()),G=X(()=>!!u.value.length),U=X(()=>P.value.min!==null?P.value.min:A.value?A.value.format(Q.value):""),H=X(()=>P.value.max!==null?P.value.max:h.value||A.value?(h.value||A.value).format(Q.value):""),O=X(()=>x.value.min!==null?x.value.min:A.value?A.value.format(Y.value):""),D=X(()=>x.value.max!==null?x.value.max:h.value||A.value?(h.value||A.value).format(Y.value):""),Y=X(()=>n.timeFormat||oP(o)),Q=X(()=>n.dateFormat||lP(o)),ee=fe=>Sh(fe)&&(a?!a(fe[0].toDate())&&!a(fe[1].toDate()):!0),oe=()=>{p.value=p.value.subtract(1,"year"),n.unlinkPanels||(b.value=p.value.add(1,"month")),_("year")},Ne=()=>{p.value=p.value.subtract(1,"month"),n.unlinkPanels||(b.value=p.value.add(1,"month")),_("month")},pe=()=>{n.unlinkPanels?b.value=b.value.add(1,"year"):(p.value=p.value.add(1,"year"),b.value=p.value.add(1,"month")),_("year")},me=()=>{n.unlinkPanels?b.value=b.value.add(1,"month"):(p.value=p.value.add(1,"month"),b.value=p.value.add(1,"month")),_("month")},ce=()=>{p.value=p.value.add(1,"year"),_("year")},Le=()=>{p.value=p.value.add(1,"month"),_("month")},Te=()=>{b.value=b.value.subtract(1,"year"),_("year")},xe=()=>{b.value=b.value.subtract(1,"month"),_("month")},_=fe=>{t("panel-change",[p.value.toDate(),b.value.toDate()],fe)},re=X(()=>{const fe=(w.value+1)%12,Xe=w.value+1>=12?1:0;return n.unlinkPanels&&new Date(L.value+Xe,fe)<new Date(R.value,Z.value)}),ye=X(()=>n.unlinkPanels&&R.value*12+Z.value-(L.value*12+w.value+1)>=12),ge=X(()=>!(A.value&&h.value&&!m.value.selecting&&Sh([A.value,h.value]))),Fe=X(()=>n.type==="datetime"||n.type==="datetimerange"),Ae=(fe,Xe)=>{if(!!fe)return i?Lt(i[Xe]||i).locale(f.value).year(fe.year()).month(fe.month()).date(fe.date()):fe},Ze=(fe,Xe=!0)=>{const ne=fe.minDate,M=fe.maxDate,Oe=Ae(ne,0),Ee=Ae(M,1);h.value===Ee&&A.value===Oe||(t("calendar-change",[ne.toDate(),M&&M.toDate()]),h.value=Ee,A.value=Oe,!(!Xe||Fe.value)&&W())},Ue=J(!1),Pe=J(!1),qe=()=>{Ue.value=!1},De=()=>{Pe.value=!1},Me=(fe,Xe)=>{P.value[Xe]=fe;const ne=Lt(fe,Q.value).locale(f.value);if(ne.isValid()){if(a&&a(ne.toDate()))return;Xe==="min"?(p.value=ne,A.value=(A.value||p.value).year(ne.year()).month(ne.month()).date(ne.date()),!n.unlinkPanels&&(!h.value||h.value.isBefore(A.value))&&(b.value=ne.add(1,"month"),h.value=A.value.add(1,"month"))):(b.value=ne,h.value=(h.value||b.value).year(ne.year()).month(ne.month()).date(ne.date()),!n.unlinkPanels&&(!A.value||A.value.isAfter(h.value))&&(p.value=ne.subtract(1,"month"),A.value=h.value.subtract(1,"month")))}},_e=(fe,Xe)=>{P.value[Xe]=null},Re=(fe,Xe)=>{x.value[Xe]=fe;const ne=Lt(fe,Y.value).locale(f.value);ne.isValid()&&(Xe==="min"?(Ue.value=!0,A.value=(A.value||p.value).hour(ne.hour()).minute(ne.minute()).second(ne.second()),(!h.value||h.value.isBefore(A.value))&&(h.value=A.value)):(Pe.value=!0,h.value=(h.value||b.value).hour(ne.hour()).minute(ne.minute()).second(ne.second()),b.value=h.value,h.value&&h.value.isBefore(A.value)&&(A.value=h.value)))},$e=(fe,Xe)=>{x.value[Xe]=null,Xe==="min"?(p.value=A.value,Ue.value=!1):(b.value=h.value,Pe.value=!1)},dt=(fe,Xe,ne)=>{x.value.min||(fe&&(p.value=fe,A.value=(A.value||p.value).hour(fe.hour()).minute(fe.minute()).second(fe.second())),ne||(Ue.value=Xe),(!h.value||h.value.isBefore(A.value))&&(h.value=A.value,b.value=fe))},yt=(fe,Xe,ne)=>{x.value.max||(fe&&(b.value=fe,h.value=(h.value||b.value).hour(fe.hour()).minute(fe.minute()).second(fe.second())),ne||(Pe.value=Xe),h.value&&h.value.isBefore(A.value)&&(A.value=h.value))},gt=()=>{p.value=rT(c(d),{lang:c(f),unit:"month",unlinkPanels:n.unlinkPanels})[0],b.value=p.value.add(1,"month"),t("pick",null)},ot=fe=>et(fe)?fe.map(Xe=>Xe.format(o)):fe.format(o),ke=fe=>et(fe)?fe.map(Xe=>Lt(Xe,o).locale(f.value)):Lt(fe,o).locale(f.value);function be(fe,Xe){if(n.unlinkPanels&&Xe){const ne=(fe==null?void 0:fe.year())||0,M=(fe==null?void 0:fe.month())||0,Oe=Xe.year(),Ee=Xe.month();b.value=ne===Oe&&M===Ee?Xe.add(1,af):Xe}else b.value=p.value.add(1,af),Xe&&(b.value=b.value.hour(Xe.hour()).minute(Xe.minute()).second(Xe.second()))}return t("set-picker-option",["isValidValue",ee]),t("set-picker-option",["parseUserInput",ke]),t("set-picker-option",["formatToString",ot]),t("set-picker-option",["handleClear",gt]),(fe,Xe)=>(K(),F("div",{class:q([c(v).b(),c(S).b(),{"has-sidebar":fe.$slots.sidebar||c(G),"has-time":c(Fe)}])},[z("div",{class:q(c(v).e("body-wrapper"))},[ue(fe.$slots,"sidebar",{class:q(c(v).e("sidebar"))}),c(G)?(K(),F("div",{key:0,class:q(c(v).e("sidebar"))},[(K(!0),F(Qe,null,Nt(c(u),(ne,M)=>(K(),F("button",{key:M,type:"button",class:q(c(v).e("shortcut")),onClick:Oe=>c(k)(ne)},je(ne.text),11,boe))),128))],2)):ae("v-if",!0),z("div",{class:q(c(v).e("body"))},[c(Fe)?(K(),F("div",{key:0,class:q(c(S).e("time-header"))},[z("span",{class:q(c(S).e("editors-wrap"))},[z("span",{class:q(c(S).e("time-picker-wrap"))},[C(c(vr),{size:"small",disabled:c(m).selecting,placeholder:c(T)("el.datepicker.startDate"),class:q(c(S).e("editor")),"model-value":c(U),"validate-event":!1,onInput:Xe[0]||(Xe[0]=ne=>Me(ne,"min")),onChange:Xe[1]||(Xe[1]=ne=>_e(ne,"min"))},null,8,["disabled","placeholder","class","model-value"])],2),Vt((K(),F("span",{class:q(c(S).e("time-picker-wrap"))},[C(c(vr),{size:"small",class:q(c(S).e("editor")),disabled:c(m).selecting,placeholder:c(T)("el.datepicker.startTime"),"model-value":c(O),"validate-event":!1,onFocus:Xe[2]||(Xe[2]=ne=>Ue.value=!0),onInput:Xe[3]||(Xe[3]=ne=>Re(ne,"min")),onChange:Xe[4]||(Xe[4]=ne=>$e(ne,"min"))},null,8,["class","disabled","placeholder","model-value"]),C(c(wp),{visible:Ue.value,format:c(Y),"datetime-role":"start","parsed-value":p.value,onPick:dt},null,8,["visible","format","parsed-value"])],2)),[[c(Po),qe]])],2),z("span",null,[C(c(it),null,{default:B(()=>[C(c(Vr))]),_:1})]),z("span",{class:q([c(S).e("editors-wrap"),"is-right"])},[z("span",{class:q(c(S).e("time-picker-wrap"))},[C(c(vr),{size:"small",class:q(c(S).e("editor")),disabled:c(m).selecting,placeholder:c(T)("el.datepicker.endDate"),"model-value":c(H),readonly:!c(A),"validate-event":!1,onInput:Xe[5]||(Xe[5]=ne=>Me(ne,"max")),onChange:Xe[6]||(Xe[6]=ne=>_e(ne,"max"))},null,8,["class","disabled","placeholder","model-value","readonly"])],2),Vt((K(),F("span",{class:q(c(S).e("time-picker-wrap"))},[C(c(vr),{size:"small",class:q(c(S).e("editor")),disabled:c(m).selecting,placeholder:c(T)("el.datepicker.endTime"),"model-value":c(D),readonly:!c(A),"validate-event":!1,onFocus:Xe[7]||(Xe[7]=ne=>c(A)&&(Pe.value=!0)),onInput:Xe[8]||(Xe[8]=ne=>Re(ne,"max")),onChange:Xe[9]||(Xe[9]=ne=>$e(ne,"max"))},null,8,["class","disabled","placeholder","model-value","readonly"]),C(c(wp),{"datetime-role":"end",visible:Pe.value,format:c(Y),"parsed-value":b.value,onPick:yt},null,8,["visible","format","parsed-value"])],2)),[[c(Po),De]])],2)],2)):ae("v-if",!0),z("div",{class:q([[c(v).e("content"),c(S).e("content")],"is-left"])},[z("div",{class:q(c(S).e("header"))},[z("button",{type:"button",class:q([c(v).e("icon-btn"),"d-arrow-left"]),"aria-label":c(T)("el.datepicker.prevYear"),onClick:oe},[C(c(it),null,{default:B(()=>[C(c(zs))]),_:1})],10,hoe),z("button",{type:"button",class:q([c(v).e("icon-btn"),"arrow-left"]),"aria-label":c(T)("el.datepicker.prevMonth"),onClick:Ne},[C(c(it),null,{default:B(()=>[C(c(Wo))]),_:1})],10,moe),fe.unlinkPanels?(K(),F("button",{key:0,type:"button",disabled:!c(ye),class:q([[c(v).e("icon-btn"),{"is-disabled":!c(ye)}],"d-arrow-right"]),"aria-label":c(T)("el.datepicker.nextYear"),onClick:ce},[C(c(it),null,{default:B(()=>[C(c(Hs))]),_:1})],10,Soe)):ae("v-if",!0),fe.unlinkPanels?(K(),F("button",{key:1,type:"button",disabled:!c(re),class:q([[c(v).e("icon-btn"),{"is-disabled":!c(re)}],"arrow-right"]),"aria-label":c(T)("el.datepicker.nextMonth"),onClick:Le},[C(c(it),null,{default:B(()=>[C(c(Vr))]),_:1})],10,yoe)):ae("v-if",!0),z("div",null,je(c(g)),1)],2),C(Ah,{"selection-mode":"range",date:p.value,"min-date":c(A),"max-date":c(h),"range-state":c(m),"disabled-date":c(a),"cell-class-name":c(l),onChangerange:c(y),onPick:Ze,onSelect:c(V)},null,8,["date","min-date","max-date","range-state","disabled-date","cell-class-name","onChangerange","onSelect"])],2),z("div",{class:q([[c(v).e("content"),c(S).e("content")],"is-right"])},[z("div",{class:q(c(S).e("header"))},[fe.unlinkPanels?(K(),F("button",{key:0,type:"button",disabled:!c(ye),class:q([[c(v).e("icon-btn"),{"is-disabled":!c(ye)}],"d-arrow-left"]),"aria-label":c(T)("el.datepicker.prevYear"),onClick:Te},[C(c(it),null,{default:B(()=>[C(c(zs))]),_:1})],10,Aoe)):ae("v-if",!0),fe.unlinkPanels?(K(),F("button",{key:1,type:"button",disabled:!c(re),class:q([[c(v).e("icon-btn"),{"is-disabled":!c(re)}],"arrow-left"]),"aria-label":c(T)("el.datepicker.prevMonth"),onClick:xe},[C(c(it),null,{default:B(()=>[C(c(Wo))]),_:1})],10,Woe)):ae("v-if",!0),z("button",{type:"button","aria-label":c(T)("el.datepicker.nextYear"),class:q([c(v).e("icon-btn"),"d-arrow-right"]),onClick:pe},[C(c(it),null,{default:B(()=>[C(c(Hs))]),_:1})],10,koe),z("button",{type:"button",class:q([c(v).e("icon-btn"),"arrow-right"]),"aria-label":c(T)("el.datepicker.nextMonth"),onClick:me},[C(c(it),null,{default:B(()=>[C(c(Vr))]),_:1})],10,Voe),z("div",null,je(c(j)),1)],2),C(Ah,{"selection-mode":"range",date:b.value,"min-date":c(A),"max-date":c(h),"range-state":c(m),"disabled-date":c(a),"cell-class-name":c(l),onChangerange:c(y),onPick:Ze,onSelect:c(V)},null,8,["date","min-date","max-date","range-state","disabled-date","cell-class-name","onChangerange","onSelect"])],2)],2)],2),c(Fe)?(K(),F("div",{key:0,class:q(c(v).e("footer"))},[c(s)?(K(),ie(c(sr),{key:0,text:"",size:"small",class:q(c(v).e("link-btn")),onClick:gt},{default:B(()=>[Xt(je(c(T)("el.datepicker.clear")),1)]),_:1},8,["class"])):ae("v-if",!0),C(c(sr),{plain:"",size:"small",class:q(c(v).e("link-btn")),disabled:c(ge),onClick:Xe[10]||(Xe[10]=ne=>c(W)(!1))},{default:B(()=>[Xt(je(c(T)("el.datepicker.confirm")),1)]),_:1},8,["class","disabled"])],2)):ae("v-if",!0)],2))}});var Toe=Be(Poe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/panel-date-range.vue"]]);const Koe=Ie({...tT}),Noe=["pick","set-picker-option","calendar-change"],xoe=({unlinkPanels:e,leftDate:t,rightDate:n})=>{const{t:r}=It(),a=()=>{t.value=t.value.subtract(1,"year"),e.value||(n.value=n.value.subtract(1,"year"))},l=()=>{e.value||(t.value=t.value.add(1,"year")),n.value=n.value.add(1,"year")},o=()=>{t.value=t.value.add(1,"year")},i=()=>{n.value=n.value.subtract(1,"year")},s=X(()=>`${t.value.year()} ${r("el.datepicker.year")}`),u=X(()=>`${n.value.year()} ${r("el.datepicker.year")}`),d=X(()=>t.value.year()),f=X(()=>n.value.year()===t.value.year()?t.value.year()+1:n.value.year());return{leftPrevYear:a,rightNextYear:l,leftNextYear:o,rightPrevYear:i,leftLabel:s,rightLabel:u,leftYear:d,rightYear:f}},Xoe=["onClick"],goe=["disabled"],woe=["disabled"],lf="year",joe=$({name:"DatePickerMonthRange"}),Loe=$({...joe,props:Koe,emits:Noe,setup(e,{emit:t}){const n=e,{lang:r}=It(),a=tt("EP_PICKER_BASE"),{shortcuts:l,disabledDate:o,format:i}=a.props,s=bn(a.props,"defaultValue"),u=J(Lt().locale(r.value)),d=J(Lt().locale(r.value).add(1,lf)),{minDate:f,maxDate:p,rangeState:b,ppNs:A,drpNs:h,handleChangeRange:m,handleRangeConfirm:v,handleShortcutClick:S,onSelect:y}=aT(n,{defaultValue:s,leftDate:u,rightDate:d,unit:lf,onParsedValueChanged:G}),W=X(()=>!!l.length),{leftPrevYear:k,rightNextYear:V,leftNextYear:T,rightPrevYear:P,leftLabel:x,rightLabel:g,leftYear:j,rightYear:L}=xoe({unlinkPanels:bn(n,"unlinkPanels"),leftDate:u,rightDate:d}),w=X(()=>n.unlinkPanels&&L.value>j.value+1),R=(U,H=!0)=>{const O=U.minDate,D=U.maxDate;p.value===D&&f.value===O||(t("calendar-change",[O.toDate(),D&&D.toDate()]),p.value=D,f.value=O,H&&v())},Z=U=>U.map(H=>H.format(i));function G(U,H){if(n.unlinkPanels&&H){const O=(U==null?void 0:U.year())||0,D=H.year();d.value=O===D?H.add(1,lf):H}else d.value=u.value.add(1,lf)}return t("set-picker-option",["formatToString",Z]),(U,H)=>(K(),F("div",{class:q([c(A).b(),c(h).b(),{"has-sidebar":Boolean(U.$slots.sidebar)||c(W)}])},[z("div",{class:q(c(A).e("body-wrapper"))},[ue(U.$slots,"sidebar",{class:q(c(A).e("sidebar"))}),c(W)?(K(),F("div",{key:0,class:q(c(A).e("sidebar"))},[(K(!0),F(Qe,null,Nt(c(l),(O,D)=>(K(),F("button",{key:D,type:"button",class:q(c(A).e("shortcut")),onClick:Y=>c(S)(O)},je(O.text),11,Xoe))),128))],2)):ae("v-if",!0),z("div",{class:q(c(A).e("body"))},[z("div",{class:q([[c(A).e("content"),c(h).e("content")],"is-left"])},[z("div",{class:q(c(h).e("header"))},[z("button",{type:"button",class:q([c(A).e("icon-btn"),"d-arrow-left"]),onClick:H[0]||(H[0]=(...O)=>c(k)&&c(k)(...O))},[C(c(it),null,{default:B(()=>[C(c(zs))]),_:1})],2),U.unlinkPanels?(K(),F("button",{key:0,type:"button",disabled:!c(w),class:q([[c(A).e("icon-btn"),{[c(A).is("disabled")]:!c(w)}],"d-arrow-right"]),onClick:H[1]||(H[1]=(...O)=>c(T)&&c(T)(...O))},[C(c(it),null,{default:B(()=>[C(c(Hs))]),_:1})],10,goe)):ae("v-if",!0),z("div",null,je(c(x)),1)],2),C(Wh,{"selection-mode":"range",date:u.value,"min-date":c(f),"max-date":c(p),"range-state":c(b),"disabled-date":c(o),onChangerange:c(m),onPick:R,onSelect:c(y)},null,8,["date","min-date","max-date","range-state","disabled-date","onChangerange","onSelect"])],2),z("div",{class:q([[c(A).e("content"),c(h).e("content")],"is-right"])},[z("div",{class:q(c(h).e("header"))},[U.unlinkPanels?(K(),F("button",{key:0,type:"button",disabled:!c(w),class:q([[c(A).e("icon-btn"),{"is-disabled":!c(w)}],"d-arrow-left"]),onClick:H[2]||(H[2]=(...O)=>c(P)&&c(P)(...O))},[C(c(it),null,{default:B(()=>[C(c(zs))]),_:1})],10,woe)):ae("v-if",!0),z("button",{type:"button",class:q([c(A).e("icon-btn"),"d-arrow-right"]),onClick:H[3]||(H[3]=(...O)=>c(V)&&c(V)(...O))},[C(c(it),null,{default:B(()=>[C(c(Hs))]),_:1})],2),z("div",null,je(c(g)),1)],2),C(Wh,{"selection-mode":"range",date:d.value,"min-date":c(f),"max-date":c(p),"range-state":c(b),"disabled-date":c(o),onChangerange:c(m),onPick:R,onSelect:c(y)},null,8,["date","min-date","max-date","range-state","disabled-date","onChangerange","onSelect"])],2)],2)],2)],2))}});var qoe=Be(Loe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/panel-month-range.vue"]]);const Uoe=function(e){switch(e){case"daterange":case"datetimerange":return Toe;case"monthrange":return qoe;default:return foe}};Lt.extend(kP);Lt.extend(Ple);Lt.extend(d2);Lt.extend(Tle);Lt.extend(Kle);Lt.extend(Nle);Lt.extend(xle);Lt.extend(Xle);var Ooe=$({name:"ElDatePicker",install:null,props:gle,emits:["update:modelValue"],setup(e,{expose:t,emit:n,slots:r}){const a=ze("picker-panel");zt("ElPopperOptions",Bt(bn(e,"popperOptions"))),zt(b2,{slots:r,pickerNs:a});const l=J();t({focus:(s=!0)=>{var u;(u=l.value)==null||u.focus(s)},handleOpen:()=>{var s;(s=l.value)==null||s.handleOpen()},handleClose:()=>{var s;(s=l.value)==null||s.handleClose()}});const i=s=>{n("update:modelValue",s)};return()=>{var s;const u=(s=e.format)!=null?s:kte[e.type]||ls,d=Uoe(e.type);return C(uP,Ut(e,{format:u,type:e.type,ref:l,"onUpdate:modelValue":i}),{default:f=>C(d,f,null),"range-separator":r["range-separator"]})}}});const Rf=Ooe;Rf.install=e=>{e.component(Rf.name,Rf)};const Roe=Rf,m2=Symbol("elDescriptions");var Xu=$({name:"ElDescriptionsCell",props:{cell:{type:Object},tag:{type:String,default:"td"},type:{type:String}},setup(){return{descriptions:tt(m2,{})}},render(){var e,t,n,r,a,l,o;const i=UB(this.cell),s=(((e=this.cell)==null?void 0:e.dirs)||[]).map(k=>{const{dir:V,arg:T,modifiers:P,value:x}=k;return[V,x,T,P]}),{border:u,direction:d}=this.descriptions,f=d==="vertical",p=((r=(n=(t=this.cell)==null?void 0:t.children)==null?void 0:n.label)==null?void 0:r.call(n))||i.label,b=(o=(l=(a=this.cell)==null?void 0:a.children)==null?void 0:l.default)==null?void 0:o.call(l),A=i.span,h=i.align?`is-${i.align}`:"",m=i.labelAlign?`is-${i.labelAlign}`:h,v=i.className,S=i.labelClassName,y={width:Ln(i.width),minWidth:Ln(i.minWidth)},W=ze("descriptions");switch(this.type){case"label":return Vt(st(this.tag,{style:y,class:[W.e("cell"),W.e("label"),W.is("bordered-label",u),W.is("vertical-label",f),m,S],colSpan:f?A:1},p),s);case"content":return Vt(st(this.tag,{style:y,class:[W.e("cell"),W.e("content"),W.is("bordered-content",u),W.is("vertical-content",f),h,v],colSpan:f?A:A*2-1},b),s);default:return Vt(st("td",{style:y,class:[W.e("cell"),h],colSpan:A},[On(p)?void 0:st("span",{class:[W.e("label"),S]},p),st("span",{class:[W.e("content"),v]},b)]),s)}}});const Joe=Ie({row:{type:ve(Array),default:()=>[]}}),Foe={key:1},zoe=$({name:"ElDescriptionsRow"}),Hoe=$({...zoe,props:Joe,setup(e){const t=tt(m2,{});return(n,r)=>c(t).direction==="vertical"?(K(),F(Qe,{key:0},[z("tr",null,[(K(!0),F(Qe,null,Nt(n.row,(a,l)=>(K(),ie(c(Xu),{key:`tr1-${l}`,cell:a,tag:"th",type:"label"},null,8,["cell"]))),128))]),z("tr",null,[(K(!0),F(Qe,null,Nt(n.row,(a,l)=>(K(),ie(c(Xu),{key:`tr2-${l}`,cell:a,tag:"td",type:"content"},null,8,["cell"]))),128))])],64)):(K(),F("tr",Foe,[(K(!0),F(Qe,null,Nt(n.row,(a,l)=>(K(),F(Qe,{key:`tr3-${l}`},[c(t).border?(K(),F(Qe,{key:0},[C(c(Xu),{cell:a,tag:"td",type:"label"},null,8,["cell"]),C(c(Xu),{cell:a,tag:"td",type:"content"},null,8,["cell"])],64)):(K(),ie(c(Xu),{key:1,cell:a,tag:"td",type:"both"},null,8,["cell"]))],64))),128))]))}});var Zoe=Be(Hoe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/descriptions/src/descriptions-row.vue"]]);const Goe=Ie({border:{type:Boolean,default:!1},column:{type:Number,default:3},direction:{type:String,values:["horizontal","vertical"],default:"horizontal"},size:ur,title:{type:String,default:""},extra:{type:String,default:""}}),Coe=$({name:"ElDescriptions"}),Moe=$({...Coe,props:Goe,setup(e){const t=e,n=ze("descriptions"),r=Cn(),a=er();zt(m2,t);const l=X(()=>[n.b(),n.m(r.value)]),o=(s,u,d,f=!1)=>(s.props||(s.props={}),u>d&&(s.props.span=d),f&&(s.props.span=u),s),i=()=>{if(!a.default)return[];const s=ui(a.default()).filter(b=>{var A;return((A=b==null?void 0:b.type)==null?void 0:A.name)==="ElDescriptionsItem"}),u=[];let d=[],f=t.column,p=0;return s.forEach((b,A)=>{var h;const m=((h=b.props)==null?void 0:h.span)||1;if(A<s.length-1&&(p+=m>f?f:m),A===s.length-1){const v=t.column-p%t.column;d.push(o(b,v,f,!0)),u.push(d);return}m<f?(f-=m,d.push(b)):(d.push(o(b,m,f)),u.push(d),f=t.column,d=[])}),u};return(s,u)=>(K(),F("div",{class:q(c(l))},[s.title||s.extra||s.$slots.title||s.$slots.extra?(K(),F("div",{key:0,class:q(c(n).e("header"))},[z("div",{class:q(c(n).e("title"))},[ue(s.$slots,"title",{},()=>[Xt(je(s.title),1)])],2),z("div",{class:q(c(n).e("extra"))},[ue(s.$slots,"extra",{},()=>[Xt(je(s.extra),1)])],2)],2)):ae("v-if",!0),z("div",{class:q(c(n).e("body"))},[z("table",{class:q([c(n).e("table"),c(n).is("bordered",s.border)])},[z("tbody",null,[(K(!0),F(Qe,null,Nt(i(),(d,f)=>(K(),ie(Zoe,{key:f,row:d},null,8,["row"]))),128))])],2)],2)],2))}});var Doe=Be(Moe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/descriptions/src/description.vue"]]);const Eoe=Ie({label:{type:String,default:""},span:{type:Number,default:1},width:{type:[String,Number],default:""},minWidth:{type:[String,Number],default:""},align:{type:String,default:"left"},labelAlign:{type:String,default:""},className:{type:String,default:""},labelClassName:{type:String,default:""}}),lT=$({name:"ElDescriptionsItem",props:Eoe}),Ioe=qt(Doe,{DescriptionsItem:lT}),Boe=Nn(lT),Yoe=Ie({mask:{type:Boolean,default:!0},customMaskEvent:{type:Boolean,default:!1},overlayClass:{type:ve([String,Array,Object])},zIndex:{type:ve([String,Number])}}),Qoe={click:e=>e instanceof MouseEvent},_oe="overlay";var $oe=$({name:"ElOverlay",props:Yoe,emits:Qoe,setup(e,{slots:t,emit:n}){const r=ze(_oe),a=s=>{n("click",s)},{onClick:l,onMousedown:o,onMouseup:i}=$m(e.customMaskEvent?void 0:a);return()=>e.mask?C("div",{class:[r.b(),e.overlayClass],style:{zIndex:e.zIndex},onClick:l,onMousedown:o,onMouseup:i},[ue(t,"default")],ca.STYLE|ca.CLASS|ca.PROPS,["onClick","onMouseup","onMousedown"]):st("div",{class:e.overlayClass,style:{zIndex:e.zIndex,position:"fixed",top:"0px",right:"0px",bottom:"0px",left:"0px"}},[ue(t,"default")])}});const S2=$oe,oT=Symbol("dialogInjectionKey"),iT=Ie({center:Boolean,alignCenter:Boolean,closeIcon:{type:un},customClass:{type:String,default:""},draggable:Boolean,fullscreen:Boolean,showClose:{type:Boolean,default:!0},title:{type:String,default:""},ariaLevel:{type:String,default:"2"}}),eie={close:()=>!0},tie=["aria-level"],nie=["aria-label"],rie=["id"],aie=$({name:"ElDialogContent"}),lie=$({...aie,props:iT,emits:eie,setup(e){const t=e,{t:n}=It(),{Close:r}=Ik,{dialogRef:a,headerRef:l,bodyId:o,ns:i,style:s}=tt(oT),{focusTrapRef:u}=tt(s2),d=X(()=>[i.b(),i.is("fullscreen",t.fullscreen),i.is("draggable",t.draggable),i.is("align-center",t.alignCenter),{[i.m("center")]:t.center},t.customClass]),f=Rv(u,a),p=X(()=>t.draggable);return Yk(a,l,p),(b,A)=>(K(),F("div",{ref:c(f),class:q(c(d)),style:lt(c(s)),tabindex:"-1"},[z("header",{ref_key:"headerRef",ref:l,class:q(c(i).e("header"))},[ue(b.$slots,"header",{},()=>[z("span",{role:"heading","aria-level":b.ariaLevel,class:q(c(i).e("title"))},je(b.title),11,tie)]),b.showClose?(K(),F("button",{key:0,"aria-label":c(n)("el.dialog.close"),class:q(c(i).e("headerbtn")),type:"button",onClick:A[0]||(A[0]=h=>b.$emit("close"))},[C(c(it),{class:q(c(i).e("close"))},{default:B(()=>[(K(),ie(Ot(b.closeIcon||c(r))))]),_:1},8,["class"])],10,nie)):ae("v-if",!0)],2),z("div",{id:c(o),class:q(c(i).e("body"))},[ue(b.$slots,"default")],10,rie),b.$slots.footer?(K(),F("footer",{key:0,class:q(c(i).e("footer"))},[ue(b.$slots,"footer")],2)):ae("v-if",!0)],6))}});var oie=Be(lie,[["__file","/home/runner/work/element-plus/element-plus/packages/components/dialog/src/dialog-content.vue"]]);const sT=Ie({...iT,appendToBody:Boolean,beforeClose:{type:ve(Function)},destroyOnClose:Boolean,closeOnClickModal:{type:Boolean,default:!0},closeOnPressEscape:{type:Boolean,default:!0},lockScroll:{type:Boolean,default:!0},modal:{type:Boolean,default:!0},openDelay:{type:Number,default:0},closeDelay:{type:Number,default:0},top:{type:String},modelValue:Boolean,modalClass:String,width:{type:[String,Number]},zIndex:{type:Number},trapFocus:{type:Boolean,default:!1},headerAriaLevel:{type:String,default:"2"}}),uT={open:()=>!0,opened:()=>!0,close:()=>!0,closed:()=>!0,[Rt]:e=>Zn(e),openAutoFocus:()=>!0,closeAutoFocus:()=>!0},cT=(e,t)=>{const r=Tt().emit,{nextZIndex:a}=su();let l="";const o=Cr(),i=Cr(),s=J(!1),u=J(!1),d=J(!1),f=J(e.zIndex||a());let p,b;const A=Mv("namespace",Yu),h=X(()=>{const R={},Z=`--${A.value}-dialog`;return e.fullscreen||(e.top&&(R[`${Z}-margin-top`]=e.top),e.width&&(R[`${Z}-width`]=Ln(e.width))),R}),m=X(()=>e.alignCenter?{display:"flex"}:{});function v(){r("opened")}function S(){r("closed"),r(Rt,!1),e.destroyOnClose&&(d.value=!1)}function y(){r("close")}function W(){b==null||b(),p==null||p(),e.openDelay&&e.openDelay>0?{stop:p}=Ao(()=>P(),e.openDelay):P()}function k(){p==null||p(),b==null||b(),e.closeDelay&&e.closeDelay>0?{stop:b}=Ao(()=>x(),e.closeDelay):x()}function V(){function R(Z){Z||(u.value=!0,s.value=!1)}e.beforeClose?e.beforeClose(R):k()}function T(){e.closeOnClickModal&&V()}function P(){!Mt||(s.value=!0)}function x(){s.value=!1}function g(){r("openAutoFocus")}function j(){r("closeAutoFocus")}function L(R){var Z;((Z=R.detail)==null?void 0:Z.focusReason)==="pointer"&&R.preventDefault()}e.lockScroll&&$k(s);function w(){e.closeOnPressEscape&&V()}return Ve(()=>e.modelValue,R=>{R?(u.value=!1,W(),d.value=!0,f.value=e.zIndex?f.value++:a(),at(()=>{r("open"),t.value&&(t.value.scrollTop=0)})):s.value&&k()}),Ve(()=>e.fullscreen,R=>{!t.value||(R?(l=t.value.style.transform,t.value.style.transform=""):t.value.style.transform=l)}),At(()=>{e.modelValue&&(s.value=!0,d.value=!0,W())}),{afterEnter:v,afterLeave:S,beforeLeave:y,handleClose:V,onModalClick:T,close:k,doClose:x,onOpenAutoFocus:g,onCloseAutoFocus:j,onCloseRequested:w,onFocusoutPrevented:L,titleId:o,bodyId:i,closed:u,style:h,overlayDialogStyle:m,rendered:d,visible:s,zIndex:f}},iie=["aria-label","aria-labelledby","aria-describedby"],sie=$({name:"ElDialog",inheritAttrs:!1}),uie=$({...sie,props:sT,emits:uT,setup(e,{expose:t}){const n=e,r=er();rl({scope:"el-dialog",from:"the title slot",replacement:"the header slot",version:"3.0.0",ref:"https://element-plus.org/en-US/component/dialog.html#slots"},X(()=>!!r.title)),rl({scope:"el-dialog",from:"custom-class",replacement:"class",version:"2.3.0",ref:"https://element-plus.org/en-US/component/dialog.html#attributes",type:"Attribute"},X(()=>!!n.customClass));const a=ze("dialog"),l=J(),o=J(),i=J(),{visible:s,titleId:u,bodyId:d,style:f,overlayDialogStyle:p,rendered:b,zIndex:A,afterEnter:h,afterLeave:m,beforeLeave:v,handleClose:S,onModalClick:y,onOpenAutoFocus:W,onCloseAutoFocus:k,onCloseRequested:V,onFocusoutPrevented:T}=cT(n,l);zt(oT,{dialogRef:l,headerRef:o,bodyId:d,ns:a,rendered:b,style:f});const P=$m(y),x=X(()=>n.draggable&&!n.fullscreen);return t({visible:s,dialogContentRef:i}),(g,j)=>(K(),ie(au,{to:"body",disabled:!g.appendToBody},[C(fn,{name:"dialog-fade",onAfterEnter:c(h),onAfterLeave:c(m),onBeforeLeave:c(v),persisted:""},{default:B(()=>[Vt(C(c(S2),{"custom-mask-event":"",mask:g.modal,"overlay-class":g.modalClass,"z-index":c(A)},{default:B(()=>[z("div",{role:"dialog","aria-modal":"true","aria-label":g.title||void 0,"aria-labelledby":g.title?void 0:c(u),"aria-describedby":c(d),class:q(`${c(a).namespace.value}-overlay-dialog`),style:lt(c(p)),onClick:j[0]||(j[0]=(...L)=>c(P).onClick&&c(P).onClick(...L)),onMousedown:j[1]||(j[1]=(...L)=>c(P).onMousedown&&c(P).onMousedown(...L)),onMouseup:j[2]||(j[2]=(...L)=>c(P).onMouseup&&c(P).onMouseup(...L))},[C(c(Iv),{loop:"",trapped:c(s),"focus-start-el":"container",onFocusAfterTrapped:c(W),onFocusAfterReleased:c(k),onFocusoutPrevented:c(T),onReleaseRequested:c(V)},{default:B(()=>[c(b)?(K(),ie(oie,Ut({key:0,ref_key:"dialogContentRef",ref:i},g.$attrs,{"custom-class":g.customClass,center:g.center,"align-center":g.alignCenter,"close-icon":g.closeIcon,draggable:c(x),fullscreen:g.fullscreen,"show-close":g.showClose,title:g.title,"aria-level":g.headerAriaLevel,onClose:c(S)}),tl({header:B(()=>[g.$slots.title?ue(g.$slots,"title",{key:1}):ue(g.$slots,"header",{key:0,close:c(S),titleId:c(u),titleClass:c(a).e("title")})]),default:B(()=>[ue(g.$slots,"default")]),_:2},[g.$slots.footer?{name:"footer",fn:B(()=>[ue(g.$slots,"footer")])}:void 0]),1040,["custom-class","center","align-center","close-icon","draggable","fullscreen","show-close","title","aria-level","onClose"])):ae("v-if",!0)]),_:3},8,["trapped","onFocusAfterTrapped","onFocusAfterReleased","onFocusoutPrevented","onReleaseRequested"])],46,iie)]),_:3},8,["mask","overlay-class","z-index"]),[[Ct,c(s)]])]),_:3},8,["onAfterEnter","onAfterLeave","onBeforeLeave"])],8,["disabled"]))}});var cie=Be(uie,[["__file","/home/runner/work/element-plus/element-plus/packages/components/dialog/src/dialog.vue"]]);const die=qt(cie),fie=Ie({direction:{type:String,values:["horizontal","vertical"],default:"horizontal"},contentPosition:{type:String,values:["left","center","right"],default:"center"},borderStyle:{type:ve(String),default:"solid"}}),pie=$({name:"ElDivider"}),vie=$({...pie,props:fie,setup(e){const t=e,n=ze("divider"),r=X(()=>n.cssVar({"border-style":t.borderStyle}));return(a,l)=>(K(),F("div",{class:q([c(n).b(),c(n).m(a.direction)]),style:lt(c(r)),role:"separator"},[a.$slots.default&&a.direction!=="vertical"?(K(),F("div",{key:0,class:q([c(n).e("text"),c(n).is(a.contentPosition)])},[ue(a.$slots,"default")],2)):ae("v-if",!0)],6))}});var bie=Be(vie,[["__file","/home/runner/work/element-plus/element-plus/packages/components/divider/src/divider.vue"]]);const dT=qt(bie),hie=Ie({...sT,direction:{type:String,default:"rtl",values:["ltr","rtl","ttb","btt"]},size:{type:[String,Number],default:"30%"},withHeader:{type:Boolean,default:!0},modalFade:{type:Boolean,default:!0},headerAriaLevel:{type:String,default:"2"}}),mie=uT,Sie=$({name:"ElDrawer",components:{ElOverlay:S2,ElFocusTrap:Iv,ElIcon:it,Close:ma},inheritAttrs:!1,props:hie,emits:mie,setup(e,{slots:t}){rl({scope:"el-drawer",from:"the title slot",replacement:"the header slot",version:"3.0.0",ref:"https://element-plus.org/en-US/component/drawer.html#slots"},X(()=>!!t.title)),rl({scope:"el-drawer",from:"custom-class",replacement:"class",version:"2.3.0",ref:"https://element-plus.org/en-US/component/drawer.html#attributes",type:"Attribute"},X(()=>!!e.customClass));const n=J(),r=J(),a=ze("drawer"),{t:l}=It(),o=X(()=>e.direction==="rtl"||e.direction==="ltr"),i=X(()=>Ln(e.size));return{...cT(e,n),drawerRef:n,focusStartRef:r,isHorizontal:o,drawerSize:i,ns:a,t:l}}}),yie=["aria-label","aria-labelledby","aria-describedby"],Aie=["id","aria-level"],Wie=["aria-label"],kie=["id"];function Vie(e,t,n,r,a,l){const o=rt("close"),i=rt("el-icon"),s=rt("el-focus-trap"),u=rt("el-overlay");return K(),ie(au,{to:"body",disabled:!e.appendToBody},[C(fn,{name:e.ns.b("fade"),onAfterEnter:e.afterEnter,onAfterLeave:e.afterLeave,onBeforeLeave:e.beforeLeave,persisted:""},{default:B(()=>[Vt(C(u,{mask:e.modal,"overlay-class":e.modalClass,"z-index":e.zIndex,onClick:e.onModalClick},{default:B(()=>[C(s,{loop:"",trapped:e.visible,"focus-trap-el":e.drawerRef,"focus-start-el":e.focusStartRef,onReleaseRequested:e.onCloseRequested},{default:B(()=>[z("div",Ut({ref:"drawerRef","aria-modal":"true","aria-label":e.title||void 0,"aria-labelledby":e.title?void 0:e.titleId,"aria-describedby":e.bodyId},e.$attrs,{class:[e.ns.b(),e.direction,e.visible&&"open",e.customClass],style:e.isHorizontal?"width: "+e.drawerSize:"height: "+e.drawerSize,role:"dialog",onClick:t[1]||(t[1]=pt(()=>{},["stop"]))}),[z("span",{ref:"focusStartRef",class:q(e.ns.e("sr-focus")),tabindex:"-1"},null,2),e.withHeader?(K(),F("header",{key:0,class:q(e.ns.e("header"))},[e.$slots.title?ue(e.$slots,"title",{key:1},()=>[ae(" DEPRECATED SLOT ")]):ue(e.$slots,"header",{key:0,close:e.handleClose,titleId:e.titleId,titleClass:e.ns.e("title")},()=>[e.$slots.title?ae("v-if",!0):(K(),F("span",{key:0,id:e.titleId,role:"heading","aria-level":e.headerAriaLevel,class:q(e.ns.e("title"))},je(e.title),11,Aie))]),e.showClose?(K(),F("button",{key:2,"aria-label":e.t("el.drawer.close"),class:q(e.ns.e("close-btn")),type:"button",onClick:t[0]||(t[0]=(...d)=>e.handleClose&&e.handleClose(...d))},[C(i,{class:q(e.ns.e("close"))},{default:B(()=>[C(o)]),_:1},8,["class"])],10,Wie)):ae("v-if",!0)],2)):ae("v-if",!0),e.rendered?(K(),F("div",{key:1,id:e.bodyId,class:q(e.ns.e("body"))},[ue(e.$slots,"default")],10,kie)):ae("v-if",!0),e.$slots.footer?(K(),F("div",{key:2,class:q(e.ns.e("footer"))},[ue(e.$slots,"footer")],2)):ae("v-if",!0)],16,yie)]),_:3},8,["trapped","focus-trap-el","focus-start-el","onReleaseRequested"])]),_:3},8,["mask","overlay-class","z-index","onClick"]),[[Ct,e.visible]])]),_:3},8,["name","onAfterEnter","onAfterLeave","onBeforeLeave"])],8,["disabled"])}var Pie=Be(Sie,[["render",Vie],["__file","/home/runner/work/element-plus/element-plus/packages/components/drawer/src/drawer.vue"]]);const Tie=qt(Pie),Kie=$({inheritAttrs:!1});function Nie(e,t,n,r,a,l){return ue(e.$slots,"default")}var xie=Be(Kie,[["render",Nie],["__file","/home/runner/work/element-plus/element-plus/packages/components/collection/src/collection.vue"]]);const Xie=$({name:"ElCollectionItem",inheritAttrs:!1});function gie(e,t,n,r,a,l){return ue(e.$slots,"default")}var wie=Be(Xie,[["render",gie],["__file","/home/runner/work/element-plus/element-plus/packages/components/collection/src/collection-item.vue"]]);const fT="data-el-collection-item",pT=e=>{const t=`El${e}Collection`,n=`${t}Item`,r=Symbol(t),a=Symbol(n),l={...xie,name:t,setup(){const i=J(null),s=new Map;zt(r,{itemMap:s,getItems:()=>{const d=c(i);if(!d)return[];const f=Array.from(d.querySelectorAll(`[${fT}]`));return[...s.values()].sort((b,A)=>f.indexOf(b.ref)-f.indexOf(A.ref))},collectionRef:i})}},o={...wie,name:n,setup(i,{attrs:s}){const u=J(null),d=tt(r,void 0);zt(a,{collectionItemRef:u}),At(()=>{const f=c(u);f&&d.itemMap.set(f,{ref:f,...s})}),tn(()=>{const f=c(u);d.itemMap.delete(f)})}};return{COLLECTION_INJECTION_KEY:r,COLLECTION_ITEM_INJECTION_KEY:a,ElCollection:l,ElCollectionItem:o}},jie=Ie({style:{type:ve([String,Array,Object])},currentTabId:{type:ve(String)},defaultCurrentTabId:String,loop:Boolean,dir:{type:String,values:["ltr","rtl"],default:"ltr"},orientation:{type:ve(String)},onBlur:Function,onFocus:Function,onMousedown:Function}),{ElCollection:Lie,ElCollectionItem:qie,COLLECTION_INJECTION_KEY:y2,COLLECTION_ITEM_INJECTION_KEY:Uie}=pT("RovingFocusGroup"),A2=Symbol("elRovingFocusGroup"),vT=Symbol("elRovingFocusGroupItem"),Oie={ArrowLeft:"prev",ArrowUp:"prev",ArrowRight:"next",ArrowDown:"next",PageUp:"first",Home:"first",PageDown:"last",End:"last"},Rie=(e,t)=>{if(t!=="rtl")return e;switch(e){case ut.right:return ut.left;case ut.left:return ut.right;default:return e}},Jie=(e,t,n)=>{const r=Rie(e.key,n);if(!(t==="vertical"&&[ut.left,ut.right].includes(r))&&!(t==="horizontal"&&[ut.up,ut.down].includes(r)))return Oie[r]},Fie=(e,t)=>e.map((n,r)=>e[(r+t)%e.length]),W2=e=>{const{activeElement:t}=document;for(const n of e)if(n===t||(n.focus(),t!==document.activeElement))return},G8="currentTabIdChange",C8="rovingFocusGroup.entryFocus",zie={bubbles:!1,cancelable:!0},Hie=$({name:"ElRovingFocusGroupImpl",inheritAttrs:!1,props:jie,emits:[G8,"entryFocus"],setup(e,{emit:t}){var n;const r=J((n=e.currentTabId||e.defaultCurrentTabId)!=null?n:null),a=J(!1),l=J(!1),o=J(null),{getItems:i}=tt(y2,void 0),s=X(()=>[{outline:"none"},e.style]),u=h=>{t(G8,h)},d=()=>{a.value=!0},f=Pn(h=>{var m;(m=e.onMousedown)==null||m.call(e,h)},()=>{l.value=!0}),p=Pn(h=>{var m;(m=e.onFocus)==null||m.call(e,h)},h=>{const m=!c(l),{target:v,currentTarget:S}=h;if(v===S&&m&&!c(a)){const y=new Event(C8,zie);if(S==null||S.dispatchEvent(y),!y.defaultPrevented){const W=i().filter(x=>x.focusable),k=W.find(x=>x.active),V=W.find(x=>x.id===c(r)),P=[k,V,...W].filter(Boolean).map(x=>x.ref);W2(P)}}l.value=!1}),b=Pn(h=>{var m;(m=e.onBlur)==null||m.call(e,h)},()=>{a.value=!1}),A=(...h)=>{t("entryFocus",...h)};zt(A2,{currentTabbedId:xo(r),loop:bn(e,"loop"),tabIndex:X(()=>c(a)?-1:0),rovingFocusGroupRef:o,rovingFocusGroupRootStyle:s,orientation:bn(e,"orientation"),dir:bn(e,"dir"),onItemFocus:u,onItemShiftTab:d,onBlur:b,onFocus:p,onMousedown:f}),Ve(()=>e.currentTabId,h=>{r.value=h!=null?h:null}),hn(o,C8,A)}});function Zie(e,t,n,r,a,l){return ue(e.$slots,"default")}var Gie=Be(Hie,[["render",Zie],["__file","/home/runner/work/element-plus/element-plus/packages/components/roving-focus-group/src/roving-focus-group-impl.vue"]]);const Cie=$({name:"ElRovingFocusGroup",components:{ElFocusGroupCollection:Lie,ElRovingFocusGroupImpl:Gie}});function Mie(e,t,n,r,a,l){const o=rt("el-roving-focus-group-impl"),i=rt("el-focus-group-collection");return K(),ie(i,null,{default:B(()=>[C(o,fa(nd(e.$attrs)),{default:B(()=>[ue(e.$slots,"default")]),_:3},16)]),_:3})}var Die=Be(Cie,[["render",Mie],["__file","/home/runner/work/element-plus/element-plus/packages/components/roving-focus-group/src/roving-focus-group.vue"]]);const Eie=$({components:{ElRovingFocusCollectionItem:qie},props:{focusable:{type:Boolean,default:!0},active:{type:Boolean,default:!1}},emits:["mousedown","focus","keydown"],setup(e,{emit:t}){const{currentTabbedId:n,loop:r,onItemFocus:a,onItemShiftTab:l}=tt(A2,void 0),{getItems:o}=tt(y2,void 0),i=Cr(),s=J(null),u=Pn(b=>{t("mousedown",b)},b=>{e.focusable?a(c(i)):b.preventDefault()}),d=Pn(b=>{t("focus",b)},()=>{a(c(i))}),f=Pn(b=>{t("keydown",b)},b=>{const{key:A,shiftKey:h,target:m,currentTarget:v}=b;if(A===ut.tab&&h){l();return}if(m!==v)return;const S=Jie(b);if(S){b.preventDefault();let W=o().filter(k=>k.focusable).map(k=>k.ref);switch(S){case"last":{W.reverse();break}case"prev":case"next":{S==="prev"&&W.reverse();const k=W.indexOf(v);W=r.value?Fie(W,k+1):W.slice(k+1);break}}at(()=>{W2(W)})}}),p=X(()=>n.value===c(i));return zt(vT,{rovingFocusGroupItemRef:s,tabIndex:X(()=>c(p)?0:-1),handleMousedown:u,handleFocus:d,handleKeydown:f}),{id:i,handleKeydown:f,handleFocus:d,handleMousedown:u}}});function Iie(e,t,n,r,a,l){const o=rt("el-roving-focus-collection-item");return K(),ie(o,{id:e.id,focusable:e.focusable,active:e.active},{default:B(()=>[ue(e.$slots,"default")]),_:3},8,["id","focusable","active"])}var Bie=Be(Eie,[["render",Iie],["__file","/home/runner/work/element-plus/element-plus/packages/components/roving-focus-group/src/roving-focus-item.vue"]]);const Jf=Ie({trigger:jc.trigger,effect:{...nr.effect,default:"light"},type:{type:ve(String)},placement:{type:ve(String),default:"bottom"},popperOptions:{type:ve(Object),default:()=>({})},id:String,size:{type:String,default:""},splitButton:Boolean,hideOnClick:{type:Boolean,default:!0},loop:{type:Boolean,default:!0},showTimeout:{type:Number,default:150},hideTimeout:{type:Number,default:150},tabindex:{type:ve([Number,String]),default:0},maxHeight:{type:ve([Number,String]),default:""},popperClass:{type:String,default:""},disabled:{type:Boolean,default:!1},role:{type:String,default:"menu"},buttonProps:{type:ve(Object)},teleported:nr.teleported}),bT=Ie({command:{type:[Object,String,Number],default:()=>({})},disabled:Boolean,divided:Boolean,textValue:String,icon:{type:un}}),Yie=Ie({onKeydown:{type:ve(Function)}}),Qie=[ut.down,ut.pageDown,ut.home],hT=[ut.up,ut.pageUp,ut.end],_ie=[...Qie,...hT],{ElCollection:$ie,ElCollectionItem:ese,COLLECTION_INJECTION_KEY:tse,COLLECTION_ITEM_INJECTION_KEY:nse}=pT("Dropdown"),Qv=Symbol("elDropdown"),{ButtonGroup:rse}=sr,ase=$({name:"ElDropdown",components:{ElButton:sr,ElButtonGroup:rse,ElScrollbar:Cl,ElDropdownCollection:$ie,ElTooltip:Xr,ElRovingFocusGroup:Die,ElOnlyChild:HV,ElIcon:it,ArrowDown:Lo},props:Jf,emits:["visible-change","click","command"],setup(e,{emit:t}){const n=Tt(),r=ze("dropdown"),{t:a}=It(),l=J(),o=J(),i=J(null),s=J(null),u=J(null),d=J(null),f=J(!1),p=[ut.enter,ut.space,ut.down],b=X(()=>({maxHeight:Ln(e.maxHeight)})),A=X(()=>[r.m(k.value)]),h=X(()=>Vi(e.trigger)),m=Cr().value,v=X(()=>e.id||m);Ve([l,h],([U,H],[O])=>{var D,Y,Q;(D=O==null?void 0:O.$el)!=null&&D.removeEventListener&&O.$el.removeEventListener("pointerenter",T),(Y=U==null?void 0:U.$el)!=null&&Y.removeEventListener&&U.$el.removeEventListener("pointerenter",T),((Q=U==null?void 0:U.$el)==null?void 0:Q.addEventListener)&&H.includes("hover")&&U.$el.addEventListener("pointerenter",T)},{immediate:!0}),tn(()=>{var U,H;(H=(U=l.value)==null?void 0:U.$el)!=null&&H.removeEventListener&&l.value.$el.removeEventListener("pointerenter",T)});function S(){y()}function y(){var U;(U=i.value)==null||U.onClose()}function W(){var U;(U=i.value)==null||U.onOpen()}const k=Cn();function V(...U){t("command",...U)}function T(){var U,H;(H=(U=l.value)==null?void 0:U.$el)==null||H.focus()}function P(){}function x(){const U=c(s);h.value.includes("hover")&&(U==null||U.focus()),d.value=null}function g(U){d.value=U}function j(U){f.value||(U.preventDefault(),U.stopImmediatePropagation())}function L(){t("visible-change",!0)}function w(U){(U==null?void 0:U.type)==="keydown"&&s.value.focus()}function R(){t("visible-change",!1)}return zt(Qv,{contentRef:s,role:X(()=>e.role),triggerId:v,isUsingKeyboard:f,onItemEnter:P,onItemLeave:x}),zt("elDropdown",{instance:n,dropdownSize:k,handleClick:S,commandHandler:V,trigger:bn(e,"trigger"),hideOnClick:bn(e,"hideOnClick")}),{t:a,ns:r,scrollbar:u,wrapStyle:b,dropdownTriggerKls:A,dropdownSize:k,triggerId:v,triggerKeys:p,currentTabId:d,handleCurrentTabIdChange:g,handlerMainButtonClick:U=>{t("click",U)},handleEntryFocus:j,handleClose:y,handleOpen:W,handleBeforeShowTooltip:L,handleShowTooltip:w,handleBeforeHideTooltip:R,onFocusAfterTrapped:U=>{var H,O;U.preventDefault(),(O=(H=s.value)==null?void 0:H.focus)==null||O.call(H,{preventScroll:!0})},popperRef:i,contentRef:s,triggeringElementRef:l,referenceElementRef:o}}});function lse(e,t,n,r,a,l){var o;const i=rt("el-dropdown-collection"),s=rt("el-roving-focus-group"),u=rt("el-scrollbar"),d=rt("el-only-child"),f=rt("el-tooltip"),p=rt("el-button"),b=rt("arrow-down"),A=rt("el-icon"),h=rt("el-button-group");return K(),F("div",{class:q([e.ns.b(),e.ns.is("disabled",e.disabled)])},[C(f,{ref:"popperRef",role:e.role,effect:e.effect,"fallback-placements":["bottom","top"],"popper-options":e.popperOptions,"gpu-acceleration":!1,"hide-after":e.trigger==="hover"?e.hideTimeout:0,"manual-mode":!0,placement:e.placement,"popper-class":[e.ns.e("popper"),e.popperClass],"reference-element":(o=e.referenceElementRef)==null?void 0:o.$el,trigger:e.trigger,"trigger-keys":e.triggerKeys,"trigger-target-el":e.contentRef,"show-after":e.trigger==="hover"?e.showTimeout:0,"stop-popper-mouse-event":!1,"virtual-ref":e.triggeringElementRef,"virtual-triggering":e.splitButton,disabled:e.disabled,transition:`${e.ns.namespace.value}-zoom-in-top`,teleported:e.teleported,pure:"",persistent:"",onBeforeShow:e.handleBeforeShowTooltip,onShow:e.handleShowTooltip,onBeforeHide:e.handleBeforeHideTooltip},tl({content:B(()=>[C(u,{ref:"scrollbar","wrap-style":e.wrapStyle,tag:"div","view-class":e.ns.e("list")},{default:B(()=>[C(s,{loop:e.loop,"current-tab-id":e.currentTabId,orientation:"horizontal",onCurrentTabIdChange:e.handleCurrentTabIdChange,onEntryFocus:e.handleEntryFocus},{default:B(()=>[C(i,null,{default:B(()=>[ue(e.$slots,"dropdown")]),_:3})]),_:3},8,["loop","current-tab-id","onCurrentTabIdChange","onEntryFocus"])]),_:3},8,["wrap-style","view-class"])]),_:2},[e.splitButton?void 0:{name:"default",fn:B(()=>[C(d,{id:e.triggerId,ref:"triggeringElementRef",role:"button",tabindex:e.tabindex},{default:B(()=>[ue(e.$slots,"default")]),_:3},8,["id","tabindex"])])}]),1032,["role","effect","popper-options","hide-after","placement","popper-class","reference-element","trigger","trigger-keys","trigger-target-el","show-after","virtual-ref","virtual-triggering","disabled","transition","teleported","onBeforeShow","onShow","onBeforeHide"]),e.splitButton?(K(),ie(h,{key:0},{default:B(()=>[C(p,Ut({ref:"referenceElementRef"},e.buttonProps,{size:e.dropdownSize,type:e.type,disabled:e.disabled,tabindex:e.tabindex,onClick:e.handlerMainButtonClick}),{default:B(()=>[ue(e.$slots,"default")]),_:3},16,["size","type","disabled","tabindex","onClick"]),C(p,Ut({id:e.triggerId,ref:"triggeringElementRef"},e.buttonProps,{role:"button",size:e.dropdownSize,type:e.type,class:e.ns.e("caret-button"),disabled:e.disabled,tabindex:e.tabindex,"aria-label":e.t("el.dropdown.toggleDropdown")}),{default:B(()=>[C(A,{class:q(e.ns.e("icon"))},{default:B(()=>[C(b)]),_:1},8,["class"])]),_:1},16,["id","size","type","class","disabled","tabindex","aria-label"])]),_:3})):ae("v-if",!0)],2)}var ose=Be(ase,[["render",lse],["__file","/home/runner/work/element-plus/element-plus/packages/components/dropdown/src/dropdown.vue"]]);const ise=$({name:"DropdownItemImpl",components:{ElIcon:it},props:bT,emits:["pointermove","pointerleave","click","clickimpl"],setup(e,{emit:t}){const n=ze("dropdown"),{role:r}=tt(Qv,void 0),{collectionItemRef:a}=tt(nse,void 0),{collectionItemRef:l}=tt(Uie,void 0),{rovingFocusGroupItemRef:o,tabIndex:i,handleFocus:s,handleKeydown:u,handleMousedown:d}=tt(vT,void 0),f=Rv(a,l,o),p=X(()=>r.value==="menu"?"menuitem":r.value==="navigation"?"link":"button"),b=Pn(A=>{const{code:h}=A;if(h===ut.enter||h===ut.space)return A.preventDefault(),A.stopImmediatePropagation(),t("clickimpl",A),!0},u);return{ns:n,itemRef:f,dataset:{[fT]:""},role:p,tabIndex:i,handleFocus:s,handleKeydown:b,handleMousedown:d}}}),sse=["aria-disabled","tabindex","role"];function use(e,t,n,r,a,l){const o=rt("el-icon");return K(),F(Qe,null,[e.divided?(K(),F("li",Ut({key:0,role:"separator",class:e.ns.bem("menu","item","divided")},e.$attrs),null,16)):ae("v-if",!0),z("li",Ut({ref:e.itemRef},{...e.dataset,...e.$attrs},{"aria-disabled":e.disabled,class:[e.ns.be("menu","item"),e.ns.is("disabled",e.disabled)],tabindex:e.tabIndex,role:e.role,onClick:t[0]||(t[0]=i=>e.$emit("clickimpl",i)),onFocus:t[1]||(t[1]=(...i)=>e.handleFocus&&e.handleFocus(...i)),onKeydown:t[2]||(t[2]=pt((...i)=>e.handleKeydown&&e.handleKeydown(...i),["self"])),onMousedown:t[3]||(t[3]=(...i)=>e.handleMousedown&&e.handleMousedown(...i)),onPointermove:t[4]||(t[4]=i=>e.$emit("pointermove",i)),onPointerleave:t[5]||(t[5]=i=>e.$emit("pointerleave",i))}),[e.icon?(K(),ie(o,{key:0},{default:B(()=>[(K(),ie(Ot(e.icon)))]),_:1})):ae("v-if",!0),ue(e.$slots,"default")],16,sse)],64)}var cse=Be(ise,[["render",use],["__file","/home/runner/work/element-plus/element-plus/packages/components/dropdown/src/dropdown-item-impl.vue"]]);const mT=()=>{const e=tt("elDropdown",{}),t=X(()=>e==null?void 0:e.dropdownSize);return{elDropdown:e,_elDropdownSize:t}},dse=$({name:"ElDropdownItem",components:{ElDropdownCollectionItem:ese,ElRovingFocusItem:Bie,ElDropdownItemImpl:cse},inheritAttrs:!1,props:bT,emits:["pointermove","pointerleave","click"],setup(e,{emit:t,attrs:n}){const{elDropdown:r}=mT(),a=Tt(),l=J(null),o=X(()=>{var b,A;return(A=(b=c(l))==null?void 0:b.textContent)!=null?A:""}),{onItemEnter:i,onItemLeave:s}=tt(Qv,void 0),u=Pn(b=>(t("pointermove",b),b.defaultPrevented),e3(b=>{if(e.disabled){s(b);return}const A=b.currentTarget;A===document.activeElement||A.contains(document.activeElement)||(i(b),b.defaultPrevented||A==null||A.focus())})),d=Pn(b=>(t("pointerleave",b),b.defaultPrevented),e3(b=>{s(b)})),f=Pn(b=>{if(!e.disabled)return t("click",b),b.type!=="keydown"&&b.defaultPrevented},b=>{var A,h,m;if(e.disabled){b.stopImmediatePropagation();return}(A=r==null?void 0:r.hideOnClick)!=null&&A.value&&((h=r.handleClick)==null||h.call(r)),(m=r.commandHandler)==null||m.call(r,e.command,a,b)}),p=X(()=>({...e,...n}));return{handleClick:f,handlePointerMove:u,handlePointerLeave:d,textContent:o,propsAndAttrs:p}}});function fse(e,t,n,r,a,l){var o;const i=rt("el-dropdown-item-impl"),s=rt("el-roving-focus-item"),u=rt("el-dropdown-collection-item");return K(),ie(u,{disabled:e.disabled,"text-value":(o=e.textValue)!=null?o:e.textContent},{default:B(()=>[C(s,{focusable:!e.disabled},{default:B(()=>[C(i,Ut(e.propsAndAttrs,{onPointerleave:e.handlePointerLeave,onPointermove:e.handlePointerMove,onClickimpl:e.handleClick}),{default:B(()=>[ue(e.$slots,"default")]),_:3},16,["onPointerleave","onPointermove","onClickimpl"])]),_:3},8,["focusable"])]),_:3},8,["disabled","text-value"])}var ST=Be(dse,[["render",fse],["__file","/home/runner/work/element-plus/element-plus/packages/components/dropdown/src/dropdown-item.vue"]]);const pse=$({name:"ElDropdownMenu",props:Yie,setup(e){const t=ze("dropdown"),{_elDropdownSize:n}=mT(),r=n.value,{focusTrapRef:a,onKeydown:l}=tt(s2,void 0),{contentRef:o,role:i,triggerId:s}=tt(Qv,void 0),{collectionRef:u,getItems:d}=tt(tse,void 0),{rovingFocusGroupRef:f,rovingFocusGroupRootStyle:p,tabIndex:b,onBlur:A,onFocus:h,onMousedown:m}=tt(A2,void 0),{collectionRef:v}=tt(y2,void 0),S=X(()=>[t.b("menu"),t.bm("menu",r==null?void 0:r.value)]),y=Rv(o,u,a,f,v),W=Pn(V=>{var T;(T=e.onKeydown)==null||T.call(e,V)},V=>{const{currentTarget:T,code:P,target:x}=V;if(T.contains(x),ut.tab===P&&V.stopImmediatePropagation(),V.preventDefault(),x!==c(o)||!_ie.includes(P))return;const j=d().filter(L=>!L.disabled).map(L=>L.ref);hT.includes(P)&&j.reverse(),W2(j)});return{size:r,rovingFocusGroupRootStyle:p,tabIndex:b,dropdownKls:S,role:i,triggerId:s,dropdownListWrapperRef:y,handleKeydown:V=>{W(V),l(V)},onBlur:A,onFocus:h,onMousedown:m}}}),vse=["role","aria-labelledby"];function bse(e,t,n,r,a,l){return K(),F("ul",{ref:e.dropdownListWrapperRef,class:q(e.dropdownKls),style:lt(e.rovingFocusGroupRootStyle),tabindex:-1,role:e.role,"aria-labelledby":e.triggerId,onBlur:t[0]||(t[0]=(...o)=>e.onBlur&&e.onBlur(...o)),onFocus:t[1]||(t[1]=(...o)=>e.onFocus&&e.onFocus(...o)),onKeydown:t[2]||(t[2]=pt((...o)=>e.handleKeydown&&e.handleKeydown(...o),["self"])),onMousedown:t[3]||(t[3]=pt((...o)=>e.onMousedown&&e.onMousedown(...o),["self"]))},[ue(e.$slots,"default")],46,vse)}var yT=Be(pse,[["render",bse],["__file","/home/runner/work/element-plus/element-plus/packages/components/dropdown/src/dropdown-menu.vue"]]);const hse=qt(ose,{DropdownItem:ST,DropdownMenu:yT}),mse=Nn(ST),Sse=Nn(yT),yse={viewBox:"0 0 79 86",version:"1.1",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink"},Ase=["id"],Wse=["stop-color"],kse=["stop-color"],Vse=["id"],Pse=["stop-color"],Tse=["stop-color"],Kse=["id"],Nse={id:"Illustrations",stroke:"none","stroke-width":"1",fill:"none","fill-rule":"evenodd"},xse={id:"B-type",transform:"translate(-1268.000000, -535.000000)"},Xse={id:"Group-2",transform:"translate(1268.000000, 535.000000)"},gse=["fill"],wse=["fill"],jse={id:"Group-Copy",transform:"translate(34.500000, 31.500000) scale(-1, 1) rotate(-25.000000) translate(-34.500000, -31.500000) translate(7.000000, 10.000000)"},Lse=["fill"],qse=["fill"],Use=["fill"],Ose=["fill"],Rse=["fill"],Jse={id:"Rectangle-Copy-17",transform:"translate(53.000000, 45.000000)"},Fse=["fill","xlink:href"],zse=["fill","mask"],Hse=["fill"],Zse=$({name:"ImgEmpty"}),Gse=$({...Zse,setup(e){const t=ze("empty"),n=Cr();return(r,a)=>(K(),F("svg",yse,[z("defs",null,[z("linearGradient",{id:`linearGradient-1-${c(n)}`,x1:"38.8503086%",y1:"0%",x2:"61.1496914%",y2:"100%"},[z("stop",{"stop-color":`var(${c(t).cssVarBlockName("fill-color-1")})`,offset:"0%"},null,8,Wse),z("stop",{"stop-color":`var(${c(t).cssVarBlockName("fill-color-4")})`,offset:"100%"},null,8,kse)],8,Ase),z("linearGradient",{id:`linearGradient-2-${c(n)}`,x1:"0%",y1:"9.5%",x2:"100%",y2:"90.5%"},[z("stop",{"stop-color":`var(${c(t).cssVarBlockName("fill-color-1")})`,offset:"0%"},null,8,Pse),z("stop",{"stop-color":`var(${c(t).cssVarBlockName("fill-color-6")})`,offset:"100%"},null,8,Tse)],8,Vse),z("rect",{id:`path-3-${c(n)}`,x:"0",y:"0",width:"17",height:"36"},null,8,Kse)]),z("g",Nse,[z("g",xse,[z("g",Xse,[z("path",{id:"Oval-Copy-2",d:"M39.5,86 C61.3152476,86 79,83.9106622 79,81.3333333 C79,78.7560045 57.3152476,78 35.5,78 C13.6847524,78 0,78.7560045 0,81.3333333 C0,83.9106622 17.6847524,86 39.5,86 Z",fill:`var(${c(t).cssVarBlockName("fill-color-3")})`},null,8,gse),z("polygon",{id:"Rectangle-Copy-14",fill:`var(${c(t).cssVarBlockName("fill-color-7")})`,transform:"translate(27.500000, 51.500000) scale(1, -1) translate(-27.500000, -51.500000) ",points:"13 58 53 58 42 45 2 45"},null,8,wse),z("g",jse,[z("polygon",{id:"Rectangle-Copy-10",fill:`var(${c(t).cssVarBlockName("fill-color-7")})`,transform:"translate(11.500000, 5.000000) scale(1, -1) translate(-11.500000, -5.000000) ",points:"2.84078316e-14 3 18 3 23 7 5 7"},null,8,Lse),z("polygon",{id:"Rectangle-Copy-11",fill:`var(${c(t).cssVarBlockName("fill-color-5")})`,points:"-3.69149156e-15 7 38 7 38 43 -3.69149156e-15 43"},null,8,qse),z("rect",{id:"Rectangle-Copy-12",fill:`url(#linearGradient-1-${c(n)})`,transform:"translate(46.500000, 25.000000) scale(-1, 1) translate(-46.500000, -25.000000) ",x:"38",y:"7",width:"17",height:"36"},null,8,Use),z("polygon",{id:"Rectangle-Copy-13",fill:`var(${c(t).cssVarBlockName("fill-color-2")})`,transform:"translate(39.500000, 3.500000) scale(-1, 1) translate(-39.500000, -3.500000) ",points:"24 7 41 7 55 -3.63806207e-12 38 -3.63806207e-12"},null,8,Ose)]),z("rect",{id:"Rectangle-Copy-15",fill:`url(#linearGradient-2-${c(n)})`,x:"13",y:"45",width:"40",height:"36"},null,8,Rse),z("g",Jse,[z("use",{id:"Mask",fill:`var(${c(t).cssVarBlockName("fill-color-8")})`,transform:"translate(8.500000, 18.000000) scale(-1, 1) translate(-8.500000, -18.000000) ","xlink:href":`#path-3-${c(n)}`},null,8,Fse),z("polygon",{id:"Rectangle-Copy",fill:`var(${c(t).cssVarBlockName("fill-color-9")})`,mask:`url(#mask-4-${c(n)})`,transform:"translate(12.000000, 9.000000) scale(-1, 1) translate(-12.000000, -9.000000) ",points:"7 0 24 0 20 18 7 16.5"},null,8,zse)]),z("polygon",{id:"Rectangle-Copy-18",fill:`var(${c(t).cssVarBlockName("fill-color-2")})`,transform:"translate(66.000000, 51.500000) scale(-1, 1) translate(-66.000000, -51.500000) ",points:"62 45 79 45 70 58 53 58"},null,8,Hse)])])])]))}});var Cse=Be(Gse,[["__file","/home/runner/work/element-plus/element-plus/packages/components/empty/src/img-empty.vue"]]);const Mse=Ie({image:{type:String,default:""},imageSize:Number,description:{type:String,default:""}}),Dse=["src"],Ese={key:1},Ise=$({name:"ElEmpty"}),Bse=$({...Ise,props:Mse,setup(e){const t=e,{t:n}=It(),r=ze("empty"),a=X(()=>t.description||n("el.table.emptyText")),l=X(()=>({width:Ln(t.imageSize)}));return(o,i)=>(K(),F("div",{class:q(c(r).b())},[z("div",{class:q(c(r).e("image")),style:lt(c(l))},[o.image?(K(),F("img",{key:0,src:o.image,ondragstart:"return false"},null,8,Dse)):ue(o.$slots,"image",{key:1},()=>[C(Cse)])],6),z("div",{class:q(c(r).e("description"))},[o.$slots.description?ue(o.$slots,"description",{key:0}):(K(),F("p",Ese,je(c(a)),1))],2),o.$slots.default?(K(),F("div",{key:0,class:q(c(r).e("bottom"))},[ue(o.$slots,"default")],2)):ae("v-if",!0)],2))}});var Yse=Be(Bse,[["__file","/home/runner/work/element-plus/element-plus/packages/components/empty/src/empty.vue"]]);const AT=qt(Yse),Qse=Ie({urlList:{type:ve(Array),default:()=>An([])},zIndex:{type:Number},initialIndex:{type:Number,default:0},infinite:{type:Boolean,default:!0},hideOnClickModal:Boolean,teleported:Boolean,closeOnPressEscape:{type:Boolean,default:!0},zoomRate:{type:Number,default:1.2},minScale:{type:Number,default:.2},maxScale:{type:Number,default:7}}),_se={close:()=>!0,switch:e=>mt(e),rotate:e=>mt(e)},$se=["src"],eue=$({name:"ElImageViewer"}),tue=$({...eue,props:Qse,emits:_se,setup(e,{expose:t,emit:n}){const r=e,a={CONTAIN:{name:"contain",icon:kr(Zk)},ORIGINAL:{name:"original",icon:kr(KI)}},{t:l}=It(),o=ze("image-viewer"),{nextZIndex:i}=su(),s=J(),u=J([]),d=ev(),f=J(!0),p=J(r.initialIndex),b=nn(a.CONTAIN),A=J({scale:1,deg:0,offsetX:0,offsetY:0,enableTransition:!1}),h=X(()=>{const{urlList:O}=r;return O.length<=1}),m=X(()=>p.value===0),v=X(()=>p.value===r.urlList.length-1),S=X(()=>r.urlList[p.value]),y=X(()=>[o.e("btn"),o.e("prev"),o.is("disabled",!r.infinite&&m.value)]),W=X(()=>[o.e("btn"),o.e("next"),o.is("disabled",!r.infinite&&v.value)]),k=X(()=>{const{scale:O,deg:D,offsetX:Y,offsetY:Q,enableTransition:ee}=A.value;let oe=Y/O,Ne=Q/O;switch(D%360){case 90:case-270:[oe,Ne]=[Ne,-oe];break;case 180:case-180:[oe,Ne]=[-oe,-Ne];break;case 270:case-90:[oe,Ne]=[-Ne,oe];break}const pe={transform:`scale(${O}) rotate(${D}deg) translate(${oe}px, ${Ne}px)`,transition:ee?"transform .3s":""};return b.value.name===a.CONTAIN.name&&(pe.maxWidth=pe.maxHeight="100%"),pe}),V=X(()=>mt(r.zIndex)?r.zIndex:i());function T(){x(),n("close")}function P(){const O=si(Y=>{switch(Y.code){case ut.esc:r.closeOnPressEscape&&T();break;case ut.space:R();break;case ut.left:G();break;case ut.up:H("zoomIn");break;case ut.right:U();break;case ut.down:H("zoomOut");break}}),D=si(Y=>{const Q=Y.deltaY||Y.deltaX;H(Q<0?"zoomIn":"zoomOut",{zoomRate:r.zoomRate,enableTransition:!1})});d.run(()=>{hn(document,"keydown",O),hn(document,"wheel",D)})}function x(){d.stop()}function g(){f.value=!1}function j(O){f.value=!1,O.target.alt=l("el.image.error")}function L(O){if(f.value||O.button!==0||!s.value)return;A.value.enableTransition=!1;const{offsetX:D,offsetY:Y}=A.value,Q=O.pageX,ee=O.pageY,oe=si(pe=>{A.value={...A.value,offsetX:D+pe.pageX-Q,offsetY:Y+pe.pageY-ee}}),Ne=hn(document,"mousemove",oe);hn(document,"mouseup",()=>{Ne()}),O.preventDefault()}function w(){A.value={scale:1,deg:0,offsetX:0,offsetY:0,enableTransition:!1}}function R(){if(f.value)return;const O=Nc(a),D=Object.values(a),Y=b.value.name,ee=(D.findIndex(oe=>oe.name===Y)+1)%O.length;b.value=a[O[ee]],w()}function Z(O){const D=r.urlList.length;p.value=(O+D)%D}function G(){m.value&&!r.infinite||Z(p.value-1)}function U(){v.value&&!r.infinite||Z(p.value+1)}function H(O,D={}){if(f.value)return;const{minScale:Y,maxScale:Q}=r,{zoomRate:ee,rotateDeg:oe,enableTransition:Ne}={zoomRate:r.zoomRate,rotateDeg:90,enableTransition:!0,...D};switch(O){case"zoomOut":A.value.scale>Y&&(A.value.scale=Number.parseFloat((A.value.scale/ee).toFixed(3)));break;case"zoomIn":A.value.scale<Q&&(A.value.scale=Number.parseFloat((A.value.scale*ee).toFixed(3)));break;case"clockwise":A.value.deg+=oe,n("rotate",A.value.deg);break;case"anticlockwise":A.value.deg-=oe,n("rotate",A.value.deg);break}A.value.enableTransition=Ne}return Ve(S,()=>{at(()=>{const O=u.value[0];O!=null&&O.complete||(f.value=!0)})}),Ve(p,O=>{w(),n("switch",O)}),At(()=>{var O,D;P(),(D=(O=s.value)==null?void 0:O.focus)==null||D.call(O)}),t({setActiveItem:Z}),(O,D)=>(K(),ie(au,{to:"body",disabled:!O.teleported},[C(fn,{name:"viewer-fade",appear:""},{default:B(()=>[z("div",{ref_key:"wrapper",ref:s,tabindex:-1,class:q(c(o).e("wrapper")),style:lt({zIndex:c(V)})},[z("div",{class:q(c(o).e("mask")),onClick:D[0]||(D[0]=pt(Y=>O.hideOnClickModal&&T(),["self"]))},null,2),ae(" CLOSE "),z("span",{class:q([c(o).e("btn"),c(o).e("close")]),onClick:T},[C(c(it),null,{default:B(()=>[C(c(ma))]),_:1})],2),ae(" ARROW "),c(h)?ae("v-if",!0):(K(),F(Qe,{key:0},[z("span",{class:q(c(y)),onClick:G},[C(c(it),null,{default:B(()=>[C(c(Wo))]),_:1})],2),z("span",{class:q(c(W)),onClick:U},[C(c(it),null,{default:B(()=>[C(c(Vr))]),_:1})],2)],64)),ae(" ACTIONS "),z("div",{class:q([c(o).e("btn"),c(o).e("actions")])},[z("div",{class:q(c(o).e("actions__inner"))},[C(c(it),{onClick:D[1]||(D[1]=Y=>H("zoomOut"))},{default:B(()=>[C(c(NB))]),_:1}),C(c(it),{onClick:D[2]||(D[2]=Y=>H("zoomIn"))},{default:B(()=>[C(c(Dk))]),_:1}),z("i",{class:q(c(o).e("actions__divider"))},null,2),C(c(it),{onClick:R},{default:B(()=>[(K(),ie(Ot(c(b).icon)))]),_:1}),z("i",{class:q(c(o).e("actions__divider"))},null,2),C(c(it),{onClick:D[3]||(D[3]=Y=>H("anticlockwise"))},{default:B(()=>[C(c(vI))]),_:1}),C(c(it),{onClick:D[4]||(D[4]=Y=>H("clockwise"))},{default:B(()=>[C(c(AI))]),_:1})],2)],2),ae(" CANVAS "),z("div",{class:q(c(o).e("canvas"))},[(K(!0),F(Qe,null,Nt(O.urlList,(Y,Q)=>Vt((K(),F("img",{ref_for:!0,ref:ee=>u.value[Q]=ee,key:Y,src:Y,style:lt(c(k)),class:q(c(o).e("img")),onLoad:g,onError:j,onMousedown:L},null,46,$se)),[[Ct,Q===p.value]])),128))],2),ue(O.$slots,"default")],6)]),_:3})],8,["disabled"]))}});var nue=Be(tue,[["__file","/home/runner/work/element-plus/element-plus/packages/components/image-viewer/src/image-viewer.vue"]]);const WT=qt(nue),rue=Ie({hideOnClickModal:Boolean,src:{type:String,default:""},fit:{type:String,values:["","contain","cover","fill","none","scale-down"],default:""},loading:{type:String,values:["eager","lazy"]},lazy:Boolean,scrollContainer:{type:ve([String,Object])},previewSrcList:{type:ve(Array),default:()=>An([])},previewTeleported:Boolean,zIndex:{type:Number},initialIndex:{type:Number,default:0},infinite:{type:Boolean,default:!0},closeOnPressEscape:{type:Boolean,default:!0},zoomRate:{type:Number,default:1.2},minScale:{type:Number,default:.2},maxScale:{type:Number,default:7}}),aue={load:e=>e instanceof Event,error:e=>e instanceof Event,switch:e=>mt(e),close:()=>!0,show:()=>!0},lue=["src","loading"],oue={key:0},iue=$({name:"ElImage",inheritAttrs:!1}),sue=$({...iue,props:rue,emits:aue,setup(e,{emit:t}){const n=e;let r="";const{t:a}=It(),l=ze("image"),o=Xo(),i=Gm(),s=J(),u=J(!1),d=J(!0),f=J(!1),p=J(),b=J(),A=Mt&&"loading"in HTMLImageElement.prototype;let h,m;const v=X(()=>[l.e("inner"),W.value&&l.e("preview"),d.value&&l.is("loading")]),S=X(()=>o.style),y=X(()=>{const{fit:H}=n;return Mt&&H?{objectFit:H}:{}}),W=X(()=>{const{previewSrcList:H}=n;return Array.isArray(H)&&H.length>0}),k=X(()=>{const{previewSrcList:H,initialIndex:O}=n;let D=O;return O>H.length-1&&(D=0),D}),V=X(()=>n.loading==="eager"?!1:!A&&n.loading==="lazy"||n.lazy),T=()=>{!Mt||(d.value=!0,u.value=!1,s.value=n.src)};function P(H){d.value=!1,u.value=!1,t("load",H)}function x(H){d.value=!1,u.value=!0,t("error",H)}function g(){AJ(p.value,b.value)&&(T(),w())}const j=Y0(g,200,!0);async function L(){var H;if(!Mt)return;await at();const{scrollContainer:O}=n;ha(O)?b.value=O:Pt(O)&&O!==""?b.value=(H=document.querySelector(O))!=null?H:void 0:p.value&&(b.value=Om(p.value)),b.value&&(h=hn(b,"scroll",j),setTimeout(()=>g(),100))}function w(){!Mt||!b.value||!j||(h==null||h(),b.value=void 0)}function R(H){if(!!H.ctrlKey){if(H.deltaY<0)return H.preventDefault(),!1;if(H.deltaY>0)return H.preventDefault(),!1}}function Z(){!W.value||(m=hn("wheel",R,{passive:!1}),r=document.body.style.overflow,document.body.style.overflow="hidden",f.value=!0,t("show"))}function G(){m==null||m(),document.body.style.overflow=r,f.value=!1,t("close")}function U(H){t("switch",H)}return Ve(()=>n.src,()=>{V.value?(d.value=!0,u.value=!1,w(),L()):T()}),At(()=>{V.value?L():T()}),(H,O)=>(K(),F("div",{ref_key:"container",ref:p,class:q([c(l).b(),H.$attrs.class]),style:lt(c(S))},[u.value?ue(H.$slots,"error",{key:0},()=>[z("div",{class:q(c(l).e("error"))},je(c(a)("el.image.error")),3)]):(K(),F(Qe,{key:1},[s.value!==void 0?(K(),F("img",Ut({key:0},c(i),{src:s.value,loading:H.loading,style:c(y),class:c(v),onClick:Z,onLoad:P,onError:x}),null,16,lue)):ae("v-if",!0),d.value?(K(),F("div",{key:1,class:q(c(l).e("wrapper"))},[ue(H.$slots,"placeholder",{},()=>[z("div",{class:q(c(l).e("placeholder"))},null,2)])],2)):ae("v-if",!0)],64)),c(W)?(K(),F(Qe,{key:2},[f.value?(K(),ie(c(WT),{key:0,"z-index":H.zIndex,"initial-index":c(k),infinite:H.infinite,"zoom-rate":H.zoomRate,"min-scale":H.minScale,"max-scale":H.maxScale,"url-list":H.previewSrcList,"hide-on-click-modal":H.hideOnClickModal,teleported:H.previewTeleported,"close-on-press-escape":H.closeOnPressEscape,onClose:G,onSwitch:U},{default:B(()=>[H.$slots.viewer?(K(),F("div",oue,[ue(H.$slots,"viewer")])):ae("v-if",!0)]),_:3},8,["z-index","initial-index","infinite","zoom-rate","min-scale","max-scale","url-list","hide-on-click-modal","teleported","close-on-press-escape"])):ae("v-if",!0)],64)):ae("v-if",!0)],6))}});var uue=Be(sue,[["__file","/home/runner/work/element-plus/element-plus/packages/components/image/src/image.vue"]]);const cue=qt(uue),due=Ie({id:{type:String,default:void 0},step:{type:Number,default:1},stepStrictly:Boolean,max:{type:Number,default:Number.POSITIVE_INFINITY},min:{type:Number,default:Number.NEGATIVE_INFINITY},modelValue:Number,readonly:Boolean,disabled:Boolean,size:ur,controls:{type:Boolean,default:!0},controlsPosition:{type:String,default:"",values:["","right"]},valueOnClear:{type:[String,Number,null],validator:e=>e===null||mt(e)||["min","max"].includes(e),default:null},name:String,label:String,placeholder:String,precision:{type:Number,validator:e=>e>=0&&e===Number.parseInt(`${e}`,10)},validateEvent:{type:Boolean,default:!0}}),fue={[mn]:(e,t)=>t!==e,blur:e=>e instanceof FocusEvent,focus:e=>e instanceof FocusEvent,[Pr]:e=>mt(e)||On(e),[Rt]:e=>mt(e)||On(e)},pue=["aria-label","onKeydown"],vue=["aria-label","onKeydown"],bue=$({name:"ElInputNumber"}),hue=$({...bue,props:due,emits:fue,setup(e,{expose:t,emit:n}){const r=e,{t:a}=It(),l=ze("input-number"),o=J(),i=Bt({currentValue:r.modelValue,userInput:null}),{formItem:s}=wr(),u=X(()=>mt(r.modelValue)&&r.modelValue<=r.min),d=X(()=>mt(r.modelValue)&&r.modelValue>=r.max),f=X(()=>{const w=v(r.step);return Hn(r.precision)?Math.max(v(r.modelValue),w):(w>r.precision,r.precision)}),p=X(()=>r.controls&&r.controlsPosition==="right"),b=Cn(),A=Br(),h=X(()=>{if(i.userInput!==null)return i.userInput;let w=i.currentValue;if(On(w))return"";if(mt(w)){if(Number.isNaN(w))return"";Hn(r.precision)||(w=w.toFixed(r.precision))}return w}),m=(w,R)=>{if(Hn(R)&&(R=f.value),R===0)return Math.round(w);let Z=String(w);const G=Z.indexOf(".");if(G===-1||!Z.replace(".","").split("")[G+R])return w;const O=Z.length;return Z.charAt(O-1)==="5"&&(Z=`${Z.slice(0,Math.max(0,O-1))}6`),Number.parseFloat(Number(Z).toFixed(R))},v=w=>{if(On(w))return 0;const R=w.toString(),Z=R.indexOf(".");let G=0;return Z!==-1&&(G=R.length-Z-1),G},S=(w,R=1)=>mt(w)?m(w+r.step*R):i.currentValue,y=()=>{if(r.readonly||A.value||d.value)return;const w=Number(h.value)||0,R=S(w);V(R),n(Pr,i.currentValue)},W=()=>{if(r.readonly||A.value||u.value)return;const w=Number(h.value)||0,R=S(w,-1);V(R),n(Pr,i.currentValue)},k=(w,R)=>{const{max:Z,min:G,step:U,precision:H,stepStrictly:O,valueOnClear:D}=r;Z<G&&Gn("InputNumber","min should not be greater than max.");let Y=Number(w);if(On(w)||Number.isNaN(Y))return null;if(w===""){if(D===null)return null;Y=Pt(D)?{min:G,max:Z}[D]:D}return O&&(Y=m(Math.round(Y/U)*U,H)),Hn(H)||(Y=m(Y,H)),(Y>Z||Y<G)&&(Y=Y>Z?Z:G,R&&n(Rt,Y)),Y},V=(w,R=!0)=>{var Z;const G=i.currentValue,U=k(w);if(!R){n(Rt,U);return}G!==U&&(i.userInput=null,n(Rt,U),n(mn,U,G),r.validateEvent&&((Z=s==null?void 0:s.validate)==null||Z.call(s,"change").catch(H=>void 0)),i.currentValue=U)},T=w=>{i.userInput=w;const R=w===""?null:Number(w);n(Pr,R),V(R,!1)},P=w=>{const R=w!==""?Number(w):"";(mt(R)&&!Number.isNaN(R)||w==="")&&V(R),i.userInput=null},x=()=>{var w,R;(R=(w=o.value)==null?void 0:w.focus)==null||R.call(w)},g=()=>{var w,R;(R=(w=o.value)==null?void 0:w.blur)==null||R.call(w)},j=w=>{n("focus",w)},L=w=>{var R;n("blur",w),r.validateEvent&&((R=s==null?void 0:s.validate)==null||R.call(s,"blur").catch(Z=>void 0))};return Ve(()=>r.modelValue,w=>{const R=k(i.userInput),Z=k(w,!0);!mt(R)&&(!R||R!==Z)&&(i.currentValue=Z,i.userInput=null)},{immediate:!0}),At(()=>{var w;const{min:R,max:Z,modelValue:G}=r,U=(w=o.value)==null?void 0:w.input;if(U.setAttribute("role","spinbutton"),Number.isFinite(Z)?U.setAttribute("aria-valuemax",String(Z)):U.removeAttribute("aria-valuemax"),Number.isFinite(R)?U.setAttribute("aria-valuemin",String(R)):U.removeAttribute("aria-valuemin"),U.setAttribute("aria-valuenow",i.currentValue||i.currentValue===0?String(i.currentValue):""),U.setAttribute("aria-disabled",String(A.value)),!mt(G)&&G!=null){let H=Number(G);Number.isNaN(H)&&(H=null),n(Rt,H)}}),la(()=>{var w,R;const Z=(w=o.value)==null?void 0:w.input;Z==null||Z.setAttribute("aria-valuenow",`${(R=i.currentValue)!=null?R:""}`)}),t({focus:x,blur:g}),(w,R)=>(K(),F("div",{class:q([c(l).b(),c(l).m(c(b)),c(l).is("disabled",c(A)),c(l).is("without-controls",!w.controls),c(l).is("controls-right",c(p))]),onDragstart:R[1]||(R[1]=pt(()=>{},["prevent"]))},[w.controls?Vt((K(),F("span",{key:0,role:"button","aria-label":c(a)("el.inputNumber.decrease"),class:q([c(l).e("decrease"),c(l).is("disabled",c(u))]),onKeydown:Dt(W,["enter"])},[C(c(it),null,{default:B(()=>[c(p)?(K(),ie(c(Lo),{key:0})):(K(),ie(c(Gk),{key:1}))]),_:1})],42,pue)),[[c(gp),W]]):ae("v-if",!0),w.controls?Vt((K(),F("span",{key:1,role:"button","aria-label":c(a)("el.inputNumber.increase"),class:q([c(l).e("increase"),c(l).is("disabled",c(d))]),onKeydown:Dt(y,["enter"])},[C(c(it),null,{default:B(()=>[c(p)?(K(),ie(c(Uv),{key:0})):(K(),ie(c(zm),{key:1}))]),_:1})],42,vue)),[[c(gp),y]]):ae("v-if",!0),C(c(vr),{id:w.id,ref_key:"input",ref:o,type:"number",step:w.step,"model-value":c(h),placeholder:w.placeholder,readonly:w.readonly,disabled:c(A),size:c(b),max:w.max,min:w.min,name:w.name,label:w.label,"validate-event":!1,onWheel:R[0]||(R[0]=pt(()=>{},["prevent"])),onKeydown:[Dt(pt(y,["prevent"]),["up"]),Dt(pt(W,["prevent"]),["down"])],onBlur:L,onFocus:j,onInput:T,onChange:P},null,8,["id","step","model-value","placeholder","readonly","disabled","size","max","min","name","label","onKeydown"])],34))}});var mue=Be(hue,[["__file","/home/runner/work/element-plus/element-plus/packages/components/input-number/src/input-number.vue"]]);const kT=qt(mue),Sue=Ie({type:{type:String,values:["primary","success","warning","info","danger","default"],default:"default"},underline:{type:Boolean,default:!0},disabled:{type:Boolean,default:!1},href:{type:String,default:""},icon:{type:un}}),yue={click:e=>e instanceof MouseEvent},Aue=["href"],Wue=$({name:"ElLink"}),kue=$({...Wue,props:Sue,emits:yue,setup(e,{emit:t}){const n=e,r=ze("link"),a=X(()=>[r.b(),r.m(n.type),r.is("disabled",n.disabled),r.is("underline",n.underline&&!n.disabled)]);function l(o){n.disabled||t("click",o)}return(o,i)=>(K(),F("a",{class:q(c(a)),href:o.disabled||!o.href?void 0:o.href,onClick:l},[o.icon?(K(),ie(c(it),{key:0},{default:B(()=>[(K(),ie(Ot(o.icon)))]),_:1})):ae("v-if",!0),o.$slots.default?(K(),F("span",{key:1,class:q(c(r).e("inner"))},[ue(o.$slots,"default")],2)):ae("v-if",!0),o.$slots.icon?ue(o.$slots,"icon",{key:2}):ae("v-if",!0)],10,Aue))}});var Vue=Be(kue,[["__file","/home/runner/work/element-plus/element-plus/packages/components/link/src/link.vue"]]);const Pue=qt(Vue);class Tue{constructor(t,n){this.parent=t,this.domNode=n,this.subIndex=0,this.subIndex=0,this.init()}init(){this.subMenuItems=this.domNode.querySelectorAll("li"),this.addListeners()}gotoSubIndex(t){t===this.subMenuItems.length?t=0:t<0&&(t=this.subMenuItems.length-1),this.subMenuItems[t].focus(),this.subIndex=t}addListeners(){const t=this.parent.domNode;Array.prototype.forEach.call(this.subMenuItems,n=>{n.addEventListener("keydown",r=>{let a=!1;switch(r.code){case ut.down:{this.gotoSubIndex(this.subIndex+1),a=!0;break}case ut.up:{this.gotoSubIndex(this.subIndex-1),a=!0;break}case ut.tab:{Pf(t,"mouseleave");break}case ut.enter:case ut.space:{a=!0,r.currentTarget.click();break}}return a&&(r.preventDefault(),r.stopPropagation()),!1})})}}class Kue{constructor(t,n){this.domNode=t,this.submenu=null,this.submenu=null,this.init(n)}init(t){this.domNode.setAttribute("tabindex","0");const n=this.domNode.querySelector(`.${t}-menu`);n&&(this.submenu=new Tue(this,n)),this.addListeners()}addListeners(){this.domNode.addEventListener("keydown",t=>{let n=!1;switch(t.code){case ut.down:{Pf(t.currentTarget,"mouseenter"),this.submenu&&this.submenu.gotoSubIndex(0),n=!0;break}case ut.up:{Pf(t.currentTarget,"mouseenter"),this.submenu&&this.submenu.gotoSubIndex(this.submenu.subMenuItems.length-1),n=!0;break}case ut.tab:{Pf(t.currentTarget,"mouseleave");break}case ut.enter:case ut.space:{n=!0,t.currentTarget.click();break}}n&&t.preventDefault()})}}class Nue{constructor(t,n){this.domNode=t,this.init(n)}init(t){const n=this.domNode.childNodes;Array.from(n).forEach(r=>{r.nodeType===1&&new Kue(r,t)})}}const xue=$({name:"ElMenuCollapseTransition",setup(){const e=ze("menu");return{listeners:{onBeforeEnter:n=>n.style.opacity="0.2",onEnter(n,r){Ea(n,`${e.namespace.value}-opacity-transition`),n.style.opacity="1",r()},onAfterEnter(n){Hr(n,`${e.namespace.value}-opacity-transition`),n.style.opacity=""},onBeforeLeave(n){n.dataset||(n.dataset={}),La(n,e.m("collapse"))?(Hr(n,e.m("collapse")),n.dataset.oldOverflow=n.style.overflow,n.dataset.scrollWidth=n.clientWidth.toString(),Ea(n,e.m("collapse"))):(Ea(n,e.m("collapse")),n.dataset.oldOverflow=n.style.overflow,n.dataset.scrollWidth=n.clientWidth.toString(),Hr(n,e.m("collapse"))),n.style.width=`${n.scrollWidth}px`,n.style.overflow="hidden"},onLeave(n){Ea(n,"horizontal-collapse-transition"),n.style.width=`${n.dataset.scrollWidth}px`}}}}});function Xue(e,t,n,r,a,l){return K(),ie(fn,Ut({mode:"out-in"},e.listeners),{default:B(()=>[ue(e.$slots,"default")]),_:3},16)}var gue=Be(xue,[["render",Xue],["__file","/home/runner/work/element-plus/element-plus/packages/components/menu/src/menu-collapse-transition.vue"]]);function VT(e,t){const n=X(()=>{let a=e.parent;const l=[t.value];for(;a.type.name!=="ElMenu";)a.props.index&&l.unshift(a.props.index),a=a.parent;return l});return{parentMenu:X(()=>{let a=e.parent;for(;a&&!["ElMenu","ElSubMenu"].includes(a.type.name);)a=a.parent;return a}),indexPath:n}}function wue(e){return X(()=>{const n=e.backgroundColor;return n?new eP(n).shade(20).toString():""})}const PT=(e,t)=>{const n=ze("menu");return X(()=>n.cssVarBlock({"text-color":e.textColor||"","hover-text-color":e.textColor||"","bg-color":e.backgroundColor||"","hover-bg-color":wue(e).value||"","active-color":e.activeTextColor||"",level:`${t}`}))},jue=Ie({index:{type:String,required:!0},showTimeout:{type:Number,default:300},hideTimeout:{type:Number,default:300},popperClass:String,disabled:Boolean,popperAppendToBody:{type:Boolean,default:void 0},teleported:{type:Boolean,default:void 0},popperOffset:{type:Number,default:6},expandCloseIcon:{type:un},expandOpenIcon:{type:un},collapseCloseIcon:{type:un},collapseOpenIcon:{type:un}}),of="ElSubMenu";var k2=$({name:of,props:jue,setup(e,{slots:t,expose:n}){rl({from:"popper-append-to-body",replacement:"teleported",scope:of,version:"2.3.0",ref:"https://element-plus.org/en-US/component/menu.html#submenu-attributes"},X(()=>e.popperAppendToBody!==void 0));const r=Tt(),{indexPath:a,parentMenu:l}=VT(r,X(()=>e.index)),o=ze("menu"),i=ze("sub-menu"),s=tt("rootMenu");s||Gn(of,"can not inject root menu");const u=tt(`subMenu:${l.value.uid}`);u||Gn(of,"can not inject sub menu");const d=J({}),f=J({});let p;const b=J(!1),A=J(),h=J(null),m=X(()=>P.value==="horizontal"&&S.value?"bottom-start":"right-start"),v=X(()=>P.value==="horizontal"&&S.value||P.value==="vertical"&&!s.props.collapse?e.expandCloseIcon&&e.expandOpenIcon?V.value?e.expandOpenIcon:e.expandCloseIcon:Lo:e.collapseCloseIcon&&e.collapseOpenIcon?V.value?e.collapseOpenIcon:e.collapseCloseIcon:Vr),S=X(()=>u.level===0),y=X(()=>{var G;const U=(G=e.teleported)!=null?G:e.popperAppendToBody;return U===void 0?S.value:U}),W=X(()=>s.props.collapse?`${o.namespace.value}-zoom-in-left`:`${o.namespace.value}-zoom-in-top`),k=X(()=>P.value==="horizontal"&&S.value?["bottom-start","bottom-end","top-start","top-end","right-start","left-start"]:["right-start","right","right-end","left-start","bottom-start","bottom-end","top-start","top-end"]),V=X(()=>s.openedMenus.includes(e.index)),T=X(()=>{let G=!1;return Object.values(d.value).forEach(U=>{U.active&&(G=!0)}),Object.values(f.value).forEach(U=>{U.active&&(G=!0)}),G}),P=X(()=>s.props.mode),x=Bt({index:e.index,indexPath:a,active:T}),g=PT(s.props,u.level+1),j=()=>{var G,U,H;return(H=(U=(G=h.value)==null?void 0:G.popperRef)==null?void 0:U.popperInstanceRef)==null?void 0:H.destroy()},L=G=>{G||j()},w=()=>{s.props.menuTrigger==="hover"&&s.props.mode==="horizontal"||s.props.collapse&&s.props.mode==="vertical"||e.disabled||s.handleSubMenuClick({index:e.index,indexPath:a.value,active:T.value})},R=(G,U=e.showTimeout)=>{var H;G.type!=="focus"&&(s.props.menuTrigger==="click"&&s.props.mode==="horizontal"||!s.props.collapse&&s.props.mode==="vertical"||e.disabled||(u.mouseInChild.value=!0,p==null||p(),{stop:p}=Ao(()=>{s.openMenu(e.index,a.value)},U),y.value&&((H=l.value.vnode.el)==null||H.dispatchEvent(new MouseEvent("mouseenter")))))},Z=(G=!1)=>{var U,H;s.props.menuTrigger==="click"&&s.props.mode==="horizontal"||!s.props.collapse&&s.props.mode==="vertical"||(p==null||p(),u.mouseInChild.value=!1,{stop:p}=Ao(()=>!b.value&&s.closeMenu(e.index,a.value),e.hideTimeout),y.value&&G&&((U=r.parent)==null?void 0:U.type.name)==="ElSubMenu"&&((H=u.handleMouseleave)==null||H.call(u,!0)))};Ve(()=>s.props.collapse,G=>L(Boolean(G)));{const G=H=>{f.value[H.index]=H},U=H=>{delete f.value[H.index]};zt(`subMenu:${r.uid}`,{addSubMenu:G,removeSubMenu:U,handleMouseleave:Z,mouseInChild:b,level:u.level+1})}return n({opened:V}),At(()=>{s.addSubMenu(x),u.addSubMenu(x)}),tn(()=>{u.removeSubMenu(x),s.removeSubMenu(x)}),()=>{var G;const U=[(G=t.title)==null?void 0:G.call(t),st(it,{class:i.e("icon-arrow"),style:{transform:V.value?e.expandCloseIcon&&e.expandOpenIcon||e.collapseCloseIcon&&e.collapseOpenIcon&&s.props.collapse?"none":"rotateZ(180deg)":"none"}},{default:()=>Pt(v.value)?st(r.appContext.components[v.value]):st(v.value)})],H=s.isMenuPopup?st(Xr,{ref:h,visible:V.value,effect:"light",pure:!0,offset:e.popperOffset,showArrow:!1,persistent:!0,popperClass:e.popperClass,placement:m.value,teleported:y.value,fallbackPlacements:k.value,transition:W.value,gpuAcceleration:!1},{content:()=>{var O;return st("div",{class:[o.m(P.value),o.m("popup-container"),e.popperClass],onMouseenter:D=>R(D,100),onMouseleave:()=>Z(!0),onFocus:D=>R(D,100)},[st("ul",{class:[o.b(),o.m("popup"),o.m(`popup-${m.value}`)],style:g.value},[(O=t.default)==null?void 0:O.call(t)])])},default:()=>st("div",{class:i.e("title"),onClick:w},U)}):st(Qe,{},[st("div",{class:i.e("title"),ref:A,onClick:w},U),st(Yv,{},{default:()=>{var O;return Vt(st("ul",{role:"menu",class:[o.b(),o.m("inline")],style:g.value},[(O=t.default)==null?void 0:O.call(t)]),[[Ct,V.value]])}})]);return st("li",{class:[i.b(),i.is("active",T.value),i.is("opened",V.value),i.is("disabled",e.disabled)],role:"menuitem",ariaHaspopup:!0,ariaExpanded:V.value,onMouseenter:R,onMouseleave:()=>Z(!0),onFocus:R},[H])}}});const Lue=Ie({mode:{type:String,values:["horizontal","vertical"],default:"vertical"},defaultActive:{type:String,default:""},defaultOpeneds:{type:ve(Array),default:()=>An([])},uniqueOpened:Boolean,router:Boolean,menuTrigger:{type:String,values:["hover","click"],default:"hover"},collapse:Boolean,backgroundColor:String,textColor:String,activeTextColor:String,collapseTransition:{type:Boolean,default:!0},ellipsis:{type:Boolean,default:!0},popperEffect:{type:String,values:["dark","light"],default:"dark"}}),Eb=e=>Array.isArray(e)&&e.every(t=>Pt(t)),que={close:(e,t)=>Pt(e)&&Eb(t),open:(e,t)=>Pt(e)&&Eb(t),select:(e,t,n,r)=>Pt(e)&&Eb(t)&&Jt(n)&&(r===void 0||r instanceof Promise)};var Uue=$({name:"ElMenu",props:Lue,emits:que,setup(e,{emit:t,slots:n,expose:r}){const a=Tt(),l=a.appContext.config.globalProperties.$router,o=J(),i=ze("menu"),s=ze("sub-menu"),u=J(-1),d=J(e.defaultOpeneds&&!e.collapse?e.defaultOpeneds.slice(0):[]),f=J(e.defaultActive),p=J({}),b=J({}),A=X(()=>e.mode==="horizontal"||e.mode==="vertical"&&e.collapse),h=()=>{const j=f.value&&p.value[f.value];if(!j||e.mode==="horizontal"||e.collapse)return;j.indexPath.forEach(w=>{const R=b.value[w];R&&m(w,R.indexPath)})},m=(j,L)=>{d.value.includes(j)||(e.uniqueOpened&&(d.value=d.value.filter(w=>L.includes(w))),d.value.push(j),t("open",j,L))},v=j=>{const L=d.value.indexOf(j);L!==-1&&d.value.splice(L,1)},S=(j,L)=>{v(j),t("close",j,L)},y=({index:j,indexPath:L})=>{d.value.includes(j)?S(j,L):m(j,L)},W=j=>{(e.mode==="horizontal"||e.collapse)&&(d.value=[]);const{index:L,indexPath:w}=j;if(!(On(L)||On(w)))if(e.router&&l){const R=j.route||L,Z=l.push(R).then(G=>(G||(f.value=L),G));t("select",L,w,{index:L,indexPath:w,route:R},Z)}else f.value=L,t("select",L,w,{index:L,indexPath:w})},k=j=>{const L=p.value,w=L[j]||f.value&&L[f.value]||L[e.defaultActive];w?f.value=w.index:f.value=j},V=()=>{var j,L;if(!o.value)return-1;const w=Array.from((L=(j=o.value)==null?void 0:j.childNodes)!=null?L:[]).filter(D=>D.nodeName!=="#comment"&&(D.nodeName!=="#text"||D.nodeValue)),R=64,Z=Number.parseInt(getComputedStyle(o.value).paddingLeft,10),G=Number.parseInt(getComputedStyle(o.value).paddingRight,10),U=o.value.clientWidth-Z-G;let H=0,O=0;return w.forEach((D,Y)=>{H+=D.offsetWidth||0,H<=U-R&&(O=Y+1)}),O===w.length?-1:O},T=(j,L=33.34)=>{let w;return()=>{w&&clearTimeout(w),w=setTimeout(()=>{j()},L)}};let P=!0;const x=()=>{const j=()=>{u.value=-1,at(()=>{u.value=V()})};P?j():T(j)(),P=!1};Ve(()=>e.defaultActive,j=>{p.value[j]||(f.value=""),k(j)}),Ve(()=>e.collapse,j=>{j&&(d.value=[])}),Ve(p.value,h);let g;Dn(()=>{e.mode==="horizontal"&&e.ellipsis?g=hr(o,x).stop:g==null||g()});{const j=Z=>{b.value[Z.index]=Z},L=Z=>{delete b.value[Z.index]};zt("rootMenu",Bt({props:e,openedMenus:d,items:p,subMenus:b,activeIndex:f,isMenuPopup:A,addMenuItem:Z=>{p.value[Z.index]=Z},removeMenuItem:Z=>{delete p.value[Z.index]},addSubMenu:j,removeSubMenu:L,openMenu:m,closeMenu:S,handleMenuItemClick:W,handleSubMenuClick:y})),zt(`subMenu:${a.uid}`,{addSubMenu:j,removeSubMenu:L,mouseInChild:J(!1),level:0})}return At(()=>{e.mode==="horizontal"&&new Nue(a.vnode.el,i.namespace.value)}),r({open:L=>{const{indexPath:w}=b.value[L];w.forEach(R=>m(R,w))},close:v,handleResize:x}),()=>{var j,L;let w=(L=(j=n.default)==null?void 0:j.call(n))!=null?L:[];const R=[];if(e.mode==="horizontal"&&o.value){const U=ui(w),H=u.value===-1?U:U.slice(0,u.value),O=u.value===-1?[]:U.slice(u.value);(O==null?void 0:O.length)&&e.ellipsis&&(w=H,R.push(st(k2,{index:"sub-menu-more",class:s.e("hide-arrow")},{title:()=>st(it,{class:s.e("icon-more")},{default:()=>st(TE)}),default:()=>O})))}const Z=PT(e,0),G=st("ul",{key:String(e.collapse),role:"menubar",ref:o,style:Z.value,class:{[i.b()]:!0,[i.m(e.mode)]:!0,[i.m("collapse")]:e.collapse}},[...w,...R]);return e.collapseTransition&&e.mode==="vertical"?st(gue,()=>G):G}}});const Oue=Ie({index:{type:ve([String,null]),default:null},route:{type:ve([String,Object])},disabled:Boolean}),Rue={click:e=>Pt(e.index)&&Array.isArray(e.indexPath)},Ib="ElMenuItem",Jue=$({name:Ib,components:{ElTooltip:Xr},props:Oue,emits:Rue,setup(e,{emit:t}){const n=Tt(),r=tt("rootMenu"),a=ze("menu"),l=ze("menu-item");r||Gn(Ib,"can not inject root menu");const{parentMenu:o,indexPath:i}=VT(n,bn(e,"index")),s=tt(`subMenu:${o.value.uid}`);s||Gn(Ib,"can not inject sub menu");const u=X(()=>e.index===r.activeIndex),d=Bt({index:e.index,indexPath:i,active:u}),f=()=>{e.disabled||(r.handleMenuItemClick({index:e.index,indexPath:i.value,route:e.route}),t("click",d))};return At(()=>{s.addSubMenu(d),r.addMenuItem(d)}),tn(()=>{s.removeSubMenu(d),r.removeMenuItem(d)}),{parentMenu:o,rootMenu:r,active:u,nsMenu:a,nsMenuItem:l,handleClick:f}}});function Fue(e,t,n,r,a,l){const o=rt("el-tooltip");return K(),F("li",{class:q([e.nsMenuItem.b(),e.nsMenuItem.is("active",e.active),e.nsMenuItem.is("disabled",e.disabled)]),role:"menuitem",tabindex:"-1",onClick:t[0]||(t[0]=(...i)=>e.handleClick&&e.handleClick(...i))},[e.parentMenu.type.name==="ElMenu"&&e.rootMenu.props.collapse&&e.$slots.title?(K(),ie(o,{key:0,effect:e.rootMenu.props.popperEffect,placement:"right","fallback-placements":["left"],persistent:""},{content:B(()=>[ue(e.$slots,"title")]),default:B(()=>[z("div",{class:q(e.nsMenu.be("tooltip","trigger"))},[ue(e.$slots,"default")],2)]),_:3},8,["effect"])):(K(),F(Qe,{key:1},[ue(e.$slots,"default"),ue(e.$slots,"title")],64))],2)}var TT=Be(Jue,[["render",Fue],["__file","/home/runner/work/element-plus/element-plus/packages/components/menu/src/menu-item.vue"]]);const zue={title:String},Hue="ElMenuItemGroup",Zue=$({name:Hue,props:zue,setup(){return{ns:ze("menu-item-group")}}});function Gue(e,t,n,r,a,l){return K(),F("li",{class:q(e.ns.b())},[z("div",{class:q(e.ns.e("title"))},[e.$slots.title?ue(e.$slots,"title",{key:1}):(K(),F(Qe,{key:0},[Xt(je(e.title),1)],64))],2),z("ul",null,[ue(e.$slots,"default")])],2)}var KT=Be(Zue,[["render",Gue],["__file","/home/runner/work/element-plus/element-plus/packages/components/menu/src/menu-item-group.vue"]]);const Cue=qt(Uue,{MenuItem:TT,MenuItemGroup:KT,SubMenu:k2}),Mue=Nn(TT),Due=Nn(KT),Eue=Nn(k2),Iue=Ie({icon:{type:un,default:()=>Jk},title:String,content:{type:String,default:""}}),Bue={back:()=>!0},Yue=["aria-label"],Que=$({name:"ElPageHeader"}),_ue=$({...Que,props:Iue,emits:Bue,setup(e,{emit:t}){const n=er(),{t:r}=It(),a=ze("page-header"),l=X(()=>[a.b(),{[a.m("has-breadcrumb")]:!!n.breadcrumb,[a.m("has-extra")]:!!n.extra,[a.is("contentful")]:!!n.default}]);function o(){t("back")}return(i,s)=>(K(),F("div",{class:q(c(l))},[i.$slots.breadcrumb?(K(),F("div",{key:0,class:q(c(a).e("breadcrumb"))},[ue(i.$slots,"breadcrumb")],2)):ae("v-if",!0),z("div",{class:q(c(a).e("header"))},[z("div",{class:q(c(a).e("left"))},[z("div",{class:q(c(a).e("back")),role:"button",tabindex:"0",onClick:o},[i.icon||i.$slots.icon?(K(),F("div",{key:0,"aria-label":i.title||c(r)("el.pageHeader.title"),class:q(c(a).e("icon"))},[ue(i.$slots,"icon",{},()=>[i.icon?(K(),ie(c(it),{key:0},{default:B(()=>[(K(),ie(Ot(i.icon)))]),_:1})):ae("v-if",!0)])],10,Yue)):ae("v-if",!0),z("div",{class:q(c(a).e("title"))},[ue(i.$slots,"title",{},()=>[Xt(je(i.title||c(r)("el.pageHeader.title")),1)])],2)],2),C(c(dT),{direction:"vertical"}),z("div",{class:q(c(a).e("content"))},[ue(i.$slots,"content",{},()=>[Xt(je(i.content),1)])],2)],2),i.$slots.extra?(K(),F("div",{key:0,class:q(c(a).e("extra"))},[ue(i.$slots,"extra")],2)):ae("v-if",!0)],2),i.$slots.default?(K(),F("div",{key:1,class:q(c(a).e("main"))},[ue(i.$slots,"default")],2)):ae("v-if",!0)],2))}});var $ue=Be(_ue,[["__file","/home/runner/work/element-plus/element-plus/packages/components/page-header/src/page-header.vue"]]);const ece=qt($ue),NT=Symbol("elPaginationKey"),tce=Ie({disabled:Boolean,currentPage:{type:Number,default:1},prevText:{type:String},prevIcon:{type:un}}),nce={click:e=>e instanceof MouseEvent},rce=["disabled","aria-label","aria-disabled"],ace={key:0},lce=$({name:"ElPaginationPrev"}),oce=$({...lce,props:tce,emits:nce,setup(e){const t=e,{t:n}=It(),r=X(()=>t.disabled||t.currentPage<=1);return(a,l)=>(K(),F("button",{type:"button",class:"btn-prev",disabled:c(r),"aria-label":a.prevText||c(n)("el.pagination.prev"),"aria-disabled":c(r),onClick:l[0]||(l[0]=o=>a.$emit("click",o))},[a.prevText?(K(),F("span",ace,je(a.prevText),1)):(K(),ie(c(it),{key:1},{default:B(()=>[(K(),ie(Ot(a.prevIcon)))]),_:1}))],8,rce))}});var ice=Be(oce,[["__file","/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/prev.vue"]]);const sce=Ie({disabled:Boolean,currentPage:{type:Number,default:1},pageCount:{type:Number,default:50},nextText:{type:String},nextIcon:{type:un}}),uce=["disabled","aria-label","aria-disabled"],cce={key:0},dce=$({name:"ElPaginationNext"}),fce=$({...dce,props:sce,emits:["click"],setup(e){const t=e,{t:n}=It(),r=X(()=>t.disabled||t.currentPage===t.pageCount||t.pageCount===0);return(a,l)=>(K(),F("button",{type:"button",class:"btn-next",disabled:c(r),"aria-label":a.nextText||c(n)("el.pagination.next"),"aria-disabled":c(r),onClick:l[0]||(l[0]=o=>a.$emit("click",o))},[a.nextText?(K(),F("span",cce,je(a.nextText),1)):(K(),ie(c(it),{key:1},{default:B(()=>[(K(),ie(Ot(a.nextIcon)))]),_:1}))],8,uce))}});var pce=Be(fce,[["__file","/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/next.vue"]]);const xT=Symbol("ElSelectGroup"),Wd=Symbol("ElSelect");function vce(e,t){const n=tt(Wd),r=tt(xT,{disabled:!1}),a=X(()=>Jt(e.value)),l=X(()=>n.props.multiple?f(n.props.modelValue,e.value):p(e.value,n.props.modelValue)),o=X(()=>{if(n.props.multiple){const h=n.props.modelValue||[];return!l.value&&h.length>=n.props.multipleLimit&&n.props.multipleLimit>0}else return!1}),i=X(()=>e.label||(a.value?"":e.value)),s=X(()=>e.value||e.label||""),u=X(()=>e.disabled||t.groupDisabled||o.value),d=Tt(),f=(h=[],m)=>{if(a.value){const v=n.props.valueKey;return h&&h.some(S=>_t(jn(S,v))===jn(m,v))}else return h&&h.includes(m)},p=(h,m)=>{if(a.value){const{valueKey:v}=n.props;return jn(h,v)===jn(m,v)}else return h===m},b=()=>{!e.disabled&&!r.disabled&&(n.hoverIndex=n.optionsArray.indexOf(d.proxy))};Ve(()=>i.value,()=>{!e.created&&!n.props.remote&&n.setSelected()}),Ve(()=>e.value,(h,m)=>{const{remote:v,valueKey:S}=n.props;if(Object.is(h,m)||(n.onOptionDestroy(m,d.proxy),n.onOptionCreate(d.proxy)),!e.created&&!v){if(S&&Jt(h)&&Jt(m)&&h[S]===m[S])return;n.setSelected()}}),Ve(()=>r.disabled,()=>{t.groupDisabled=r.disabled},{immediate:!0});const{queryChange:A}=_t(n);return Ve(A,h=>{const{query:m}=c(h),v=new RegExp(qk(m),"i");t.visible=v.test(i.value)||e.created,t.visible||n.filteredOptionsCount--},{immediate:!0}),{select:n,currentLabel:i,currentValue:s,itemSelected:l,isDisabled:u,hoverItem:b}}const bce=$({name:"ElOption",componentName:"ElOption",props:{value:{required:!0,type:[String,Number,Boolean,Object]},label:[String,Number],created:Boolean,disabled:Boolean},setup(e){const t=ze("select"),n=Cr(),r=X(()=>[t.be("dropdown","item"),t.is("disabled",c(i)),{selected:c(o),hover:c(f)}]),a=Bt({index:-1,groupDisabled:!1,visible:!0,hitState:!1,hover:!1}),{currentLabel:l,itemSelected:o,isDisabled:i,select:s,hoverItem:u}=vce(e,a),{visible:d,hover:f}=Kn(a),p=Tt().proxy;s.onOptionCreate(p),tn(()=>{const A=p.value,{selected:h}=s,v=(s.props.multiple?h:[h]).some(S=>S.value===p.value);at(()=>{s.cachedOptions.get(A)===p&&!v&&s.cachedOptions.delete(A)}),s.onOptionDestroy(A,p)});function b(){e.disabled!==!0&&a.groupDisabled!==!0&&s.handleOptionSelect(p)}return{ns:t,id:n,containerKls:r,currentLabel:l,itemSelected:o,isDisabled:i,select:s,hoverItem:u,visible:d,hover:f,selectOptionClick:b,states:a}}}),hce=["id","aria-disabled","aria-selected"];function mce(e,t,n,r,a,l){return Vt((K(),F("li",{id:e.id,class:q(e.containerKls),role:"option","aria-disabled":e.isDisabled||void 0,"aria-selected":e.itemSelected,onMouseenter:t[0]||(t[0]=(...o)=>e.hoverItem&&e.hoverItem(...o)),onClick:t[1]||(t[1]=pt((...o)=>e.selectOptionClick&&e.selectOptionClick(...o),["stop"]))},[ue(e.$slots,"default",{},()=>[z("span",null,je(e.currentLabel),1)])],42,hce)),[[Ct,e.visible]])}var V2=Be(bce,[["render",mce],["__file","/home/runner/work/element-plus/element-plus/packages/components/select/src/option.vue"]]);const Sce=$({name:"ElSelectDropdown",componentName:"ElSelectDropdown",setup(){const e=tt(Wd),t=ze("select"),n=X(()=>e.props.popperClass),r=X(()=>e.props.multiple),a=X(()=>e.props.fitInputWidth),l=J("");function o(){var i;l.value=`${(i=e.selectWrapper)==null?void 0:i.offsetWidth}px`}return At(()=>{o(),hr(e.selectWrapper,o)}),{ns:t,minWidth:l,popperClass:n,isMultiple:r,isFitInputWidth:a}}});function yce(e,t,n,r,a,l){return K(),F("div",{class:q([e.ns.b("dropdown"),e.ns.is("multiple",e.isMultiple),e.popperClass]),style:lt({[e.isFitInputWidth?"width":"minWidth"]:e.minWidth})},[ue(e.$slots,"default")],6)}var Ace=Be(Sce,[["render",yce],["__file","/home/runner/work/element-plus/element-plus/packages/components/select/src/select-dropdown.vue"]]);function Wce(e){const{t}=It();return Bt({options:new Map,cachedOptions:new Map,disabledOptions:new Map,createdLabel:null,createdSelected:!1,selected:e.multiple?[]:{},inputLength:20,inputWidth:0,optionsCount:0,filteredOptionsCount:0,visible:!1,selectedLabel:"",hoverIndex:-1,query:"",previousQuery:null,inputHovering:!1,cachedPlaceHolder:"",currentPlaceholder:t("el.select.placeholder"),menuVisibleOnFocus:!1,isOnComposition:!1,prefixWidth:11,mouseEnter:!1,focused:!1})}const kce=(e,t,n)=>{const{t:r}=It(),a=ze("select");rl({from:"suffixTransition",replacement:"override style scheme",version:"2.3.0",scope:"props",ref:"https://element-plus.org/en-US/component/select.html#select-attributes"},X(()=>e.suffixTransition===!1));const l=J(null),o=J(null),i=J(null),s=J(null),u=J(null),d=J(null),f=J(null),p=J(null),b=J(),A=nn({query:""}),h=nn(""),m=J([]);let v=0;const{form:S,formItem:y}=wr(),W=X(()=>!e.filterable||e.multiple||!t.visible),k=X(()=>e.disabled||(S==null?void 0:S.disabled)),V=X(()=>{const le=e.multiple?Array.isArray(e.modelValue)&&e.modelValue.length>0:e.modelValue!==void 0&&e.modelValue!==null&&e.modelValue!=="";return e.clearable&&!k.value&&t.inputHovering&&le}),T=X(()=>e.remote&&e.filterable&&!e.remoteShowSuffix?"":e.suffixIcon),P=X(()=>a.is("reverse",T.value&&t.visible&&e.suffixTransition)),x=X(()=>(S==null?void 0:S.statusIcon)&&(y==null?void 0:y.validateState)&&Zm[y==null?void 0:y.validateState]),g=X(()=>e.remote?300:0),j=X(()=>e.loading?e.loadingText||r("el.select.loading"):e.remote&&t.query===""&&t.options.size===0?!1:e.filterable&&t.query&&t.options.size>0&&t.filteredOptionsCount===0?e.noMatchText||r("el.select.noMatch"):t.options.size===0?e.noDataText||r("el.select.noData"):null),L=X(()=>{const le=Array.from(t.options.values()),He=[];return m.value.forEach(N=>{const de=le.findIndex(Ke=>Ke.currentLabel===N);de>-1&&He.push(le[de])}),He.length>=le.length?He:le}),w=X(()=>Array.from(t.cachedOptions.values())),R=X(()=>{const le=L.value.filter(He=>!He.created).some(He=>He.currentLabel===t.query);return e.filterable&&e.allowCreate&&t.query!==""&&!le}),Z=Cn(),G=X(()=>["small"].includes(Z.value)?"small":"default"),U=X({get(){return t.visible&&j.value!==!1},set(le){t.visible=le}});Ve([()=>k.value,()=>Z.value,()=>S==null?void 0:S.size],()=>{at(()=>{H()})}),Ve(()=>e.placeholder,le=>{t.cachedPlaceHolder=t.currentPlaceholder=le,e.multiple&&Array.isArray(e.modelValue)&&e.modelValue.length>0&&(t.currentPlaceholder="")}),Ve(()=>e.modelValue,(le,He)=>{e.multiple&&(H(),le&&le.length>0||o.value&&t.query!==""?t.currentPlaceholder="":t.currentPlaceholder=t.cachedPlaceHolder,e.filterable&&!e.reserveKeyword&&(t.query="",O(t.query))),Q(),e.filterable&&!e.multiple&&(t.inputLength=20),!zr(le,He)&&e.validateEvent&&(y==null||y.validate("change").catch(N=>void 0))},{flush:"post",deep:!0}),Ve(()=>t.visible,le=>{var He,N,de,Ke,I;le?((N=(He=s.value)==null?void 0:He.updatePopper)==null||N.call(He),e.filterable&&(t.filteredOptionsCount=t.optionsCount,t.query=e.remote?"":t.selectedLabel,(Ke=(de=i.value)==null?void 0:de.focus)==null||Ke.call(de),e.multiple?(I=o.value)==null||I.focus():t.selectedLabel&&(t.currentPlaceholder=`${t.selectedLabel}`,t.selectedLabel=""),O(t.query),!e.multiple&&!e.remote&&(A.value.query="",$i(A),$i(h)))):(e.filterable&&(ht(e.filterMethod)&&e.filterMethod(""),ht(e.remoteMethod)&&e.remoteMethod("")),t.query="",t.previousQuery=null,t.selectedLabel="",t.inputLength=20,t.menuVisibleOnFocus=!1,oe(),at(()=>{o.value&&o.value.value===""&&t.selected.length===0&&(t.currentPlaceholder=t.cachedPlaceHolder)}),e.multiple||(t.selected&&(e.filterable&&e.allowCreate&&t.createdSelected&&t.createdLabel?t.selectedLabel=t.createdLabel:t.selectedLabel=t.selected.currentLabel,e.filterable&&(t.query=t.selectedLabel)),e.filterable&&(t.currentPlaceholder=t.cachedPlaceHolder))),n.emit("visible-change",le)}),Ve(()=>t.options.entries(),()=>{var le,He,N;if(!Mt)return;(He=(le=s.value)==null?void 0:le.updatePopper)==null||He.call(le),e.multiple&&H();const de=((N=f.value)==null?void 0:N.querySelectorAll("input"))||[];(!e.filterable&&!e.defaultFirstOption&&!Hn(e.modelValue)||!Array.from(de).includes(document.activeElement))&&Q(),e.defaultFirstOption&&(e.filterable||e.remote)&&t.filteredOptionsCount&&Y()},{flush:"post"}),Ve(()=>t.hoverIndex,le=>{mt(le)&&le>-1?b.value=L.value[le]||{}:b.value={},L.value.forEach(He=>{He.hover=b.value===He})});const H=()=>{at(()=>{var le,He;if(!l.value)return;const N=l.value.$el.querySelector("input");v=v||(N.clientHeight>0?N.clientHeight+2:0);const de=d.value,Ke=getComputedStyle(N).getPropertyValue(a.cssVarName("input-height")),I=Number.parseFloat(Ke)||jB(Z.value||(S==null?void 0:S.size)),he=Z.value||I===v||v<=0?I:v;!(N.offsetParent===null)&&(N.style.height=`${(t.selected.length===0?he:Math.max(de?de.clientHeight+(de.clientHeight>he?6:0):0,he))-2}px`),t.visible&&j.value!==!1&&((He=(le=s.value)==null?void 0:le.updatePopper)==null||He.call(le))})},O=async le=>{if(!(t.previousQuery===le||t.isOnComposition)){if(t.previousQuery===null&&(ht(e.filterMethod)||ht(e.remoteMethod))){t.previousQuery=le;return}t.previousQuery=le,at(()=>{var He,N;t.visible&&((N=(He=s.value)==null?void 0:He.updatePopper)==null||N.call(He))}),t.hoverIndex=-1,e.multiple&&e.filterable&&at(()=>{if(!k.value){const He=o.value.value.length*15+20;t.inputLength=e.collapseTags?Math.min(50,He):He,D()}H()}),e.remote&&ht(e.remoteMethod)?(t.hoverIndex=-1,e.remoteMethod(le)):ht(e.filterMethod)?(e.filterMethod(le),$i(h)):(t.filteredOptionsCount=t.optionsCount,A.value.query=le,$i(A),$i(h)),e.defaultFirstOption&&(e.filterable||e.remote)&&t.filteredOptionsCount&&(await at(),Y())}},D=()=>{t.currentPlaceholder!==""&&(t.currentPlaceholder=o.value.value?"":t.cachedPlaceHolder)},Y=()=>{const le=L.value.filter(de=>de.visible&&!de.disabled&&!de.states.groupDisabled),He=le.find(de=>de.created),N=le[0];t.hoverIndex=Fe(L.value,He||N)},Q=()=>{var le;if(e.multiple)t.selectedLabel="";else{const N=ee(e.modelValue);(le=N.props)!=null&&le.created?(t.createdLabel=N.props.value,t.createdSelected=!0):t.createdSelected=!1,t.selectedLabel=N.currentLabel,t.selected=N,e.filterable&&(t.query=t.selectedLabel);return}const He=[];Array.isArray(e.modelValue)&&e.modelValue.forEach(N=>{He.push(ee(N))}),t.selected=He,at(()=>{H()})},ee=le=>{let He;const N=mf(le).toLowerCase()==="object",de=mf(le).toLowerCase()==="null",Ke=mf(le).toLowerCase()==="undefined";for(let Ge=t.cachedOptions.size-1;Ge>=0;Ge--){const Wt=w.value[Ge];if(N?jn(Wt.value,e.valueKey)===jn(le,e.valueKey):Wt.value===le){He={value:le,currentLabel:Wt.currentLabel,isDisabled:Wt.isDisabled};break}}if(He)return He;const I=N?le.label:!de&&!Ke?le:"",he={value:le,currentLabel:I};return e.multiple&&(he.hitState=!1),he},oe=()=>{setTimeout(()=>{const le=e.valueKey;e.multiple?t.selected.length>0?t.hoverIndex=Math.min.apply(null,t.selected.map(He=>L.value.findIndex(N=>jn(N,le)===jn(He,le)))):t.hoverIndex=-1:t.hoverIndex=L.value.findIndex(He=>Xe(He)===Xe(t.selected))},300)},Ne=()=>{var le,He;pe(),(He=(le=s.value)==null?void 0:le.updatePopper)==null||He.call(le),e.multiple&&H()},pe=()=>{var le;t.inputWidth=(le=l.value)==null?void 0:le.$el.offsetWidth},me=()=>{e.filterable&&t.query!==t.selectedLabel&&(t.query=t.selectedLabel,O(t.query))},ce=xr(()=>{me()},g.value),Le=xr(le=>{O(le.target.value)},g.value),Te=le=>{zr(e.modelValue,le)||n.emit(mn,le)},xe=le=>cC(le,He=>!t.disabledOptions.has(He)),_=le=>{if(le.code!==ut.delete){if(le.target.value.length<=0&&!De()){const He=e.modelValue.slice(),N=xe(He);if(N<0)return;He.splice(N,1),n.emit(Rt,He),Te(He)}le.target.value.length===1&&e.modelValue.length===0&&(t.currentPlaceholder=t.cachedPlaceHolder)}},re=(le,He)=>{const N=t.selected.indexOf(He);if(N>-1&&!k.value){const de=e.modelValue.slice();de.splice(N,1),n.emit(Rt,de),Te(de),n.emit("remove-tag",He.value)}le.stopPropagation(),$e()},ye=le=>{le.stopPropagation();const He=e.multiple?[]:"";if(!Pt(He))for(const N of t.selected)N.isDisabled&&He.push(N.value);n.emit(Rt,He),Te(He),t.hoverIndex=-1,t.visible=!1,n.emit("clear"),$e()},ge=le=>{var He;if(e.multiple){const N=(e.modelValue||[]).slice(),de=Fe(N,le.value);de>-1?N.splice(de,1):(e.multipleLimit<=0||N.length<e.multipleLimit)&&N.push(le.value),n.emit(Rt,N),Te(N),le.created&&(t.query="",O(""),t.inputLength=20),e.filterable&&((He=o.value)==null||He.focus())}else n.emit(Rt,le.value),Te(le.value),t.visible=!1;Ae(),!t.visible&&at(()=>{Ze(le)})},Fe=(le=[],He)=>{if(!Jt(He))return le.indexOf(He);const N=e.valueKey;let de=-1;return le.some((Ke,I)=>_t(jn(Ke,N))===jn(He,N)?(de=I,!0):!1),de},Ae=()=>{const le=o.value||l.value;le&&(le==null||le.focus())},Ze=le=>{var He,N,de,Ke,I;const he=Array.isArray(le)?le[0]:le;let Ge=null;if(he!=null&&he.value){const Wt=L.value.filter(kt=>kt.value===he.value);Wt.length>0&&(Ge=Wt[0].$el)}if(s.value&&Ge){const Wt=(Ke=(de=(N=(He=s.value)==null?void 0:He.popperRef)==null?void 0:N.contentRef)==null?void 0:de.querySelector)==null?void 0:Ke.call(de,`.${a.be("dropdown","wrap")}`);Wt&&Rk(Wt,Ge)}(I=p.value)==null||I.handleScroll()},Ue=le=>{t.optionsCount++,t.filteredOptionsCount++,t.options.set(le.value,le),t.cachedOptions.set(le.value,le),le.disabled&&t.disabledOptions.set(le.value,le)},Pe=(le,He)=>{t.options.get(le)===He&&(t.optionsCount--,t.filteredOptionsCount--,t.options.delete(le))},qe=le=>{le.code!==ut.backspace&&De(!1),t.inputLength=o.value.value.length*15+20,H()},De=le=>{if(!Array.isArray(t.selected))return;const He=xe(t.selected.map(de=>de.value)),N=t.selected[He];if(!!N)return le===!0||le===!1?(N.hitState=le,le):(N.hitState=!N.hitState,N.hitState)},Me=le=>{const He=le.target.value;if(le.type==="compositionend")t.isOnComposition=!1,at(()=>O(He));else{const N=He[He.length-1]||"";t.isOnComposition=!Fv(N)}},_e=()=>{at(()=>Ze(t.selected))},Re=le=>{t.focused||((e.automaticDropdown||e.filterable)&&(e.filterable&&!t.visible&&(t.menuVisibleOnFocus=!0),t.visible=!0),t.focused=!0,n.emit("focus",le))},$e=()=>{var le,He;t.visible?(le=o.value||l.value)==null||le.focus():(He=l.value)==null||He.focus()},dt=()=>{var le,He,N;t.visible=!1,(le=l.value)==null||le.blur(),(N=(He=i.value)==null?void 0:He.blur)==null||N.call(He)},yt=le=>{var He,N,de;((He=s.value)==null?void 0:He.isFocusInsideContent(le))||((N=u.value)==null?void 0:N.isFocusInsideContent(le))||((de=f.value)==null?void 0:de.contains(le.relatedTarget))||(t.visible&&ot(),t.focused=!1,n.emit("blur",le))},gt=le=>{ye(le)},ot=()=>{t.visible=!1},ke=le=>{t.visible&&(le.preventDefault(),le.stopPropagation(),t.visible=!1)},be=le=>{le&&!t.mouseEnter||k.value||(t.menuVisibleOnFocus?t.menuVisibleOnFocus=!1:(!s.value||!s.value.isFocusInsideContent())&&(t.visible=!t.visible),$e())},fe=()=>{t.visible?L.value[t.hoverIndex]&&ge(L.value[t.hoverIndex]):be()},Xe=le=>Jt(le.value)?jn(le.value,e.valueKey):le.value,ne=X(()=>L.value.filter(le=>le.visible).every(le=>le.disabled)),M=X(()=>e.multiple?t.selected.slice(0,e.maxCollapseTags):[]),Oe=X(()=>e.multiple?t.selected.slice(e.maxCollapseTags):[]),Ee=le=>{if(!t.visible){t.visible=!0;return}if(!(t.options.size===0||t.filteredOptionsCount===0)&&!t.isOnComposition&&!ne.value){le==="next"?(t.hoverIndex++,t.hoverIndex===t.options.size&&(t.hoverIndex=0)):le==="prev"&&(t.hoverIndex--,t.hoverIndex<0&&(t.hoverIndex=t.options.size-1));const He=L.value[t.hoverIndex];(He.disabled===!0||He.states.groupDisabled===!0||!He.visible)&&Ee(le),at(()=>Ze(b.value))}},ft=()=>{t.mouseEnter=!0},Se=()=>{t.mouseEnter=!1},Ye=(le,He)=>{var N,de;re(le,He),(de=(N=u.value)==null?void 0:N.updatePopper)==null||de.call(N)},E=X(()=>({maxWidth:`${c(t.inputWidth)-32-(x.value?22:0)}px`,width:"100%"}));return{optionList:m,optionsArray:L,hoverOption:b,selectSize:Z,handleResize:Ne,debouncedOnInputChange:ce,debouncedQueryChange:Le,deletePrevTag:_,deleteTag:re,deleteSelected:ye,handleOptionSelect:ge,scrollToOption:Ze,readonly:W,resetInputHeight:H,showClose:V,iconComponent:T,iconReverse:P,showNewOption:R,collapseTagSize:G,setSelected:Q,managePlaceholder:D,selectDisabled:k,emptyText:j,toggleLastOptionHitState:De,resetInputState:qe,handleComposition:Me,onOptionCreate:Ue,onOptionDestroy:Pe,handleMenuEnter:_e,handleFocus:Re,focus:$e,blur:dt,handleBlur:yt,handleClearClick:gt,handleClose:ot,handleKeydownEscape:ke,toggleMenu:be,selectOption:fe,getValueKey:Xe,navigateOptions:Ee,handleDeleteTooltipTag:Ye,dropMenuVisible:U,queryChange:A,groupQueryChange:h,showTagList:M,collapseTagList:Oe,selectTagsStyle:E,reference:l,input:o,iOSInput:i,tooltipRef:s,tagTooltipRef:u,tags:d,selectWrapper:f,scrollbar:p,handleMouseEnter:ft,handleMouseLeave:Se}};var Vce=$({name:"ElOptions",emits:["update-options"],setup(e,{slots:t,emit:n}){let r=[];function a(l,o){if(l.length!==o.length)return!1;for(const[i]of l.entries())if(l[i]!=o[i])return!1;return!0}return()=>{var l,o;const i=(l=t.default)==null?void 0:l.call(t),s=[];function u(d){!Array.isArray(d)||d.forEach(f=>{var p,b,A,h;const m=(p=(f==null?void 0:f.type)||{})==null?void 0:p.name;m==="ElOptionGroup"?u(!Pt(f.children)&&!Array.isArray(f.children)&&ht((b=f.children)==null?void 0:b.default)?(A=f.children)==null?void 0:A.default():f.children):m==="ElOption"?s.push((h=f.props)==null?void 0:h.label):Array.isArray(f.children)&&u(f.children)})}return i.length&&u((o=i[0])==null?void 0:o.children),a(s,r)||(r=s,n("update-options",s)),i}}});const M8="ElSelect",Pce=$({name:M8,componentName:M8,components:{ElInput:vr,ElSelectMenu:Ace,ElOption:V2,ElOptions:Vce,ElTag:Lc,ElScrollbar:Cl,ElTooltip:Xr,ElIcon:it},directives:{ClickOutside:Po},props:{name:String,id:String,modelValue:{type:[Array,String,Number,Boolean,Object],default:void 0},autocomplete:{type:String,default:"off"},automaticDropdown:Boolean,size:{type:String,validator:Jv},effect:{type:String,default:"light"},disabled:Boolean,clearable:Boolean,filterable:Boolean,allowCreate:Boolean,loading:Boolean,popperClass:{type:String,default:""},popperOptions:{type:Object,default:()=>({})},remote:Boolean,loadingText:String,noMatchText:String,noDataText:String,remoteMethod:Function,filterMethod:Function,multiple:Boolean,multipleLimit:{type:Number,default:0},placeholder:{type:String},defaultFirstOption:Boolean,reserveKeyword:{type:Boolean,default:!0},valueKey:{type:String,default:"value"},collapseTags:Boolean,collapseTagsTooltip:Boolean,maxCollapseTags:{type:Number,default:1},teleported:nr.teleported,persistent:{type:Boolean,default:!0},clearIcon:{type:un,default:qo},fitInputWidth:Boolean,suffixIcon:{type:un,default:Lo},tagType:{...v2.type,default:"info"},validateEvent:{type:Boolean,default:!0},remoteShowSuffix:Boolean,suffixTransition:{type:Boolean,default:!0},placement:{type:String,values:Ui,default:"bottom-start"},ariaLabel:{type:String,default:void 0}},emits:[Rt,mn,"remove-tag","clear","visible-change","focus","blur"],setup(e,t){const n=ze("select"),r=ze("input"),{t:a}=It(),l=Cr(),o=Wce(e),{optionList:i,optionsArray:s,hoverOption:u,selectSize:d,readonly:f,handleResize:p,collapseTagSize:b,debouncedOnInputChange:A,debouncedQueryChange:h,deletePrevTag:m,deleteTag:v,deleteSelected:S,handleOptionSelect:y,scrollToOption:W,setSelected:k,resetInputHeight:V,managePlaceholder:T,showClose:P,selectDisabled:x,iconComponent:g,iconReverse:j,showNewOption:L,emptyText:w,toggleLastOptionHitState:R,resetInputState:Z,handleComposition:G,onOptionCreate:U,onOptionDestroy:H,handleMenuEnter:O,handleFocus:D,focus:Y,blur:Q,handleBlur:ee,handleClearClick:oe,handleClose:Ne,handleKeydownEscape:pe,toggleMenu:me,selectOption:ce,getValueKey:Le,navigateOptions:Te,handleDeleteTooltipTag:xe,dropMenuVisible:_,reference:re,input:ye,iOSInput:ge,tooltipRef:Fe,tagTooltipRef:Ae,tags:Ze,selectWrapper:Ue,scrollbar:Pe,queryChange:qe,groupQueryChange:De,handleMouseEnter:Me,handleMouseLeave:_e,showTagList:Re,collapseTagList:$e,selectTagsStyle:dt}=kce(e,o,t),{inputWidth:yt,selected:gt,inputLength:ot,filteredOptionsCount:ke,visible:be,selectedLabel:fe,hoverIndex:Xe,query:ne,inputHovering:M,currentPlaceholder:Oe,menuVisibleOnFocus:Ee,isOnComposition:ft,options:Se,cachedOptions:Ye,optionsCount:E,prefixWidth:le}=Kn(o),He=X(()=>{const Gt=[n.b()],In=c(d);return In&&Gt.push(n.m(In)),e.disabled&&Gt.push(n.m("disabled")),Gt}),N=X(()=>[n.e("tags"),n.is("disabled",c(x))]),de=X(()=>[n.b("tags-wrapper"),{"has-prefix":c(le)&&c(gt).length}]),Ke=X(()=>[n.e("input"),n.is(c(d)),n.is("disabled",c(x))]),I=X(()=>[n.e("input"),n.is(c(d)),n.em("input","iOS")]),he=X(()=>[n.is("empty",!e.allowCreate&&Boolean(c(ne))&&c(ke)===0)]),Ge=X(()=>({maxWidth:`${c(yt)>123?c(yt)-123:c(yt)-75}px`})),Wt=X(()=>({marginLeft:`${c(le)}px`,flexGrow:1,width:`${c(ot)/(c(yt)-32)}%`,maxWidth:`${c(yt)-42}px`}));zt(Wd,Bt({props:e,options:Se,optionsArray:s,cachedOptions:Ye,optionsCount:E,filteredOptionsCount:ke,hoverIndex:Xe,handleOptionSelect:y,onOptionCreate:U,onOptionDestroy:H,selectWrapper:Ue,selected:gt,setSelected:k,queryChange:qe,groupQueryChange:De})),At(()=>{o.cachedPlaceHolder=Oe.value=e.placeholder||(()=>a("el.select.placeholder")),e.multiple&&Array.isArray(e.modelValue)&&e.modelValue.length>0&&(Oe.value=""),hr(Ue,p),e.remote&&e.multiple&&V(),at(()=>{const Gt=re.value&&re.value.$el;if(!!Gt&&(yt.value=Gt.getBoundingClientRect().width,t.slots.prefix)){const In=Gt.querySelector(`.${r.e("prefix")}`);le.value=Math.max(In.getBoundingClientRect().width+11,30)}}),k()}),e.multiple&&!Array.isArray(e.modelValue)&&t.emit(Rt,[]),!e.multiple&&Array.isArray(e.modelValue)&&t.emit(Rt,"");const kt=X(()=>{var Gt,In;return(In=(Gt=Fe.value)==null?void 0:Gt.popperRef)==null?void 0:In.contentRef});return{isIOS:gW,onOptionsRendered:Gt=>{i.value=Gt},prefixWidth:le,selectSize:d,readonly:f,handleResize:p,collapseTagSize:b,debouncedOnInputChange:A,debouncedQueryChange:h,deletePrevTag:m,deleteTag:v,handleDeleteTooltipTag:xe,deleteSelected:S,handleOptionSelect:y,scrollToOption:W,inputWidth:yt,selected:gt,inputLength:ot,filteredOptionsCount:ke,visible:be,selectedLabel:fe,hoverIndex:Xe,query:ne,inputHovering:M,currentPlaceholder:Oe,menuVisibleOnFocus:Ee,isOnComposition:ft,options:Se,resetInputHeight:V,managePlaceholder:T,showClose:P,selectDisabled:x,iconComponent:g,iconReverse:j,showNewOption:L,emptyText:w,toggleLastOptionHitState:R,resetInputState:Z,handleComposition:G,handleMenuEnter:O,handleFocus:D,focus:Y,blur:Q,handleBlur:ee,handleClearClick:oe,handleClose:Ne,handleKeydownEscape:pe,toggleMenu:me,selectOption:ce,getValueKey:Le,navigateOptions:Te,dropMenuVisible:_,reference:re,input:ye,iOSInput:ge,tooltipRef:Fe,popperPaneRef:kt,tags:Ze,selectWrapper:Ue,scrollbar:Pe,wrapperKls:He,tagsKls:N,tagWrapperKls:de,inputKls:Ke,iOSInputKls:I,scrollbarKls:he,selectTagsStyle:dt,nsSelect:n,tagTextStyle:Ge,inputStyle:Wt,handleMouseEnter:Me,handleMouseLeave:_e,showTagList:Re,collapseTagList:$e,tagTooltipRef:Ae,contentId:l,hoverOption:u}}}),Tce=["disabled","autocomplete","aria-activedescendant","aria-controls","aria-expanded","aria-label"],Kce=["disabled"],Nce={style:{height:"100%",display:"flex","justify-content":"center","align-items":"center"}};function xce(e,t,n,r,a,l){const o=rt("el-tag"),i=rt("el-tooltip"),s=rt("el-icon"),u=rt("el-input"),d=rt("el-option"),f=rt("el-options"),p=rt("el-scrollbar"),b=rt("el-select-menu"),A=ho("click-outside");return Vt((K(),F("div",{ref:"selectWrapper",class:q(e.wrapperKls),onMouseenter:t[22]||(t[22]=(...h)=>e.handleMouseEnter&&e.handleMouseEnter(...h)),onMouseleave:t[23]||(t[23]=(...h)=>e.handleMouseLeave&&e.handleMouseLeave(...h)),onClick:t[24]||(t[24]=pt((...h)=>e.toggleMenu&&e.toggleMenu(...h),["stop"]))},[C(i,{ref:"tooltipRef",visible:e.dropMenuVisible,placement:e.placement,teleported:e.teleported,"popper-class":[e.nsSelect.e("popper"),e.popperClass],"popper-options":e.popperOptions,"fallback-placements":["bottom-start","top-start","right","left"],effect:e.effect,pure:"",trigger:"click",transition:`${e.nsSelect.namespace.value}-zoom-in-top`,"stop-popper-mouse-event":!1,"gpu-acceleration":!1,persistent:e.persistent,onShow:e.handleMenuEnter},{default:B(()=>{var h,m;return[z("div",{class:"select-trigger",onMouseenter:t[20]||(t[20]=v=>e.inputHovering=!0),onMouseleave:t[21]||(t[21]=v=>e.inputHovering=!1)},[e.multiple?(K(),F("div",{key:0,ref:"tags",tabindex:"-1",class:q(e.tagsKls),style:lt(e.selectTagsStyle),onClick:t[15]||(t[15]=(...v)=>e.focus&&e.focus(...v))},[e.collapseTags&&e.selected.length?(K(),ie(fn,{key:0,onAfterLeave:e.resetInputHeight},{default:B(()=>[z("span",{class:q(e.tagWrapperKls)},[(K(!0),F(Qe,null,Nt(e.showTagList,v=>(K(),ie(o,{key:e.getValueKey(v),closable:!e.selectDisabled&&!v.isDisabled,size:e.collapseTagSize,hit:v.hitState,type:e.tagType,"disable-transitions":"",onClose:S=>e.deleteTag(S,v)},{default:B(()=>[z("span",{class:q(e.nsSelect.e("tags-text")),style:lt(e.tagTextStyle)},je(v.currentLabel),7)]),_:2},1032,["closable","size","hit","type","onClose"]))),128)),e.selected.length>e.maxCollapseTags?(K(),ie(o,{key:0,closable:!1,size:e.collapseTagSize,type:e.tagType,"disable-transitions":""},{default:B(()=>[e.collapseTagsTooltip?(K(),ie(i,{key:0,ref:"tagTooltipRef",disabled:e.dropMenuVisible,"fallback-placements":["bottom","top","right","left"],effect:e.effect,placement:"bottom",teleported:e.teleported},{default:B(()=>[z("span",{class:q(e.nsSelect.e("tags-text"))},"+ "+je(e.selected.length-e.maxCollapseTags),3)]),content:B(()=>[z("div",{class:q(e.nsSelect.e("collapse-tags"))},[(K(!0),F(Qe,null,Nt(e.collapseTagList,v=>(K(),F("div",{key:e.getValueKey(v),class:q(e.nsSelect.e("collapse-tag"))},[C(o,{class:"in-tooltip",closable:!e.selectDisabled&&!v.isDisabled,size:e.collapseTagSize,hit:v.hitState,type:e.tagType,"disable-transitions":"",style:{margin:"2px"},onClose:S=>e.handleDeleteTooltipTag(S,v)},{default:B(()=>[z("span",{class:q(e.nsSelect.e("tags-text")),style:lt({maxWidth:e.inputWidth-75+"px"})},je(v.currentLabel),7)]),_:2},1032,["closable","size","hit","type","onClose"])],2))),128))],2)]),_:1},8,["disabled","effect","teleported"])):(K(),F("span",{key:1,class:q(e.nsSelect.e("tags-text"))},"+ "+je(e.selected.length-e.maxCollapseTags),3))]),_:1},8,["size","type"])):ae("v-if",!0)],2)]),_:1},8,["onAfterLeave"])):ae("v-if",!0),e.collapseTags?ae("v-if",!0):(K(),ie(fn,{key:1,onAfterLeave:e.resetInputHeight},{default:B(()=>[z("span",{class:q(e.tagWrapperKls),style:lt(e.prefixWidth&&e.selected.length?{marginLeft:`${e.prefixWidth}px`}:"")},[(K(!0),F(Qe,null,Nt(e.selected,v=>(K(),ie(o,{key:e.getValueKey(v),closable:!e.selectDisabled&&!v.isDisabled,size:e.collapseTagSize,hit:v.hitState,type:e.tagType,"disable-transitions":"",onClose:S=>e.deleteTag(S,v)},{default:B(()=>[z("span",{class:q(e.nsSelect.e("tags-text")),style:lt({maxWidth:e.inputWidth-75+"px"})},je(v.currentLabel),7)]),_:2},1032,["closable","size","hit","type","onClose"]))),128))],6)]),_:1},8,["onAfterLeave"])),e.filterable&&!e.selectDisabled?Vt((K(),F("input",{key:2,ref:"input","onUpdate:modelValue":t[0]||(t[0]=v=>e.query=v),type:"text",class:q(e.inputKls),disabled:e.selectDisabled,autocomplete:e.autocomplete,style:lt(e.inputStyle),role:"combobox","aria-activedescendant":((h=e.hoverOption)==null?void 0:h.id)||"","aria-controls":e.contentId,"aria-expanded":e.dropMenuVisible,"aria-label":e.ariaLabel,"aria-autocomplete":"none","aria-haspopup":"listbox",onFocus:t[1]||(t[1]=(...v)=>e.handleFocus&&e.handleFocus(...v)),onBlur:t[2]||(t[2]=(...v)=>e.handleBlur&&e.handleBlur(...v)),onKeyup:t[3]||(t[3]=(...v)=>e.managePlaceholder&&e.managePlaceholder(...v)),onKeydown:[t[4]||(t[4]=(...v)=>e.resetInputState&&e.resetInputState(...v)),t[5]||(t[5]=Dt(pt(v=>e.navigateOptions("next"),["prevent"]),["down"])),t[6]||(t[6]=Dt(pt(v=>e.navigateOptions("prev"),["prevent"]),["up"])),t[7]||(t[7]=Dt((...v)=>e.handleKeydownEscape&&e.handleKeydownEscape(...v),["esc"])),t[8]||(t[8]=Dt(pt((...v)=>e.selectOption&&e.selectOption(...v),["stop","prevent"]),["enter"])),t[9]||(t[9]=Dt((...v)=>e.deletePrevTag&&e.deletePrevTag(...v),["delete"])),t[10]||(t[10]=Dt(v=>e.visible=!1,["tab"]))],onCompositionstart:t[11]||(t[11]=(...v)=>e.handleComposition&&e.handleComposition(...v)),onCompositionupdate:t[12]||(t[12]=(...v)=>e.handleComposition&&e.handleComposition(...v)),onCompositionend:t[13]||(t[13]=(...v)=>e.handleComposition&&e.handleComposition(...v)),onInput:t[14]||(t[14]=(...v)=>e.debouncedQueryChange&&e.debouncedQueryChange(...v))},null,46,Tce)),[[yi,e.query]]):ae("v-if",!0)],6)):ae("v-if",!0),e.isIOS&&!e.multiple&&e.filterable&&e.readonly?(K(),F("input",{key:1,ref:"iOSInput",class:q(e.iOSInputKls),disabled:e.selectDisabled,type:"text"},null,10,Kce)):ae("v-if",!0),C(u,{id:e.id,ref:"reference",modelValue:e.selectedLabel,"onUpdate:modelValue":t[16]||(t[16]=v=>e.selectedLabel=v),type:"text",placeholder:typeof e.currentPlaceholder=="function"?e.currentPlaceholder():e.currentPlaceholder,name:e.name,autocomplete:e.autocomplete,size:e.selectSize,disabled:e.selectDisabled,readonly:e.readonly,"validate-event":!1,class:q([e.nsSelect.is("focus",e.visible)]),tabindex:e.multiple&&e.filterable?-1:void 0,role:"combobox","aria-activedescendant":((m=e.hoverOption)==null?void 0:m.id)||"","aria-controls":e.contentId,"aria-expanded":e.dropMenuVisible,label:e.ariaLabel,"aria-autocomplete":"none","aria-haspopup":"listbox",onFocus:e.handleFocus,onBlur:e.handleBlur,onInput:e.debouncedOnInputChange,onPaste:e.debouncedOnInputChange,onCompositionstart:e.handleComposition,onCompositionupdate:e.handleComposition,onCompositionend:e.handleComposition,onKeydown:[t[17]||(t[17]=Dt(pt(v=>e.navigateOptions("next"),["stop","prevent"]),["down"])),t[18]||(t[18]=Dt(pt(v=>e.navigateOptions("prev"),["stop","prevent"]),["up"])),Dt(pt(e.selectOption,["stop","prevent"]),["enter"]),Dt(e.handleKeydownEscape,["esc"]),t[19]||(t[19]=Dt(v=>e.visible=!1,["tab"]))]},tl({suffix:B(()=>[e.iconComponent&&!e.showClose?(K(),ie(s,{key:0,class:q([e.nsSelect.e("caret"),e.nsSelect.e("icon"),e.iconReverse])},{default:B(()=>[(K(),ie(Ot(e.iconComponent)))]),_:1},8,["class"])):ae("v-if",!0),e.showClose&&e.clearIcon?(K(),ie(s,{key:1,class:q([e.nsSelect.e("caret"),e.nsSelect.e("icon")]),onClick:e.handleClearClick},{default:B(()=>[(K(),ie(Ot(e.clearIcon)))]),_:1},8,["class","onClick"])):ae("v-if",!0)]),_:2},[e.$slots.prefix?{name:"prefix",fn:B(()=>[z("div",Nce,[ue(e.$slots,"prefix")])])}:void 0]),1032,["id","modelValue","placeholder","name","autocomplete","size","disabled","readonly","class","tabindex","aria-activedescendant","aria-controls","aria-expanded","label","onFocus","onBlur","onInput","onPaste","onCompositionstart","onCompositionupdate","onCompositionend","onKeydown"])],32)]}),content:B(()=>[C(b,null,{default:B(()=>[Vt(C(p,{id:e.contentId,ref:"scrollbar",tag:"ul","wrap-class":e.nsSelect.be("dropdown","wrap"),"view-class":e.nsSelect.be("dropdown","list"),class:q(e.scrollbarKls),role:"listbox","aria-label":e.ariaLabel,"aria-orientation":"vertical"},{default:B(()=>[e.showNewOption?(K(),ie(d,{key:0,value:e.query,created:!0},null,8,["value"])):ae("v-if",!0),C(f,{onUpdateOptions:e.onOptionsRendered},{default:B(()=>[ue(e.$slots,"default")]),_:3},8,["onUpdateOptions"])]),_:3},8,["id","wrap-class","view-class","class","aria-label"]),[[Ct,e.options.size>0&&!e.loading]]),e.emptyText&&(!e.allowCreate||e.loading||e.allowCreate&&e.options.size===0)?(K(),F(Qe,{key:0},[e.$slots.empty?ue(e.$slots,"empty",{key:0}):(K(),F("p",{key:1,class:q(e.nsSelect.be("dropdown","empty"))},je(e.emptyText),3))],64)):ae("v-if",!0)]),_:3})]),_:3},8,["visible","placement","teleported","popper-class","popper-options","effect","transition","persistent","onShow"])],34)),[[A,e.handleClose,e.popperPaneRef]])}var Xce=Be(Pce,[["render",xce],["__file","/home/runner/work/element-plus/element-plus/packages/components/select/src/select.vue"]]);const gce=$({name:"ElOptionGroup",componentName:"ElOptionGroup",props:{label:String,disabled:Boolean},setup(e){const t=ze("select"),n=J(!0),r=Tt(),a=J([]);zt(xT,Bt({...Kn(e)}));const l=tt(Wd);At(()=>{a.value=o(r.subTree)});const o=s=>{const u=[];return Array.isArray(s.children)&&s.children.forEach(d=>{var f;d.type&&d.type.name==="ElOption"&&d.component&&d.component.proxy?u.push(d.component.proxy):(f=d.children)!=null&&f.length&&u.push(...o(d))}),u},{groupQueryChange:i}=_t(l);return Ve(i,()=>{n.value=a.value.some(s=>s.visible===!0)},{flush:"post"}),{visible:n,ns:t}}});function wce(e,t,n,r,a,l){return Vt((K(),F("ul",{class:q(e.ns.be("group","wrap"))},[z("li",{class:q(e.ns.be("group","title"))},je(e.label),3),z("li",null,[z("ul",{class:q(e.ns.b("group"))},[ue(e.$slots,"default")],2)])],2)),[[Ct,e.visible]])}var XT=Be(gce,[["render",wce],["__file","/home/runner/work/element-plus/element-plus/packages/components/select/src/option-group.vue"]]);const Pi=qt(Xce,{Option:V2,OptionGroup:XT}),jp=Nn(V2),jce=Nn(XT),P2=()=>tt(NT,{}),Lce=Ie({pageSize:{type:Number,required:!0},pageSizes:{type:ve(Array),default:()=>An([10,20,30,40,50,100])},popperClass:{type:String},disabled:Boolean,teleported:Boolean,size:{type:String,values:sl}}),qce=$({name:"ElPaginationSizes"}),Uce=$({...qce,props:Lce,emits:["page-size-change"],setup(e,{emit:t}){const n=e,{t:r}=It(),a=ze("pagination"),l=P2(),o=J(n.pageSize);Ve(()=>n.pageSizes,(u,d)=>{if(!zr(u,d)&&Array.isArray(u)){const f=u.includes(n.pageSize)?n.pageSize:n.pageSizes[0];t("page-size-change",f)}}),Ve(()=>n.pageSize,u=>{o.value=u});const i=X(()=>n.pageSizes);function s(u){var d;u!==o.value&&(o.value=u,(d=l.handleSizeChange)==null||d.call(l,Number(u)))}return(u,d)=>(K(),F("span",{class:q(c(a).e("sizes"))},[C(c(Pi),{"model-value":o.value,disabled:u.disabled,"popper-class":u.popperClass,size:u.size,teleported:u.teleported,"validate-event":!1,onChange:s},{default:B(()=>[(K(!0),F(Qe,null,Nt(c(i),f=>(K(),ie(c(jp),{key:f,value:f,label:f+c(r)("el.pagination.pagesize")},null,8,["value","label"]))),128))]),_:1},8,["model-value","disabled","popper-class","size","teleported"])],2))}});var Oce=Be(Uce,[["__file","/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/sizes.vue"]]);const Rce=Ie({size:{type:String,values:sl}}),Jce=["disabled"],Fce=$({name:"ElPaginationJumper"}),zce=$({...Fce,props:Rce,setup(e){const{t}=It(),n=ze("pagination"),{pageCount:r,disabled:a,currentPage:l,changeEvent:o}=P2(),i=J(),s=X(()=>{var f;return(f=i.value)!=null?f:l==null?void 0:l.value});function u(f){i.value=f?+f:""}function d(f){f=Math.trunc(+f),o==null||o(f),i.value=void 0}return(f,p)=>(K(),F("span",{class:q(c(n).e("jump")),disabled:c(a)},[z("span",{class:q([c(n).e("goto")])},je(c(t)("el.pagination.goto")),3),C(c(vr),{size:f.size,class:q([c(n).e("editor"),c(n).is("in-pagination")]),min:1,max:c(r),disabled:c(a),"model-value":c(s),"validate-event":!1,label:c(t)("el.pagination.page"),type:"number","onUpdate:modelValue":u,onChange:d},null,8,["size","class","max","disabled","model-value","label"]),z("span",{class:q([c(n).e("classifier")])},je(c(t)("el.pagination.pageClassifier")),3)],10,Jce))}});var Hce=Be(zce,[["__file","/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/jumper.vue"]]);const Zce=Ie({total:{type:Number,default:1e3}}),Gce=["disabled"],Cce=$({name:"ElPaginationTotal"}),Mce=$({...Cce,props:Zce,setup(e){const{t}=It(),n=ze("pagination"),{disabled:r}=P2();return(a,l)=>(K(),F("span",{class:q(c(n).e("total")),disabled:c(r)},je(c(t)("el.pagination.total",{total:a.total})),11,Gce))}});var Dce=Be(Mce,[["__file","/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/total.vue"]]);const Ece=Ie({currentPage:{type:Number,default:1},pageCount:{type:Number,required:!0},pagerCount:{type:Number,default:7},disabled:Boolean}),Ice=["onKeyup"],Bce=["aria-current","aria-label","tabindex"],Yce=["tabindex","aria-label"],Qce=["aria-current","aria-label","tabindex"],_ce=["tabindex","aria-label"],$ce=["aria-current","aria-label","tabindex"],ede=$({name:"ElPaginationPager"}),tde=$({...ede,props:Ece,emits:["change"],setup(e,{emit:t}){const n=e,r=ze("pager"),a=ze("icon"),{t:l}=It(),o=J(!1),i=J(!1),s=J(!1),u=J(!1),d=J(!1),f=J(!1),p=X(()=>{const W=n.pagerCount,k=(W-1)/2,V=Number(n.currentPage),T=Number(n.pageCount);let P=!1,x=!1;T>W&&(V>W-k&&(P=!0),V<T-k&&(x=!0));const g=[];if(P&&!x){const j=T-(W-2);for(let L=j;L<T;L++)g.push(L)}else if(!P&&x)for(let j=2;j<W;j++)g.push(j);else if(P&&x){const j=Math.floor(W/2)-1;for(let L=V-j;L<=V+j;L++)g.push(L)}else for(let j=2;j<T;j++)g.push(j);return g}),b=X(()=>["more","btn-quickprev",a.b(),r.is("disabled",n.disabled)]),A=X(()=>["more","btn-quicknext",a.b(),r.is("disabled",n.disabled)]),h=X(()=>n.disabled?-1:0);Dn(()=>{const W=(n.pagerCount-1)/2;o.value=!1,i.value=!1,n.pageCount>n.pagerCount&&(n.currentPage>n.pagerCount-W&&(o.value=!0),n.currentPage<n.pageCount-W&&(i.value=!0))});function m(W=!1){n.disabled||(W?s.value=!0:u.value=!0)}function v(W=!1){W?d.value=!0:f.value=!0}function S(W){const k=W.target;if(k.tagName.toLowerCase()==="li"&&Array.from(k.classList).includes("number")){const V=Number(k.textContent);V!==n.currentPage&&t("change",V)}else k.tagName.toLowerCase()==="li"&&Array.from(k.classList).includes("more")&&y(W)}function y(W){const k=W.target;if(k.tagName.toLowerCase()==="ul"||n.disabled)return;let V=Number(k.textContent);const T=n.pageCount,P=n.currentPage,x=n.pagerCount-2;k.className.includes("more")&&(k.className.includes("quickprev")?V=P-x:k.className.includes("quicknext")&&(V=P+x)),Number.isNaN(+V)||(V<1&&(V=1),V>T&&(V=T)),V!==P&&t("change",V)}return(W,k)=>(K(),F("ul",{class:q(c(r).b()),onClick:y,onKeyup:Dt(S,["enter"])},[W.pageCount>0?(K(),F("li",{key:0,class:q([[c(r).is("active",W.currentPage===1),c(r).is("disabled",W.disabled)],"number"]),"aria-current":W.currentPage===1,"aria-label":c(l)("el.pagination.currentPage",{pager:1}),tabindex:c(h)}," 1 ",10,Bce)):ae("v-if",!0),o.value?(K(),F("li",{key:1,class:q(c(b)),tabindex:c(h),"aria-label":c(l)("el.pagination.prevPages",{pager:W.pagerCount-2}),onMouseenter:k[0]||(k[0]=V=>m(!0)),onMouseleave:k[1]||(k[1]=V=>s.value=!1),onFocus:k[2]||(k[2]=V=>v(!0)),onBlur:k[3]||(k[3]=V=>d.value=!1)},[(s.value||d.value)&&!W.disabled?(K(),ie(c(zs),{key:0})):(K(),ie(c(L3),{key:1}))],42,Yce)):ae("v-if",!0),(K(!0),F(Qe,null,Nt(c(p),V=>(K(),F("li",{key:V,class:q([[c(r).is("active",W.currentPage===V),c(r).is("disabled",W.disabled)],"number"]),"aria-current":W.currentPage===V,"aria-label":c(l)("el.pagination.currentPage",{pager:V}),tabindex:c(h)},je(V),11,Qce))),128)),i.value?(K(),F("li",{key:2,class:q(c(A)),tabindex:c(h),"aria-label":c(l)("el.pagination.nextPages",{pager:W.pagerCount-2}),onMouseenter:k[4]||(k[4]=V=>m()),onMouseleave:k[5]||(k[5]=V=>u.value=!1),onFocus:k[6]||(k[6]=V=>v()),onBlur:k[7]||(k[7]=V=>f.value=!1)},[(u.value||f.value)&&!W.disabled?(K(),ie(c(Hs),{key:0})):(K(),ie(c(L3),{key:1}))],42,_ce)):ae("v-if",!0),W.pageCount>1?(K(),F("li",{key:3,class:q([[c(r).is("active",W.currentPage===W.pageCount),c(r).is("disabled",W.disabled)],"number"]),"aria-current":W.currentPage===W.pageCount,"aria-label":c(l)("el.pagination.currentPage",{pager:W.pageCount}),tabindex:c(h)},je(W.pageCount),11,$ce)):ae("v-if",!0)],42,Ice))}});var nde=Be(tde,[["__file","/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/pager.vue"]]);const yr=e=>typeof e!="number",rde=Ie({pageSize:Number,defaultPageSize:Number,total:Number,pageCount:Number,pagerCount:{type:Number,validator:e=>mt(e)&&Math.trunc(e)===e&&e>4&&e<22&&e%2===1,default:7},currentPage:Number,defaultCurrentPage:Number,layout:{type:String,default:["prev","pager","next","jumper","->","total"].join(", ")},pageSizes:{type:ve(Array),default:()=>An([10,20,30,40,50,100])},popperClass:{type:String,default:""},prevText:{type:String,default:""},prevIcon:{type:un,default:()=>Wo},nextText:{type:String,default:""},nextIcon:{type:un,default:()=>Vr},teleported:{type:Boolean,default:!0},small:Boolean,background:Boolean,disabled:Boolean,hideOnSinglePage:Boolean}),ade={"update:current-page":e=>mt(e),"update:page-size":e=>mt(e),"size-change":e=>mt(e),"current-change":e=>mt(e),"prev-click":e=>mt(e),"next-click":e=>mt(e)},D8="ElPagination";var lde=$({name:D8,props:rde,emits:ade,setup(e,{emit:t,slots:n}){const{t:r}=It(),a=ze("pagination"),l=Tt().vnode.props||{},o="onUpdate:currentPage"in l||"onUpdate:current-page"in l||"onCurrentChange"in l,i="onUpdate:pageSize"in l||"onUpdate:page-size"in l||"onSizeChange"in l,s=X(()=>{if(yr(e.total)&&yr(e.pageCount)||!yr(e.currentPage)&&!o)return!1;if(e.layout.includes("sizes")){if(yr(e.pageCount)){if(!yr(e.total)&&!yr(e.pageSize)&&!i)return!1}else if(!i)return!1}return!0}),u=J(yr(e.defaultPageSize)?10:e.defaultPageSize),d=J(yr(e.defaultCurrentPage)?1:e.defaultCurrentPage),f=X({get(){return yr(e.pageSize)?u.value:e.pageSize},set(y){yr(e.pageSize)&&(u.value=y),i&&(t("update:page-size",y),t("size-change",y))}}),p=X(()=>{let y=0;return yr(e.pageCount)?yr(e.total)||(y=Math.max(1,Math.ceil(e.total/f.value))):y=e.pageCount,y}),b=X({get(){return yr(e.currentPage)?d.value:e.currentPage},set(y){let W=y;y<1?W=1:y>p.value&&(W=p.value),yr(e.currentPage)&&(d.value=W),o&&(t("update:current-page",W),t("current-change",W))}});Ve(p,y=>{b.value>y&&(b.value=y)});function A(y){b.value=y}function h(y){f.value=y;const W=p.value;b.value>W&&(b.value=W)}function m(){e.disabled||(b.value-=1,t("prev-click",b.value))}function v(){e.disabled||(b.value+=1,t("next-click",b.value))}function S(y,W){y&&(y.props||(y.props={}),y.props.class=[y.props.class,W].join(" "))}return zt(NT,{pageCount:p,disabled:X(()=>e.disabled),currentPage:b,changeEvent:A,handleSizeChange:h}),()=>{var y,W;if(!s.value)return r("el.pagination.deprecationWarning"),null;if(!e.layout||e.hideOnSinglePage&&p.value<=1)return null;const k=[],V=[],T=st("div",{class:a.e("rightwrapper")},V),P={prev:st(ice,{disabled:e.disabled,currentPage:b.value,prevText:e.prevText,prevIcon:e.prevIcon,onClick:m}),jumper:st(Hce,{size:e.small?"small":"default"}),pager:st(nde,{currentPage:b.value,pageCount:p.value,pagerCount:e.pagerCount,onChange:A,disabled:e.disabled}),next:st(pce,{disabled:e.disabled,currentPage:b.value,pageCount:p.value,nextText:e.nextText,nextIcon:e.nextIcon,onClick:v}),sizes:st(Oce,{pageSize:f.value,pageSizes:e.pageSizes,popperClass:e.popperClass,disabled:e.disabled,teleported:e.teleported,size:e.small?"small":"default"}),slot:(W=(y=n==null?void 0:n.default)==null?void 0:y.call(n))!=null?W:null,total:st(Dce,{total:yr(e.total)?0:e.total})},x=e.layout.split(",").map(j=>j.trim());let g=!1;return x.forEach(j=>{if(j==="->"){g=!0;return}g?V.push(P[j]):k.push(P[j])}),S(k[0],a.is("first")),S(k[k.length-1],a.is("last")),g&&V.length>0&&(S(V[0],a.is("first")),S(V[V.length-1],a.is("last")),k.push(T)),st("div",{class:[a.b(),a.is("background",e.background),{[a.m("small")]:e.small}]},k)}}});const ode=qt(lde),ide=Ie({title:String,confirmButtonText:String,cancelButtonText:String,confirmButtonType:{type:String,values:rh,default:"primary"},cancelButtonType:{type:String,values:rh,default:"text"},icon:{type:un,default:()=>tI},iconColor:{type:String,default:"#f90"},hideIcon:{type:Boolean,default:!1},hideAfter:{type:Number,default:200},teleported:nr.teleported,persistent:nr.persistent,width:{type:[String,Number],default:150}}),sde={confirm:e=>e instanceof MouseEvent,cancel:e=>e instanceof MouseEvent},ude=$({name:"ElPopconfirm"}),cde=$({...ude,props:ide,emits:sde,setup(e,{emit:t}){const n=e,{t:r}=It(),a=ze("popconfirm"),l=J(),o=()=>{var p,b;(b=(p=l.value)==null?void 0:p.onClose)==null||b.call(p)},i=X(()=>({width:Ln(n.width)})),s=p=>{t("confirm",p),o()},u=p=>{t("cancel",p),o()},d=X(()=>n.confirmButtonText||r("el.popconfirm.confirmButtonText")),f=X(()=>n.cancelButtonText||r("el.popconfirm.cancelButtonText"));return(p,b)=>(K(),ie(c(Xr),Ut({ref_key:"tooltipRef",ref:l,trigger:"click",effect:"light"},p.$attrs,{"popper-class":`${c(a).namespace.value}-popover`,"popper-style":c(i),teleported:p.teleported,"fallback-placements":["bottom","top","right","left"],"hide-after":p.hideAfter,persistent:p.persistent}),{content:B(()=>[z("div",{class:q(c(a).b())},[z("div",{class:q(c(a).e("main"))},[!p.hideIcon&&p.icon?(K(),ie(c(it),{key:0,class:q(c(a).e("icon")),style:lt({color:p.iconColor})},{default:B(()=>[(K(),ie(Ot(p.icon)))]),_:1},8,["class","style"])):ae("v-if",!0),Xt(" "+je(p.title),1)],2),z("div",{class:q(c(a).e("action"))},[C(c(sr),{size:"small",type:p.cancelButtonType==="text"?"":p.cancelButtonType,text:p.cancelButtonType==="text",onClick:u},{default:B(()=>[Xt(je(c(f)),1)]),_:1},8,["type","text"]),C(c(sr),{size:"small",type:p.confirmButtonType==="text"?"":p.confirmButtonType,text:p.confirmButtonType==="text",onClick:s},{default:B(()=>[Xt(je(c(d)),1)]),_:1},8,["type","text"])],2)],2)]),default:B(()=>[p.$slots.reference?ue(p.$slots,"reference",{key:0}):ae("v-if",!0)]),_:3},16,["popper-class","popper-style","teleported","hide-after","persistent"]))}});var dde=Be(cde,[["__file","/home/runner/work/element-plus/element-plus/packages/components/popconfirm/src/popconfirm.vue"]]);const fde=qt(dde),pde=Ie({trigger:jc.trigger,placement:Jf.placement,disabled:jc.disabled,visible:nr.visible,transition:nr.transition,popperOptions:Jf.popperOptions,tabindex:Jf.tabindex,content:nr.content,popperStyle:nr.popperStyle,popperClass:nr.popperClass,enterable:{...nr.enterable,default:!0},effect:{...nr.effect,default:"light"},teleported:nr.teleported,title:String,width:{type:[String,Number],default:150},offset:{type:Number,default:void 0},showAfter:{type:Number,default:0},hideAfter:{type:Number,default:200},autoClose:{type:Number,default:0},showArrow:{type:Boolean,default:!0},persistent:{type:Boolean,default:!0},"onUpdate:visible":{type:Function}}),vde={"update:visible":e=>Zn(e),"before-enter":()=>!0,"before-leave":()=>!0,"after-enter":()=>!0,"after-leave":()=>!0},bde="onUpdate:visible",hde=$({name:"ElPopover"}),mde=$({...hde,props:pde,emits:vde,setup(e,{expose:t,emit:n}){const r=e,a=X(()=>r[bde]),l=ze("popover"),o=J(),i=X(()=>{var m;return(m=c(o))==null?void 0:m.popperRef}),s=X(()=>[{width:Ln(r.width)},r.popperStyle]),u=X(()=>[l.b(),r.popperClass,{[l.m("plain")]:!!r.content}]),d=X(()=>r.transition===`${l.namespace.value}-fade-in-linear`),f=()=>{var m;(m=o.value)==null||m.hide()},p=()=>{n("before-enter")},b=()=>{n("before-leave")},A=()=>{n("after-enter")},h=()=>{n("update:visible",!1),n("after-leave")};return t({popperRef:i,hide:f}),(m,v)=>(K(),ie(c(Xr),Ut({ref_key:"tooltipRef",ref:o},m.$attrs,{trigger:m.trigger,placement:m.placement,disabled:m.disabled,visible:m.visible,transition:m.transition,"popper-options":m.popperOptions,tabindex:m.tabindex,content:m.content,offset:m.offset,"show-after":m.showAfter,"hide-after":m.hideAfter,"auto-close":m.autoClose,"show-arrow":m.showArrow,"aria-label":m.title,effect:m.effect,enterable:m.enterable,"popper-class":c(u),"popper-style":c(s),teleported:m.teleported,persistent:m.persistent,"gpu-acceleration":c(d),"onUpdate:visible":c(a),onBeforeShow:p,onBeforeHide:b,onShow:A,onHide:h}),{content:B(()=>[m.title?(K(),F("div",{key:0,class:q(c(l).e("title")),role:"title"},je(m.title),3)):ae("v-if",!0),ue(m.$slots,"default",{},()=>[Xt(je(m.content),1)])]),default:B(()=>[m.$slots.reference?ue(m.$slots,"reference",{key:0}):ae("v-if",!0)]),_:3},16,["trigger","placement","disabled","visible","transition","popper-options","tabindex","content","offset","show-after","hide-after","auto-close","show-arrow","aria-label","effect","enterable","popper-class","popper-style","teleported","persistent","gpu-acceleration","onUpdate:visible"]))}});var Sde=Be(mde,[["__file","/home/runner/work/element-plus/element-plus/packages/components/popover/src/popover.vue"]]);const E8=(e,t)=>{const n=t.arg||t.value,r=n==null?void 0:n.popperRef;r&&(r.triggerRef=e)};var yde={mounted(e,t){E8(e,t)},updated(e,t){E8(e,t)}};const Ade="popover",gT=XB(yde,Ade),Wde=qt(Sde,{directive:gT}),kde=Ie({type:{type:String,default:"line",values:["line","circle","dashboard"]},percentage:{type:Number,default:0,validator:e=>e>=0&&e<=100},status:{type:String,default:"",values:["","success","exception","warning"]},indeterminate:{type:Boolean,default:!1},duration:{type:Number,default:3},strokeWidth:{type:Number,default:6},strokeLinecap:{type:ve(String),default:"round"},textInside:{type:Boolean,default:!1},width:{type:Number,default:126},showText:{type:Boolean,default:!0},color:{type:ve([String,Array,Function]),default:""},striped:Boolean,stripedFlow:Boolean,format:{type:ve(Function),default:e=>`${e}%`}}),Vde=["aria-valuenow"],Pde={viewBox:"0 0 100 100"},Tde=["d","stroke","stroke-linecap","stroke-width"],Kde=["d","stroke","opacity","stroke-linecap","stroke-width"],Nde={key:0},xde=$({name:"ElProgress"}),Xde=$({...xde,props:kde,setup(e){const t=e,n={success:"#13ce66",exception:"#ff4949",warning:"#e6a23c",default:"#20a0ff"},r=ze("progress"),a=X(()=>({width:`${t.percentage}%`,animationDuration:`${t.duration}s`,backgroundColor:S(t.percentage)})),l=X(()=>(t.strokeWidth/t.width*100).toFixed(1)),o=X(()=>["circle","dashboard"].includes(t.type)?Number.parseInt(`${50-Number.parseFloat(l.value)/2}`,10):0),i=X(()=>{const y=o.value,W=t.type==="dashboard";return`
          M 50 50
          m 0 ${W?"":"-"}${y}
          a ${y} ${y} 0 1 1 0 ${W?"-":""}${y*2}
          a ${y} ${y} 0 1 1 0 ${W?"":"-"}${y*2}
          `}),s=X(()=>2*Math.PI*o.value),u=X(()=>t.type==="dashboard"?.75:1),d=X(()=>`${-1*s.value*(1-u.value)/2}px`),f=X(()=>({strokeDasharray:`${s.value*u.value}px, ${s.value}px`,strokeDashoffset:d.value})),p=X(()=>({strokeDasharray:`${s.value*u.value*(t.percentage/100)}px, ${s.value}px`,strokeDashoffset:d.value,transition:"stroke-dasharray 0.6s ease 0s, stroke 0.6s ease, opacity ease 0.6s"})),b=X(()=>{let y;return t.color?y=S(t.percentage):y=n[t.status]||n.default,y}),A=X(()=>t.status==="warning"?Ov:t.type==="line"?t.status==="success"?Rm:qo:t.status==="success"?hd:ma),h=X(()=>t.type==="line"?12+t.strokeWidth*.4:t.width*.111111+2),m=X(()=>t.format(t.percentage));function v(y){const W=100/y.length;return y.map((V,T)=>Pt(V)?{color:V,percentage:(T+1)*W}:V).sort((V,T)=>V.percentage-T.percentage)}const S=y=>{var W;const{color:k}=t;if(ht(k))return k(y);if(Pt(k))return k;{const V=v(k);for(const T of V)if(T.percentage>y)return T.color;return(W=V[V.length-1])==null?void 0:W.color}};return(y,W)=>(K(),F("div",{class:q([c(r).b(),c(r).m(y.type),c(r).is(y.status),{[c(r).m("without-text")]:!y.showText,[c(r).m("text-inside")]:y.textInside}]),role:"progressbar","aria-valuenow":y.percentage,"aria-valuemin":"0","aria-valuemax":"100"},[y.type==="line"?(K(),F("div",{key:0,class:q(c(r).b("bar"))},[z("div",{class:q(c(r).be("bar","outer")),style:lt({height:`${y.strokeWidth}px`})},[z("div",{class:q([c(r).be("bar","inner"),{[c(r).bem("bar","inner","indeterminate")]:y.indeterminate},{[c(r).bem("bar","inner","striped")]:y.striped},{[c(r).bem("bar","inner","striped-flow")]:y.stripedFlow}]),style:lt(c(a))},[(y.showText||y.$slots.default)&&y.textInside?(K(),F("div",{key:0,class:q(c(r).be("bar","innerText"))},[ue(y.$slots,"default",{percentage:y.percentage},()=>[z("span",null,je(c(m)),1)])],2)):ae("v-if",!0)],6)],6)],2)):(K(),F("div",{key:1,class:q(c(r).b("circle")),style:lt({height:`${y.width}px`,width:`${y.width}px`})},[(K(),F("svg",Pde,[z("path",{class:q(c(r).be("circle","track")),d:c(i),stroke:`var(${c(r).cssVarName("fill-color-light")}, #e5e9f2)`,"stroke-linecap":y.strokeLinecap,"stroke-width":c(l),fill:"none",style:lt(c(f))},null,14,Tde),z("path",{class:q(c(r).be("circle","path")),d:c(i),stroke:c(b),fill:"none",opacity:y.percentage?1:0,"stroke-linecap":y.strokeLinecap,"stroke-width":c(l),style:lt(c(p))},null,14,Kde)]))],6)),(y.showText||y.$slots.default)&&!y.textInside?(K(),F("div",{key:2,class:q(c(r).e("text")),style:lt({fontSize:`${c(h)}px`})},[ue(y.$slots,"default",{percentage:y.percentage},()=>[y.status?(K(),ie(c(it),{key:1},{default:B(()=>[(K(),ie(Ot(c(A))))]),_:1})):(K(),F("span",Nde,je(c(m)),1))])],6)):ae("v-if",!0)],10,Vde))}});var gde=Be(Xde,[["__file","/home/runner/work/element-plus/element-plus/packages/components/progress/src/progress.vue"]]);const wT=qt(gde),wde=Ie({modelValue:{type:Number,default:0},id:{type:String,default:void 0},lowThreshold:{type:Number,default:2},highThreshold:{type:Number,default:4},max:{type:Number,default:5},colors:{type:ve([Array,Object]),default:()=>An(["","",""])},voidColor:{type:String,default:""},disabledVoidColor:{type:String,default:""},icons:{type:ve([Array,Object]),default:()=>[Ed,Ed,Ed]},voidIcon:{type:un,default:()=>eB},disabledVoidIcon:{type:un,default:()=>Ed},disabled:Boolean,allowHalf:Boolean,showText:Boolean,showScore:Boolean,textColor:{type:String,default:""},texts:{type:ve(Array),default:()=>An(["Extremely bad","Disappointed","Fair","Satisfied","Surprise"])},scoreTemplate:{type:String,default:"{value}"},size:ur,label:{type:String,default:void 0},clearable:{type:Boolean,default:!1}}),jde={[mn]:e=>mt(e),[Rt]:e=>mt(e)},Lde=["id","aria-label","aria-labelledby","aria-valuenow","aria-valuetext","aria-valuemax"],qde=["onMousemove","onClick"],Ude=$({name:"ElRate"}),Ode=$({...Ude,props:wde,emits:jde,setup(e,{expose:t,emit:n}){const r=e;function a(G,U){const H=Y=>Jt(Y),O=Object.keys(U).map(Y=>+Y).filter(Y=>{const Q=U[Y];return(H(Q)?Q.excluded:!1)?G<Y:G<=Y}).sort((Y,Q)=>Y-Q),D=U[O[0]];return H(D)&&D.value||D}const l=tt(Oi,void 0),o=tt(ll,void 0),i=Cn(),s=ze("rate"),{inputId:u,isLabeledByFormItem:d}=Jo(r,{formItemContext:o}),f=J(r.modelValue),p=J(-1),b=J(!0),A=X(()=>[s.b(),s.m(i.value)]),h=X(()=>r.disabled||(l==null?void 0:l.disabled)),m=X(()=>s.cssVarBlock({"void-color":r.voidColor,"disabled-void-color":r.disabledVoidColor,"fill-color":W.value})),v=X(()=>{let G="";return r.showScore?G=r.scoreTemplate.replace(/\{\s*value\s*\}/,h.value?`${r.modelValue}`:`${f.value}`):r.showText&&(G=r.texts[Math.ceil(f.value)-1]),G}),S=X(()=>r.modelValue*100-Math.floor(r.modelValue)*100),y=X(()=>et(r.colors)?{[r.lowThreshold]:r.colors[0],[r.highThreshold]:{value:r.colors[1],excluded:!0},[r.max]:r.colors[2]}:r.colors),W=X(()=>{const G=a(f.value,y.value);return Jt(G)?"":G}),k=X(()=>{let G="";return h.value?G=`${S.value}%`:r.allowHalf&&(G="50%"),{color:W.value,width:G}}),V=X(()=>{let G=et(r.icons)?[...r.icons]:{...r.icons};return G=kr(G),et(G)?{[r.lowThreshold]:G[0],[r.highThreshold]:{value:G[1],excluded:!0},[r.max]:G[2]}:G}),T=X(()=>a(r.modelValue,V.value)),P=X(()=>h.value?Pt(r.disabledVoidIcon)?r.disabledVoidIcon:kr(r.disabledVoidIcon):Pt(r.voidIcon)?r.voidIcon:kr(r.voidIcon)),x=X(()=>a(f.value,V.value));function g(G){const U=h.value&&S.value>0&&G-1<r.modelValue&&G>r.modelValue,H=r.allowHalf&&b.value&&G-.5<=f.value&&G>f.value;return U||H}function j(G){r.clearable&&G===r.modelValue&&(G=0),n(Rt,G),r.modelValue!==G&&n("change",G)}function L(G){h.value||(r.allowHalf&&b.value?j(f.value):j(G))}function w(G){if(h.value)return;let U=f.value;const H=G.code;return H===ut.up||H===ut.right?(r.allowHalf?U+=.5:U+=1,G.stopPropagation(),G.preventDefault()):(H===ut.left||H===ut.down)&&(r.allowHalf?U-=.5:U-=1,G.stopPropagation(),G.preventDefault()),U=U<0?0:U,U=U>r.max?r.max:U,n(Rt,U),n("change",U),U}function R(G,U){if(!h.value){if(r.allowHalf&&U){let H=U.target;La(H,s.e("item"))&&(H=H.querySelector(`.${s.e("icon")}`)),(H.clientWidth===0||La(H,s.e("decimal")))&&(H=H.parentNode),b.value=U.offsetX*2<=H.clientWidth,f.value=b.value?G-.5:G}else f.value=G;p.value=G}}function Z(){h.value||(r.allowHalf&&(b.value=r.modelValue!==Math.floor(r.modelValue)),f.value=r.modelValue,p.value=-1)}return Ve(()=>r.modelValue,G=>{f.value=G,b.value=r.modelValue!==Math.floor(r.modelValue)}),r.modelValue||n(Rt,0),t({setCurrentValue:R,resetCurrentValue:Z}),(G,U)=>{var H;return K(),F("div",{id:c(u),class:q([c(A),c(s).is("disabled",c(h))]),role:"slider","aria-label":c(d)?void 0:G.label||"rating","aria-labelledby":c(d)?(H=c(o))==null?void 0:H.labelId:void 0,"aria-valuenow":f.value,"aria-valuetext":c(v)||void 0,"aria-valuemin":"0","aria-valuemax":G.max,tabindex:"0",style:lt(c(m)),onKeydown:w},[(K(!0),F(Qe,null,Nt(G.max,(O,D)=>(K(),F("span",{key:D,class:q(c(s).e("item")),onMousemove:Y=>R(O,Y),onMouseleave:Z,onClick:Y=>L(O)},[C(c(it),{class:q([c(s).e("icon"),{hover:p.value===O},c(s).is("active",O<=f.value)])},{default:B(()=>[g(O)?ae("v-if",!0):(K(),F(Qe,{key:0},[Vt((K(),ie(Ot(c(x)),null,null,512)),[[Ct,O<=f.value]]),Vt((K(),ie(Ot(c(P)),null,null,512)),[[Ct,!(O<=f.value)]])],64)),g(O)?(K(),ie(c(it),{key:1,style:lt(c(k)),class:q([c(s).e("icon"),c(s).e("decimal")])},{default:B(()=>[(K(),ie(Ot(c(T))))]),_:1},8,["style","class"])):ae("v-if",!0)]),_:2},1032,["class"])],42,qde))),128)),G.showText||G.showScore?(K(),F("span",{key:0,class:q(c(s).e("text")),style:lt({color:G.textColor})},je(c(v)),7)):ae("v-if",!0)],46,Lde)}}});var Rde=Be(Ode,[["__file","/home/runner/work/element-plus/element-plus/packages/components/rate/src/rate.vue"]]);const Jde=qt(Rde),ds={success:"icon-success",warning:"icon-warning",error:"icon-error",info:"icon-info"},I8={[ds.success]:LM,[ds.warning]:Ov,[ds.error]:Jm,[ds.info]:Fm},Fde=Ie({title:{type:String,default:""},subTitle:{type:String,default:""},icon:{type:String,values:["success","warning","info","error"],default:"info"}}),zde=$({name:"ElResult"}),Hde=$({...zde,props:Fde,setup(e){const t=e,n=ze("result"),r=X(()=>{const a=t.icon,l=a&&ds[a]?ds[a]:"icon-info",o=I8[l]||I8["icon-info"];return{class:l,component:o}});return(a,l)=>(K(),F("div",{class:q(c(n).b())},[z("div",{class:q(c(n).e("icon"))},[ue(a.$slots,"icon",{},()=>[c(r).component?(K(),ie(Ot(c(r).component),{key:0,class:q(c(r).class)},null,8,["class"])):ae("v-if",!0)])],2),a.title||a.$slots.title?(K(),F("div",{key:0,class:q(c(n).e("title"))},[ue(a.$slots,"title",{},()=>[z("p",null,je(a.title),1)])],2)):ae("v-if",!0),a.subTitle||a.$slots["sub-title"]?(K(),F("div",{key:1,class:q(c(n).e("subtitle"))},[ue(a.$slots,"sub-title",{},()=>[z("p",null,je(a.subTitle),1)])],2)):ae("v-if",!0),a.$slots.extra?(K(),F("div",{key:2,class:q(c(n).e("extra"))},[ue(a.$slots,"extra")],2)):ae("v-if",!0)],2))}});var Zde=Be(Hde,[["__file","/home/runner/work/element-plus/element-plus/packages/components/result/src/result.vue"]]);const Gde=qt(Zde);var B8=Number.isNaN||function(t){return typeof t=="number"&&t!==t};function Cde(e,t){return!!(e===t||B8(e)&&B8(t))}function Mde(e,t){if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(!Cde(e[n],t[n]))return!1;return!0}function Dde(e,t){t===void 0&&(t=Mde);var n=null;function r(){for(var a=[],l=0;l<arguments.length;l++)a[l]=arguments[l];if(n&&n.lastThis===this&&t(a,n.lastArgs))return n.lastResult;var o=e.apply(this,a);return n={lastResult:o,lastArgs:a,lastThis:this},o}return r.clear=function(){n=null},r}const jT=()=>{const t=Tt().proxy.$props;return X(()=>{const n=(r,a,l)=>({});return t.perfMode?jv(n):Dde(n)})},kh=50,Lp="itemRendered",qp="scroll",fs="forward",Up="backward",pa="auto",_v="smart",Uc="start",Ia="center",Oc="end",Ys="horizontal",T2="vertical",Ede="ltr",Ps="rtl",Rc="negative",K2="positive-ascending",N2="positive-descending",Ide={[Ys]:"left",[T2]:"top"},Bde=20,Yde={[Ys]:"deltaX",[T2]:"deltaY"},Qde=({atEndEdge:e,atStartEdge:t,layout:n},r)=>{let a,l=0;const o=s=>s<0&&t.value||s>0&&e.value;return{hasReachedEdge:o,onWheel:s=>{zv(a);const u=s[Yde[n.value]];o(l)&&o(l+u)||(l+=u,Y4()||s.preventDefault(),a=Zs(()=>{r(l),l=0}))}}},Vh=Fa({type:ve([Number,Function]),required:!0}),Ph=Fa({type:Number}),Th=Fa({type:Number,default:2}),_de=Fa({type:String,values:["ltr","rtl"],default:"ltr"}),Kh=Fa({type:Number,default:0}),Op=Fa({type:Number,required:!0}),LT=Fa({type:String,values:["horizontal","vertical"],default:T2}),qT=Ie({className:{type:String,default:""},containerElement:{type:ve([String,Object]),default:"div"},data:{type:ve(Array),default:()=>An([])},direction:_de,height:{type:[String,Number],required:!0},innerElement:{type:[String,Object],default:"div"},style:{type:ve([Object,String,Array])},useIsScrolling:{type:Boolean,default:!1},width:{type:[Number,String],required:!1},perfMode:{type:Boolean,default:!0},scrollbarAlwaysOn:{type:Boolean,default:!1}}),UT=Ie({cache:Th,estimatedItemSize:Ph,layout:LT,initScrollOffset:Kh,total:Op,itemSize:Vh,...qT}),Nh={type:Number,default:6},OT={type:Number,default:0},RT={type:Number,default:2},di=Ie({columnCache:Th,columnWidth:Vh,estimatedColumnWidth:Ph,estimatedRowHeight:Ph,initScrollLeft:Kh,initScrollTop:Kh,itemKey:{type:ve(Function),default:({columnIndex:e,rowIndex:t})=>`${t}:${e}`},rowCache:Th,rowHeight:Vh,totalColumn:Op,totalRow:Op,hScrollbarSize:Nh,vScrollbarSize:Nh,scrollbarStartGap:OT,scrollbarEndGap:RT,role:String,...qT}),JT=Ie({alwaysOn:Boolean,class:String,layout:LT,total:Op,ratio:{type:Number,required:!0},clientSize:{type:Number,required:!0},scrollFrom:{type:Number,required:!0},scrollbarSize:Nh,startGap:OT,endGap:RT,visible:Boolean}),ti=(e,t)=>e<t?fs:Up,Jc=e=>e===Ede||e===Ps||e===Ys,Y8=e=>e===Ps;let Bi=null;function Rp(e=!1){if(Bi===null||e){const t=document.createElement("div"),n=t.style;n.width="50px",n.height="50px",n.overflow="scroll",n.direction="rtl";const r=document.createElement("div"),a=r.style;return a.width="100px",a.height="100px",t.appendChild(r),document.body.appendChild(t),t.scrollLeft>0?Bi=N2:(t.scrollLeft=1,t.scrollLeft===0?Bi=Rc:Bi=K2),document.body.removeChild(t),Bi}return Bi}function $de({move:e,size:t,bar:n},r){const a={},l=`translate${n.axis}(${e}px)`;return a[n.size]=t,a.transform=l,a.msTransform=l,a.webkitTransform=l,r==="horizontal"?a.height="100%":a.width="100%",a}const xh=$({name:"ElVirtualScrollBar",props:JT,emits:["scroll","start-move","stop-move"],setup(e,{emit:t}){const n=X(()=>e.startGap+e.endGap),r=ze("virtual-scrollbar"),a=ze("scrollbar"),l=J(),o=J();let i=null,s=null;const u=Bt({isDragging:!1,traveled:0}),d=X(()=>OV[e.layout]),f=X(()=>e.clientSize-c(n)),p=X(()=>({position:"absolute",width:`${Ys===e.layout?f.value:e.scrollbarSize}px`,height:`${Ys===e.layout?e.scrollbarSize:f.value}px`,[Ide[e.layout]]:"2px",right:"2px",bottom:"2px",borderRadius:"4px"})),b=X(()=>{const V=e.ratio,T=e.clientSize;if(V>=100)return Number.POSITIVE_INFINITY;if(V>=50)return V*T/100;const P=T/3;return Math.floor(Math.min(Math.max(V*T,Bde),P))}),A=X(()=>{if(!Number.isFinite(b.value))return{display:"none"};const V=`${b.value}px`;return $de({bar:d.value,size:V,move:u.traveled},e.layout)}),h=X(()=>Math.floor(e.clientSize-b.value-c(n))),m=()=>{window.addEventListener("mousemove",W),window.addEventListener("mouseup",y);const V=c(o);!V||(s=document.onselectstart,document.onselectstart=()=>!1,V.addEventListener("touchmove",W),V.addEventListener("touchend",y))},v=()=>{window.removeEventListener("mousemove",W),window.removeEventListener("mouseup",y),document.onselectstart=s,s=null;const V=c(o);!V||(V.removeEventListener("touchmove",W),V.removeEventListener("touchend",y))},S=V=>{V.stopImmediatePropagation(),!(V.ctrlKey||[1,2].includes(V.button))&&(u.isDragging=!0,u[d.value.axis]=V.currentTarget[d.value.offset]-(V[d.value.client]-V.currentTarget.getBoundingClientRect()[d.value.direction]),t("start-move"),m())},y=()=>{u.isDragging=!1,u[d.value.axis]=0,t("stop-move"),v()},W=V=>{const{isDragging:T}=u;if(!T||!o.value||!l.value)return;const P=u[d.value.axis];if(!P)return;zv(i);const x=(l.value.getBoundingClientRect()[d.value.direction]-V[d.value.client])*-1,g=o.value[d.value.offset]-P,j=x-g;i=Zs(()=>{u.traveled=Math.max(e.startGap,Math.min(j,h.value)),t("scroll",j,h.value)})},k=V=>{const T=Math.abs(V.target.getBoundingClientRect()[d.value.direction]-V[d.value.client]),P=o.value[d.value.offset]/2,x=T-P;u.traveled=Math.max(0,Math.min(x,h.value)),t("scroll",x,h.value)};return Ve(()=>e.scrollFrom,V=>{u.isDragging||(u.traveled=Math.ceil(V*h.value))}),tn(()=>{v()}),()=>st("div",{role:"presentation",ref:l,class:[r.b(),e.class,(e.alwaysOn||u.isDragging)&&"always-on"],style:p.value,onMousedown:pt(k,["stop","prevent"]),onTouchstartPrevent:S},st("div",{ref:o,class:a.e("thumb"),style:A.value,onMousedown:S},[]))}}),FT=({name:e,getOffset:t,getItemSize:n,getItemOffset:r,getEstimatedTotalSize:a,getStartIndexForOffset:l,getStopIndexForStartIndex:o,initCache:i,clearCache:s,validateProps:u})=>$({name:e!=null?e:"ElVirtualList",props:UT,emits:[Lp,qp],setup(d,{emit:f,expose:p}){u(d);const b=Tt(),A=ze("vl"),h=J(i(d,b)),m=jT(),v=J(),S=J(),y=J(),W=J({isScrolling:!1,scrollDir:"forward",scrollOffset:mt(d.initScrollOffset)?d.initScrollOffset:0,updateRequested:!1,isScrollbarDragging:!1,scrollbarAlwaysOn:d.scrollbarAlwaysOn}),k=X(()=>{const{total:ee,cache:oe}=d,{isScrolling:Ne,scrollDir:pe,scrollOffset:me}=c(W);if(ee===0)return[0,0,0,0];const ce=l(d,me,c(h)),Le=o(d,ce,me,c(h)),Te=!Ne||pe===Up?Math.max(1,oe):1,xe=!Ne||pe===fs?Math.max(1,oe):1;return[Math.max(0,ce-Te),Math.max(0,Math.min(ee-1,Le+xe)),ce,Le]}),V=X(()=>a(d,c(h))),T=X(()=>Jc(d.layout)),P=X(()=>[{position:"relative",[`overflow-${T.value?"x":"y"}`]:"scroll",WebkitOverflowScrolling:"touch",willChange:"transform"},{direction:d.direction,height:mt(d.height)?`${d.height}px`:d.height,width:mt(d.width)?`${d.width}px`:d.width},d.style]),x=X(()=>{const ee=c(V),oe=c(T);return{height:oe?"100%":`${ee}px`,pointerEvents:c(W).isScrolling?"none":void 0,width:oe?`${ee}px`:"100%"}}),g=X(()=>T.value?d.width:d.height),{onWheel:j}=Qde({atStartEdge:X(()=>W.value.scrollOffset<=0),atEndEdge:X(()=>W.value.scrollOffset>=V.value),layout:X(()=>d.layout)},ee=>{var oe,Ne;(Ne=(oe=y.value).onMouseUp)==null||Ne.call(oe),U(Math.min(W.value.scrollOffset+ee,V.value-g.value))}),L=()=>{const{total:ee}=d;if(ee>0){const[me,ce,Le,Te]=c(k);f(Lp,me,ce,Le,Te)}const{scrollDir:oe,scrollOffset:Ne,updateRequested:pe}=c(W);f(qp,oe,Ne,pe)},w=ee=>{const{clientHeight:oe,scrollHeight:Ne,scrollTop:pe}=ee.currentTarget,me=c(W);if(me.scrollOffset===pe)return;const ce=Math.max(0,Math.min(pe,Ne-oe));W.value={...me,isScrolling:!0,scrollDir:ti(me.scrollOffset,ce),scrollOffset:ce,updateRequested:!1},at(D)},R=ee=>{const{clientWidth:oe,scrollLeft:Ne,scrollWidth:pe}=ee.currentTarget,me=c(W);if(me.scrollOffset===Ne)return;const{direction:ce}=d;let Le=Ne;if(ce===Ps)switch(Rp()){case Rc:{Le=-Ne;break}case N2:{Le=pe-oe-Ne;break}}Le=Math.max(0,Math.min(Le,pe-oe)),W.value={...me,isScrolling:!0,scrollDir:ti(me.scrollOffset,Le),scrollOffset:Le,updateRequested:!1},at(D)},Z=ee=>{c(T)?R(ee):w(ee),L()},G=(ee,oe)=>{const Ne=(V.value-g.value)/oe*ee;U(Math.min(V.value-g.value,Ne))},U=ee=>{ee=Math.max(ee,0),ee!==c(W).scrollOffset&&(W.value={...c(W),scrollOffset:ee,scrollDir:ti(c(W).scrollOffset,ee),updateRequested:!0},at(D))},H=(ee,oe=pa)=>{const{scrollOffset:Ne}=c(W);ee=Math.max(0,Math.min(ee,d.total-1)),U(t(d,ee,oe,Ne,c(h)))},O=ee=>{const{direction:oe,itemSize:Ne,layout:pe}=d,me=m.value(s&&Ne,s&&pe,s&&oe);let ce;if(Zt(me,String(ee)))ce=me[ee];else{const Le=r(d,ee,c(h)),Te=n(d,ee,c(h)),xe=c(T),_=oe===Ps,re=xe?Le:0;me[ee]=ce={position:"absolute",left:_?void 0:`${re}px`,right:_?`${re}px`:void 0,top:xe?0:`${Le}px`,height:xe?"100%":`${Te}px`,width:xe?`${Te}px`:"100%"}}return ce},D=()=>{W.value.isScrolling=!1,at(()=>{m.value(-1,null,null)})},Y=()=>{const ee=v.value;ee&&(ee.scrollTop=0)};At(()=>{if(!Mt)return;const{initScrollOffset:ee}=d,oe=c(v);mt(ee)&&oe&&(c(T)?oe.scrollLeft=ee:oe.scrollTop=ee),L()}),la(()=>{const{direction:ee,layout:oe}=d,{scrollOffset:Ne,updateRequested:pe}=c(W),me=c(v);if(pe&&me)if(oe===Ys)if(ee===Ps)switch(Rp()){case Rc:{me.scrollLeft=-Ne;break}case K2:{me.scrollLeft=Ne;break}default:{const{clientWidth:ce,scrollWidth:Le}=me;me.scrollLeft=Le-ce-Ne;break}}else me.scrollLeft=Ne;else me.scrollTop=Ne});const Q={ns:A,clientSize:g,estimatedTotalSize:V,windowStyle:P,windowRef:v,innerRef:S,innerStyle:x,itemsToRender:k,scrollbarRef:y,states:W,getItemStyle:O,onScroll:Z,onScrollbarScroll:G,onWheel:j,scrollTo:U,scrollToItem:H,resetScrollTop:Y};return p({windowRef:v,innerRef:S,getItemStyleCache:m,scrollTo:U,scrollToItem:H,resetScrollTop:Y,states:W}),Q},render(d){var f;const{$slots:p,className:b,clientSize:A,containerElement:h,data:m,getItemStyle:v,innerElement:S,itemsToRender:y,innerStyle:W,layout:k,total:V,onScroll:T,onScrollbarScroll:P,onWheel:x,states:g,useIsScrolling:j,windowStyle:L,ns:w}=d,[R,Z]=y,G=Ot(h),U=Ot(S),H=[];if(V>0)for(let Q=R;Q<=Z;Q++)H.push((f=p.default)==null?void 0:f.call(p,{data:m,key:Q,index:Q,isScrolling:j?g.isScrolling:void 0,style:v(Q)}));const O=[st(U,{style:W,ref:"innerRef"},Pt(U)?H:{default:()=>H})],D=st(xh,{ref:"scrollbarRef",clientSize:A,layout:k,onScroll:P,ratio:A*100/this.estimatedTotalSize,scrollFrom:g.scrollOffset/(this.estimatedTotalSize-A),total:V}),Y=st(G,{class:[w.e("window"),b],style:L,onScroll:T,onWheel:x,ref:"windowRef",key:0},Pt(G)?[O]:{default:()=>[O]});return st("div",{key:0,class:[w.e("wrapper"),g.scrollbarAlwaysOn?"always-on":""]},[Y,D])}}),zT=FT({name:"ElFixedSizeList",getItemOffset:({itemSize:e},t)=>t*e,getItemSize:({itemSize:e})=>e,getEstimatedTotalSize:({total:e,itemSize:t})=>t*e,getOffset:({height:e,total:t,itemSize:n,layout:r,width:a},l,o,i)=>{const s=Jc(r)?a:e,u=Math.max(0,t*n-s),d=Math.min(u,l*n),f=Math.max(0,(l+1)*n-s);switch(o===_v&&(i>=f-s&&i<=d+s?o=pa:o=Ia),o){case Uc:return d;case Oc:return f;case Ia:{const p=Math.round(f+(d-f)/2);return p<Math.ceil(s/2)?0:p>u+Math.floor(s/2)?u:p}case pa:default:return i>=f&&i<=d?i:i<f?f:d}},getStartIndexForOffset:({total:e,itemSize:t},n)=>Math.max(0,Math.min(e-1,Math.floor(n/t))),getStopIndexForStartIndex:({height:e,total:t,itemSize:n,layout:r,width:a},l,o)=>{const i=l*n,s=Jc(r)?a:e,u=Math.ceil((s+o-i)/n);return Math.max(0,Math.min(t-1,l+u-1))},initCache(){},clearCache:!0,validateProps(){}}),ps=(e,t,n)=>{const{itemSize:r}=e,{items:a,lastVisitedIndex:l}=n;if(t>l){let o=0;if(l>=0){const i=a[l];o=i.offset+i.size}for(let i=l+1;i<=t;i++){const s=r(i);a[i]={offset:o,size:s},o+=s}n.lastVisitedIndex=t}return a[t]},efe=(e,t,n)=>{const{items:r,lastVisitedIndex:a}=t;return(a>0?r[a].offset:0)>=n?HT(e,t,0,a,n):tfe(e,t,Math.max(0,a),n)},HT=(e,t,n,r,a)=>{for(;n<=r;){const l=n+Math.floor((r-n)/2),o=ps(e,l,t).offset;if(o===a)return l;o<a?n=l+1:o>a&&(r=l-1)}return Math.max(0,n-1)},tfe=(e,t,n,r)=>{const{total:a}=e;let l=1;for(;n<a&&ps(e,n,t).offset<r;)n+=l,l*=2;return HT(e,t,Math.floor(n/2),Math.min(n,a-1),r)},Q8=({total:e},{items:t,estimatedItemSize:n,lastVisitedIndex:r})=>{let a=0;if(r>=e&&(r=e-1),r>=0){const i=t[r];a=i.offset+i.size}const o=(e-r-1)*n;return a+o},nfe=FT({name:"ElDynamicSizeList",getItemOffset:(e,t,n)=>ps(e,t,n).offset,getItemSize:(e,t,{items:n})=>n[t].size,getEstimatedTotalSize:Q8,getOffset:(e,t,n,r,a)=>{const{height:l,layout:o,width:i}=e,s=Jc(o)?i:l,u=ps(e,t,a),d=Q8(e,a),f=Math.max(0,Math.min(d-s,u.offset)),p=Math.max(0,u.offset-s+u.size);switch(n===_v&&(r>=p-s&&r<=f+s?n=pa:n=Ia),n){case Uc:return f;case Oc:return p;case Ia:return Math.round(p+(f-p)/2);case pa:default:return r>=p&&r<=f?r:r<p?p:f}},getStartIndexForOffset:(e,t,n)=>efe(e,n,t),getStopIndexForStartIndex:(e,t,n,r)=>{const{height:a,total:l,layout:o,width:i}=e,s=Jc(o)?i:a,u=ps(e,t,r),d=n+s;let f=u.offset+u.size,p=t;for(;p<l-1&&f<d;)p++,f+=ps(e,p,r).size;return p},initCache({estimatedItemSize:e=kh},t){const n={items:{},estimatedItemSize:e,lastVisitedIndex:-1};return n.clearCacheAfterIndex=(r,a=!0)=>{var l,o;n.lastVisitedIndex=Math.min(n.lastVisitedIndex,r-1),(l=t.exposed)==null||l.getItemStyleCache(-1),a&&((o=t.proxy)==null||o.$forceUpdate())},n},clearCache:!1,validateProps:({itemSize:e})=>{}}),rfe=({atXEndEdge:e,atXStartEdge:t,atYEndEdge:n,atYStartEdge:r},a)=>{let l=null,o=0,i=0;const s=(d,f)=>{const p=d<=0&&t.value||d>=0&&e.value,b=f<=0&&r.value||f>=0&&n.value;return p&&b};return{hasReachedEdge:s,onWheel:d=>{zv(l);let f=d.deltaX,p=d.deltaY;Math.abs(f)>Math.abs(p)?p=0:f=0,d.shiftKey&&p!==0&&(f=p,p=0),!(s(o,i)&&s(o+f,i+p))&&(o+=f,i+=p,d.preventDefault(),l=Zs(()=>{a(o,i),o=0,i=0}))}}},ZT=({name:e,clearCache:t,getColumnPosition:n,getColumnStartIndexForOffset:r,getColumnStopIndexForStartIndex:a,getEstimatedTotalHeight:l,getEstimatedTotalWidth:o,getColumnOffset:i,getRowOffset:s,getRowPosition:u,getRowStartIndexForOffset:d,getRowStopIndexForStartIndex:f,initCache:p,injectToInstance:b,validateProps:A})=>$({name:e!=null?e:"ElVirtualList",props:di,emits:[Lp,qp],setup(h,{emit:m,expose:v,slots:S}){const y=ze("vl");A(h);const W=Tt(),k=J(p(h,W));b==null||b(W,k);const V=J(),T=J(),P=J(),x=J(null),g=J({isScrolling:!1,scrollLeft:mt(h.initScrollLeft)?h.initScrollLeft:0,scrollTop:mt(h.initScrollTop)?h.initScrollTop:0,updateRequested:!1,xAxisScrollDir:fs,yAxisScrollDir:fs}),j=jT(),L=X(()=>Number.parseInt(`${h.height}`,10)),w=X(()=>Number.parseInt(`${h.width}`,10)),R=X(()=>{const{totalColumn:Ae,totalRow:Ze,columnCache:Ue}=h,{isScrolling:Pe,xAxisScrollDir:qe,scrollLeft:De}=c(g);if(Ae===0||Ze===0)return[0,0,0,0];const Me=r(h,De,c(k)),_e=a(h,Me,De,c(k)),Re=!Pe||qe===Up?Math.max(1,Ue):1,$e=!Pe||qe===fs?Math.max(1,Ue):1;return[Math.max(0,Me-Re),Math.max(0,Math.min(Ae-1,_e+$e)),Me,_e]}),Z=X(()=>{const{totalColumn:Ae,totalRow:Ze,rowCache:Ue}=h,{isScrolling:Pe,yAxisScrollDir:qe,scrollTop:De}=c(g);if(Ae===0||Ze===0)return[0,0,0,0];const Me=d(h,De,c(k)),_e=f(h,Me,De,c(k)),Re=!Pe||qe===Up?Math.max(1,Ue):1,$e=!Pe||qe===fs?Math.max(1,Ue):1;return[Math.max(0,Me-Re),Math.max(0,Math.min(Ze-1,_e+$e)),Me,_e]}),G=X(()=>l(h,c(k))),U=X(()=>o(h,c(k))),H=X(()=>{var Ae;return[{position:"relative",overflow:"hidden",WebkitOverflowScrolling:"touch",willChange:"transform"},{direction:h.direction,height:mt(h.height)?`${h.height}px`:h.height,width:mt(h.width)?`${h.width}px`:h.width},(Ae=h.style)!=null?Ae:{}]}),O=X(()=>{const Ae=`${c(U)}px`;return{height:`${c(G)}px`,pointerEvents:c(g).isScrolling?"none":void 0,width:Ae}}),D=()=>{const{totalColumn:Ae,totalRow:Ze}=h;if(Ae>0&&Ze>0){const[_e,Re,$e,dt]=c(R),[yt,gt,ot,ke]=c(Z);m(Lp,{columnCacheStart:_e,columnCacheEnd:Re,rowCacheStart:yt,rowCacheEnd:gt,columnVisibleStart:$e,columnVisibleEnd:dt,rowVisibleStart:ot,rowVisibleEnd:ke})}const{scrollLeft:Ue,scrollTop:Pe,updateRequested:qe,xAxisScrollDir:De,yAxisScrollDir:Me}=c(g);m(qp,{xAxisScrollDir:De,scrollLeft:Ue,yAxisScrollDir:Me,scrollTop:Pe,updateRequested:qe})},Y=Ae=>{const{clientHeight:Ze,clientWidth:Ue,scrollHeight:Pe,scrollLeft:qe,scrollTop:De,scrollWidth:Me}=Ae.currentTarget,_e=c(g);if(_e.scrollTop===De&&_e.scrollLeft===qe)return;let Re=qe;if(Y8(h.direction))switch(Rp()){case Rc:Re=-qe;break;case N2:Re=Me-Ue-qe;break}g.value={..._e,isScrolling:!0,scrollLeft:Re,scrollTop:Math.max(0,Math.min(De,Pe-Ze)),updateRequested:!0,xAxisScrollDir:ti(_e.scrollLeft,Re),yAxisScrollDir:ti(_e.scrollTop,De)},at(()=>ce()),Le(),D()},Q=(Ae,Ze)=>{const Ue=c(L),Pe=(G.value-Ue)/Ze*Ae;Ne({scrollTop:Math.min(G.value-Ue,Pe)})},ee=(Ae,Ze)=>{const Ue=c(w),Pe=(U.value-Ue)/Ze*Ae;Ne({scrollLeft:Math.min(U.value-Ue,Pe)})},{onWheel:oe}=rfe({atXStartEdge:X(()=>g.value.scrollLeft<=0),atXEndEdge:X(()=>g.value.scrollLeft>=U.value-c(w)),atYStartEdge:X(()=>g.value.scrollTop<=0),atYEndEdge:X(()=>g.value.scrollTop>=G.value-c(L))},(Ae,Ze)=>{var Ue,Pe,qe,De;(Pe=(Ue=T.value)==null?void 0:Ue.onMouseUp)==null||Pe.call(Ue),(De=(qe=P.value)==null?void 0:qe.onMouseUp)==null||De.call(qe);const Me=c(w),_e=c(L);Ne({scrollLeft:Math.min(g.value.scrollLeft+Ae,U.value-Me),scrollTop:Math.min(g.value.scrollTop+Ze,G.value-_e)})}),Ne=({scrollLeft:Ae=g.value.scrollLeft,scrollTop:Ze=g.value.scrollTop})=>{Ae=Math.max(Ae,0),Ze=Math.max(Ze,0);const Ue=c(g);Ze===Ue.scrollTop&&Ae===Ue.scrollLeft||(g.value={...Ue,xAxisScrollDir:ti(Ue.scrollLeft,Ae),yAxisScrollDir:ti(Ue.scrollTop,Ze),scrollLeft:Ae,scrollTop:Ze,updateRequested:!0},at(()=>ce()),Le(),D())},pe=(Ae=0,Ze=0,Ue=pa)=>{const Pe=c(g);Ze=Math.max(0,Math.min(Ze,h.totalColumn-1)),Ae=Math.max(0,Math.min(Ae,h.totalRow-1));const qe=Ok(y.namespace.value),De=c(k),Me=l(h,De),_e=o(h,De);Ne({scrollLeft:i(h,Ze,Ue,Pe.scrollLeft,De,_e>h.width?qe:0),scrollTop:s(h,Ae,Ue,Pe.scrollTop,De,Me>h.height?qe:0)})},me=(Ae,Ze)=>{const{columnWidth:Ue,direction:Pe,rowHeight:qe}=h,De=j.value(t&&Ue,t&&qe,t&&Pe),Me=`${Ae},${Ze}`;if(Zt(De,Me))return De[Me];{const[,_e]=n(h,Ze,c(k)),Re=c(k),$e=Y8(Pe),[dt,yt]=u(h,Ae,Re),[gt]=n(h,Ze,Re);return De[Me]={position:"absolute",left:$e?void 0:`${_e}px`,right:$e?`${_e}px`:void 0,top:`${yt}px`,height:`${dt}px`,width:`${gt}px`},De[Me]}},ce=()=>{g.value.isScrolling=!1,at(()=>{j.value(-1,null,null)})};At(()=>{if(!Mt)return;const{initScrollLeft:Ae,initScrollTop:Ze}=h,Ue=c(V);Ue&&(mt(Ae)&&(Ue.scrollLeft=Ae),mt(Ze)&&(Ue.scrollTop=Ze)),D()});const Le=()=>{const{direction:Ae}=h,{scrollLeft:Ze,scrollTop:Ue,updateRequested:Pe}=c(g),qe=c(V);if(Pe&&qe){if(Ae===Ps)switch(Rp()){case Rc:{qe.scrollLeft=-Ze;break}case K2:{qe.scrollLeft=Ze;break}default:{const{clientWidth:De,scrollWidth:Me}=qe;qe.scrollLeft=Me-De-Ze;break}}else qe.scrollLeft=Math.max(0,Ze);qe.scrollTop=Math.max(0,Ue)}},{resetAfterColumnIndex:Te,resetAfterRowIndex:xe,resetAfter:_}=W.proxy;v({windowRef:V,innerRef:x,getItemStyleCache:j,scrollTo:Ne,scrollToItem:pe,states:g,resetAfterColumnIndex:Te,resetAfterRowIndex:xe,resetAfter:_});const re=()=>{const{scrollbarAlwaysOn:Ae,scrollbarStartGap:Ze,scrollbarEndGap:Ue,totalColumn:Pe,totalRow:qe}=h,De=c(w),Me=c(L),_e=c(U),Re=c(G),{scrollLeft:$e,scrollTop:dt}=c(g),yt=st(xh,{ref:T,alwaysOn:Ae,startGap:Ze,endGap:Ue,class:y.e("horizontal"),clientSize:De,layout:"horizontal",onScroll:ee,ratio:De*100/_e,scrollFrom:$e/(_e-De),total:qe,visible:!0}),gt=st(xh,{ref:P,alwaysOn:Ae,startGap:Ze,endGap:Ue,class:y.e("vertical"),clientSize:Me,layout:"vertical",onScroll:Q,ratio:Me*100/Re,scrollFrom:dt/(Re-Me),total:Pe,visible:!0});return{horizontalScrollbar:yt,verticalScrollbar:gt}},ye=()=>{var Ae;const[Ze,Ue]=c(R),[Pe,qe]=c(Z),{data:De,totalColumn:Me,totalRow:_e,useIsScrolling:Re,itemKey:$e}=h,dt=[];if(_e>0&&Me>0)for(let yt=Pe;yt<=qe;yt++)for(let gt=Ze;gt<=Ue;gt++)dt.push((Ae=S.default)==null?void 0:Ae.call(S,{columnIndex:gt,data:De,key:$e({columnIndex:gt,data:De,rowIndex:yt}),isScrolling:Re?c(g).isScrolling:void 0,style:me(yt,gt),rowIndex:yt}));return dt},ge=()=>{const Ae=Ot(h.innerElement),Ze=ye();return[st(Ae,{style:c(O),ref:x},Pt(Ae)?Ze:{default:()=>Ze})]};return()=>{const Ae=Ot(h.containerElement),{horizontalScrollbar:Ze,verticalScrollbar:Ue}=re(),Pe=ge();return st("div",{key:0,class:y.e("wrapper"),role:h.role},[st(Ae,{class:h.className,style:c(H),onScroll:Y,onWheel:oe,ref:V},Pt(Ae)?Pe:{default:()=>Pe}),Ze,Ue])}}}),afe=ZT({name:"ElFixedSizeGrid",getColumnPosition:({columnWidth:e},t)=>[e,t*e],getRowPosition:({rowHeight:e},t)=>[e,t*e],getEstimatedTotalHeight:({totalRow:e,rowHeight:t})=>t*e,getEstimatedTotalWidth:({totalColumn:e,columnWidth:t})=>t*e,getColumnOffset:({totalColumn:e,columnWidth:t,width:n},r,a,l,o,i)=>{n=Number(n);const s=Math.max(0,e*t-n),u=Math.min(s,r*t),d=Math.max(0,r*t-n+i+t);switch(a==="smart"&&(l>=d-n&&l<=u+n?a=pa:a=Ia),a){case Uc:return u;case Oc:return d;case Ia:{const f=Math.round(d+(u-d)/2);return f<Math.ceil(n/2)?0:f>s+Math.floor(n/2)?s:f}case pa:default:return l>=d&&l<=u?l:d>u||l<d?d:u}},getRowOffset:({rowHeight:e,height:t,totalRow:n},r,a,l,o,i)=>{t=Number(t);const s=Math.max(0,n*e-t),u=Math.min(s,r*e),d=Math.max(0,r*e-t+i+e);switch(a===_v&&(l>=d-t&&l<=u+t?a=pa:a=Ia),a){case Uc:return u;case Oc:return d;case Ia:{const f=Math.round(d+(u-d)/2);return f<Math.ceil(t/2)?0:f>s+Math.floor(t/2)?s:f}case pa:default:return l>=d&&l<=u?l:d>u||l<d?d:u}},getColumnStartIndexForOffset:({columnWidth:e,totalColumn:t},n)=>Math.max(0,Math.min(t-1,Math.floor(n/e))),getColumnStopIndexForStartIndex:({columnWidth:e,totalColumn:t,width:n},r,a)=>{const l=r*e,o=Math.ceil((n+a-l)/e);return Math.max(0,Math.min(t-1,r+o-1))},getRowStartIndexForOffset:({rowHeight:e,totalRow:t},n)=>Math.max(0,Math.min(t-1,Math.floor(n/e))),getRowStopIndexForStartIndex:({rowHeight:e,totalRow:t,height:n},r,a)=>{const l=r*e,o=Math.ceil((n+a-l)/e);return Math.max(0,Math.min(t-1,r+o-1))},initCache:()=>{},clearCache:!0,validateProps:({columnWidth:e,rowHeight:t})=>{}}),{max:Jp,min:GT,floor:CT}=Math,lfe={column:"columnWidth",row:"rowHeight"},Xh={column:"lastVisitedColumnIndex",row:"lastVisitedRowIndex"},hl=(e,t,n,r)=>{const[a,l,o]=[n[r],e[lfe[r]],n[Xh[r]]];if(t>o){let i=0;if(o>=0){const s=a[o];i=s.offset+s.size}for(let s=o+1;s<=t;s++){const u=l(s);a[s]={offset:i,size:u},i+=u}n[Xh[r]]=t}return a[t]},MT=(e,t,n,r,a,l)=>{for(;n<=r;){const o=n+CT((r-n)/2),i=hl(e,o,t,l).offset;if(i===a)return o;i<a?n=o+1:r=o-1}return Jp(0,n-1)},ofe=(e,t,n,r,a)=>{const l=a==="column"?e.totalColumn:e.totalRow;let o=1;for(;n<l&&hl(e,n,t,a).offset<r;)n+=o,o*=2;return MT(e,t,CT(n/2),GT(n,l-1),r,a)},_8=(e,t,n,r)=>{const[a,l]=[t[r],t[Xh[r]]];return(l>0?a[l].offset:0)>=n?MT(e,t,0,l,n,r):ofe(e,t,Jp(0,l),n,r)},DT=({totalRow:e},{estimatedRowHeight:t,lastVisitedRowIndex:n,row:r})=>{let a=0;if(n>=e&&(n=e-1),n>=0){const i=r[n];a=i.offset+i.size}const o=(e-n-1)*t;return a+o},ET=({totalColumn:e},{column:t,estimatedColumnWidth:n,lastVisitedColumnIndex:r})=>{let a=0;if(r>e&&(r=e-1),r>=0){const i=t[r];a=i.offset+i.size}const o=(e-r-1)*n;return a+o},ife={column:ET,row:DT},$8=(e,t,n,r,a,l,o)=>{const[i,s]=[l==="row"?e.height:e.width,ife[l]],u=hl(e,t,a,l),d=s(e,a),f=Jp(0,GT(d-i,u.offset)),p=Jp(0,u.offset-i+o+u.size);switch(n===_v&&(r>=p-i&&r<=f+i?n=pa:n=Ia),n){case Uc:return f;case Oc:return p;case Ia:return Math.round(p+(f-p)/2);case pa:default:return r>=p&&r<=f?r:p>f||r<p?p:f}},sfe=ZT({name:"ElDynamicSizeGrid",getColumnPosition:(e,t,n)=>{const r=hl(e,t,n,"column");return[r.size,r.offset]},getRowPosition:(e,t,n)=>{const r=hl(e,t,n,"row");return[r.size,r.offset]},getColumnOffset:(e,t,n,r,a,l)=>$8(e,t,n,r,a,"column",l),getRowOffset:(e,t,n,r,a,l)=>$8(e,t,n,r,a,"row",l),getColumnStartIndexForOffset:(e,t,n)=>_8(e,n,t,"column"),getColumnStopIndexForStartIndex:(e,t,n,r)=>{const a=hl(e,t,r,"column"),l=n+e.width;let o=a.offset+a.size,i=t;for(;i<e.totalColumn-1&&o<l;)i++,o+=hl(e,t,r,"column").size;return i},getEstimatedTotalHeight:DT,getEstimatedTotalWidth:ET,getRowStartIndexForOffset:(e,t,n)=>_8(e,n,t,"row"),getRowStopIndexForStartIndex:(e,t,n,r)=>{const{totalRow:a,height:l}=e,o=hl(e,t,r,"row"),i=n+l;let s=o.size+o.offset,u=t;for(;u<a-1&&s<i;)u++,s+=hl(e,u,r,"row").size;return u},injectToInstance:(e,t)=>{const n=({columnIndex:l,rowIndex:o},i)=>{var s,u;i=Hn(i)?!0:i,mt(l)&&(t.value.lastVisitedColumnIndex=Math.min(t.value.lastVisitedColumnIndex,l-1)),mt(o)&&(t.value.lastVisitedRowIndex=Math.min(t.value.lastVisitedRowIndex,o-1)),(s=e.exposed)==null||s.getItemStyleCache.value(-1,null,null),i&&((u=e.proxy)==null||u.$forceUpdate())},r=(l,o)=>{n({columnIndex:l},o)},a=(l,o)=>{n({rowIndex:l},o)};Object.assign(e.proxy,{resetAfterColumnIndex:r,resetAfterRowIndex:a,resetAfter:n})},initCache:({estimatedColumnWidth:e=kh,estimatedRowHeight:t=kh})=>({column:{},estimatedColumnWidth:e,estimatedRowHeight:t,lastVisitedColumnIndex:-1,lastVisitedRowIndex:-1,row:{}}),clearCache:!1,validateProps:({columnWidth:e,rowHeight:t})=>{}}),ufe=$({props:{item:{type:Object,required:!0},style:Object,height:Number},setup(){return{ns:ze("select")}}});function cfe(e,t,n,r,a,l){return e.item.isTitle?(K(),F("div",{key:0,class:q(e.ns.be("group","title")),style:lt([e.style,{lineHeight:`${e.height}px`}])},je(e.item.label),7)):(K(),F("div",{key:1,class:q(e.ns.be("group","split")),style:lt(e.style)},[z("span",{class:q(e.ns.be("group","split-dash")),style:lt({top:`${e.height/2}px`})},null,6)],6))}var dfe=Be(ufe,[["render",cfe],["__file","/home/runner/work/element-plus/element-plus/packages/components/select-v2/src/group-item.vue"]]);function ffe(e,{emit:t}){return{hoverItem:()=>{e.disabled||t("hover",e.index)},selectOptionClick:()=>{e.disabled||t("select",e.item,e.index)}}}const pfe={allowCreate:Boolean,autocomplete:{type:String,default:"none"},automaticDropdown:Boolean,clearable:Boolean,clearIcon:{type:[String,Object],default:qo},effect:{type:String,default:"light"},collapseTags:Boolean,collapseTagsTooltip:{type:Boolean,default:!1},maxCollapseTags:{type:Number,default:1},defaultFirstOption:Boolean,disabled:Boolean,estimatedOptionHeight:{type:Number,default:void 0},filterable:Boolean,filterMethod:Function,height:{type:Number,default:170},itemHeight:{type:Number,default:34},id:String,loading:Boolean,loadingText:String,label:String,modelValue:[Array,String,Number,Boolean,Object],multiple:Boolean,multipleLimit:{type:Number,default:0},name:String,noDataText:String,noMatchText:String,remoteMethod:Function,reserveKeyword:{type:Boolean,default:!0},options:{type:Array,required:!0},placeholder:{type:String},teleported:nr.teleported,persistent:{type:Boolean,default:!0},popperClass:{type:String,default:""},popperOptions:{type:Object,default:()=>({})},remote:Boolean,size:{type:String,validator:Jv},valueKey:{type:String,default:"value"},scrollbarAlwaysOn:{type:Boolean,default:!1},validateEvent:{type:Boolean,default:!0},placement:{type:ve(String),values:Ui,default:"bottom-start"}},vfe={data:Array,disabled:Boolean,hovering:Boolean,item:Object,index:Number,style:Object,selected:Boolean,created:Boolean},bfe=$({props:vfe,emits:["select","hover"],setup(e,{emit:t}){const n=ze("select"),{hoverItem:r,selectOptionClick:a}=ffe(e,{emit:t});return{ns:n,hoverItem:r,selectOptionClick:a}}}),hfe=["aria-selected"];function mfe(e,t,n,r,a,l){return K(),F("li",{"aria-selected":e.selected,style:lt(e.style),class:q([e.ns.be("dropdown","option-item"),e.ns.is("selected",e.selected),e.ns.is("disabled",e.disabled),e.ns.is("created",e.created),{hover:e.hovering}]),onMouseenter:t[0]||(t[0]=(...o)=>e.hoverItem&&e.hoverItem(...o)),onClick:t[1]||(t[1]=pt((...o)=>e.selectOptionClick&&e.selectOptionClick(...o),["stop"]))},[ue(e.$slots,"default",{item:e.item,index:e.index,disabled:e.disabled},()=>[z("span",null,je(e.item.label),1)])],46,hfe)}var Sfe=Be(bfe,[["render",mfe],["__file","/home/runner/work/element-plus/element-plus/packages/components/select-v2/src/option-item.vue"]]);const IT=Symbol("ElSelectV2Injection");var yfe=$({name:"ElSelectDropdown",props:{data:{type:Array,required:!0},hoveringIndex:Number,width:Number},setup(e,{slots:t,expose:n}){const r=tt(IT),a=ze("select"),l=J([]),o=J(),i=X(()=>e.data.length);Ve(()=>i.value,()=>{var P,x;(x=(P=r.popper.value).updatePopper)==null||x.call(P)});const s=X(()=>Hn(r.props.estimatedOptionHeight)),u=X(()=>s.value?{itemSize:r.props.itemHeight}:{estimatedSize:r.props.estimatedOptionHeight,itemSize:P=>l.value[P]}),d=(P=[],x)=>{const{props:{valueKey:g}}=r;return Jt(x)?P&&P.some(j=>_t(jn(j,g))===jn(x,g)):P.includes(x)},f=(P,x)=>{if(Jt(x)){const{valueKey:g}=r.props;return jn(P,g)===jn(x,g)}else return P===x},p=(P,x)=>r.props.multiple?d(P,x.value):f(P,x.value),b=(P,x)=>{const{disabled:g,multiple:j,multipleLimit:L}=r.props;return g||!x&&(j?L>0&&P.length>=L:!1)},A=P=>e.hoveringIndex===P;n({listRef:o,isSized:s,isItemDisabled:b,isItemHovering:A,isItemSelected:p,scrollToItem:P=>{const x=o.value;x&&x.scrollToItem(P)},resetScrollTop:()=>{const P=o.value;P&&P.resetScrollTop()}});const v=P=>{const{index:x,data:g,style:j}=P,L=c(s),{itemSize:w,estimatedSize:R}=c(u),{modelValue:Z}=r.props,{onSelect:G,onHover:U}=r,H=g[x];if(H.type==="Group")return C(dfe,{item:H,style:j,height:L?w:R},null);const O=p(Z,H),D=b(Z,O),Y=A(x);return C(Sfe,Ut(P,{selected:O,disabled:H.disabled||D,created:!!H.created,hovering:Y,item:H,onSelect:G,onHover:U}),{default:Q=>{var ee;return((ee=t.default)==null?void 0:ee.call(t,Q))||C("span",null,[H.label])}})},{onKeyboardNavigate:S,onKeyboardSelect:y}=r,W=()=>{S("forward")},k=()=>{S("backward")},V=()=>{r.expanded=!1},T=P=>{const{code:x}=P,{tab:g,esc:j,down:L,up:w,enter:R}=ut;switch(x!==g&&(P.preventDefault(),P.stopPropagation()),x){case g:case j:{V();break}case L:{W();break}case w:{k();break}case R:{y();break}}};return()=>{var P;const{data:x,width:g}=e,{height:j,multiple:L,scrollbarAlwaysOn:w}=r.props;if(x.length===0)return C("div",{class:a.b("dropdown"),style:{width:`${g}px`}},[(P=t.empty)==null?void 0:P.call(t)]);const R=c(s)?zT:nfe;return C("div",{class:[a.b("dropdown"),a.is("multiple",L)]},[C(R,Ut({ref:o},c(u),{className:a.be("dropdown","list"),scrollbarAlwaysOn:w,data:x,height:j,width:g,total:x.length,onKeydown:T}),{default:Z=>C(v,Z,null)})])}}});function Afe(e,t){const n=J(0),r=J(null),a=X(()=>e.allowCreate&&e.filterable);function l(d){const f=p=>p.value===d;return e.options&&e.options.some(f)||t.createdOptions.some(f)}function o(d){!a.value||(e.multiple&&d.created?n.value++:r.value=d)}function i(d){if(a.value)if(d&&d.length>0&&!l(d)){const f={value:d,label:d,created:!0,disabled:!1};t.createdOptions.length>=n.value?t.createdOptions[n.value]=f:t.createdOptions.push(f)}else if(e.multiple)t.createdOptions.length=n.value;else{const f=r.value;t.createdOptions.length=0,f&&f.created&&t.createdOptions.push(f)}}function s(d){if(!a.value||!d||!d.created||d.created&&e.reserveKeyword&&t.inputValue===d.label)return;const f=t.createdOptions.findIndex(p=>p.value===d.value);~f&&(t.createdOptions.splice(f,1),n.value--)}function u(){a.value&&(t.createdOptions.length=0,n.value=0)}return{createNewOption:i,removeNewOption:s,selectNewOption:o,clearAllNewOption:u}}const Wfe=e=>{const t=[];return e.forEach(n=>{et(n.options)?(t.push({label:n.label,isTitle:!0,type:"Group"}),n.options.forEach(r=>{t.push(r)}),t.push({type:"Group"})):t.push(n)}),t};function kfe(e){const t=J(!1);return{handleCompositionStart:()=>{t.value=!0},handleCompositionUpdate:l=>{const o=l.target.value,i=o[o.length-1]||"";t.value=!Fv(i)},handleCompositionEnd:l=>{t.value&&(t.value=!1,ht(e)&&e(l))}}}const eA="",tA=11,Vfe={larget:51,default:42,small:33},Pfe=(e,t)=>{const{t:n}=It(),r=ze("select-v2"),a=ze("input"),{form:l,formItem:o}=wr(),i=Bt({inputValue:eA,displayInputValue:eA,calculatedWidth:0,cachedPlaceholder:"",cachedOptions:[],createdOptions:[],createdLabel:"",createdSelected:!1,currentPlaceholder:"",hoveringIndex:-1,comboBoxHovering:!1,isOnComposition:!1,isSilentBlur:!1,isComposing:!1,inputLength:20,selectWidth:200,initialInputHeight:0,previousQuery:null,previousValue:void 0,query:"",selectedLabel:"",softFocus:!1,tagInMultiLine:!1}),s=J(-1),u=J(-1),d=J(null),f=J(null),p=J(null),b=J(null),A=J(null),h=J(null),m=J(null),v=J(!1),S=X(()=>e.disabled||(l==null?void 0:l.disabled)),y=X(()=>{const N=L.value.length*34;return N>e.height?e.height:N}),W=X(()=>!On(e.modelValue)),k=X(()=>{const N=e.multiple?Array.isArray(e.modelValue)&&e.modelValue.length>0:W.value;return e.clearable&&!S.value&&i.comboBoxHovering&&N}),V=X(()=>e.remote&&e.filterable?"":Uv),T=X(()=>V.value&&r.is("reverse",v.value)),P=X(()=>(o==null?void 0:o.validateState)||""),x=X(()=>Zm[P.value]),g=X(()=>e.remote?300:0),j=X(()=>{const N=L.value;return e.loading?e.loadingText||n("el.select.loading"):e.remote&&i.inputValue===""&&N.length===0?!1:e.filterable&&i.inputValue&&N.length>0?e.noMatchText||n("el.select.noMatch"):N.length===0?e.noDataText||n("el.select.noData"):null}),L=X(()=>{const N=de=>{const Ke=i.inputValue,I=new RegExp(qk(Ke),"i");return Ke?I.test(de.label||""):!0};return e.loading?[]:Wfe(e.options.concat(i.createdOptions).map(de=>{if(et(de.options)){const Ke=de.options.filter(N);if(Ke.length>0)return{...de,options:Ke}}else if(e.remote||N(de))return de;return null}).filter(de=>de!==null))}),w=X(()=>{const N=new Map;return L.value.forEach((de,Ke)=>{N.set(De(de.value),{option:de,index:Ke})}),N}),R=X(()=>L.value.every(N=>N.disabled)),Z=Cn(),G=X(()=>Z.value==="small"?"small":"default"),U=X(()=>{const N=h.value,de=G.value||"default",Ke=N?Number.parseInt(getComputedStyle(N).paddingLeft):0,I=N?Number.parseInt(getComputedStyle(N).paddingRight):0;return i.selectWidth-I-Ke-Vfe[de]}),H=()=>{var N;u.value=((N=A.value)==null?void 0:N.offsetWidth)||200},O=X(()=>({width:`${i.calculatedWidth===0?tA:Math.ceil(i.calculatedWidth)+tA}px`})),D=X(()=>et(e.modelValue)?e.modelValue.length===0&&!i.displayInputValue:e.filterable?i.displayInputValue.length===0:!0),Y=X(()=>{const N=e.placeholder||n("el.select.placeholder");return e.multiple||On(e.modelValue)?N:i.selectedLabel}),Q=X(()=>{var N,de;return(de=(N=b.value)==null?void 0:N.popperRef)==null?void 0:de.contentRef}),ee=X(()=>{if(e.multiple){const N=e.modelValue.length;if(e.modelValue.length>0&&w.value.has(e.modelValue[N-1])){const{index:de}=w.value.get(e.modelValue[N-1]);return de}}else if(e.modelValue&&w.value.has(e.modelValue)){const{index:N}=w.value.get(e.modelValue);return N}return-1}),oe=X({get(){return v.value&&j.value!==!1},set(N){v.value=N}}),Ne=X(()=>i.cachedOptions.slice(0,e.maxCollapseTags)),pe=X(()=>i.cachedOptions.slice(e.maxCollapseTags)),{createNewOption:me,removeNewOption:ce,selectNewOption:Le,clearAllNewOption:Te}=Afe(e,i),{handleCompositionStart:xe,handleCompositionUpdate:_,handleCompositionEnd:re}=kfe(N=>Se(N)),ye=()=>{var N,de,Ke;(de=(N=f.value)==null?void 0:N.focus)==null||de.call(N),(Ke=b.value)==null||Ke.updatePopper()},ge=()=>{if(!e.automaticDropdown&&!S.value)return i.isComposing&&(i.softFocus=!0),at(()=>{var N,de;v.value=!v.value,(de=(N=f.value)==null?void 0:N.focus)==null||de.call(N)})},Fe=()=>(e.filterable&&i.inputValue!==i.selectedLabel&&(i.query=i.selectedLabel),Ze(i.inputValue),at(()=>{me(i.inputValue)})),Ae=xr(Fe,g.value),Ze=N=>{i.previousQuery!==N&&(i.previousQuery=N,e.filterable&&ht(e.filterMethod)?e.filterMethod(N):e.filterable&&e.remote&&ht(e.remoteMethod)&&e.remoteMethod(N))},Ue=N=>{zr(e.modelValue,N)||t(mn,N)},Pe=N=>{t(Rt,N),Ue(N),i.previousValue=N==null?void 0:N.toString()},qe=(N=[],de)=>{if(!Jt(de))return N.indexOf(de);const Ke=e.valueKey;let I=-1;return N.some((he,Ge)=>jn(he,Ke)===jn(de,Ke)?(I=Ge,!0):!1),I},De=N=>Jt(N)?jn(N,e.valueKey):N,Me=N=>Jt(N)?N.label:N,_e=()=>at(()=>{var N,de;if(!f.value)return;const Ke=h.value;A.value.height=Ke.offsetHeight,v.value&&j.value!==!1&&((de=(N=b.value)==null?void 0:N.updatePopper)==null||de.call(N))}),Re=()=>{var N,de;if($e(),H(),(de=(N=b.value)==null?void 0:N.updatePopper)==null||de.call(N),e.multiple)return _e()},$e=()=>{const N=h.value;N&&(i.selectWidth=N.getBoundingClientRect().width)},dt=(N,de,Ke=!0)=>{var I,he;if(e.multiple){let Ge=e.modelValue.slice();const Wt=qe(Ge,N.value);Wt>-1?(Ge=[...Ge.slice(0,Wt),...Ge.slice(Wt+1)],i.cachedOptions.splice(Wt,1),ce(N)):(e.multipleLimit<=0||Ge.length<e.multipleLimit)&&(Ge=[...Ge,N.value],i.cachedOptions.push(N),Le(N),Oe(de)),Pe(Ge),N.created&&(i.query="",Ze(""),i.inputLength=20),e.filterable&&!e.reserveKeyword&&((he=(I=f.value).focus)==null||he.call(I),Xe("")),e.filterable&&(i.calculatedWidth=m.value.getBoundingClientRect().width),_e(),ft()}else s.value=de,i.selectedLabel=N.label,Pe(N.value),v.value=!1,i.isComposing=!1,i.isSilentBlur=Ke,Le(N),N.created||Te(),Oe(de)},yt=(N,de)=>{let Ke=e.modelValue.slice();const I=qe(Ke,de.value);if(I>-1&&!S.value)return Ke=[...e.modelValue.slice(0,I),...e.modelValue.slice(I+1)],i.cachedOptions.splice(I,1),Pe(Ke),t("remove-tag",de.value),i.softFocus=!0,ce(de),at(ye);N.stopPropagation()},gt=N=>{const de=i.isComposing;i.isComposing=!0,i.softFocus?i.softFocus=!1:de||t("focus",N)},ot=N=>(i.softFocus=!1,at(()=>{var de,Ke;(Ke=(de=f.value)==null?void 0:de.blur)==null||Ke.call(de),m.value&&(i.calculatedWidth=m.value.getBoundingClientRect().width),i.isSilentBlur?i.isSilentBlur=!1:i.isComposing&&t("blur",N),i.isComposing=!1})),ke=()=>{i.displayInputValue.length>0?Xe(""):v.value=!1},be=N=>{if(i.displayInputValue.length===0){N.preventDefault();const de=e.modelValue.slice();de.pop(),ce(i.cachedOptions.pop()),Pe(de)}},fe=()=>{let N;return et(e.modelValue)?N=[]:N=void 0,i.softFocus=!0,e.multiple?i.cachedOptions=[]:i.selectedLabel="",v.value=!1,Pe(N),t("clear"),Te(),at(ye)},Xe=N=>{i.displayInputValue=N,i.inputValue=N},ne=(N,de=void 0)=>{const Ke=L.value;if(!["forward","backward"].includes(N)||S.value||Ke.length<=0||R.value)return;if(!v.value)return ge();de===void 0&&(de=i.hoveringIndex);let I=-1;N==="forward"?(I=de+1,I>=Ke.length&&(I=0)):N==="backward"&&(I=de-1,(I<0||I>=Ke.length)&&(I=Ke.length-1));const he=Ke[I];if(he.disabled||he.type==="Group")return ne(N,I);Oe(I),le(I)},M=()=>{if(v.value)~i.hoveringIndex&&L.value[i.hoveringIndex]&&dt(L.value[i.hoveringIndex],i.hoveringIndex,!1);else return ge()},Oe=N=>{i.hoveringIndex=N},Ee=()=>{i.hoveringIndex=-1},ft=()=>{var N;const de=f.value;de&&((N=de.focus)==null||N.call(de))},Se=N=>{const de=N.target.value;if(Xe(de),i.displayInputValue.length>0&&!v.value&&(v.value=!0),i.calculatedWidth=m.value.getBoundingClientRect().width,e.multiple&&_e(),e.remote)Ae();else return Fe()},Ye=()=>(v.value=!1,ot()),E=()=>(i.inputValue=i.displayInputValue,at(()=>{~ee.value&&(Oe(ee.value),le(i.hoveringIndex))})),le=N=>{p.value.scrollToItem(N)},He=()=>{if(Ee(),e.multiple)if(e.modelValue.length>0){let N=!1;i.cachedOptions.length=0,i.previousValue=e.modelValue.toString();for(const de of e.modelValue){const Ke=De(de);if(w.value.has(Ke)){const{index:I,option:he}=w.value.get(Ke);i.cachedOptions.push(he),N||Oe(I),N=!0}}}else i.cachedOptions=[],i.previousValue=void 0;else if(W.value){i.previousValue=e.modelValue;const N=L.value,de=N.findIndex(Ke=>De(Ke.value)===De(e.modelValue));~de?(i.selectedLabel=N[de].label,Oe(de)):i.selectedLabel=`${e.modelValue}`}else i.selectedLabel="",i.previousValue=void 0;Te(),H()};return Ve(v,N=>{var de,Ke;t("visible-change",N),N?(Ke=(de=b.value).update)==null||Ke.call(de):(i.displayInputValue="",i.previousQuery=null,me(""))}),Ve(()=>e.modelValue,(N,de)=>{var Ke;(!N||N.toString()!==i.previousValue)&&He(),!zr(N,de)&&e.validateEvent&&((Ke=o==null?void 0:o.validate)==null||Ke.call(o,"change").catch(I=>void 0))},{deep:!0}),Ve(()=>e.options,()=>{const N=f.value;(!N||N&&document.activeElement!==N)&&He()},{deep:!0}),Ve(L,()=>p.value&&at(p.value.resetScrollTop)),Ve(()=>oe.value,N=>{N||Ee()}),At(()=>{He()}),hr(A,Re),{collapseTagSize:G,currentPlaceholder:Y,expanded:v,emptyText:j,popupHeight:y,debounce:g,filteredOptions:L,iconComponent:V,iconReverse:T,inputWrapperStyle:O,popperSize:u,dropdownMenuVisible:oe,hasModelValue:W,shouldShowPlaceholder:D,selectDisabled:S,selectSize:Z,showClearBtn:k,states:i,tagMaxWidth:U,nsSelectV2:r,nsInput:a,calculatorRef:m,controlRef:d,inputRef:f,menuRef:p,popper:b,selectRef:A,selectionRef:h,popperRef:Q,validateState:P,validateIcon:x,showTagList:Ne,collapseTagList:pe,debouncedOnInputChange:Ae,deleteTag:yt,getLabel:Me,getValueKey:De,handleBlur:ot,handleClear:fe,handleClickOutside:Ye,handleDel:be,handleEsc:ke,handleFocus:gt,handleMenuEnter:E,handleResize:Re,toggleMenu:ge,scrollTo:le,onInput:Se,onKeyboardNavigate:ne,onKeyboardSelect:M,onSelect:dt,onHover:Oe,onUpdateInputValue:Xe,handleCompositionStart:xe,handleCompositionEnd:re,handleCompositionUpdate:_}},Tfe=$({name:"ElSelectV2",components:{ElSelectMenu:yfe,ElTag:Lc,ElTooltip:Xr,ElIcon:it},directives:{ClickOutside:Po,ModelText:yi},props:pfe,emits:[Rt,mn,"remove-tag","clear","visible-change","focus","blur"],setup(e,{emit:t}){const n=X(()=>{const{modelValue:a,multiple:l}=e,o=l?[]:void 0;return et(a)?l?a:o:l?o:a}),r=Pfe(Bt({...Kn(e),modelValue:n}),t);return zt(IT,{props:Bt({...Kn(e),height:r.popupHeight,modelValue:n}),popper:r.popper,onSelect:r.onSelect,onHover:r.onHover,onKeyboardNavigate:r.onKeyboardNavigate,onKeyboardSelect:r.onKeyboardSelect}),{...r,modelValue:n}}}),Kfe={key:0},Nfe=["id","autocomplete","aria-expanded","aria-labelledby","disabled","readonly","name","unselectable"],xfe=["textContent"],Xfe=["id","aria-labelledby","aria-expanded","autocomplete","disabled","name","readonly","unselectable"],gfe=["textContent"];function wfe(e,t,n,r,a,l){const o=rt("el-tag"),i=rt("el-tooltip"),s=rt("el-icon"),u=rt("el-select-menu"),d=ho("model-text"),f=ho("click-outside");return Vt((K(),F("div",{ref:"selectRef",class:q([e.nsSelectV2.b(),e.nsSelectV2.m(e.selectSize)]),onClick:t[24]||(t[24]=pt((...p)=>e.toggleMenu&&e.toggleMenu(...p),["stop"])),onMouseenter:t[25]||(t[25]=p=>e.states.comboBoxHovering=!0),onMouseleave:t[26]||(t[26]=p=>e.states.comboBoxHovering=!1)},[C(i,{ref:"popper",visible:e.dropdownMenuVisible,teleported:e.teleported,"popper-class":[e.nsSelectV2.e("popper"),e.popperClass],"gpu-acceleration":!1,"stop-popper-mouse-event":!1,"popper-options":e.popperOptions,"fallback-placements":["bottom-start","top-start","right","left"],effect:e.effect,placement:e.placement,pure:"",transition:`${e.nsSelectV2.namespace.value}-zoom-in-top`,trigger:"click",persistent:e.persistent,onBeforeShow:e.handleMenuEnter,onHide:t[23]||(t[23]=p=>e.states.inputValue=e.states.displayInputValue)},{default:B(()=>[z("div",{ref:"selectionRef",class:q([e.nsSelectV2.e("wrapper"),e.nsSelectV2.is("focused",e.states.isComposing||e.expanded),e.nsSelectV2.is("hovering",e.states.comboBoxHovering),e.nsSelectV2.is("filterable",e.filterable),e.nsSelectV2.is("disabled",e.selectDisabled)])},[e.$slots.prefix?(K(),F("div",Kfe,[ue(e.$slots,"prefix")])):ae("v-if",!0),e.multiple?(K(),F("div",{key:1,class:q(e.nsSelectV2.e("selection"))},[e.collapseTags&&e.modelValue.length>0?(K(),F(Qe,{key:0},[(K(!0),F(Qe,null,Nt(e.showTagList,p=>(K(),F("div",{key:e.getValueKey(p),class:q(e.nsSelectV2.e("selected-item"))},[C(o,{closable:!e.selectDisabled&&!(p!=null&&p.disable),size:e.collapseTagSize,type:"info","disable-transitions":"",onClose:b=>e.deleteTag(b,p)},{default:B(()=>[z("span",{class:q(e.nsSelectV2.e("tags-text")),style:lt({maxWidth:`${e.tagMaxWidth}px`})},je(p==null?void 0:p.label),7)]),_:2},1032,["closable","size","onClose"])],2))),128)),z("div",{class:q(e.nsSelectV2.e("selected-item"))},[e.modelValue.length>e.maxCollapseTags?(K(),ie(o,{key:0,closable:!1,size:e.collapseTagSize,type:"info","disable-transitions":""},{default:B(()=>[e.collapseTagsTooltip?(K(),ie(i,{key:0,disabled:e.dropdownMenuVisible,"fallback-placements":["bottom","top","right","left"],effect:e.effect,placement:"bottom",teleported:!1},{default:B(()=>[z("span",{class:q(e.nsSelectV2.e("tags-text")),style:lt({maxWidth:`${e.tagMaxWidth}px`})},"+ "+je(e.modelValue.length-e.maxCollapseTags),7)]),content:B(()=>[z("div",{class:q(e.nsSelectV2.e("selection"))},[(K(!0),F(Qe,null,Nt(e.collapseTagList,p=>(K(),F("div",{key:e.getValueKey(p),class:q(e.nsSelectV2.e("selected-item"))},[C(o,{closable:!e.selectDisabled&&!p.disabled,size:e.collapseTagSize,class:"in-tooltip",type:"info","disable-transitions":"",onClose:b=>e.deleteTag(b,p)},{default:B(()=>[z("span",{class:q(e.nsSelectV2.e("tags-text")),style:lt({maxWidth:`${e.tagMaxWidth}px`})},je(e.getLabel(p)),7)]),_:2},1032,["closable","size","onClose"])],2))),128))],2)]),_:1},8,["disabled","effect"])):(K(),F("span",{key:1,class:q(e.nsSelectV2.e("tags-text")),style:lt({maxWidth:`${e.tagMaxWidth}px`})},"+ "+je(e.modelValue.length-e.maxCollapseTags),7))]),_:1},8,["size"])):ae("v-if",!0)],2)],64)):(K(!0),F(Qe,{key:1},Nt(e.states.cachedOptions,p=>(K(),F("div",{key:e.getValueKey(p),class:q(e.nsSelectV2.e("selected-item"))},[C(o,{closable:!e.selectDisabled&&!p.disabled,size:e.collapseTagSize,type:"info","disable-transitions":"",onClose:b=>e.deleteTag(b,p)},{default:B(()=>[z("span",{class:q(e.nsSelectV2.e("tags-text")),style:lt({maxWidth:`${e.tagMaxWidth}px`})},je(e.getLabel(p)),7)]),_:2},1032,["closable","size","onClose"])],2))),128)),z("div",{class:q([e.nsSelectV2.e("selected-item"),e.nsSelectV2.e("input-wrapper")]),style:lt(e.inputWrapperStyle)},[Vt(z("input",{id:e.id,ref:"inputRef",autocomplete:e.autocomplete,"aria-autocomplete":"list","aria-haspopup":"listbox",autocapitalize:"off","aria-expanded":e.expanded,"aria-labelledby":e.label,class:q([e.nsSelectV2.is(e.selectSize),e.nsSelectV2.e("combobox-input")]),disabled:e.disabled,role:"combobox",readonly:!e.filterable,spellcheck:"false",type:"text",name:e.name,unselectable:e.expanded?"on":void 0,"onUpdate:modelValue":t[0]||(t[0]=(...p)=>e.onUpdateInputValue&&e.onUpdateInputValue(...p)),onFocus:t[1]||(t[1]=(...p)=>e.handleFocus&&e.handleFocus(...p)),onBlur:t[2]||(t[2]=(...p)=>e.handleBlur&&e.handleBlur(...p)),onInput:t[3]||(t[3]=(...p)=>e.onInput&&e.onInput(...p)),onCompositionstart:t[4]||(t[4]=(...p)=>e.handleCompositionStart&&e.handleCompositionStart(...p)),onCompositionupdate:t[5]||(t[5]=(...p)=>e.handleCompositionUpdate&&e.handleCompositionUpdate(...p)),onCompositionend:t[6]||(t[6]=(...p)=>e.handleCompositionEnd&&e.handleCompositionEnd(...p)),onKeydown:[t[7]||(t[7]=Dt(pt(p=>e.onKeyboardNavigate("backward"),["stop","prevent"]),["up"])),t[8]||(t[8]=Dt(pt(p=>e.onKeyboardNavigate("forward"),["stop","prevent"]),["down"])),t[9]||(t[9]=Dt(pt((...p)=>e.onKeyboardSelect&&e.onKeyboardSelect(...p),["stop","prevent"]),["enter"])),t[10]||(t[10]=Dt(pt((...p)=>e.handleEsc&&e.handleEsc(...p),["stop","prevent"]),["esc"])),t[11]||(t[11]=Dt(pt((...p)=>e.handleDel&&e.handleDel(...p),["stop"]),["delete"]))]},null,42,Nfe),[[d,e.states.displayInputValue]]),e.filterable?(K(),F("span",{key:0,ref:"calculatorRef","aria-hidden":"true",class:q(e.nsSelectV2.e("input-calculator")),textContent:je(e.states.displayInputValue)},null,10,xfe)):ae("v-if",!0)],6)],2)):(K(),F(Qe,{key:2},[z("div",{class:q([e.nsSelectV2.e("selected-item"),e.nsSelectV2.e("input-wrapper")])},[Vt(z("input",{id:e.id,ref:"inputRef","aria-autocomplete":"list","aria-haspopup":"listbox","aria-labelledby":e.label,"aria-expanded":e.expanded,autocapitalize:"off",autocomplete:e.autocomplete,class:q(e.nsSelectV2.e("combobox-input")),disabled:e.disabled,name:e.name,role:"combobox",readonly:!e.filterable,spellcheck:"false",type:"text",unselectable:e.expanded?"on":void 0,onCompositionstart:t[12]||(t[12]=(...p)=>e.handleCompositionStart&&e.handleCompositionStart(...p)),onCompositionupdate:t[13]||(t[13]=(...p)=>e.handleCompositionUpdate&&e.handleCompositionUpdate(...p)),onCompositionend:t[14]||(t[14]=(...p)=>e.handleCompositionEnd&&e.handleCompositionEnd(...p)),onFocus:t[15]||(t[15]=(...p)=>e.handleFocus&&e.handleFocus(...p)),onBlur:t[16]||(t[16]=(...p)=>e.handleBlur&&e.handleBlur(...p)),onInput:t[17]||(t[17]=(...p)=>e.onInput&&e.onInput(...p)),onKeydown:[t[18]||(t[18]=Dt(pt(p=>e.onKeyboardNavigate("backward"),["stop","prevent"]),["up"])),t[19]||(t[19]=Dt(pt(p=>e.onKeyboardNavigate("forward"),["stop","prevent"]),["down"])),t[20]||(t[20]=Dt(pt((...p)=>e.onKeyboardSelect&&e.onKeyboardSelect(...p),["stop","prevent"]),["enter"])),t[21]||(t[21]=Dt(pt((...p)=>e.handleEsc&&e.handleEsc(...p),["stop","prevent"]),["esc"]))],"onUpdate:modelValue":t[22]||(t[22]=(...p)=>e.onUpdateInputValue&&e.onUpdateInputValue(...p))},null,42,Xfe),[[d,e.states.displayInputValue]])],2),e.filterable?(K(),F("span",{key:0,ref:"calculatorRef","aria-hidden":"true",class:q([e.nsSelectV2.e("selected-item"),e.nsSelectV2.e("input-calculator")]),textContent:je(e.states.displayInputValue)},null,10,gfe)):ae("v-if",!0)],64)),e.shouldShowPlaceholder?(K(),F("span",{key:3,class:q([e.nsSelectV2.e("placeholder"),e.nsSelectV2.is("transparent",e.multiple?e.modelValue.length===0:!e.hasModelValue)])},je(e.currentPlaceholder),3)):ae("v-if",!0),z("span",{class:q(e.nsSelectV2.e("suffix"))},[e.iconComponent?Vt((K(),ie(s,{key:0,class:q([e.nsSelectV2.e("caret"),e.nsInput.e("icon"),e.iconReverse])},{default:B(()=>[(K(),ie(Ot(e.iconComponent)))]),_:1},8,["class"])),[[Ct,!e.showClearBtn]]):ae("v-if",!0),e.showClearBtn&&e.clearIcon?(K(),ie(s,{key:1,class:q([e.nsSelectV2.e("caret"),e.nsInput.e("icon")]),onClick:pt(e.handleClear,["prevent","stop"])},{default:B(()=>[(K(),ie(Ot(e.clearIcon)))]),_:1},8,["class","onClick"])):ae("v-if",!0),e.validateState&&e.validateIcon?(K(),ie(s,{key:2,class:q([e.nsInput.e("icon"),e.nsInput.e("validateIcon")])},{default:B(()=>[(K(),ie(Ot(e.validateIcon)))]),_:1},8,["class"])):ae("v-if",!0)],2)],2)]),content:B(()=>[C(u,{ref:"menuRef",data:e.filteredOptions,width:e.popperSize,"hovering-index":e.states.hoveringIndex,"scrollbar-always-on":e.scrollbarAlwaysOn},{default:B(p=>[ue(e.$slots,"default",fa(nd(p)))]),empty:B(()=>[ue(e.$slots,"empty",{},()=>[z("p",{class:q(e.nsSelectV2.e("empty"))},je(e.emptyText?e.emptyText:""),3)])]),_:3},8,["data","width","hovering-index","scrollbar-always-on"])]),_:3},8,["visible","teleported","popper-class","popper-options","effect","placement","transition","persistent","onBeforeShow"])],34)),[[f,e.handleClickOutside,e.popperRef]])}var Ff=Be(Tfe,[["render",wfe],["__file","/home/runner/work/element-plus/element-plus/packages/components/select-v2/src/select.vue"]]);Ff.install=e=>{e.component(Ff.name,Ff)};const jfe=Ff,Lfe=jfe,qfe=Ie({animated:{type:Boolean,default:!1},count:{type:Number,default:1},rows:{type:Number,default:3},loading:{type:Boolean,default:!0},throttle:{type:Number}}),Ufe=Ie({variant:{type:String,values:["circle","rect","h1","h3","text","caption","p","image","button"],default:"text"}}),Ofe=$({name:"ElSkeletonItem"}),Rfe=$({...Ofe,props:Ufe,setup(e){const t=ze("skeleton");return(n,r)=>(K(),F("div",{class:q([c(t).e("item"),c(t).e(n.variant)])},[n.variant==="image"?(K(),ie(c(RE),{key:0})):ae("v-if",!0)],2))}});var Fp=Be(Rfe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/skeleton/src/skeleton-item.vue"]]);const Jfe=$({name:"ElSkeleton"}),Ffe=$({...Jfe,props:qfe,setup(e,{expose:t}){const n=e,r=ze("skeleton"),a=YY(bn(n,"loading"),n.throttle);return t({uiLoading:a}),(l,o)=>c(a)?(K(),F("div",Ut({key:0,class:[c(r).b(),c(r).is("animated",l.animated)]},l.$attrs),[(K(!0),F(Qe,null,Nt(l.count,i=>(K(),F(Qe,{key:i},[l.loading?ue(l.$slots,"template",{key:i},()=>[C(Fp,{class:q(c(r).is("first")),variant:"p"},null,8,["class"]),(K(!0),F(Qe,null,Nt(l.rows,s=>(K(),ie(Fp,{key:s,class:q([c(r).e("paragraph"),c(r).is("last",s===l.rows&&l.rows>1)]),variant:"p"},null,8,["class"]))),128))]):ae("v-if",!0)],64))),128))],16)):ue(l.$slots,"default",fa(Ut({key:1},l.$attrs)))}});var zfe=Be(Ffe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/skeleton/src/skeleton.vue"]]);const Hfe=qt(zfe,{SkeletonItem:Fp}),Zfe=Nn(Fp),BT=Symbol("sliderContextKey"),Gfe=Ie({modelValue:{type:ve([Number,Array]),default:0},id:{type:String,default:void 0},min:{type:Number,default:0},max:{type:Number,default:100},step:{type:Number,default:1},showInput:Boolean,showInputControls:{type:Boolean,default:!0},size:ur,inputSize:ur,showStops:Boolean,showTooltip:{type:Boolean,default:!0},formatTooltip:{type:ve(Function),default:void 0},disabled:Boolean,range:Boolean,vertical:Boolean,height:String,debounce:{type:Number,default:300},label:{type:String,default:void 0},rangeStartLabel:{type:String,default:void 0},rangeEndLabel:{type:String,default:void 0},formatValueText:{type:ve(Function),default:void 0},tooltipClass:{type:String,default:void 0},placement:{type:String,values:Ui,default:"top"},marks:{type:ve(Object)},validateEvent:{type:Boolean,default:!0}}),Bb=e=>mt(e)||et(e)&&e.every(mt),Cfe={[Rt]:Bb,[Pr]:Bb,[mn]:Bb},Mfe=(e,t,n)=>{const r=J();return At(async()=>{e.range?(Array.isArray(e.modelValue)?(t.firstValue=Math.max(e.min,e.modelValue[0]),t.secondValue=Math.min(e.max,e.modelValue[1])):(t.firstValue=e.min,t.secondValue=e.max),t.oldValue=[t.firstValue,t.secondValue]):(typeof e.modelValue!="number"||Number.isNaN(e.modelValue)?t.firstValue=e.min:t.firstValue=Math.min(e.max,Math.max(e.min,e.modelValue)),t.oldValue=t.firstValue),hn(window,"resize",n),await at(),n()}),{sliderWrapper:r}},Dfe=e=>X(()=>e.marks?Object.keys(e.marks).map(Number.parseFloat).sort((n,r)=>n-r).filter(n=>n<=e.max&&n>=e.min).map(n=>({point:n,position:(n-e.min)*100/(e.max-e.min),mark:e.marks[n]})):[]),Efe=(e,t,n)=>{const{form:r,formItem:a}=wr(),l=nn(),o=J(),i=J(),s={firstButton:o,secondButton:i},u=X(()=>e.disabled||(r==null?void 0:r.disabled)||!1),d=X(()=>Math.min(t.firstValue,t.secondValue)),f=X(()=>Math.max(t.firstValue,t.secondValue)),p=X(()=>e.range?`${100*(f.value-d.value)/(e.max-e.min)}%`:`${100*(t.firstValue-e.min)/(e.max-e.min)}%`),b=X(()=>e.range?`${100*(d.value-e.min)/(e.max-e.min)}%`:"0%"),A=X(()=>e.vertical?{height:e.height}:{}),h=X(()=>e.vertical?{height:p.value,bottom:b.value}:{width:p.value,left:b.value}),m=()=>{l.value&&(t.sliderSize=l.value[`client${e.vertical?"Height":"Width"}`])},v=j=>{const L=e.min+j*(e.max-e.min)/100;if(!e.range)return o;let w;return Math.abs(d.value-L)<Math.abs(f.value-L)?w=t.firstValue<t.secondValue?"firstButton":"secondButton":w=t.firstValue>t.secondValue?"firstButton":"secondButton",s[w]},S=j=>{const L=v(j);return L.value.setPosition(j),L},y=j=>{t.firstValue=j,k(e.range?[d.value,f.value]:j)},W=j=>{t.secondValue=j,e.range&&k([d.value,f.value])},k=j=>{n(Rt,j),n(Pr,j)},V=async()=>{await at(),n(mn,e.range?[d.value,f.value]:e.modelValue)},T=j=>{var L,w,R,Z,G,U;if(u.value||t.dragging)return;m();let H=0;if(e.vertical){const O=(R=(w=(L=j.touches)==null?void 0:L.item(0))==null?void 0:w.clientY)!=null?R:j.clientY;H=(l.value.getBoundingClientRect().bottom-O)/t.sliderSize*100}else{const O=(U=(G=(Z=j.touches)==null?void 0:Z.item(0))==null?void 0:G.clientX)!=null?U:j.clientX,D=l.value.getBoundingClientRect().left;H=(O-D)/t.sliderSize*100}if(!(H<0||H>100))return S(H)};return{elFormItem:a,slider:l,firstButton:o,secondButton:i,sliderDisabled:u,minValue:d,maxValue:f,runwayStyle:A,barStyle:h,resetSize:m,setPosition:S,emitChange:V,onSliderWrapperPrevent:j=>{var L,w;(((L=s.firstButton.value)==null?void 0:L.dragging)||((w=s.secondButton.value)==null?void 0:w.dragging))&&j.preventDefault()},onSliderClick:j=>{T(j)&&V()},onSliderDown:async j=>{const L=T(j);L&&(await at(),L.value.onButtonDown(j))},setFirstValue:y,setSecondValue:W}},{left:Ife,down:Bfe,right:Yfe,up:Qfe,home:_fe,end:$fe,pageUp:epe,pageDown:tpe}=ut,npe=(e,t,n)=>{const r=J(),a=J(!1),l=X(()=>t.value instanceof Function),o=X(()=>l.value&&t.value(e.modelValue)||e.modelValue),i=xr(()=>{n.value&&(a.value=!0)},50),s=xr(()=>{n.value&&(a.value=!1)},50);return{tooltip:r,tooltipVisible:a,formatValue:o,displayTooltip:i,hideTooltip:s}},rpe=(e,t,n)=>{const{disabled:r,min:a,max:l,step:o,showTooltip:i,precision:s,sliderSize:u,formatTooltip:d,emitChange:f,resetSize:p,updateDragging:b}=tt(BT),{tooltip:A,tooltipVisible:h,formatValue:m,displayTooltip:v,hideTooltip:S}=npe(e,d,i),y=J(),W=X(()=>`${(e.modelValue-a.value)/(l.value-a.value)*100}%`),k=X(()=>e.vertical?{bottom:W.value}:{left:W.value}),V=()=>{t.hovering=!0,v()},T=()=>{t.hovering=!1,t.dragging||S()},P=Q=>{r.value||(Q.preventDefault(),H(Q),window.addEventListener("mousemove",O),window.addEventListener("touchmove",O),window.addEventListener("mouseup",D),window.addEventListener("touchend",D),window.addEventListener("contextmenu",D),y.value.focus())},x=Q=>{r.value||(t.newPosition=Number.parseFloat(W.value)+Q/(l.value-a.value)*100,Y(t.newPosition),f())},g=()=>{x(-o.value)},j=()=>{x(o.value)},L=()=>{x(-o.value*4)},w=()=>{x(o.value*4)},R=()=>{r.value||(Y(0),f())},Z=()=>{r.value||(Y(100),f())},G=Q=>{let ee=!0;[Ife,Bfe].includes(Q.key)?g():[Yfe,Qfe].includes(Q.key)?j():Q.key===_fe?R():Q.key===$fe?Z():Q.key===tpe?L():Q.key===epe?w():ee=!1,ee&&Q.preventDefault()},U=Q=>{let ee,oe;return Q.type.startsWith("touch")?(oe=Q.touches[0].clientY,ee=Q.touches[0].clientX):(oe=Q.clientY,ee=Q.clientX),{clientX:ee,clientY:oe}},H=Q=>{t.dragging=!0,t.isClick=!0;const{clientX:ee,clientY:oe}=U(Q);e.vertical?t.startY=oe:t.startX=ee,t.startPosition=Number.parseFloat(W.value),t.newPosition=t.startPosition},O=Q=>{if(t.dragging){t.isClick=!1,v(),p();let ee;const{clientX:oe,clientY:Ne}=U(Q);e.vertical?(t.currentY=Ne,ee=(t.startY-t.currentY)/u.value*100):(t.currentX=oe,ee=(t.currentX-t.startX)/u.value*100),t.newPosition=t.startPosition+ee,Y(t.newPosition)}},D=()=>{t.dragging&&(setTimeout(()=>{t.dragging=!1,t.hovering||S(),t.isClick||Y(t.newPosition),f()},0),window.removeEventListener("mousemove",O),window.removeEventListener("touchmove",O),window.removeEventListener("mouseup",D),window.removeEventListener("touchend",D),window.removeEventListener("contextmenu",D))},Y=async Q=>{if(Q===null||Number.isNaN(+Q))return;Q<0?Q=0:Q>100&&(Q=100);const ee=100/((l.value-a.value)/o.value);let Ne=Math.round(Q/ee)*ee*(l.value-a.value)*.01+a.value;Ne=Number.parseFloat(Ne.toFixed(s.value)),Ne!==e.modelValue&&n(Rt,Ne),!t.dragging&&e.modelValue!==t.oldValue&&(t.oldValue=e.modelValue),await at(),t.dragging&&v(),A.value.updatePopper()};return Ve(()=>t.dragging,Q=>{b(Q)}),{disabled:r,button:y,tooltip:A,tooltipVisible:h,showTooltip:i,wrapperStyle:k,formatValue:m,handleMouseEnter:V,handleMouseLeave:T,onButtonDown:P,onKeyDown:G,setPosition:Y}},ape=(e,t,n,r)=>({stops:X(()=>{if(!e.showStops||e.min>e.max)return[];if(e.step===0)return[];const o=(e.max-e.min)/e.step,i=100*e.step/(e.max-e.min),s=Array.from({length:o-1}).map((u,d)=>(d+1)*i);return e.range?s.filter(u=>u<100*(n.value-e.min)/(e.max-e.min)||u>100*(r.value-e.min)/(e.max-e.min)):s.filter(u=>u>100*(t.firstValue-e.min)/(e.max-e.min))}),getStopStyle:o=>e.vertical?{bottom:`${o}%`}:{left:`${o}%`}}),lpe=(e,t,n,r,a,l)=>{const o=u=>{a(Rt,u),a(Pr,u)},i=()=>e.range?![n.value,r.value].every((u,d)=>u===t.oldValue[d]):e.modelValue!==t.oldValue,s=()=>{var u,d;e.min>e.max&&Gn("Slider","min should not be greater than max.");const f=e.modelValue;e.range&&Array.isArray(f)?f[1]<e.min?o([e.min,e.min]):f[0]>e.max?o([e.max,e.max]):f[0]<e.min?o([e.min,f[1]]):f[1]>e.max?o([f[0],e.max]):(t.firstValue=f[0],t.secondValue=f[1],i()&&(e.validateEvent&&((u=l==null?void 0:l.validate)==null||u.call(l,"change").catch(p=>void 0)),t.oldValue=f.slice())):!e.range&&typeof f=="number"&&!Number.isNaN(f)&&(f<e.min?o(e.min):f>e.max?o(e.max):(t.firstValue=f,i()&&(e.validateEvent&&((d=l==null?void 0:l.validate)==null||d.call(l,"change").catch(p=>void 0)),t.oldValue=f)))};s(),Ve(()=>t.dragging,u=>{u||s()}),Ve(()=>e.modelValue,(u,d)=>{t.dragging||Array.isArray(u)&&Array.isArray(d)&&u.every((f,p)=>f===d[p])&&t.firstValue===u[0]&&t.secondValue===u[1]||s()},{deep:!0}),Ve(()=>[e.min,e.max],()=>{s()})},ope=Ie({modelValue:{type:Number,default:0},vertical:Boolean,tooltipClass:String,placement:{type:String,values:Ui,default:"top"}}),ipe={[Rt]:e=>mt(e)},spe=["tabindex"],upe=$({name:"ElSliderButton"}),cpe=$({...upe,props:ope,emits:ipe,setup(e,{expose:t,emit:n}){const r=e,a=ze("slider"),l=Bt({hovering:!1,dragging:!1,isClick:!1,startX:0,currentX:0,startY:0,currentY:0,startPosition:0,newPosition:0,oldValue:r.modelValue}),{disabled:o,button:i,tooltip:s,showTooltip:u,tooltipVisible:d,wrapperStyle:f,formatValue:p,handleMouseEnter:b,handleMouseLeave:A,onButtonDown:h,onKeyDown:m,setPosition:v}=rpe(r,l,n),{hovering:S,dragging:y}=Kn(l);return t({onButtonDown:h,onKeyDown:m,setPosition:v,hovering:S,dragging:y}),(W,k)=>(K(),F("div",{ref_key:"button",ref:i,class:q([c(a).e("button-wrapper"),{hover:c(S),dragging:c(y)}]),style:lt(c(f)),tabindex:c(o)?-1:0,onMouseenter:k[0]||(k[0]=(...V)=>c(b)&&c(b)(...V)),onMouseleave:k[1]||(k[1]=(...V)=>c(A)&&c(A)(...V)),onMousedown:k[2]||(k[2]=(...V)=>c(h)&&c(h)(...V)),onTouchstart:k[3]||(k[3]=(...V)=>c(h)&&c(h)(...V)),onFocus:k[4]||(k[4]=(...V)=>c(b)&&c(b)(...V)),onBlur:k[5]||(k[5]=(...V)=>c(A)&&c(A)(...V)),onKeydown:k[6]||(k[6]=(...V)=>c(m)&&c(m)(...V))},[C(c(Xr),{ref_key:"tooltip",ref:s,visible:c(d),placement:W.placement,"fallback-placements":["top","bottom","right","left"],"stop-popper-mouse-event":!1,"popper-class":W.tooltipClass,disabled:!c(u),persistent:""},{content:B(()=>[z("span",null,je(c(p)),1)]),default:B(()=>[z("div",{class:q([c(a).e("button"),{hover:c(S),dragging:c(y)}])},null,2)]),_:1},8,["visible","placement","popper-class","disabled"])],46,spe))}});var nA=Be(cpe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/slider/src/button.vue"]]);const dpe=Ie({mark:{type:ve([String,Object]),default:void 0}});var fpe=$({name:"ElSliderMarker",props:dpe,setup(e){const t=ze("slider"),n=X(()=>Pt(e.mark)?e.mark:e.mark.label),r=X(()=>Pt(e.mark)?void 0:e.mark.style);return()=>st("div",{class:t.e("marks-text"),style:r.value},n.value)}});const ppe=["id","role","aria-label","aria-labelledby"],vpe={key:1},bpe=$({name:"ElSlider"}),hpe=$({...bpe,props:Gfe,emits:Cfe,setup(e,{expose:t,emit:n}){const r=e,a=ze("slider"),{t:l}=It(),o=Bt({firstValue:0,secondValue:0,oldValue:0,dragging:!1,sliderSize:1}),{elFormItem:i,slider:s,firstButton:u,secondButton:d,sliderDisabled:f,minValue:p,maxValue:b,runwayStyle:A,barStyle:h,resetSize:m,emitChange:v,onSliderWrapperPrevent:S,onSliderClick:y,onSliderDown:W,setFirstValue:k,setSecondValue:V}=Efe(r,o,n),{stops:T,getStopStyle:P}=ape(r,o,p,b),{inputId:x,isLabeledByFormItem:g}=Jo(r,{formItemContext:i}),j=Cn(),L=X(()=>r.inputSize||j.value),w=X(()=>r.label||l("el.slider.defaultLabel",{min:r.min,max:r.max})),R=X(()=>r.range?r.rangeStartLabel||l("el.slider.defaultRangeStartLabel"):w.value),Z=X(()=>r.formatValueText?r.formatValueText(Q.value):`${Q.value}`),G=X(()=>r.rangeEndLabel||l("el.slider.defaultRangeEndLabel")),U=X(()=>r.formatValueText?r.formatValueText(ee.value):`${ee.value}`),H=X(()=>[a.b(),a.m(j.value),a.is("vertical",r.vertical),{[a.m("with-input")]:r.showInput}]),O=Dfe(r);lpe(r,o,p,b,n,i);const D=X(()=>{const pe=[r.min,r.max,r.step].map(me=>{const ce=`${me}`.split(".")[1];return ce?ce.length:0});return Math.max.apply(null,pe)}),{sliderWrapper:Y}=Mfe(r,o,m),{firstValue:Q,secondValue:ee,sliderSize:oe}=Kn(o),Ne=pe=>{o.dragging=pe};return zt(BT,{...Kn(r),sliderSize:oe,disabled:f,precision:D,emitChange:v,resetSize:m,updateDragging:Ne}),t({onSliderClick:y}),(pe,me)=>{var ce,Le;return K(),F("div",{id:pe.range?c(x):void 0,ref_key:"sliderWrapper",ref:Y,class:q(c(H)),role:pe.range?"group":void 0,"aria-label":pe.range&&!c(g)?c(w):void 0,"aria-labelledby":pe.range&&c(g)?(ce=c(i))==null?void 0:ce.labelId:void 0,onTouchstart:me[2]||(me[2]=(...Te)=>c(S)&&c(S)(...Te)),onTouchmove:me[3]||(me[3]=(...Te)=>c(S)&&c(S)(...Te))},[z("div",{ref_key:"slider",ref:s,class:q([c(a).e("runway"),{"show-input":pe.showInput&&!pe.range},c(a).is("disabled",c(f))]),style:lt(c(A)),onMousedown:me[0]||(me[0]=(...Te)=>c(W)&&c(W)(...Te)),onTouchstart:me[1]||(me[1]=(...Te)=>c(W)&&c(W)(...Te))},[z("div",{class:q(c(a).e("bar")),style:lt(c(h))},null,6),C(nA,{id:pe.range?void 0:c(x),ref_key:"firstButton",ref:u,"model-value":c(Q),vertical:pe.vertical,"tooltip-class":pe.tooltipClass,placement:pe.placement,role:"slider","aria-label":pe.range||!c(g)?c(R):void 0,"aria-labelledby":!pe.range&&c(g)?(Le=c(i))==null?void 0:Le.labelId:void 0,"aria-valuemin":pe.min,"aria-valuemax":pe.range?c(ee):pe.max,"aria-valuenow":c(Q),"aria-valuetext":c(Z),"aria-orientation":pe.vertical?"vertical":"horizontal","aria-disabled":c(f),"onUpdate:modelValue":c(k)},null,8,["id","model-value","vertical","tooltip-class","placement","aria-label","aria-labelledby","aria-valuemin","aria-valuemax","aria-valuenow","aria-valuetext","aria-orientation","aria-disabled","onUpdate:modelValue"]),pe.range?(K(),ie(nA,{key:0,ref_key:"secondButton",ref:d,"model-value":c(ee),vertical:pe.vertical,"tooltip-class":pe.tooltipClass,placement:pe.placement,role:"slider","aria-label":c(G),"aria-valuemin":c(Q),"aria-valuemax":pe.max,"aria-valuenow":c(ee),"aria-valuetext":c(U),"aria-orientation":pe.vertical?"vertical":"horizontal","aria-disabled":c(f),"onUpdate:modelValue":c(V)},null,8,["model-value","vertical","tooltip-class","placement","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","aria-valuetext","aria-orientation","aria-disabled","onUpdate:modelValue"])):ae("v-if",!0),pe.showStops?(K(),F("div",vpe,[(K(!0),F(Qe,null,Nt(c(T),(Te,xe)=>(K(),F("div",{key:xe,class:q(c(a).e("stop")),style:lt(c(P)(Te))},null,6))),128))])):ae("v-if",!0),c(O).length>0?(K(),F(Qe,{key:2},[z("div",null,[(K(!0),F(Qe,null,Nt(c(O),(Te,xe)=>(K(),F("div",{key:xe,style:lt(c(P)(Te.position)),class:q([c(a).e("stop"),c(a).e("marks-stop")])},null,6))),128))]),z("div",{class:q(c(a).e("marks"))},[(K(!0),F(Qe,null,Nt(c(O),(Te,xe)=>(K(),ie(c(fpe),{key:xe,mark:Te.mark,style:lt(c(P)(Te.position))},null,8,["mark","style"]))),128))],2)],64)):ae("v-if",!0)],38),pe.showInput&&!pe.range?(K(),ie(c(kT),{key:0,ref:"input","model-value":c(Q),class:q(c(a).e("input")),step:pe.step,disabled:c(f),controls:pe.showInputControls,min:pe.min,max:pe.max,debounce:pe.debounce,size:c(L),"onUpdate:modelValue":c(k),onChange:c(v)},null,8,["model-value","class","step","disabled","controls","min","max","debounce","size","onUpdate:modelValue","onChange"])):ae("v-if",!0)],42,ppe)}}});var mpe=Be(hpe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/slider/src/slider.vue"]]);const Spe=qt(mpe),ype=Ie({prefixCls:{type:String}}),rA=$({name:"ElSpaceItem",props:ype,setup(e,{slots:t}){const n=ze("space"),r=X(()=>`${e.prefixCls||n.b()}__item`);return()=>st("div",{class:r.value},ue(t,"default"))}}),aA={small:8,default:12,large:16};function Ape(e){const t=ze("space"),n=X(()=>[t.b(),t.m(e.direction),e.class]),r=J(0),a=J(0),l=X(()=>{const i=e.wrap||e.fill?{flexWrap:"wrap",marginBottom:`-${a.value}px`}:{},s={alignItems:e.alignment};return[i,s,e.style]}),o=X(()=>{const i={paddingBottom:`${a.value}px`,marginRight:`${r.value}px`},s=e.fill?{flexGrow:1,minWidth:`${e.fillRatio}%`}:{};return[i,s]});return Dn(()=>{const{size:i="small",wrap:s,direction:u,fill:d}=e;if(et(i)){const[f=0,p=0]=i;r.value=f,a.value=p}else{let f;mt(i)?f=i:f=aA[i||"small"]||aA.small,(s||d)&&u==="horizontal"?r.value=a.value=f:u==="horizontal"?(r.value=f,a.value=0):(a.value=f,r.value=0)}}),{classes:n,containerStyle:l,itemStyle:o}}const Wpe=Ie({direction:{type:String,values:["horizontal","vertical"],default:"horizontal"},class:{type:ve([String,Object,Array]),default:""},style:{type:ve([String,Array,Object]),default:""},alignment:{type:ve(String),default:"center"},prefixCls:{type:String},spacer:{type:ve([Object,String,Number,Array]),default:null,validator:e=>cn(e)||mt(e)||Pt(e)},wrap:Boolean,fill:Boolean,fillRatio:{type:Number,default:100},size:{type:[String,Array,Number],values:sl,validator:e=>mt(e)||et(e)&&e.length===2&&e.every(mt)}}),kpe=$({name:"ElSpace",props:Wpe,setup(e,{slots:t}){const{classes:n,containerStyle:r,itemStyle:a}=Ape(e);function l(o,i="",s=[]){const{prefixCls:u}=e;return o.forEach((d,f)=>{B1(d)?et(d.children)&&d.children.forEach((p,b)=>{B1(p)&&et(p.children)?l(p.children,`${i+b}-`,s):s.push(C(rA,{style:a.value,prefixCls:u,key:`nested-${i+b}`},{default:()=>[p]},ca.PROPS|ca.STYLE,["style","prefixCls"]))}):qB(d)&&s.push(C(rA,{style:a.value,prefixCls:u,key:`LoopKey${i+f}`},{default:()=>[d]},ca.PROPS|ca.STYLE,["style","prefixCls"]))}),s}return()=>{var o;const{spacer:i,direction:s}=e,u=ue(t,"default",{key:0},()=>[]);if(((o=u.children)!=null?o:[]).length===0)return null;if(et(u.children)){let d=l(u.children);if(i){const f=d.length-1;d=d.reduce((p,b,A)=>{const h=[...p,b];return A!==f&&h.push(C("span",{style:[a.value,s==="vertical"?"width: 100%":null],key:A},[cn(i)?i:Xt(i,ca.TEXT)],ca.STYLE)),h},[])}return C("div",{class:n.value,style:r.value},d,ca.STYLE|ca.CLASS)}return u.children}}}),Vpe=qt(kpe),Ppe=Ie({decimalSeparator:{type:String,default:"."},groupSeparator:{type:String,default:","},precision:{type:Number,default:0},formatter:Function,value:{type:ve([Number,Object]),default:0},prefix:String,suffix:String,title:String,valueStyle:{type:ve([String,Object,Array])}}),Tpe=$({name:"ElStatistic"}),Kpe=$({...Tpe,props:Ppe,setup(e,{expose:t}){const n=e,r=ze("statistic"),a=X(()=>{const{value:l,formatter:o,precision:i,decimalSeparator:s,groupSeparator:u}=n;if(ht(o))return o(l);if(!mt(l))return l;let[d,f=""]=String(l).split(".");return f=f.padEnd(i,"0").slice(0,i>0?i:0),d=d.replace(/\B(?=(\d{3})+(?!\d))/g,u),[d,f].join(f?s:"")});return t({displayValue:a}),(l,o)=>(K(),F("div",{class:q(c(r).b())},[l.$slots.title||l.title?(K(),F("div",{key:0,class:q(c(r).e("head"))},[ue(l.$slots,"title",{},()=>[Xt(je(l.title),1)])],2)):ae("v-if",!0),z("div",{class:q(c(r).e("content"))},[l.$slots.prefix||l.prefix?(K(),F("div",{key:0,class:q(c(r).e("prefix"))},[ue(l.$slots,"prefix",{},()=>[z("span",null,je(l.prefix),1)])],2)):ae("v-if",!0),z("span",{class:q(c(r).e("number")),style:lt(l.valueStyle)},je(c(a)),7),l.$slots.suffix||l.suffix?(K(),F("div",{key:1,class:q(c(r).e("suffix"))},[ue(l.$slots,"suffix",{},()=>[z("span",null,je(l.suffix),1)])],2)):ae("v-if",!0)],2)],2))}});var Npe=Be(Kpe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/statistic/src/statistic.vue"]]);const YT=qt(Npe),xpe=Ie({format:{type:String,default:"HH:mm:ss"},prefix:String,suffix:String,title:String,value:{type:ve([Number,Object]),default:0},valueStyle:{type:ve([String,Object,Array])}}),Xpe={finish:()=>!0,[mn]:e=>mt(e)},gpe=[["Y",1e3*60*60*24*365],["M",1e3*60*60*24*30],["D",1e3*60*60*24],["H",1e3*60*60],["m",1e3*60],["s",1e3],["S",1]],lA=e=>mt(e)?new Date(e).getTime():e.valueOf(),oA=(e,t)=>{let n=e;const r=/\[([^\]]*)]/g;return gpe.reduce((l,[o,i])=>{const s=new RegExp(`${o}+(?![^\\[\\]]*\\])`,"g");if(s.test(l)){const u=Math.floor(n/i);return n-=u*i,l.replace(s,d=>String(u).padStart(d.length,"0"))}return l},t).replace(r,"$1")},wpe=$({name:"ElCountdown"}),jpe=$({...wpe,props:xpe,emits:Xpe,setup(e,{expose:t,emit:n}){const r=e;let a;const l=J(lA(r.value)-Date.now()),o=X(()=>oA(l.value,r.format)),i=d=>oA(d,r.format),s=()=>{a&&(zv(a),a=void 0)},u=()=>{const d=lA(r.value),f=()=>{let p=d-Date.now();n("change",p),p<=0?(p=0,s(),n("finish")):a=Zs(f),l.value=p};a=Zs(f)};return Ve(()=>[r.value,r.format],()=>{s(),u()},{immediate:!0}),tn(()=>{s()}),t({displayValue:o}),(d,f)=>(K(),ie(c(YT),{value:l.value,title:d.title,prefix:d.prefix,suffix:d.suffix,"value-style":d.valueStyle,formatter:i},tl({_:2},[Nt(d.$slots,(p,b)=>({name:b,fn:B(()=>[ue(d.$slots,b)])}))]),1032,["value","title","prefix","suffix","value-style"]))}});var Lpe=Be(jpe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/countdown/src/countdown.vue"]]);const qpe=qt(Lpe),Upe=Ie({space:{type:[Number,String],default:""},active:{type:Number,default:0},direction:{type:String,default:"horizontal",values:["horizontal","vertical"]},alignCenter:{type:Boolean},simple:{type:Boolean},finishStatus:{type:String,values:["wait","process","finish","error","success"],default:"finish"},processStatus:{type:String,values:["wait","process","finish","error","success"],default:"process"}}),Ope={[mn]:(e,t)=>[e,t].every(mt)},Rpe=$({name:"ElSteps"}),Jpe=$({...Rpe,props:Upe,emits:Ope,setup(e,{emit:t}){const n=e,r=ze("steps"),{children:a,addChild:l,removeChild:o}=l2(Tt(),"ElStep");return Ve(a,()=>{a.value.forEach((i,s)=>{i.setIndex(s)})}),zt("ElSteps",{props:n,steps:a,addStep:l,removeStep:o}),Ve(()=>n.active,(i,s)=>{t(mn,i,s)}),(i,s)=>(K(),F("div",{class:q([c(r).b(),c(r).m(i.simple?"simple":i.direction)])},[ue(i.$slots,"default")],2))}});var Fpe=Be(Jpe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/steps/src/steps.vue"]]);const zpe=Ie({title:{type:String,default:""},icon:{type:un},description:{type:String,default:""},status:{type:String,values:["","wait","process","finish","error","success"],default:""}}),Hpe=$({name:"ElStep"}),Zpe=$({...Hpe,props:zpe,setup(e){const t=e,n=ze("step"),r=J(-1),a=J({}),l=J(""),o=tt("ElSteps"),i=Tt();At(()=>{Ve([()=>o.props.active,()=>o.props.processStatus,()=>o.props.finishStatus],([V])=>{W(V)},{immediate:!0})}),tn(()=>{o.removeStep(k.uid)});const s=X(()=>t.status||l.value),u=X(()=>{const V=o.steps.value[r.value-1];return V?V.currentStatus:"wait"}),d=X(()=>o.props.alignCenter),f=X(()=>o.props.direction==="vertical"),p=X(()=>o.props.simple),b=X(()=>o.steps.value.length),A=X(()=>{var V;return((V=o.steps.value[b.value-1])==null?void 0:V.uid)===(i==null?void 0:i.uid)}),h=X(()=>p.value?"":o.props.space),m=X(()=>[n.b(),n.is(p.value?"simple":o.props.direction),n.is("flex",A.value&&!h.value&&!d.value),n.is("center",d.value&&!f.value&&!p.value)]),v=X(()=>{const V={flexBasis:mt(h.value)?`${h.value}px`:h.value?h.value:`${100/(b.value-(d.value?0:1))}%`};return f.value||A.value&&(V.maxWidth=`${100/b.value}%`),V}),S=V=>{r.value=V},y=V=>{const T=V==="wait",P={transitionDelay:`${T?"-":""}${150*r.value}ms`},x=V===o.props.processStatus||T?0:100;P.borderWidth=x&&!p.value?"1px":0,P[o.props.direction==="vertical"?"height":"width"]=`${x}%`,a.value=P},W=V=>{V>r.value?l.value=o.props.finishStatus:V===r.value&&u.value!=="error"?l.value=o.props.processStatus:l.value="wait";const T=o.steps.value[r.value-1];T&&T.calcProgress(l.value)},k=Bt({uid:i.uid,currentStatus:s,setIndex:S,calcProgress:y});return o.addStep(k),(V,T)=>(K(),F("div",{style:lt(c(v)),class:q(c(m))},[ae(" icon & line "),z("div",{class:q([c(n).e("head"),c(n).is(c(s))])},[c(p)?ae("v-if",!0):(K(),F("div",{key:0,class:q(c(n).e("line"))},[z("i",{class:q(c(n).e("line-inner")),style:lt(a.value)},null,6)],2)),z("div",{class:q([c(n).e("icon"),c(n).is(V.icon||V.$slots.icon?"icon":"text")])},[ue(V.$slots,"icon",{},()=>[V.icon?(K(),ie(c(it),{key:0,class:q(c(n).e("icon-inner"))},{default:B(()=>[(K(),ie(Ot(V.icon)))]),_:1},8,["class"])):c(s)==="success"?(K(),ie(c(it),{key:1,class:q([c(n).e("icon-inner"),c(n).is("status")])},{default:B(()=>[C(c(hd))]),_:1},8,["class"])):c(s)==="error"?(K(),ie(c(it),{key:2,class:q([c(n).e("icon-inner"),c(n).is("status")])},{default:B(()=>[C(c(ma))]),_:1},8,["class"])):c(p)?ae("v-if",!0):(K(),F("div",{key:3,class:q(c(n).e("icon-inner"))},je(r.value+1),3))])],2)],2),ae(" title & description "),z("div",{class:q(c(n).e("main"))},[z("div",{class:q([c(n).e("title"),c(n).is(c(s))])},[ue(V.$slots,"title",{},()=>[Xt(je(V.title),1)])],2),c(p)?(K(),F("div",{key:0,class:q(c(n).e("arrow"))},null,2)):(K(),F("div",{key:1,class:q([c(n).e("description"),c(n).is(c(s))])},[ue(V.$slots,"description",{},()=>[Xt(je(V.description),1)])],2))],2)],6))}});var QT=Be(Zpe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/steps/src/item.vue"]]);const Gpe=qt(Fpe,{Step:QT}),Cpe=Nn(QT),Mpe=Ie({modelValue:{type:[Boolean,String,Number],default:!1},disabled:{type:Boolean,default:!1},loading:{type:Boolean,default:!1},size:{type:String,validator:Jv},width:{type:[String,Number],default:""},inlinePrompt:{type:Boolean,default:!1},inactiveActionIcon:{type:un},activeActionIcon:{type:un},activeIcon:{type:un},inactiveIcon:{type:un},activeText:{type:String,default:""},inactiveText:{type:String,default:""},activeValue:{type:[Boolean,String,Number],default:!0},inactiveValue:{type:[Boolean,String,Number],default:!1},activeColor:{type:String,default:""},inactiveColor:{type:String,default:""},borderColor:{type:String,default:""},name:{type:String,default:""},validateEvent:{type:Boolean,default:!0},beforeChange:{type:ve(Function)},id:String,tabindex:{type:[String,Number]},value:{type:[Boolean,String,Number],default:!1},label:{type:String,default:void 0}}),Dpe={[Rt]:e=>Zn(e)||Pt(e)||mt(e),[mn]:e=>Zn(e)||Pt(e)||mt(e),[Pr]:e=>Zn(e)||Pt(e)||mt(e)},Epe=["onClick"],Ipe=["id","aria-checked","aria-disabled","aria-label","name","true-value","false-value","disabled","tabindex","onKeydown"],Bpe=["aria-hidden"],Ype=["aria-hidden"],Qpe=["aria-hidden"],gh="ElSwitch",_pe=$({name:gh}),$pe=$({..._pe,props:Mpe,emits:Dpe,setup(e,{expose:t,emit:n}){const r=e,a=Tt(),{formItem:l}=wr(),o=Cn(),i=ze("switch");(P=>{P.forEach(x=>{rl({from:x[0],replacement:x[1],scope:gh,version:"2.3.0",ref:"https://element-plus.org/en-US/component/switch.html#attributes",type:"Attribute"},X(()=>{var g;return!!((g=a.vnode.props)!=null&&g[x[2]])}))})})([['"value"','"model-value" or "v-model"',"value"],['"active-color"',"CSS var `--el-switch-on-color`","activeColor"],['"inactive-color"',"CSS var `--el-switch-off-color`","inactiveColor"],['"border-color"',"CSS var `--el-switch-border-color`","borderColor"]]);const{inputId:u}=Jo(r,{formItemContext:l}),d=Br(X(()=>r.loading)),f=J(r.modelValue!==!1),p=J(),b=J(),A=X(()=>[i.b(),i.m(o.value),i.is("disabled",d.value),i.is("checked",y.value)]),h=X(()=>[i.e("label"),i.em("label","left"),i.is("active",!y.value)]),m=X(()=>[i.e("label"),i.em("label","right"),i.is("active",y.value)]),v=X(()=>({width:Ln(r.width)}));Ve(()=>r.modelValue,()=>{f.value=!0}),Ve(()=>r.value,()=>{f.value=!1});const S=X(()=>f.value?r.modelValue:r.value),y=X(()=>S.value===r.activeValue);[r.activeValue,r.inactiveValue].includes(S.value)||(n(Rt,r.inactiveValue),n(mn,r.inactiveValue),n(Pr,r.inactiveValue)),Ve(y,P=>{var x;p.value.checked=P,r.validateEvent&&((x=l==null?void 0:l.validate)==null||x.call(l,"change").catch(g=>void 0))});const W=()=>{const P=y.value?r.inactiveValue:r.activeValue;n(Rt,P),n(mn,P),n(Pr,P),at(()=>{p.value.checked=y.value})},k=()=>{if(d.value)return;const{beforeChange:P}=r;if(!P){W();return}const x=P();[xs(x),Zn(x)].includes(!0)||Gn(gh,"beforeChange must return type `Promise<boolean>` or `boolean`"),xs(x)?x.then(j=>{j&&W()}).catch(j=>{}):x&&W()},V=X(()=>i.cssVarBlock({...r.activeColor?{"on-color":r.activeColor}:null,...r.inactiveColor?{"off-color":r.inactiveColor}:null,...r.borderColor?{"border-color":r.borderColor}:null})),T=()=>{var P,x;(x=(P=p.value)==null?void 0:P.focus)==null||x.call(P)};return At(()=>{p.value.checked=y.value}),t({focus:T,checked:y}),(P,x)=>(K(),F("div",{class:q(c(A)),style:lt(c(V)),onClick:pt(k,["prevent"])},[z("input",{id:c(u),ref_key:"input",ref:p,class:q(c(i).e("input")),type:"checkbox",role:"switch","aria-checked":c(y),"aria-disabled":c(d),"aria-label":P.label,name:P.name,"true-value":P.activeValue,"false-value":P.inactiveValue,disabled:c(d),tabindex:P.tabindex,onChange:W,onKeydown:Dt(k,["enter"])},null,42,Ipe),!P.inlinePrompt&&(P.inactiveIcon||P.inactiveText)?(K(),F("span",{key:0,class:q(c(h))},[P.inactiveIcon?(K(),ie(c(it),{key:0},{default:B(()=>[(K(),ie(Ot(P.inactiveIcon)))]),_:1})):ae("v-if",!0),!P.inactiveIcon&&P.inactiveText?(K(),F("span",{key:1,"aria-hidden":c(y)},je(P.inactiveText),9,Bpe)):ae("v-if",!0)],2)):ae("v-if",!0),z("span",{ref_key:"core",ref:b,class:q(c(i).e("core")),style:lt(c(v))},[P.inlinePrompt?(K(),F("div",{key:0,class:q(c(i).e("inner"))},[P.activeIcon||P.inactiveIcon?(K(),ie(c(it),{key:0,class:q(c(i).is("icon"))},{default:B(()=>[(K(),ie(Ot(c(y)?P.activeIcon:P.inactiveIcon)))]),_:1},8,["class"])):P.activeText||P.inactiveText?(K(),F("span",{key:1,class:q(c(i).is("text")),"aria-hidden":!c(y)},je(c(y)?P.activeText:P.inactiveText),11,Ype)):ae("v-if",!0)],2)):ae("v-if",!0),z("div",{class:q(c(i).e("action"))},[P.loading?(K(),ie(c(it),{key:0,class:q(c(i).is("loading"))},{default:B(()=>[C(c(Uo))]),_:1},8,["class"])):P.activeActionIcon&&c(y)?(K(),ie(c(it),{key:1},{default:B(()=>[(K(),ie(Ot(P.activeActionIcon)))]),_:1})):P.inactiveActionIcon&&!c(y)?(K(),ie(c(it),{key:2},{default:B(()=>[(K(),ie(Ot(P.inactiveActionIcon)))]),_:1})):ae("v-if",!0)],2)],6),!P.inlinePrompt&&(P.activeIcon||P.activeText)?(K(),F("span",{key:1,class:q(c(m))},[P.activeIcon?(K(),ie(c(it),{key:0},{default:B(()=>[(K(),ie(Ot(P.activeIcon)))]),_:1})):ae("v-if",!0),!P.activeIcon&&P.activeText?(K(),F("span",{key:1,"aria-hidden":!c(y)},je(P.activeText),9,Qpe)):ae("v-if",!0)],2)):ae("v-if",!0)],14,Epe))}});var eve=Be($pe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/switch/src/switch.vue"]]);const tve=qt(eve);/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var nve=/["'&<>]/,rve=ave;function ave(e){var t=""+e,n=nve.exec(t);if(!n)return t;var r,a="",l=0,o=0;for(l=n.index;l<t.length;l++){switch(t.charCodeAt(l)){case 34:r="&quot;";break;case 38:r="&amp;";break;case 39:r="&#39;";break;case 60:r="&lt;";break;case 62:r="&gt;";break;default:continue}o!==l&&(a+=t.substring(o,l)),o=l+1,a+=r}return o!==l?a+t.substring(o,l):a}const Yb=function(e){var t;return(t=e.target)==null?void 0:t.closest("td")},lve=function(e,t,n,r,a){if(!t&&!r&&(!a||Array.isArray(a)&&!a.length))return e;typeof n=="string"?n=n==="descending"?-1:1:n=n&&n<0?-1:1;const l=r?null:function(i,s){return a?(Array.isArray(a)||(a=[a]),a.map(u=>typeof u=="string"?jn(i,u):u(i,s,e))):(t!=="$key"&&Jt(i)&&"$value"in i&&(i=i.$value),[Jt(i)?jn(i,t):i])},o=function(i,s){if(r)return r(i.value,s.value);for(let u=0,d=i.key.length;u<d;u++){if(i.key[u]<s.key[u])return-1;if(i.key[u]>s.key[u])return 1}return 0};return e.map((i,s)=>({value:i,index:s,key:l?l(i,s):null})).sort((i,s)=>{let u=o(i,s);return u||(u=i.index-s.index),u*+n}).map(i=>i.value)},_T=function(e,t){let n=null;return e.columns.forEach(r=>{r.id===t&&(n=r)}),n},ove=function(e,t){let n=null;for(let r=0;r<e.columns.length;r++){const a=e.columns[r];if(a.columnKey===t){n=a;break}}return n||Gn("ElTable",`No column matching with column-key: ${t}`),n},iA=function(e,t,n){const r=(t.className||"").match(new RegExp(`${n}-table_[^\\s]+`,"gm"));return r?_T(e,r[0]):null},lr=(e,t)=>{if(!e)throw new Error("Row is required when get row identity");if(typeof t=="string"){if(!t.includes("."))return`${e[t]}`;const n=t.split(".");let r=e;for(const a of n)r=r[a];return`${r}`}else if(typeof t=="function")return t.call(null,e)},ni=function(e,t){const n={};return(e||[]).forEach((r,a)=>{n[lr(r,t)]={row:r,index:a}}),n};function ive(e,t){const n={};let r;for(r in e)n[r]=e[r];for(r in t)if(Zt(t,r)){const a=t[r];typeof a<"u"&&(n[r]=a)}return n}function x2(e){return e===""||e!==void 0&&(e=Number.parseInt(e,10),Number.isNaN(e)&&(e="")),e}function $T(e){return e===""||e!==void 0&&(e=x2(e),Number.isNaN(e)&&(e=80)),e}function sve(e){return typeof e=="number"?e:typeof e=="string"?/^\d+(?:px)?$/.test(e)?Number.parseInt(e,10):e:null}function uve(...e){return e.length===0?t=>t:e.length===1?e[0]:e.reduce((t,n)=>(...r)=>t(n(...r)))}function nc(e,t,n){let r=!1;const a=e.indexOf(t),l=a!==-1,o=i=>{i==="add"?e.push(t):e.splice(a,1),r=!0,et(t.children)&&t.children.forEach(s=>{nc(e,s,n!=null?n:!l)})};return Zn(n)?n&&!l?o("add"):!n&&l&&o("remove"):o(l?"remove":"add"),r}function cve(e,t,n="children",r="hasChildren"){const a=o=>!(Array.isArray(o)&&o.length);function l(o,i,s){t(o,i,s),i.forEach(u=>{if(u[r]){t(u,null,s+1);return}const d=u[n];a(d)||l(u,d,s+1)})}e.forEach(o=>{if(o[r]){t(o,null,0);return}const i=o[n];a(i)||l(o,i,0)})}let vl;function dve(e,t,n,r,a){a=jk({enterable:!0,showArrow:!0},a);const l=e==null?void 0:e.dataset.prefix,o=e==null?void 0:e.querySelector(`.${l}-scrollbar__wrap`);function i(){const m=a.effect==="light",v=document.createElement("div");return v.className=[`${l}-popper`,m?"is-light":"is-dark",a.popperClass||""].join(" "),n=rve(n),v.innerHTML=n,v.style.zIndex=String(r()),e==null||e.appendChild(v),v}function s(){const m=document.createElement("div");return m.className=`${l}-popper__arrow`,m}function u(){d&&d.update()}vl==null||vl(),vl=()=>{try{d&&d.destroy(),b&&(e==null||e.removeChild(b)),t.removeEventListener("mouseenter",f),t.removeEventListener("mouseleave",p),o==null||o.removeEventListener("scroll",vl),vl=void 0}catch{}};let d=null,f=u,p=vl;a.enterable&&({onOpen:f,onClose:p}=bV({showAfter:a.showAfter,hideAfter:a.hideAfter,open:u,close:vl}));const b=i();b.onmouseenter=f,b.onmouseleave=p;const A=[];if(a.offset&&A.push({name:"offset",options:{offset:[0,a.offset]}}),a.showArrow){const m=b.appendChild(s());A.push({name:"arrow",options:{element:m,padding:10}})}const h=a.popperOptions||{};return d=fV(t,b,{placement:a.placement||"top",strategy:"fixed",...h,modifiers:h.modifiers?A.concat(h.modifiers):A}),t.addEventListener("mouseenter",f),t.addEventListener("mouseleave",p),o==null||o.addEventListener("scroll",vl),d}function eK(e){return e.children?pC(e.children,eK):[e]}function sA(e,t){return e+t.colSpan}const tK=(e,t,n,r)=>{let a=0,l=e;const o=n.states.columns.value;if(r){const s=eK(r[e]);a=o.slice(0,o.indexOf(s[0])).reduce(sA,0),l=a+s.reduce(sA,0)-1}else a=e;let i;switch(t){case"left":l<n.states.fixedLeafColumnsLength.value&&(i="left");break;case"right":a>=o.length-n.states.rightFixedLeafColumnsLength.value&&(i="right");break;default:l<n.states.fixedLeafColumnsLength.value?i="left":a>=o.length-n.states.rightFixedLeafColumnsLength.value&&(i="right")}return i?{direction:i,start:a,after:l}:{}},X2=(e,t,n,r,a,l=0)=>{const o=[],{direction:i,start:s,after:u}=tK(t,n,r,a);if(i){const d=i==="left";o.push(`${e}-fixed-column--${i}`),d&&u+l===r.states.fixedLeafColumnsLength.value-1?o.push("is-last-column"):!d&&s-l===r.states.columns.value.length-r.states.rightFixedLeafColumnsLength.value&&o.push("is-first-column")}return o};function uA(e,t){return e+(t.realWidth===null||Number.isNaN(t.realWidth)?Number(t.width):t.realWidth)}const g2=(e,t,n,r)=>{const{direction:a,start:l=0,after:o=0}=tK(e,t,n,r);if(!a)return;const i={},s=a==="left",u=n.states.columns.value;return s?i.left=u.slice(0,l).reduce(uA,0):i.right=u.slice(o+1).reverse().reduce(uA,0),i},Qs=(e,t)=>{!e||Number.isNaN(e[t])||(e[t]=`${e[t]}px`)};function fve(e){const t=Tt(),n=J(!1),r=J([]);return{updateExpandRows:()=>{const s=e.data.value||[],u=e.rowKey.value;if(n.value)r.value=s.slice();else if(u){const d=ni(r.value,u);r.value=s.reduce((f,p)=>{const b=lr(p,u);return d[b]&&f.push(p),f},[])}else r.value=[]},toggleRowExpansion:(s,u)=>{nc(r.value,s,u)&&t.emit("expand-change",s,r.value.slice())},setExpandRowKeys:s=>{t.store.assertRowKey();const u=e.data.value||[],d=e.rowKey.value,f=ni(u,d);r.value=s.reduce((p,b)=>{const A=f[b];return A&&p.push(A.row),p},[])},isRowExpanded:s=>{const u=e.rowKey.value;return u?!!ni(r.value,u)[lr(s,u)]:r.value.includes(s)},states:{expandRows:r,defaultExpandAll:n}}}function pve(e){const t=Tt(),n=J(null),r=J(null),a=u=>{t.store.assertRowKey(),n.value=u,o(u)},l=()=>{n.value=null},o=u=>{const{data:d,rowKey:f}=e;let p=null;f.value&&(p=(c(d)||[]).find(b=>lr(b,f.value)===u)),r.value=p,t.emit("current-change",r.value,null)};return{setCurrentRowKey:a,restoreCurrentRowKey:l,setCurrentRowByKey:o,updateCurrentRow:u=>{const d=r.value;if(u&&u!==d){r.value=u,t.emit("current-change",r.value,d);return}!u&&d&&(r.value=null,t.emit("current-change",null,d))},updateCurrentRowData:()=>{const u=e.rowKey.value,d=e.data.value||[],f=r.value;if(!d.includes(f)&&f){if(u){const p=lr(f,u);o(p)}else r.value=null;r.value===null&&t.emit("current-change",null,f)}else n.value&&(o(n.value),l())},states:{_currentRowKey:n,currentRow:r}}}function vve(e){const t=J([]),n=J({}),r=J(16),a=J(!1),l=J({}),o=J("hasChildren"),i=J("children"),s=Tt(),u=X(()=>{if(!e.rowKey.value)return{};const v=e.data.value||[];return f(v)}),d=X(()=>{const v=e.rowKey.value,S=Object.keys(l.value),y={};return S.length&&S.forEach(W=>{if(l.value[W].length){const k={children:[]};l.value[W].forEach(V=>{const T=lr(V,v);k.children.push(T),V[o.value]&&!y[T]&&(y[T]={children:[]})}),y[W]=k}}),y}),f=v=>{const S=e.rowKey.value,y={};return cve(v,(W,k,V)=>{const T=lr(W,S);Array.isArray(k)?y[T]={children:k.map(P=>lr(P,S)),level:V}:a.value&&(y[T]={children:[],lazy:!0,level:V})},i.value,o.value),y},p=(v=!1,S=(y=>(y=s.store)==null?void 0:y.states.defaultExpandAll.value)())=>{var y;const W=u.value,k=d.value,V=Object.keys(W),T={};if(V.length){const P=c(n),x=[],g=(L,w)=>{if(v)return t.value?S||t.value.includes(w):!!(S||(L==null?void 0:L.expanded));{const R=S||t.value&&t.value.includes(w);return!!((L==null?void 0:L.expanded)||R)}};V.forEach(L=>{const w=P[L],R={...W[L]};if(R.expanded=g(w,L),R.lazy){const{loaded:Z=!1,loading:G=!1}=w||{};R.loaded=!!Z,R.loading=!!G,x.push(L)}T[L]=R});const j=Object.keys(k);a.value&&j.length&&x.length&&j.forEach(L=>{const w=P[L],R=k[L].children;if(x.includes(L)){if(T[L].children.length!==0)throw new Error("[ElTable]children must be an empty array.");T[L].children=R}else{const{loaded:Z=!1,loading:G=!1}=w||{};T[L]={lazy:!0,loaded:!!Z,loading:!!G,expanded:g(w,L),children:R,level:""}}})}n.value=T,(y=s.store)==null||y.updateTableScrollY()};Ve(()=>t.value,()=>{p(!0)}),Ve(()=>u.value,()=>{p()}),Ve(()=>d.value,()=>{p()});const b=v=>{t.value=v,p()},A=(v,S)=>{s.store.assertRowKey();const y=e.rowKey.value,W=lr(v,y),k=W&&n.value[W];if(W&&k&&"expanded"in k){const V=k.expanded;S=typeof S>"u"?!k.expanded:S,n.value[W].expanded=S,V!==S&&s.emit("expand-change",v,S),s.store.updateTableScrollY()}},h=v=>{s.store.assertRowKey();const S=e.rowKey.value,y=lr(v,S),W=n.value[y];a.value&&W&&"loaded"in W&&!W.loaded?m(v,y,W):A(v,void 0)},m=(v,S,y)=>{const{load:W}=s.props;W&&!n.value[S].loaded&&(n.value[S].loading=!0,W(v,y,k=>{if(!Array.isArray(k))throw new TypeError("[ElTable] data must be an array");n.value[S].loading=!1,n.value[S].loaded=!0,n.value[S].expanded=!0,k.length&&(l.value[S]=k),s.emit("expand-change",v,!0)}))};return{loadData:m,loadOrToggle:h,toggleTreeExpansion:A,updateTreeExpandKeys:b,updateTreeData:p,normalize:f,states:{expandRowKeys:t,treeData:n,indent:r,lazy:a,lazyTreeNodeMap:l,lazyColumnIdentifier:o,childrenColumnName:i}}}const bve=(e,t)=>{const n=t.sortingColumn;return!n||typeof n.sortable=="string"?e:lve(e,t.sortProp,t.sortOrder,n.sortMethod,n.sortBy)},zf=e=>{const t=[];return e.forEach(n=>{n.children&&n.children.length>0?t.push.apply(t,zf(n.children)):t.push(n)}),t};function hve(){var e;const t=Tt(),{size:n}=Kn((e=t.proxy)==null?void 0:e.$props),r=J(null),a=J([]),l=J([]),o=J(!1),i=J([]),s=J([]),u=J([]),d=J([]),f=J([]),p=J([]),b=J([]),A=J([]),h=[],m=J(0),v=J(0),S=J(0),y=J(!1),W=J([]),k=J(!1),V=J(!1),T=J(null),P=J({}),x=J(null),g=J(null),j=J(null),L=J(null),w=J(null);Ve(a,()=>t.state&&U(!1),{deep:!0});const R=()=>{if(!r.value)throw new Error("[ElTable] prop row-key is required")},Z=ot=>{var ke;(ke=ot.children)==null||ke.forEach(be=>{be.fixed=ot.fixed,Z(be)})},G=()=>{i.value.forEach(Xe=>{Z(Xe)}),d.value=i.value.filter(Xe=>Xe.fixed===!0||Xe.fixed==="left"),f.value=i.value.filter(Xe=>Xe.fixed==="right"),d.value.length>0&&i.value[0]&&i.value[0].type==="selection"&&!i.value[0].fixed&&(i.value[0].fixed=!0,d.value.unshift(i.value[0]));const ot=i.value.filter(Xe=>!Xe.fixed);s.value=[].concat(d.value).concat(ot).concat(f.value);const ke=zf(ot),be=zf(d.value),fe=zf(f.value);m.value=ke.length,v.value=be.length,S.value=fe.length,u.value=[].concat(be).concat(ke).concat(fe),o.value=d.value.length>0||f.value.length>0},U=(ot,ke=!1)=>{ot&&G(),ke?t.state.doLayout():t.state.debouncedUpdateLayout()},H=ot=>W.value.includes(ot),O=()=>{y.value=!1,W.value.length&&(W.value=[],t.emit("selection-change",[]))},D=()=>{let ot;if(r.value){ot=[];const ke=ni(W.value,r.value),be=ni(a.value,r.value);for(const fe in ke)Zt(ke,fe)&&!be[fe]&&ot.push(ke[fe].row)}else ot=W.value.filter(ke=>!a.value.includes(ke));if(ot.length){const ke=W.value.filter(be=>!ot.includes(be));W.value=ke,t.emit("selection-change",ke.slice())}},Y=()=>(W.value||[]).slice(),Q=(ot,ke=void 0,be=!0)=>{if(nc(W.value,ot,ke)){const Xe=(W.value||[]).slice();be&&t.emit("select",Xe,ot),t.emit("selection-change",Xe)}},ee=()=>{var ot,ke;const be=V.value?!y.value:!(y.value||W.value.length);y.value=be;let fe=!1,Xe=0;const ne=(ke=(ot=t==null?void 0:t.store)==null?void 0:ot.states)==null?void 0:ke.rowKey.value;a.value.forEach((M,Oe)=>{const Ee=Oe+Xe;T.value?T.value.call(null,M,Ee)&&nc(W.value,M,be)&&(fe=!0):nc(W.value,M,be)&&(fe=!0),Xe+=pe(lr(M,ne))}),fe&&t.emit("selection-change",W.value?W.value.slice():[]),t.emit("select-all",W.value)},oe=()=>{const ot=ni(W.value,r.value);a.value.forEach(ke=>{const be=lr(ke,r.value),fe=ot[be];fe&&(W.value[fe.index]=ke)})},Ne=()=>{var ot,ke,be;if(((ot=a.value)==null?void 0:ot.length)===0){y.value=!1;return}let fe;r.value&&(fe=ni(W.value,r.value));const Xe=function(Ee){return fe?!!fe[lr(Ee,r.value)]:W.value.includes(Ee)};let ne=!0,M=0,Oe=0;for(let Ee=0,ft=(a.value||[]).length;Ee<ft;Ee++){const Se=(be=(ke=t==null?void 0:t.store)==null?void 0:ke.states)==null?void 0:be.rowKey.value,Ye=Ee+Oe,E=a.value[Ee],le=T.value&&T.value.call(null,E,Ye);if(Xe(E))M++;else if(!T.value||le){ne=!1;break}Oe+=pe(lr(E,Se))}M===0&&(ne=!1),y.value=ne},pe=ot=>{var ke;if(!t||!t.store)return 0;const{treeData:be}=t.store.states;let fe=0;const Xe=(ke=be.value[ot])==null?void 0:ke.children;return Xe&&(fe+=Xe.length,Xe.forEach(ne=>{fe+=pe(ne)})),fe},me=(ot,ke)=>{Array.isArray(ot)||(ot=[ot]);const be={};return ot.forEach(fe=>{P.value[fe.id]=ke,be[fe.columnKey||fe.id]=ke}),be},ce=(ot,ke,be)=>{g.value&&g.value!==ot&&(g.value.order=null),g.value=ot,j.value=ke,L.value=be},Le=()=>{let ot=c(l);Object.keys(P.value).forEach(ke=>{const be=P.value[ke];if(!be||be.length===0)return;const fe=_T({columns:u.value},ke);fe&&fe.filterMethod&&(ot=ot.filter(Xe=>be.some(ne=>fe.filterMethod.call(null,ne,Xe,fe))))}),x.value=ot},Te=()=>{a.value=bve(x.value,{sortingColumn:g.value,sortProp:j.value,sortOrder:L.value})},xe=(ot=void 0)=>{ot&&ot.filter||Le(),Te()},_=ot=>{const{tableHeaderRef:ke}=t.refs;if(!ke)return;const be=Object.assign({},ke.filterPanels),fe=Object.keys(be);if(!!fe.length)if(typeof ot=="string"&&(ot=[ot]),Array.isArray(ot)){const Xe=ot.map(ne=>ove({columns:u.value},ne));fe.forEach(ne=>{const M=Xe.find(Oe=>Oe.id===ne);M&&(M.filteredValue=[])}),t.store.commit("filterChange",{column:Xe,values:[],silent:!0,multi:!0})}else fe.forEach(Xe=>{const ne=u.value.find(M=>M.id===Xe);ne&&(ne.filteredValue=[])}),P.value={},t.store.commit("filterChange",{column:{},values:[],silent:!0})},re=()=>{!g.value||(ce(null,null,null),t.store.commit("changeSortCondition",{silent:!0}))},{setExpandRowKeys:ye,toggleRowExpansion:ge,updateExpandRows:Fe,states:Ae,isRowExpanded:Ze}=fve({data:a,rowKey:r}),{updateTreeExpandKeys:Ue,toggleTreeExpansion:Pe,updateTreeData:qe,loadOrToggle:De,states:Me}=vve({data:a,rowKey:r}),{updateCurrentRowData:_e,updateCurrentRow:Re,setCurrentRowKey:$e,states:dt}=pve({data:a,rowKey:r});return{assertRowKey:R,updateColumns:G,scheduleLayout:U,isSelected:H,clearSelection:O,cleanSelection:D,getSelectionRows:Y,toggleRowSelection:Q,_toggleAllSelection:ee,toggleAllSelection:null,updateSelectionByRowKey:oe,updateAllSelected:Ne,updateFilters:me,updateCurrentRow:Re,updateSort:ce,execFilter:Le,execSort:Te,execQuery:xe,clearFilter:_,clearSort:re,toggleRowExpansion:ge,setExpandRowKeysAdapter:ot=>{ye(ot),Ue(ot)},setCurrentRowKey:$e,toggleRowExpansionAdapter:(ot,ke)=>{u.value.some(({type:fe})=>fe==="expand")?ge(ot,ke):Pe(ot,ke)},isRowExpanded:Ze,updateExpandRows:Fe,updateCurrentRowData:_e,loadOrToggle:De,updateTreeData:qe,states:{tableSize:n,rowKey:r,data:a,_data:l,isComplex:o,_columns:i,originColumns:s,columns:u,fixedColumns:d,rightFixedColumns:f,leafColumns:p,fixedLeafColumns:b,rightFixedLeafColumns:A,updateOrderFns:h,leafColumnsLength:m,fixedLeafColumnsLength:v,rightFixedLeafColumnsLength:S,isAllSelected:y,selection:W,reserveSelection:k,selectOnIndeterminate:V,selectable:T,filters:P,filteredData:x,sortingColumn:g,sortProp:j,sortOrder:L,hoverRow:w,...Ae,...Me,...dt}}}function wh(e,t){return e.map(n=>{var r;return n.id===t.id?t:((r=n.children)!=null&&r.length&&(n.children=wh(n.children,t)),n)})}function jh(e){e.forEach(t=>{var n,r;t.no=(n=t.getColumnIndex)==null?void 0:n.call(t),(r=t.children)!=null&&r.length&&jh(t.children)}),e.sort((t,n)=>t.no-n.no)}function mve(){const e=Tt(),t=hve();return{ns:ze("table"),...t,mutations:{setData(o,i){const s=c(o._data)!==i;o.data.value=i,o._data.value=i,e.store.execQuery(),e.store.updateCurrentRowData(),e.store.updateExpandRows(),e.store.updateTreeData(e.store.states.defaultExpandAll.value),c(o.reserveSelection)?(e.store.assertRowKey(),e.store.updateSelectionByRowKey()):s?e.store.clearSelection():e.store.cleanSelection(),e.store.updateAllSelected(),e.$ready&&e.store.scheduleLayout()},insertColumn(o,i,s,u){const d=c(o._columns);let f=[];s?(s&&!s.children&&(s.children=[]),s.children.push(i),f=wh(d,s)):(d.push(i),f=d),jh(f),o._columns.value=f,o.updateOrderFns.push(u),i.type==="selection"&&(o.selectable.value=i.selectable,o.reserveSelection.value=i.reserveSelection),e.$ready&&(e.store.updateColumns(),e.store.scheduleLayout())},updateColumnOrder(o,i){var s;((s=i.getColumnIndex)==null?void 0:s.call(i))!==i.no&&(jh(o._columns.value),e.$ready&&e.store.updateColumns())},removeColumn(o,i,s,u){const d=c(o._columns)||[];if(s)s.children.splice(s.children.findIndex(p=>p.id===i.id),1),at(()=>{var p;((p=s.children)==null?void 0:p.length)===0&&delete s.children}),o._columns.value=wh(d,s);else{const p=d.indexOf(i);p>-1&&(d.splice(p,1),o._columns.value=d)}const f=o.updateOrderFns.indexOf(u);f>-1&&o.updateOrderFns.splice(f,1),e.$ready&&(e.store.updateColumns(),e.store.scheduleLayout())},sort(o,i){const{prop:s,order:u,init:d}=i;if(s){const f=c(o.columns).find(p=>p.property===s);f&&(f.order=u,e.store.updateSort(f,s,u),e.store.commit("changeSortCondition",{init:d}))}},changeSortCondition(o,i){const{sortingColumn:s,sortProp:u,sortOrder:d}=o,f=c(s),p=c(u),b=c(d);b===null&&(o.sortingColumn.value=null,o.sortProp.value=null);const A={filter:!0};e.store.execQuery(A),(!i||!(i.silent||i.init))&&e.emit("sort-change",{column:f,prop:p,order:b}),e.store.updateTableScrollY()},filterChange(o,i){const{column:s,values:u,silent:d}=i,f=e.store.updateFilters(s,u);e.store.execQuery(),d||e.emit("filter-change",f),e.store.updateTableScrollY()},toggleAllSelection(){e.store.toggleAllSelection()},rowSelectedChanged(o,i){e.store.toggleRowSelection(i),e.store.updateAllSelected()},setHoverRow(o,i){o.hoverRow.value=i},setCurrentRow(o,i){e.store.updateCurrentRow(i)}},commit:function(o,...i){const s=e.store.mutations;if(s[o])s[o].apply(e,[e.store.states].concat(i));else throw new Error(`Action not found: ${o}`)},updateTableScrollY:function(){at(()=>e.layout.updateScrollY.apply(e.layout))}}}const rc={rowKey:"rowKey",defaultExpandAll:"defaultExpandAll",selectOnIndeterminate:"selectOnIndeterminate",indent:"indent",lazy:"lazy",data:"data",["treeProps.hasChildren"]:{key:"lazyColumnIdentifier",default:"hasChildren"},["treeProps.children"]:{key:"childrenColumnName",default:"children"}};function Sve(e,t){if(!e)throw new Error("Table is required.");const n=mve();return n.toggleAllSelection=xr(n._toggleAllSelection,10),Object.keys(rc).forEach(r=>{nK(rK(t,r),r,n)}),yve(n,t),n}function yve(e,t){Object.keys(rc).forEach(n=>{Ve(()=>rK(t,n),r=>{nK(r,n,e)})})}function nK(e,t,n){let r=e,a=rc[t];typeof rc[t]=="object"&&(a=a.key,r=r||rc[t].default),n.states[a].value=r}function rK(e,t){if(t.includes(".")){const n=t.split(".");let r=e;return n.forEach(a=>{r=r[a]}),r}else return e[t]}class Ave{constructor(t){this.observers=[],this.table=null,this.store=null,this.columns=[],this.fit=!0,this.showHeader=!0,this.height=J(null),this.scrollX=J(!1),this.scrollY=J(!1),this.bodyWidth=J(null),this.fixedWidth=J(null),this.rightFixedWidth=J(null),this.gutterWidth=0;for(const n in t)Zt(t,n)&&(Qt(this[n])?this[n].value=t[n]:this[n]=t[n]);if(!this.table)throw new Error("Table is required for Table Layout");if(!this.store)throw new Error("Store is required for Table Layout")}updateScrollY(){if(this.height.value===null)return!1;const n=this.table.refs.scrollBarRef;if(this.table.vnode.el&&(n==null?void 0:n.wrapRef)){let r=!0;const a=this.scrollY.value;return r=n.wrapRef.scrollHeight>n.wrapRef.clientHeight,this.scrollY.value=r,a!==r}return!1}setHeight(t,n="height"){if(!Mt)return;const r=this.table.vnode.el;if(t=sve(t),this.height.value=Number(t),!r&&(t||t===0))return at(()=>this.setHeight(t,n));typeof t=="number"?(r.style[n]=`${t}px`,this.updateElsHeight()):typeof t=="string"&&(r.style[n]=t,this.updateElsHeight())}setMaxHeight(t){this.setHeight(t,"max-height")}getFlattenColumns(){const t=[];return this.table.store.states.columns.value.forEach(r=>{r.isColumnGroup?t.push.apply(t,r.columns):t.push(r)}),t}updateElsHeight(){this.updateScrollY(),this.notifyObservers("scrollable")}headerDisplayNone(t){if(!t)return!0;let n=t;for(;n.tagName!=="DIV";){if(getComputedStyle(n).display==="none")return!0;n=n.parentElement}return!1}updateColumnsWidth(){if(!Mt)return;const t=this.fit,n=this.table.vnode.el.clientWidth;let r=0;const a=this.getFlattenColumns(),l=a.filter(s=>typeof s.width!="number");if(a.forEach(s=>{typeof s.width=="number"&&s.realWidth&&(s.realWidth=null)}),l.length>0&&t){if(a.forEach(s=>{r+=Number(s.width||s.minWidth||80)}),r<=n){this.scrollX.value=!1;const s=n-r;if(l.length===1)l[0].realWidth=Number(l[0].minWidth||80)+s;else{const u=l.reduce((p,b)=>p+Number(b.minWidth||80),0),d=s/u;let f=0;l.forEach((p,b)=>{if(b===0)return;const A=Math.floor(Number(p.minWidth||80)*d);f+=A,p.realWidth=Number(p.minWidth||80)+A}),l[0].realWidth=Number(l[0].minWidth||80)+s-f}}else this.scrollX.value=!0,l.forEach(s=>{s.realWidth=Number(s.minWidth)});this.bodyWidth.value=Math.max(r,n),this.table.state.resizeState.value.width=this.bodyWidth.value}else a.forEach(s=>{!s.width&&!s.minWidth?s.realWidth=80:s.realWidth=Number(s.width||s.minWidth),r+=s.realWidth}),this.scrollX.value=r>n,this.bodyWidth.value=r;const o=this.store.states.fixedColumns.value;if(o.length>0){let s=0;o.forEach(u=>{s+=Number(u.realWidth||u.width)}),this.fixedWidth.value=s}const i=this.store.states.rightFixedColumns.value;if(i.length>0){let s=0;i.forEach(u=>{s+=Number(u.realWidth||u.width)}),this.rightFixedWidth.value=s}this.notifyObservers("columns")}addObserver(t){this.observers.push(t)}removeObserver(t){const n=this.observers.indexOf(t);n!==-1&&this.observers.splice(n,1)}notifyObservers(t){this.observers.forEach(r=>{var a,l;switch(t){case"columns":(a=r.state)==null||a.onColumnsChange(this);break;case"scrollable":(l=r.state)==null||l.onScrollableChange(this);break;default:throw new Error(`Table Layout don't have event ${t}.`)}})}}const{CheckboxGroup:Wve}=Aa,kve=$({name:"ElTableFilterPanel",components:{ElCheckbox:Aa,ElCheckboxGroup:Wve,ElScrollbar:Cl,ElTooltip:Xr,ElIcon:it,ArrowDown:Lo,ArrowUp:Uv},directives:{ClickOutside:Po},props:{placement:{type:String,default:"bottom-start"},store:{type:Object},column:{type:Object},upDataColumn:{type:Function}},setup(e){const t=Tt(),{t:n}=It(),r=ze("table-filter"),a=t==null?void 0:t.parent;a.filterPanels.value[e.column.id]||(a.filterPanels.value[e.column.id]=t);const l=J(!1),o=J(null),i=X(()=>e.column&&e.column.filters),s=X({get:()=>{var W;return(((W=e.column)==null?void 0:W.filteredValue)||[])[0]},set:W=>{u.value&&(typeof W<"u"&&W!==null?u.value.splice(0,1,W):u.value.splice(0,1))}}),u=X({get(){return e.column?e.column.filteredValue||[]:[]},set(W){e.column&&e.upDataColumn("filteredValue",W)}}),d=X(()=>e.column?e.column.filterMultiple:!0),f=W=>W.value===s.value,p=()=>{l.value=!1},b=W=>{W.stopPropagation(),l.value=!l.value},A=()=>{l.value=!1},h=()=>{S(u.value),p()},m=()=>{u.value=[],S(u.value),p()},v=W=>{s.value=W,S(typeof W<"u"&&W!==null?u.value:[]),p()},S=W=>{e.store.commit("filterChange",{column:e.column,values:W}),e.store.updateAllSelected()};Ve(l,W=>{e.column&&e.upDataColumn("filterOpened",W)},{immediate:!0});const y=X(()=>{var W,k;return(k=(W=o.value)==null?void 0:W.popperRef)==null?void 0:k.contentRef});return{tooltipVisible:l,multiple:d,filteredValue:u,filterValue:s,filters:i,handleConfirm:h,handleReset:m,handleSelect:v,isActive:f,t:n,ns:r,showFilterPanel:b,hideFilterPanel:A,popperPaneRef:y,tooltip:o}}}),Vve={key:0},Pve=["disabled"],Tve=["label","onClick"];function Kve(e,t,n,r,a,l){const o=rt("el-checkbox"),i=rt("el-checkbox-group"),s=rt("el-scrollbar"),u=rt("arrow-up"),d=rt("arrow-down"),f=rt("el-icon"),p=rt("el-tooltip"),b=ho("click-outside");return K(),ie(p,{ref:"tooltip",visible:e.tooltipVisible,offset:0,placement:e.placement,"show-arrow":!1,"stop-popper-mouse-event":!1,teleported:"",effect:"light",pure:"","popper-class":e.ns.b(),persistent:""},{content:B(()=>[e.multiple?(K(),F("div",Vve,[z("div",{class:q(e.ns.e("content"))},[C(s,{"wrap-class":e.ns.e("wrap")},{default:B(()=>[C(i,{modelValue:e.filteredValue,"onUpdate:modelValue":t[0]||(t[0]=A=>e.filteredValue=A),class:q(e.ns.e("checkbox-group"))},{default:B(()=>[(K(!0),F(Qe,null,Nt(e.filters,A=>(K(),ie(o,{key:A.value,label:A.value},{default:B(()=>[Xt(je(A.text),1)]),_:2},1032,["label"]))),128))]),_:1},8,["modelValue","class"])]),_:1},8,["wrap-class"])],2),z("div",{class:q(e.ns.e("bottom"))},[z("button",{class:q({[e.ns.is("disabled")]:e.filteredValue.length===0}),disabled:e.filteredValue.length===0,type:"button",onClick:t[1]||(t[1]=(...A)=>e.handleConfirm&&e.handleConfirm(...A))},je(e.t("el.table.confirmFilter")),11,Pve),z("button",{type:"button",onClick:t[2]||(t[2]=(...A)=>e.handleReset&&e.handleReset(...A))},je(e.t("el.table.resetFilter")),1)],2)])):(K(),F("ul",{key:1,class:q(e.ns.e("list"))},[z("li",{class:q([e.ns.e("list-item"),{[e.ns.is("active")]:e.filterValue===void 0||e.filterValue===null}]),onClick:t[3]||(t[3]=A=>e.handleSelect(null))},je(e.t("el.table.clearFilter")),3),(K(!0),F(Qe,null,Nt(e.filters,A=>(K(),F("li",{key:A.value,class:q([e.ns.e("list-item"),e.ns.is("active",e.isActive(A))]),label:A.value,onClick:h=>e.handleSelect(A.value)},je(A.text),11,Tve))),128))],2))]),default:B(()=>[Vt((K(),F("span",{class:q([`${e.ns.namespace.value}-table__column-filter-trigger`,`${e.ns.namespace.value}-none-outline`]),onClick:t[4]||(t[4]=(...A)=>e.showFilterPanel&&e.showFilterPanel(...A))},[C(f,null,{default:B(()=>[e.column.filterOpened?(K(),ie(u,{key:0})):(K(),ie(d,{key:1}))]),_:1})],2)),[[b,e.hideFilterPanel,e.popperPaneRef]])]),_:1},8,["visible","placement","popper-class"])}var Nve=Be(kve,[["render",Kve],["__file","/home/runner/work/element-plus/element-plus/packages/components/table/src/filter-panel.vue"]]);function aK(e){const t=Tt();td(()=>{n.value.addObserver(t)}),At(()=>{r(n.value),a(n.value)}),la(()=>{r(n.value),a(n.value)}),mr(()=>{n.value.removeObserver(t)});const n=X(()=>{const l=e.layout;if(!l)throw new Error("Can not find table layout.");return l}),r=l=>{var o;const i=((o=e.vnode.el)==null?void 0:o.querySelectorAll("colgroup > col"))||[];if(!i.length)return;const s=l.getFlattenColumns(),u={};s.forEach(d=>{u[d.id]=d});for(let d=0,f=i.length;d<f;d++){const p=i[d],b=p.getAttribute("name"),A=u[b];A&&p.setAttribute("width",A.realWidth||A.width)}},a=l=>{var o,i;const s=((o=e.vnode.el)==null?void 0:o.querySelectorAll("colgroup > col[name=gutter]"))||[];for(let d=0,f=s.length;d<f;d++)s[d].setAttribute("width",l.scrollY.value?l.gutterWidth:"0");const u=((i=e.vnode.el)==null?void 0:i.querySelectorAll("th.gutter"))||[];for(let d=0,f=u.length;d<f;d++){const p=u[d];p.style.width=l.scrollY.value?`${l.gutterWidth}px`:"0",p.style.display=l.scrollY.value?"":"none"}};return{tableLayout:n.value,onColumnsChange:r,onScrollableChange:a}}const ul=Symbol("ElTable");function xve(e,t){const n=Tt(),r=tt(ul),a=h=>{h.stopPropagation()},l=(h,m)=>{!m.filters&&m.sortable?A(h,m,!1):m.filterable&&!m.sortable&&a(h),r==null||r.emit("header-click",m,h)},o=(h,m)=>{r==null||r.emit("header-contextmenu",m,h)},i=J(null),s=J(!1),u=J({}),d=(h,m)=>{if(!!Mt&&!(m.children&&m.children.length>0)&&i.value&&e.border){s.value=!0;const v=r;t("set-drag-visible",!0);const y=(v==null?void 0:v.vnode.el).getBoundingClientRect().left,W=n.vnode.el.querySelector(`th.${m.id}`),k=W.getBoundingClientRect(),V=k.left-y+30;Ea(W,"noclick"),u.value={startMouseLeft:h.clientX,startLeft:k.right-y,startColumnLeft:k.left-y,tableLeft:y};const T=v==null?void 0:v.refs.resizeProxy;T.style.left=`${u.value.startLeft}px`,document.onselectstart=function(){return!1},document.ondragstart=function(){return!1};const P=g=>{const j=g.clientX-u.value.startMouseLeft,L=u.value.startLeft+j;T.style.left=`${Math.max(V,L)}px`},x=()=>{if(s.value){const{startColumnLeft:g,startLeft:j}=u.value,w=Number.parseInt(T.style.left,10)-g;m.width=m.realWidth=w,v==null||v.emit("header-dragend",m.width,j-g,m,h),requestAnimationFrame(()=>{e.store.scheduleLayout(!1,!0)}),document.body.style.cursor="",s.value=!1,i.value=null,u.value={},t("set-drag-visible",!1)}document.removeEventListener("mousemove",P),document.removeEventListener("mouseup",x),document.onselectstart=null,document.ondragstart=null,setTimeout(()=>{Hr(W,"noclick")},0)};document.addEventListener("mousemove",P),document.addEventListener("mouseup",x)}},f=(h,m)=>{if(m.children&&m.children.length>0)return;const v=h.target;if(!ha(v))return;const S=v==null?void 0:v.closest("th");if(!(!m||!m.resizable)&&!s.value&&e.border){const y=S.getBoundingClientRect(),W=document.body.style;y.width>12&&y.right-h.pageX<8?(W.cursor="col-resize",La(S,"is-sortable")&&(S.style.cursor="col-resize"),i.value=m):s.value||(W.cursor="",La(S,"is-sortable")&&(S.style.cursor="pointer"),i.value=null)}},p=()=>{!Mt||(document.body.style.cursor="")},b=({order:h,sortOrders:m})=>{if(h==="")return m[0];const v=m.indexOf(h||null);return m[v>m.length-2?0:v+1]},A=(h,m,v)=>{var S;h.stopPropagation();const y=m.order===v?null:v||b(m),W=(S=h.target)==null?void 0:S.closest("th");if(W&&La(W,"noclick")){Hr(W,"noclick");return}if(!m.sortable)return;const k=e.store.states;let V=k.sortProp.value,T;const P=k.sortingColumn.value;(P!==m||P===m&&P.order===null)&&(P&&(P.order=null),k.sortingColumn.value=m,V=m.property),y?T=m.order=y:T=m.order=null,k.sortProp.value=V,k.sortOrder.value=T,r==null||r.store.commit("changeSortCondition")};return{handleHeaderClick:l,handleHeaderContextMenu:o,handleMouseDown:d,handleMouseMove:f,handleMouseOut:p,handleSortClick:A,handleFilterClick:a}}function Xve(e){const t=tt(ul),n=ze("table");return{getHeaderRowStyle:i=>{const s=t==null?void 0:t.props.headerRowStyle;return typeof s=="function"?s.call(null,{rowIndex:i}):s},getHeaderRowClass:i=>{const s=[],u=t==null?void 0:t.props.headerRowClassName;return typeof u=="string"?s.push(u):typeof u=="function"&&s.push(u.call(null,{rowIndex:i})),s.join(" ")},getHeaderCellStyle:(i,s,u,d)=>{var f;let p=(f=t==null?void 0:t.props.headerCellStyle)!=null?f:{};typeof p=="function"&&(p=p.call(null,{rowIndex:i,columnIndex:s,row:u,column:d}));const b=g2(s,d.fixed,e.store,u);return Qs(b,"left"),Qs(b,"right"),Object.assign({},p,b)},getHeaderCellClass:(i,s,u,d)=>{const f=X2(n.b(),s,d.fixed,e.store,u),p=[d.id,d.order,d.headerAlign,d.className,d.labelClassName,...f];d.children||p.push("is-leaf"),d.sortable&&p.push("is-sortable");const b=t==null?void 0:t.props.headerCellClassName;return typeof b=="string"?p.push(b):typeof b=="function"&&p.push(b.call(null,{rowIndex:i,columnIndex:s,row:u,column:d})),p.push(n.e("cell")),p.filter(A=>Boolean(A)).join(" ")}}}const lK=e=>{const t=[];return e.forEach(n=>{n.children?(t.push(n),t.push.apply(t,lK(n.children))):t.push(n)}),t},gve=e=>{let t=1;const n=(l,o)=>{if(o&&(l.level=o.level+1,t<l.level&&(t=l.level)),l.children){let i=0;l.children.forEach(s=>{n(s,l),i+=s.colSpan}),l.colSpan=i}else l.colSpan=1};e.forEach(l=>{l.level=1,n(l,void 0)});const r=[];for(let l=0;l<t;l++)r.push([]);return lK(e).forEach(l=>{l.children?(l.rowSpan=1,l.children.forEach(o=>o.isSubColumn=!0)):l.rowSpan=t-l.level+1,r[l.level-1].push(l)}),r};function wve(e){const t=tt(ul),n=X(()=>gve(e.store.states.originColumns.value));return{isGroup:X(()=>{const l=n.value.length>1;return l&&t&&(t.state.isGroup.value=!0),l}),toggleAllSelection:l=>{l.stopPropagation(),t==null||t.store.commit("toggleAllSelection")},columnRows:n}}var jve=$({name:"ElTableHeader",components:{ElCheckbox:Aa},props:{fixed:{type:String,default:""},store:{required:!0,type:Object},border:Boolean,defaultSort:{type:Object,default:()=>({prop:"",order:""})}},setup(e,{emit:t}){const n=Tt(),r=tt(ul),a=ze("table"),l=J({}),{onColumnsChange:o,onScrollableChange:i}=aK(r);At(async()=>{await at(),await at();const{prop:V,order:T}=e.defaultSort;r==null||r.store.commit("sort",{prop:V,order:T,init:!0})});const{handleHeaderClick:s,handleHeaderContextMenu:u,handleMouseDown:d,handleMouseMove:f,handleMouseOut:p,handleSortClick:b,handleFilterClick:A}=xve(e,t),{getHeaderRowStyle:h,getHeaderRowClass:m,getHeaderCellStyle:v,getHeaderCellClass:S}=Xve(e),{isGroup:y,toggleAllSelection:W,columnRows:k}=wve(e);return n.state={onColumnsChange:o,onScrollableChange:i},n.filterPanels=l,{ns:a,filterPanels:l,onColumnsChange:o,onScrollableChange:i,columnRows:k,getHeaderRowClass:m,getHeaderRowStyle:h,getHeaderCellClass:S,getHeaderCellStyle:v,handleHeaderClick:s,handleHeaderContextMenu:u,handleMouseDown:d,handleMouseMove:f,handleMouseOut:p,handleSortClick:b,handleFilterClick:A,isGroup:y,toggleAllSelection:W}},render(){const{ns:e,isGroup:t,columnRows:n,getHeaderCellStyle:r,getHeaderCellClass:a,getHeaderRowClass:l,getHeaderRowStyle:o,handleHeaderClick:i,handleHeaderContextMenu:s,handleMouseDown:u,handleMouseMove:d,handleSortClick:f,handleMouseOut:p,store:b,$parent:A}=this;let h=1;return st("thead",{class:{[e.is("group")]:t}},n.map((m,v)=>st("tr",{class:l(v),key:v,style:o(v)},m.map((S,y)=>(S.rowSpan>h&&(h=S.rowSpan),st("th",{class:a(v,y,m,S),colspan:S.colSpan,key:`${S.id}-thead`,rowspan:S.rowSpan,style:r(v,y,m,S),onClick:W=>i(W,S),onContextmenu:W=>s(W,S),onMousedown:W=>u(W,S),onMousemove:W=>d(W,S),onMouseout:p},[st("div",{class:["cell",S.filteredValue&&S.filteredValue.length>0?"highlight":""]},[S.renderHeader?S.renderHeader({column:S,$index:y,store:b,_self:A}):S.label,S.sortable&&st("span",{onClick:W=>f(W,S),class:"caret-wrapper"},[st("i",{onClick:W=>f(W,S,"ascending"),class:"sort-caret ascending"}),st("i",{onClick:W=>f(W,S,"descending"),class:"sort-caret descending"})]),S.filterable&&st(Nve,{store:b,placement:S.filterPlacement||"bottom-start",column:S,upDataColumn:(W,k)=>{S[W]=k}})])]))))))}});function Lve(e){const t=tt(ul),n=J(""),r=J(st("div")),{nextZIndex:a}=su(),l=(A,h,m)=>{var v;const S=t,y=Yb(A);let W;const k=(v=S==null?void 0:S.vnode.el)==null?void 0:v.dataset.prefix;y&&(W=iA({columns:e.store.states.columns.value},y,k),W&&(S==null||S.emit(`cell-${m}`,h,W,y,A))),S==null||S.emit(`row-${m}`,h,W,A)},o=(A,h)=>{l(A,h,"dblclick")},i=(A,h)=>{e.store.commit("setCurrentRow",h),l(A,h,"click")},s=(A,h)=>{l(A,h,"contextmenu")},u=xr(A=>{e.store.commit("setHoverRow",A)},30),d=xr(()=>{e.store.commit("setHoverRow",null)},30),f=A=>{const h=window.getComputedStyle(A,null),m=Number.parseInt(h.paddingLeft,10)||0,v=Number.parseInt(h.paddingRight,10)||0,S=Number.parseInt(h.paddingTop,10)||0,y=Number.parseInt(h.paddingBottom,10)||0;return{left:m,right:v,top:S,bottom:y}};return{handleDoubleClick:o,handleClick:i,handleContextMenu:s,handleMouseEnter:u,handleMouseLeave:d,handleCellMouseEnter:(A,h,m)=>{var v;const S=t,y=Yb(A),W=(v=S==null?void 0:S.vnode.el)==null?void 0:v.dataset.prefix;if(y){const U=iA({columns:e.store.states.columns.value},y,W),H=S.hoverState={cell:y,column:U,row:h};S==null||S.emit("cell-mouse-enter",H.row,H.column,H.cell,A)}if(!m)return;const k=A.target.querySelector(".cell");if(!(La(k,`${W}-tooltip`)&&k.childNodes.length))return;const V=document.createRange();V.setStart(k,0),V.setEnd(k,k.childNodes.length);let T=V.getBoundingClientRect().width,P=V.getBoundingClientRect().height;T-Math.floor(T)<.001&&(T=Math.floor(T)),P-Math.floor(P)<.001&&(P=Math.floor(P));const{top:j,left:L,right:w,bottom:R}=f(k),Z=L+w,G=j+R;(T+Z>k.offsetWidth||P+G>k.offsetHeight||k.scrollWidth>k.offsetWidth)&&dve(t==null?void 0:t.refs.tableWrapper,y,y.innerText||y.textContent,a,m)},handleCellMouseLeave:A=>{if(!Yb(A))return;const m=t==null?void 0:t.hoverState;t==null||t.emit("cell-mouse-leave",m==null?void 0:m.row,m==null?void 0:m.column,m==null?void 0:m.cell,A)},tooltipContent:n,tooltipTrigger:r}}function qve(e){const t=tt(ul),n=ze("table");return{getRowStyle:(u,d)=>{const f=t==null?void 0:t.props.rowStyle;return typeof f=="function"?f.call(null,{row:u,rowIndex:d}):f||null},getRowClass:(u,d)=>{const f=[n.e("row")];(t==null?void 0:t.props.highlightCurrentRow)&&u===e.store.states.currentRow.value&&f.push("current-row"),e.stripe&&d%2===1&&f.push(n.em("row","striped"));const p=t==null?void 0:t.props.rowClassName;return typeof p=="string"?f.push(p):typeof p=="function"&&f.push(p.call(null,{row:u,rowIndex:d})),f},getCellStyle:(u,d,f,p)=>{const b=t==null?void 0:t.props.cellStyle;let A=b!=null?b:{};typeof b=="function"&&(A=b.call(null,{rowIndex:u,columnIndex:d,row:f,column:p}));const h=g2(d,e==null?void 0:e.fixed,e.store);return Qs(h,"left"),Qs(h,"right"),Object.assign({},A,h)},getCellClass:(u,d,f,p,b)=>{const A=X2(n.b(),d,e==null?void 0:e.fixed,e.store,void 0,b),h=[p.id,p.align,p.className,...A],m=t==null?void 0:t.props.cellClassName;return typeof m=="string"?h.push(m):typeof m=="function"&&h.push(m.call(null,{rowIndex:u,columnIndex:d,row:f,column:p})),h.push(n.e("cell")),h.filter(v=>Boolean(v)).join(" ")},getSpan:(u,d,f,p)=>{let b=1,A=1;const h=t==null?void 0:t.props.spanMethod;if(typeof h=="function"){const m=h({row:u,column:d,rowIndex:f,columnIndex:p});Array.isArray(m)?(b=m[0],A=m[1]):typeof m=="object"&&(b=m.rowspan,A=m.colspan)}return{rowspan:b,colspan:A}},getColspanRealWidth:(u,d,f)=>{if(d<1)return u[f].realWidth;const p=u.map(({realWidth:b,width:A})=>b||A).slice(f,f+d);return Number(p.reduce((b,A)=>Number(b)+Number(A),-1))}}}function Uve(e){const t=tt(ul),n=ze("table"),{handleDoubleClick:r,handleClick:a,handleContextMenu:l,handleMouseEnter:o,handleMouseLeave:i,handleCellMouseEnter:s,handleCellMouseLeave:u,tooltipContent:d,tooltipTrigger:f}=Lve(e),{getRowStyle:p,getRowClass:b,getCellStyle:A,getCellClass:h,getSpan:m,getColspanRealWidth:v}=qve(e),S=X(()=>e.store.states.columns.value.findIndex(({type:T})=>T==="default")),y=(T,P)=>{const x=t.props.rowKey;return x?lr(T,x):P},W=(T,P,x,g=!1)=>{const{tooltipEffect:j,tooltipOptions:L,store:w}=e,{indent:R,columns:Z}=w.states,G=b(T,P);let U=!0;return x&&(G.push(n.em("row",`level-${x.level}`)),U=x.display),st("tr",{style:[U?null:{display:"none"},p(T,P)],class:G,key:y(T,P),onDblclick:O=>r(O,T),onClick:O=>a(O,T),onContextmenu:O=>l(O,T),onMouseenter:()=>o(P),onMouseleave:i},Z.value.map((O,D)=>{const{rowspan:Y,colspan:Q}=m(T,O,P,D);if(!Y||!Q)return null;const ee=Object.assign({},O);ee.realWidth=v(Z.value,Q,D);const oe={store:e.store,_self:e.context||t,column:ee,row:T,$index:P,cellIndex:D,expanded:g};D===S.value&&x&&(oe.treeNode={indent:x.level*R.value,level:x.level},typeof x.expanded=="boolean"&&(oe.treeNode.expanded=x.expanded,"loading"in x&&(oe.treeNode.loading=x.loading),"noLazyChildren"in x&&(oe.treeNode.noLazyChildren=x.noLazyChildren)));const Ne=`${P},${D}`,pe=ee.columnKey||ee.rawColumnKey||"",me=k(D,O,oe),ce=O.showOverflowTooltip&&jk({effect:j},L,O.showOverflowTooltip);return st("td",{style:A(P,D,T,O),class:h(P,D,T,O,Q-1),key:`${pe}${Ne}`,rowspan:Y,colspan:Q,onMouseenter:Le=>s(Le,T,ce),onMouseleave:u},[me])}))},k=(T,P,x)=>P.renderCell(x);return{wrappedRowRender:(T,P)=>{const x=e.store,{isRowExpanded:g,assertRowKey:j}=x,{treeData:L,lazyTreeNodeMap:w,childrenColumnName:R,rowKey:Z}=x.states,G=x.states.columns.value;if(G.some(({type:H})=>H==="expand")){const H=g(T),O=W(T,P,void 0,H),D=t.renderExpanded;return H?D?[[O,st("tr",{key:`expanded-row__${O.key}`},[st("td",{colspan:G.length,class:`${n.e("cell")} ${n.e("expanded-cell")}`},[D({row:T,$index:P,store:x,expanded:H})])])]]:(console.error("[Element Error]renderExpanded is required."),O):[[O]]}else if(Object.keys(L.value).length){j();const H=lr(T,Z.value);let O=L.value[H],D=null;O&&(D={expanded:O.expanded,level:O.level,display:!0},typeof O.lazy=="boolean"&&(typeof O.loaded=="boolean"&&O.loaded&&(D.noLazyChildren=!(O.children&&O.children.length)),D.loading=O.loading));const Y=[W(T,P,D)];if(O){let Q=0;const ee=(Ne,pe)=>{!(Ne&&Ne.length&&pe)||Ne.forEach(me=>{const ce={display:pe.display&&pe.expanded,level:pe.level+1,expanded:!1,noLazyChildren:!1,loading:!1},Le=lr(me,Z.value);if(Le==null)throw new Error("For nested data item, row-key is required.");if(O={...L.value[Le]},O&&(ce.expanded=O.expanded,O.level=O.level||ce.level,O.display=!!(O.expanded&&ce.display),typeof O.lazy=="boolean"&&(typeof O.loaded=="boolean"&&O.loaded&&(ce.noLazyChildren=!(O.children&&O.children.length)),ce.loading=O.loading)),Q++,Y.push(W(me,P+Q,ce)),O){const Te=w.value[Le]||me[R.value];ee(Te,O)}})};O.display=!0;const oe=w.value[H]||T[R.value];ee(oe,O)}return Y}else return W(T,P,void 0)},tooltipContent:d,tooltipTrigger:f}}const Ove={store:{required:!0,type:Object},stripe:Boolean,tooltipEffect:String,tooltipOptions:{type:Object},context:{default:()=>({}),type:Object},rowClassName:[String,Function],rowStyle:[Object,Function],fixed:{type:String,default:""},highlight:Boolean};var Rve=$({name:"ElTableBody",props:Ove,setup(e){const t=Tt(),n=tt(ul),r=ze("table"),{wrappedRowRender:a,tooltipContent:l,tooltipTrigger:o}=Uve(e),{onColumnsChange:i,onScrollableChange:s}=aK(n);return Ve(e.store.states.hoverRow,(u,d)=>{!e.store.states.isComplex.value||!Mt||Zs(()=>{const f=t==null?void 0:t.vnode.el,p=Array.from((f==null?void 0:f.children)||[]).filter(h=>h==null?void 0:h.classList.contains(`${r.e("row")}`)),b=p[d],A=p[u];b&&Hr(b,"hover-row"),A&&Ea(A,"hover-row")})}),mr(()=>{var u;(u=vl)==null||u()}),{ns:r,onColumnsChange:i,onScrollableChange:s,wrappedRowRender:a,tooltipContent:l,tooltipTrigger:o}},render(){const{wrappedRowRender:e,store:t}=this,n=t.states.data.value||[];return st("tbody",{tabIndex:-1},[n.reduce((r,a)=>r.concat(e(a,r.length)),[])])}});function Jve(){const e=tt(ul),t=e==null?void 0:e.store,n=X(()=>t.states.fixedLeafColumnsLength.value),r=X(()=>t.states.rightFixedColumns.value.length),a=X(()=>t.states.columns.value.length),l=X(()=>t.states.fixedColumns.value.length),o=X(()=>t.states.rightFixedColumns.value.length);return{leftFixedLeafCount:n,rightFixedLeafCount:r,columnsCount:a,leftFixedCount:l,rightFixedCount:o,columns:t.states.columns}}function Fve(e){const{columns:t}=Jve(),n=ze("table");return{getCellClasses:(l,o)=>{const i=l[o],s=[n.e("cell"),i.id,i.align,i.labelClassName,...X2(n.b(),o,i.fixed,e.store)];return i.className&&s.push(i.className),i.children||s.push(n.is("leaf")),s},getCellStyles:(l,o)=>{const i=g2(o,l.fixed,e.store);return Qs(i,"left"),Qs(i,"right"),i},columns:t}}var zve=$({name:"ElTableFooter",props:{fixed:{type:String,default:""},store:{required:!0,type:Object},summaryMethod:Function,sumText:String,border:Boolean,defaultSort:{type:Object,default:()=>({prop:"",order:""})}},setup(e){const{getCellClasses:t,getCellStyles:n,columns:r}=Fve(e);return{ns:ze("table"),getCellClasses:t,getCellStyles:n,columns:r}},render(){const{columns:e,getCellStyles:t,getCellClasses:n,summaryMethod:r,sumText:a}=this,l=this.store.states.data.value;let o=[];return r?o=r({columns:e,data:l}):e.forEach((i,s)=>{if(s===0){o[s]=a;return}const u=l.map(b=>Number(b[i.property])),d=[];let f=!0;u.forEach(b=>{if(!Number.isNaN(+b)){f=!1;const A=`${b}`.split(".")[1];d.push(A?A.length:0)}});const p=Math.max.apply(null,d);f?o[s]="":o[s]=u.reduce((b,A)=>{const h=Number(A);return Number.isNaN(+h)?b:Number.parseFloat((b+A).toFixed(Math.min(p,20)))},0)}),st(st("tfoot",[st("tr",{},[...e.map((i,s)=>st("td",{key:s,colspan:i.colSpan,rowspan:i.rowSpan,class:n(e,s),style:t(i,s)},[st("div",{class:["cell",i.labelClassName]},[o[s]])]))])]))}});function Hve(e){return{setCurrentRow:d=>{e.commit("setCurrentRow",d)},getSelectionRows:()=>e.getSelectionRows(),toggleRowSelection:(d,f)=>{e.toggleRowSelection(d,f,!1),e.updateAllSelected()},clearSelection:()=>{e.clearSelection()},clearFilter:d=>{e.clearFilter(d)},toggleAllSelection:()=>{e.commit("toggleAllSelection")},toggleRowExpansion:(d,f)=>{e.toggleRowExpansionAdapter(d,f)},clearSort:()=>{e.clearSort()},sort:(d,f)=>{e.commit("sort",{prop:d,order:f})}}}function Zve(e,t,n,r){const a=J(!1),l=J(null),o=J(!1),i=O=>{o.value=O},s=J({width:null,height:null,headerHeight:null}),u=J(!1),d={display:"inline-block",verticalAlign:"middle"},f=J(),p=J(0),b=J(0),A=J(0),h=J(0),m=J(0);Dn(()=>{t.setHeight(e.height)}),Dn(()=>{t.setMaxHeight(e.maxHeight)}),Ve(()=>[e.currentRowKey,n.states.rowKey],([O,D])=>{!c(D)||!c(O)||n.setCurrentRowKey(`${O}`)},{immediate:!0}),Ve(()=>e.data,O=>{r.store.commit("setData",O)},{immediate:!0,deep:!0}),Dn(()=>{e.expandRowKeys&&n.setExpandRowKeysAdapter(e.expandRowKeys)});const v=()=>{r.store.commit("setHoverRow",null),r.hoverState&&(r.hoverState=null)},S=(O,D)=>{const{pixelX:Y,pixelY:Q}=D;Math.abs(Y)>=Math.abs(Q)&&(r.refs.bodyWrapper.scrollLeft+=D.pixelX/5)},y=X(()=>e.height||e.maxHeight||n.states.fixedColumns.value.length>0||n.states.rightFixedColumns.value.length>0),W=X(()=>({width:t.bodyWidth.value?`${t.bodyWidth.value}px`:""})),k=()=>{y.value&&t.updateElsHeight(),t.updateColumnsWidth(),requestAnimationFrame(x)};At(async()=>{await at(),n.updateColumns(),g(),requestAnimationFrame(k);const O=r.vnode.el,D=r.refs.headerWrapper;e.flexible&&O&&O.parentElement&&(O.parentElement.style.minWidth="0"),s.value={width:f.value=O.offsetWidth,height:O.offsetHeight,headerHeight:e.showHeader&&D?D.offsetHeight:null},n.states.columns.value.forEach(Y=>{Y.filteredValue&&Y.filteredValue.length&&r.store.commit("filterChange",{column:Y,values:Y.filteredValue,silent:!0})}),r.$ready=!0});const V=(O,D)=>{if(!O)return;const Y=Array.from(O.classList).filter(Q=>!Q.startsWith("is-scrolling-"));Y.push(t.scrollX.value?D:"is-scrolling-none"),O.className=Y.join(" ")},T=O=>{const{tableWrapper:D}=r.refs;V(D,O)},P=O=>{const{tableWrapper:D}=r.refs;return!!(D&&D.classList.contains(O))},x=function(){if(!r.refs.scrollBarRef)return;if(!t.scrollX.value){const pe="is-scrolling-none";P(pe)||T(pe);return}const O=r.refs.scrollBarRef.wrapRef;if(!O)return;const{scrollLeft:D,offsetWidth:Y,scrollWidth:Q}=O,{headerWrapper:ee,footerWrapper:oe}=r.refs;ee&&(ee.scrollLeft=D),oe&&(oe.scrollLeft=D);const Ne=Q-Y-1;D>=Ne?T("is-scrolling-right"):T(D===0?"is-scrolling-left":"is-scrolling-middle")},g=()=>{!r.refs.scrollBarRef||(r.refs.scrollBarRef.wrapRef&&hn(r.refs.scrollBarRef.wrapRef,"scroll",x,{passive:!0}),e.fit?hr(r.vnode.el,j):hn(window,"resize",j),hr(r.refs.bodyWrapper,()=>{var O,D;j(),(D=(O=r.refs)==null?void 0:O.scrollBarRef)==null||D.update()}))},j=()=>{var O,D,Y,Q;const ee=r.vnode.el;if(!r.$ready||!ee)return;let oe=!1;const{width:Ne,height:pe,headerHeight:me}=s.value,ce=f.value=ee.offsetWidth;Ne!==ce&&(oe=!0);const Le=ee.offsetHeight;(e.height||y.value)&&pe!==Le&&(oe=!0);const Te=e.tableLayout==="fixed"?r.refs.headerWrapper:(O=r.refs.tableHeaderRef)==null?void 0:O.$el;e.showHeader&&(Te==null?void 0:Te.offsetHeight)!==me&&(oe=!0),p.value=((D=r.refs.tableWrapper)==null?void 0:D.scrollHeight)||0,A.value=(Te==null?void 0:Te.scrollHeight)||0,h.value=((Y=r.refs.footerWrapper)==null?void 0:Y.offsetHeight)||0,m.value=((Q=r.refs.appendWrapper)==null?void 0:Q.offsetHeight)||0,b.value=p.value-A.value-h.value-m.value,oe&&(s.value={width:ce,height:Le,headerHeight:e.showHeader&&(Te==null?void 0:Te.offsetHeight)||0},k())},L=Cn(),w=X(()=>{const{bodyWidth:O,scrollY:D,gutterWidth:Y}=t;return O.value?`${O.value-(D.value?Y:0)}px`:""}),R=X(()=>e.maxHeight?"fixed":e.tableLayout),Z=X(()=>{if(e.data&&e.data.length)return null;let O="100%";e.height&&b.value&&(O=`${b.value}px`);const D=f.value;return{width:D?`${D}px`:"",height:O}}),G=X(()=>e.height?{height:Number.isNaN(Number(e.height))?e.height:`${e.height}px`}:e.maxHeight?{maxHeight:Number.isNaN(Number(e.maxHeight))?e.maxHeight:`${e.maxHeight}px`}:{}),U=X(()=>e.height?{height:"100%"}:e.maxHeight?Number.isNaN(Number(e.maxHeight))?{maxHeight:`calc(${e.maxHeight} - ${A.value+h.value}px)`}:{maxHeight:`${e.maxHeight-A.value-h.value}px`}:{});return{isHidden:a,renderExpanded:l,setDragVisible:i,isGroup:u,handleMouseLeave:v,handleHeaderFooterMousewheel:S,tableSize:L,emptyBlockStyle:Z,handleFixedMousewheel:(O,D)=>{const Y=r.refs.bodyWrapper;if(Math.abs(D.spinY)>0){const Q=Y.scrollTop;D.pixelY<0&&Q!==0&&O.preventDefault(),D.pixelY>0&&Y.scrollHeight-Y.clientHeight>Q&&O.preventDefault(),Y.scrollTop+=Math.ceil(D.pixelY/5)}else Y.scrollLeft+=Math.ceil(D.pixelX/5)},resizeProxyVisible:o,bodyWidth:w,resizeState:s,doLayout:k,tableBodyStyles:W,tableLayout:R,scrollbarViewStyle:d,tableInnerStyle:G,scrollbarStyle:U}}function Gve(e){const t=J(),n=()=>{const a=e.vnode.el.querySelector(".hidden-columns"),l={childList:!0,subtree:!0},o=e.store.states.updateOrderFns;t.value=new MutationObserver(()=>{o.forEach(i=>i())}),t.value.observe(a,l)};At(()=>{n()}),mr(()=>{var r;(r=t.value)==null||r.disconnect()})}var Cve={data:{type:Array,default:()=>[]},size:ur,width:[String,Number],height:[String,Number],maxHeight:[String,Number],fit:{type:Boolean,default:!0},stripe:Boolean,border:Boolean,rowKey:[String,Function],showHeader:{type:Boolean,default:!0},showSummary:Boolean,sumText:String,summaryMethod:Function,rowClassName:[String,Function],rowStyle:[Object,Function],cellClassName:[String,Function],cellStyle:[Object,Function],headerRowClassName:[String,Function],headerRowStyle:[Object,Function],headerCellClassName:[String,Function],headerCellStyle:[Object,Function],highlightCurrentRow:Boolean,currentRowKey:[String,Number],emptyText:String,expandRowKeys:Array,defaultExpandAll:Boolean,defaultSort:Object,tooltipEffect:String,tooltipOptions:Object,spanMethod:Function,selectOnIndeterminate:{type:Boolean,default:!0},indent:{type:Number,default:16},treeProps:{type:Object,default:()=>({hasChildren:"hasChildren",children:"children"})},lazy:Boolean,load:Function,style:{type:Object,default:()=>({})},className:{type:String,default:""},tableLayout:{type:String,default:"fixed"},scrollbarAlwaysOn:{type:Boolean,default:!1},flexible:Boolean,showOverflowTooltip:[Boolean,Object]};function oK(e){const t=e.tableLayout==="auto";let n=e.columns||[];t&&n.every(a=>a.width===void 0)&&(n=[]);const r=a=>{const l={key:`${e.tableLayout}_${a.id}`,style:{},name:void 0};return t?l.style={width:`${a.width}px`}:l.name=a.id,l};return st("colgroup",{},n.map(a=>st("col",r(a))))}oK.props=["columns","tableLayout"];const Mve=()=>{const e=J(),t=(l,o)=>{const i=e.value;i&&i.scrollTo(l,o)},n=(l,o)=>{const i=e.value;i&&mt(o)&&["Top","Left"].includes(l)&&i[`setScroll${l}`](o)};return{scrollBarRef:e,scrollTo:t,setScrollTop:l=>n("Top",l),setScrollLeft:l=>n("Left",l)}};let Dve=1;const Eve=$({name:"ElTable",directives:{Mousewheel:Rte},components:{TableHeader:jve,TableBody:Rve,TableFooter:zve,ElScrollbar:Cl,hColgroup:oK},props:Cve,emits:["select","select-all","selection-change","cell-mouse-enter","cell-mouse-leave","cell-contextmenu","cell-click","cell-dblclick","row-click","row-contextmenu","row-dblclick","header-click","header-contextmenu","sort-change","filter-change","current-change","header-dragend","expand-change"],setup(e){const{t}=It(),n=ze("table"),r=Tt();zt(ul,r);const a=Sve(r,e);r.store=a;const l=new Ave({store:r.store,table:r,fit:e.fit,showHeader:e.showHeader});r.layout=l;const o=X(()=>(a.states.data.value||[]).length===0),{setCurrentRow:i,getSelectionRows:s,toggleRowSelection:u,clearSelection:d,clearFilter:f,toggleAllSelection:p,toggleRowExpansion:b,clearSort:A,sort:h}=Hve(a),{isHidden:m,renderExpanded:v,setDragVisible:S,isGroup:y,handleMouseLeave:W,handleHeaderFooterMousewheel:k,tableSize:V,emptyBlockStyle:T,handleFixedMousewheel:P,resizeProxyVisible:x,bodyWidth:g,resizeState:j,doLayout:L,tableBodyStyles:w,tableLayout:R,scrollbarViewStyle:Z,tableInnerStyle:G,scrollbarStyle:U}=Zve(e,l,a,r),{scrollBarRef:H,scrollTo:O,setScrollLeft:D,setScrollTop:Y}=Mve(),Q=xr(L,50),ee=`${n.namespace.value}-table_${Dve++}`;r.tableId=ee,r.state={isGroup:y,resizeState:j,doLayout:L,debouncedUpdateLayout:Q};const oe=X(()=>e.sumText||t("el.table.sumText")),Ne=X(()=>e.emptyText||t("el.table.emptyText"));return Gve(r),{ns:n,layout:l,store:a,handleHeaderFooterMousewheel:k,handleMouseLeave:W,tableId:ee,tableSize:V,isHidden:m,isEmpty:o,renderExpanded:v,resizeProxyVisible:x,resizeState:j,isGroup:y,bodyWidth:g,tableBodyStyles:w,emptyBlockStyle:T,debouncedUpdateLayout:Q,handleFixedMousewheel:P,setCurrentRow:i,getSelectionRows:s,toggleRowSelection:u,clearSelection:d,clearFilter:f,toggleAllSelection:p,toggleRowExpansion:b,clearSort:A,doLayout:L,sort:h,t,setDragVisible:S,context:r,computedSumText:oe,computedEmptyText:Ne,tableLayout:R,scrollbarViewStyle:Z,tableInnerStyle:G,scrollbarStyle:U,scrollBarRef:H,scrollTo:O,setScrollLeft:D,setScrollTop:Y}}}),Ive=["data-prefix"],Bve={ref:"hiddenColumns",class:"hidden-columns"};function Yve(e,t,n,r,a,l){const o=rt("hColgroup"),i=rt("table-header"),s=rt("table-body"),u=rt("table-footer"),d=rt("el-scrollbar"),f=ho("mousewheel");return K(),F("div",{ref:"tableWrapper",class:q([{[e.ns.m("fit")]:e.fit,[e.ns.m("striped")]:e.stripe,[e.ns.m("border")]:e.border||e.isGroup,[e.ns.m("hidden")]:e.isHidden,[e.ns.m("group")]:e.isGroup,[e.ns.m("fluid-height")]:e.maxHeight,[e.ns.m("scrollable-x")]:e.layout.scrollX.value,[e.ns.m("scrollable-y")]:e.layout.scrollY.value,[e.ns.m("enable-row-hover")]:!e.store.states.isComplex.value,[e.ns.m("enable-row-transition")]:(e.store.states.data.value||[]).length!==0&&(e.store.states.data.value||[]).length<100,"has-footer":e.showSummary},e.ns.m(e.tableSize),e.className,e.ns.b(),e.ns.m(`layout-${e.tableLayout}`)]),style:lt(e.style),"data-prefix":e.ns.namespace.value,onMouseleave:t[0]||(t[0]=(...p)=>e.handleMouseLeave&&e.handleMouseLeave(...p))},[z("div",{class:q(e.ns.e("inner-wrapper")),style:lt(e.tableInnerStyle)},[z("div",Bve,[ue(e.$slots,"default")],512),e.showHeader&&e.tableLayout==="fixed"?Vt((K(),F("div",{key:0,ref:"headerWrapper",class:q(e.ns.e("header-wrapper"))},[z("table",{ref:"tableHeader",class:q(e.ns.e("header")),style:lt(e.tableBodyStyles),border:"0",cellpadding:"0",cellspacing:"0"},[C(o,{columns:e.store.states.columns.value,"table-layout":e.tableLayout},null,8,["columns","table-layout"]),C(i,{ref:"tableHeaderRef",border:e.border,"default-sort":e.defaultSort,store:e.store,onSetDragVisible:e.setDragVisible},null,8,["border","default-sort","store","onSetDragVisible"])],6)],2)),[[f,e.handleHeaderFooterMousewheel]]):ae("v-if",!0),z("div",{ref:"bodyWrapper",class:q(e.ns.e("body-wrapper"))},[C(d,{ref:"scrollBarRef","view-style":e.scrollbarViewStyle,"wrap-style":e.scrollbarStyle,always:e.scrollbarAlwaysOn},{default:B(()=>[z("table",{ref:"tableBody",class:q(e.ns.e("body")),cellspacing:"0",cellpadding:"0",border:"0",style:lt({width:e.bodyWidth,tableLayout:e.tableLayout})},[C(o,{columns:e.store.states.columns.value,"table-layout":e.tableLayout},null,8,["columns","table-layout"]),e.showHeader&&e.tableLayout==="auto"?(K(),ie(i,{key:0,ref:"tableHeaderRef",class:q(e.ns.e("body-header")),border:e.border,"default-sort":e.defaultSort,store:e.store,onSetDragVisible:e.setDragVisible},null,8,["class","border","default-sort","store","onSetDragVisible"])):ae("v-if",!0),C(s,{context:e.context,highlight:e.highlightCurrentRow,"row-class-name":e.rowClassName,"tooltip-effect":e.tooltipEffect,"tooltip-options":e.tooltipOptions,"row-style":e.rowStyle,store:e.store,stripe:e.stripe},null,8,["context","highlight","row-class-name","tooltip-effect","tooltip-options","row-style","store","stripe"]),e.showSummary&&e.tableLayout==="auto"?(K(),ie(u,{key:1,class:q(e.ns.e("body-footer")),border:e.border,"default-sort":e.defaultSort,store:e.store,"sum-text":e.computedSumText,"summary-method":e.summaryMethod},null,8,["class","border","default-sort","store","sum-text","summary-method"])):ae("v-if",!0)],6),e.isEmpty?(K(),F("div",{key:0,ref:"emptyBlock",style:lt(e.emptyBlockStyle),class:q(e.ns.e("empty-block"))},[z("span",{class:q(e.ns.e("empty-text"))},[ue(e.$slots,"empty",{},()=>[Xt(je(e.computedEmptyText),1)])],2)],6)):ae("v-if",!0),e.$slots.append?(K(),F("div",{key:1,ref:"appendWrapper",class:q(e.ns.e("append-wrapper"))},[ue(e.$slots,"append")],2)):ae("v-if",!0)]),_:3},8,["view-style","wrap-style","always"])],2),e.showSummary&&e.tableLayout==="fixed"?Vt((K(),F("div",{key:1,ref:"footerWrapper",class:q(e.ns.e("footer-wrapper"))},[z("table",{class:q(e.ns.e("footer")),cellspacing:"0",cellpadding:"0",border:"0",style:lt(e.tableBodyStyles)},[C(o,{columns:e.store.states.columns.value,"table-layout":e.tableLayout},null,8,["columns","table-layout"]),C(u,{border:e.border,"default-sort":e.defaultSort,store:e.store,"sum-text":e.computedSumText,"summary-method":e.summaryMethod},null,8,["border","default-sort","store","sum-text","summary-method"])],6)],2)),[[Ct,!e.isEmpty],[f,e.handleHeaderFooterMousewheel]]):ae("v-if",!0),e.border||e.isGroup?(K(),F("div",{key:2,class:q(e.ns.e("border-left-patch"))},null,2)):ae("v-if",!0)],6),Vt(z("div",{ref:"resizeProxy",class:q(e.ns.e("column-resize-proxy"))},null,2),[[Ct,e.resizeProxyVisible]])],46,Ive)}var Qve=Be(Eve,[["render",Yve],["__file","/home/runner/work/element-plus/element-plus/packages/components/table/src/table.vue"]]);const _ve={selection:"table-column--selection",expand:"table__expand-column"},$ve={default:{order:""},selection:{width:48,minWidth:48,realWidth:48,order:""},expand:{width:48,minWidth:48,realWidth:48,order:""},index:{width:48,minWidth:48,realWidth:48,order:""}},ebe=e=>_ve[e]||"",tbe={selection:{renderHeader({store:e,column:t}){function n(){return e.states.data.value&&e.states.data.value.length===0}return st(Aa,{disabled:n(),size:e.states.tableSize.value,indeterminate:e.states.selection.value.length>0&&!e.states.isAllSelected.value,"onUpdate:modelValue":e.toggleAllSelection,modelValue:e.states.isAllSelected.value,ariaLabel:t.label})},renderCell({row:e,column:t,store:n,$index:r}){return st(Aa,{disabled:t.selectable?!t.selectable.call(null,e,r):!1,size:n.states.tableSize.value,onChange:()=>{n.commit("rowSelectedChanged",e)},onClick:a=>a.stopPropagation(),modelValue:n.isSelected(e),ariaLabel:t.label})},sortable:!1,resizable:!1},index:{renderHeader({column:e}){return e.label||"#"},renderCell({column:e,$index:t}){let n=t+1;const r=e.index;return typeof r=="number"?n=t+r:typeof r=="function"&&(n=r(t)),st("div",{},[n])},sortable:!1},expand:{renderHeader({column:e}){return e.label||""},renderCell({row:e,store:t,expanded:n}){const{ns:r}=t,a=[r.e("expand-icon")];return n&&a.push(r.em("expand-icon","expanded")),st("div",{class:a,onClick:function(o){o.stopPropagation(),t.toggleRowExpansion(e)}},{default:()=>[st(it,null,{default:()=>[st(Vr)]})]})},sortable:!1,resizable:!1}};function nbe({row:e,column:t,$index:n}){var r;const a=t.property,l=a&&Kf(e,a).value;return t&&t.formatter?t.formatter(e,t,l,n):((r=l==null?void 0:l.toString)==null?void 0:r.call(l))||""}function rbe({row:e,treeNode:t,store:n},r=!1){const{ns:a}=n;if(!t)return r?[st("span",{class:a.e("placeholder")})]:null;const l=[],o=function(i){i.stopPropagation(),!t.loading&&n.loadOrToggle(e)};if(t.indent&&l.push(st("span",{class:a.e("indent"),style:{"padding-left":`${t.indent}px`}})),typeof t.expanded=="boolean"&&!t.noLazyChildren){const i=[a.e("expand-icon"),t.expanded?a.em("expand-icon","expanded"):""];let s=Vr;t.loading&&(s=Uo),l.push(st("div",{class:i,onClick:o},{default:()=>[st(it,{class:{[a.is("loading")]:t.loading}},{default:()=>[st(s)]})]}))}else l.push(st("span",{class:a.e("placeholder")}));return l}function cA(e,t){return e.reduce((n,r)=>(n[r]=r,n),t)}function abe(e,t){const n=Tt();return{registerComplexWatchers:()=>{const l=["fixed"],o={realWidth:"width",realMinWidth:"minWidth"},i=cA(l,o);Object.keys(i).forEach(s=>{const u=o[s];Zt(t,u)&&Ve(()=>t[u],d=>{let f=d;u==="width"&&s==="realWidth"&&(f=x2(d)),u==="minWidth"&&s==="realMinWidth"&&(f=$T(d)),n.columnConfig.value[u]=f,n.columnConfig.value[s]=f;const p=u==="fixed";e.value.store.scheduleLayout(p)})})},registerNormalWatchers:()=>{const l=["label","filters","filterMultiple","filteredValue","sortable","index","formatter","className","labelClassName","showOverflowTooltip"],o={property:"prop",align:"realAlign",headerAlign:"realHeaderAlign"},i=cA(l,o);Object.keys(i).forEach(s=>{const u=o[s];Zt(t,u)&&Ve(()=>t[u],d=>{n.columnConfig.value[s]=d})})}}}function lbe(e,t,n){const r=Tt(),a=J(""),l=J(!1),o=J(),i=J(),s=ze("table");Dn(()=>{o.value=e.align?`is-${e.align}`:null,o.value}),Dn(()=>{i.value=e.headerAlign?`is-${e.headerAlign}`:o.value,i.value});const u=X(()=>{let W=r.vnode.vParent||r.parent;for(;W&&!W.tableId&&!W.columnId;)W=W.vnode.vParent||W.parent;return W}),d=X(()=>{const{store:W}=r.parent;if(!W)return!1;const{treeData:k}=W.states,V=k.value;return V&&Object.keys(V).length>0}),f=J(x2(e.width)),p=J($T(e.minWidth)),b=W=>(f.value&&(W.width=f.value),p.value&&(W.minWidth=p.value),!f.value&&p.value&&(W.width=void 0),W.minWidth||(W.minWidth=80),W.realWidth=Number(W.width===void 0?W.minWidth:W.width),W),A=W=>{const k=W.type,V=tbe[k]||{};Object.keys(V).forEach(P=>{const x=V[P];P!=="className"&&x!==void 0&&(W[P]=x)});const T=ebe(k);if(T){const P=`${c(s.namespace)}-${T}`;W.className=W.className?`${W.className} ${P}`:P}return W},h=W=>{Array.isArray(W)?W.forEach(V=>k(V)):k(W);function k(V){var T;((T=V==null?void 0:V.type)==null?void 0:T.name)==="ElTableColumn"&&(V.vParent=r)}};return{columnId:a,realAlign:o,isSubColumn:l,realHeaderAlign:i,columnOrTableParent:u,setColumnWidth:b,setColumnForcedProps:A,setColumnRenders:W=>{e.renderHeader||W.type!=="selection"&&(W.renderHeader=V=>{r.columnConfig.value.label;const T=t.header;return T?T(V):W.label});let k=W.renderCell;return W.type==="expand"?(W.renderCell=V=>st("div",{class:"cell"},[k(V)]),n.value.renderExpanded=V=>t.default?t.default(V):t.default):(k=k||nbe,W.renderCell=V=>{let T=null;if(t.default){const w=t.default(V);T=w.some(R=>R.type!==Qn)?w:k(V)}else T=k(V);const{columns:P}=n.value.store.states,x=P.value.findIndex(w=>w.type==="default"),g=d.value&&V.cellIndex===x,j=rbe(V,g),L={class:"cell",style:{}};return W.showOverflowTooltip&&(L.class=`${L.class} ${c(s.namespace)}-tooltip`,L.style={width:`${(V.column.realWidth||Number(V.column.width))-1}px`}),h(T),st("div",L,[j,T])}),W},getPropsData:(...W)=>W.reduce((k,V)=>(Array.isArray(V)&&V.forEach(T=>{k[T]=e[T]}),k),{}),getColumnElIndex:(W,k)=>Array.prototype.indexOf.call(W,k),updateColumnOrder:()=>{n.value.store.commit("updateColumnOrder",r.columnConfig.value)}}}var obe={type:{type:String,default:"default"},label:String,className:String,labelClassName:String,property:String,prop:String,width:{type:[String,Number],default:""},minWidth:{type:[String,Number],default:""},renderHeader:Function,sortable:{type:[Boolean,String],default:!1},sortMethod:Function,sortBy:[String,Function,Array],resizable:{type:Boolean,default:!0},columnKey:String,align:String,headerAlign:String,showOverflowTooltip:{type:[Boolean,Object],default:void 0},fixed:[Boolean,String],formatter:Function,selectable:Function,reserveSelection:Boolean,filterMethod:Function,filteredValue:Array,filters:Array,filterPlacement:String,filterMultiple:{type:Boolean,default:!0},index:[Number,Function],sortOrders:{type:Array,default:()=>["ascending","descending",null],validator:e=>e.every(t=>["ascending","descending",null].includes(t))}};let ibe=1;var iK=$({name:"ElTableColumn",components:{ElCheckbox:Aa},props:obe,setup(e,{slots:t}){const n=Tt(),r=J({}),a=X(()=>{let y=n.parent;for(;y&&!y.tableId;)y=y.parent;return y}),{registerNormalWatchers:l,registerComplexWatchers:o}=abe(a,e),{columnId:i,isSubColumn:s,realHeaderAlign:u,columnOrTableParent:d,setColumnWidth:f,setColumnForcedProps:p,setColumnRenders:b,getPropsData:A,getColumnElIndex:h,realAlign:m,updateColumnOrder:v}=lbe(e,t,a),S=d.value;i.value=`${S.tableId||S.columnId}_column_${ibe++}`,td(()=>{s.value=a.value!==S;const y=e.type||"default",W=e.sortable===""?!0:e.sortable,k=Hn(e.showOverflowTooltip)?S.props.showOverflowTooltip:e.showOverflowTooltip,V={...$ve[y],id:i.value,type:y,property:e.prop||e.property,align:m,headerAlign:u,showOverflowTooltip:k,filterable:e.filters||e.filterMethod,filteredValue:[],filterPlacement:"",isColumnGroup:!1,isSubColumn:!1,filterOpened:!1,sortable:W,index:e.index,rawColumnKey:n.vnode.key};let j=A(["columnKey","label","className","labelClassName","type","renderHeader","formatter","fixed","resizable"],["sortMethod","sortBy","sortOrders"],["selectable","reserveSelection"],["filterMethod","filters","filterMultiple","filterOpened","filteredValue","filterPlacement"]);j=ive(V,j),j=uve(b,f,p)(j),r.value=j,l(),o()}),At(()=>{var y;const W=d.value,k=s.value?W.vnode.el.children:(y=W.refs.hiddenColumns)==null?void 0:y.children,V=()=>h(k||[],n.vnode.el);r.value.getColumnIndex=V,V()>-1&&a.value.store.commit("insertColumn",r.value,s.value?W.columnConfig.value:null,v)}),tn(()=>{a.value.store.commit("removeColumn",r.value,s.value?S.columnConfig.value:null,v)}),n.columnId=i.value,n.columnConfig=r},render(){var e,t,n;try{const r=(t=(e=this.$slots).default)==null?void 0:t.call(e,{row:{},column:{},$index:-1}),a=[];if(Array.isArray(r))for(const o of r)((n=o.type)==null?void 0:n.name)==="ElTableColumn"||o.shapeFlag&2?a.push(o):o.type===Qe&&Array.isArray(o.children)&&o.children.forEach(i=>{(i==null?void 0:i.patchFlag)!==1024&&!Pt(i==null?void 0:i.children)&&a.push(i)});return st("div",a)}catch{return st("div",[])}}});const sbe=qt(Qve,{TableColumn:iK}),ube=Nn(iK);var Fc=(e=>(e.ASC="asc",e.DESC="desc",e))(Fc||{}),zc=(e=>(e.CENTER="center",e.RIGHT="right",e))(zc||{}),sK=(e=>(e.LEFT="left",e.RIGHT="right",e))(sK||{});const Lh={asc:"desc",desc:"asc"},Hc=Symbol("placeholder"),cbe=(e,t,n)=>{var r;const a={flexGrow:0,flexShrink:0,...n?{}:{flexGrow:e.flexGrow||0,flexShrink:e.flexShrink||1}};n||(a.flexShrink=1);const l={...(r=e.style)!=null?r:{},...a,flexBasis:"auto",width:e.width};return t||(e.maxWidth&&(l.maxWidth=e.maxWidth),e.minWidth&&(l.minWidth=e.minWidth)),l};function dbe(e,t,n){const r=X(()=>c(t).filter(h=>!h.hidden)),a=X(()=>c(r).filter(h=>h.fixed==="left"||h.fixed===!0)),l=X(()=>c(r).filter(h=>h.fixed==="right")),o=X(()=>c(r).filter(h=>!h.fixed)),i=X(()=>{const h=[];return c(a).forEach(m=>{h.push({...m,placeholderSign:Hc})}),c(o).forEach(m=>{h.push(m)}),c(l).forEach(m=>{h.push({...m,placeholderSign:Hc})}),h}),s=X(()=>c(a).length||c(l).length),u=X(()=>c(t).reduce((m,v)=>(m[v.key]=cbe(v,c(n),e.fixed),m),{})),d=X(()=>c(r).reduce((h,m)=>h+m.width,0)),f=h=>c(t).find(m=>m.key===h),p=h=>c(u)[h],b=(h,m)=>{h.width=m};function A(h){var m;const{key:v}=h.currentTarget.dataset;if(!v)return;const{sortState:S,sortBy:y}=e;let W=Fc.ASC;Jt(S)?W=Lh[S[v]]:W=Lh[y.order],(m=e.onColumnSort)==null||m.call(e,{column:f(v),key:v,order:W})}return{columns:t,columnsStyles:u,columnsTotalWidth:d,fixedColumnsOnLeft:a,fixedColumnsOnRight:l,hasFixedColumns:s,mainColumns:i,normalColumns:o,visibleColumns:r,getColumn:f,getColumnStyle:p,updateColumnWidth:b,onColumnSorted:A}}const fbe=(e,{mainTableRef:t,leftTableRef:n,rightTableRef:r,onMaybeEndReached:a})=>{const l=J({scrollLeft:0,scrollTop:0});function o(b){var A,h,m;const{scrollTop:v}=b;(A=t.value)==null||A.scrollTo(b),(h=n.value)==null||h.scrollToTop(v),(m=r.value)==null||m.scrollToTop(v)}function i(b){l.value=b,o(b)}function s(b){l.value.scrollTop=b,o(c(l))}function u(b){var A,h;l.value.scrollLeft=b,(h=(A=t.value)==null?void 0:A.scrollTo)==null||h.call(A,c(l))}function d(b){var A;i(b),(A=e.onScroll)==null||A.call(e,b)}function f({scrollTop:b}){const{scrollTop:A}=c(l);b!==A&&s(b)}function p(b,A="auto"){var h;(h=t.value)==null||h.scrollToRow(b,A)}return Ve(()=>c(l).scrollTop,(b,A)=>{b>A&&a()}),{scrollPos:l,scrollTo:i,scrollToLeft:u,scrollToTop:s,scrollToRow:p,onScroll:d,onVerticalScroll:f}},pbe=(e,{mainTableRef:t,leftTableRef:n,rightTableRef:r})=>{const a=Tt(),{emit:l}=a,o=nn(!1),i=nn(null),s=J(e.defaultExpandedRowKeys||[]),u=J(-1),d=nn(null),f=J({}),p=J({}),b=nn({}),A=nn({}),h=nn({}),m=X(()=>mt(e.estimatedRowHeight));function v(P){var x;(x=e.onRowsRendered)==null||x.call(e,P),P.rowCacheEnd>c(u)&&(u.value=P.rowCacheEnd)}function S({hovered:P,rowKey:x}){i.value=P?x:null}function y({expanded:P,rowData:x,rowIndex:g,rowKey:j}){var L,w;const R=[...c(s)],Z=R.indexOf(j);P?Z===-1&&R.push(j):Z>-1&&R.splice(Z,1),s.value=R,l("update:expandedRowKeys",R),(L=e.onRowExpand)==null||L.call(e,{expanded:P,rowData:x,rowIndex:g,rowKey:j}),(w=e.onExpandedRowsChange)==null||w.call(e,R)}const W=xr(()=>{var P,x,g,j;o.value=!0,f.value={...c(f),...c(p)},k(c(d),!1),p.value={},d.value=null,(P=t.value)==null||P.forceUpdate(),(x=n.value)==null||x.forceUpdate(),(g=r.value)==null||g.forceUpdate(),(j=a.proxy)==null||j.$forceUpdate(),o.value=!1},0);function k(P,x=!1){!c(m)||[t,n,r].forEach(g=>{const j=c(g);j&&j.resetAfterRowIndex(P,x)})}function V(P,x,g){const j=c(d);(j===null||j>g)&&(d.value=g),p.value[P]=x}function T({rowKey:P,height:x,rowIndex:g},j){j?j===sK.RIGHT?h.value[P]=x:b.value[P]=x:A.value[P]=x;const L=Math.max(...[b,h,A].map(w=>w.value[P]||0));c(f)[P]!==L&&(V(P,L,g),W())}return{hoveringRowKey:i,expandedRowKeys:s,lastRenderedRowIndex:u,isDynamic:m,isResetting:o,rowHeights:f,resetAfterIndex:k,onRowExpanded:y,onRowHovered:S,onRowsRendered:v,onRowHeightChange:T}},vbe=(e,{expandedRowKeys:t,lastRenderedRowIndex:n,resetAfterIndex:r})=>{const a=J({}),l=X(()=>{const i={},{data:s,rowKey:u}=e,d=c(t);if(!d||!d.length)return s;const f=[],p=new Set;d.forEach(A=>p.add(A));let b=s.slice();for(b.forEach(A=>i[A[u]]=0);b.length>0;){const A=b.shift();f.push(A),p.has(A[u])&&Array.isArray(A.children)&&A.children.length>0&&(b=[...A.children,...b],A.children.forEach(h=>i[h[u]]=i[A[u]]+1))}return a.value=i,f}),o=X(()=>{const{data:i,expandColumnKey:s}=e;return s?c(l):i});return Ve(o,(i,s)=>{i!==s&&(n.value=-1,r(0,!0))}),{data:o,depthMap:a}},bbe=(e,t)=>e+t,Hf=e=>et(e)?e.reduce(bbe,0):e,Ti=(e,t,n={})=>ht(e)?e(t):e!=null?e:n,so=e=>(["width","maxWidth","minWidth","height"].forEach(t=>{e[t]=Ln(e[t])}),e),uK=e=>cn(e)?t=>st(e,t):e,hbe=(e,{columnsTotalWidth:t,data:n,fixedColumnsOnLeft:r,fixedColumnsOnRight:a})=>{const l=X(()=>{const{fixed:y,width:W,vScrollbarSize:k}=e,V=W-k;return y?Math.max(Math.round(c(t)),V):V}),o=X(()=>c(l)+(e.fixed?e.vScrollbarSize:0)),i=X(()=>{const{height:y=0,maxHeight:W=0,footerHeight:k,hScrollbarSize:V}=e;if(W>0){const T=c(A),P=c(s),g=c(b)+T+P+V;return Math.min(g,W-k)}return y-k}),s=X(()=>{const{rowHeight:y,estimatedRowHeight:W}=e,k=c(n);return mt(W)?k.length*W:k.length*y}),u=X(()=>{const{maxHeight:y}=e,W=c(i);if(mt(y)&&y>0)return W;const k=c(s)+c(b)+c(A);return Math.min(W,k)}),d=y=>y.width,f=X(()=>Hf(c(r).map(d))),p=X(()=>Hf(c(a).map(d))),b=X(()=>Hf(e.headerHeight)),A=X(()=>{var y;return(((y=e.fixedData)==null?void 0:y.length)||0)*e.rowHeight}),h=X(()=>c(i)-c(b)-c(A)),m=X(()=>{const{style:y={},height:W,width:k}=e;return so({...y,height:W,width:k})}),v=X(()=>so({height:e.footerHeight})),S=X(()=>({top:Ln(c(b)),bottom:Ln(e.footerHeight),width:Ln(e.width)}));return{bodyWidth:l,fixedTableHeight:u,mainTableHeight:i,leftTableWidth:f,rightTableWidth:p,headerWidth:o,rowsHeight:s,windowHeight:h,footerHeight:v,emptyStyle:S,rootStyle:m,headerHeight:b}},mbe=e=>{const t=J(),n=J(0),r=J(0);let a;return At(()=>{a=hr(t,([l])=>{const{width:o,height:i}=l.contentRect,{paddingLeft:s,paddingRight:u,paddingTop:d,paddingBottom:f}=getComputedStyle(l.target),p=Number.parseInt(s)||0,b=Number.parseInt(u)||0,A=Number.parseInt(d)||0,h=Number.parseInt(f)||0;n.value=o-p-b,r.value=i-A-h}).stop}),tn(()=>{a==null||a()}),Ve([n,r],([l,o])=>{var i;(i=e.onResize)==null||i.call(e,{width:l,height:o})}),{sizer:t,width:n,height:r}};function Sbe(e){const t=J(),n=J(),r=J(),{columns:a,columnsStyles:l,columnsTotalWidth:o,fixedColumnsOnLeft:i,fixedColumnsOnRight:s,hasFixedColumns:u,mainColumns:d,onColumnSorted:f}=dbe(e,bn(e,"columns"),bn(e,"fixed")),{scrollTo:p,scrollToLeft:b,scrollToTop:A,scrollToRow:h,onScroll:m,onVerticalScroll:v,scrollPos:S}=fbe(e,{mainTableRef:t,leftTableRef:n,rightTableRef:r,onMaybeEndReached:_}),{expandedRowKeys:y,hoveringRowKey:W,lastRenderedRowIndex:k,isDynamic:V,isResetting:T,rowHeights:P,resetAfterIndex:x,onRowExpanded:g,onRowHeightChange:j,onRowHovered:L,onRowsRendered:w}=pbe(e,{mainTableRef:t,leftTableRef:n,rightTableRef:r}),{data:R,depthMap:Z}=vbe(e,{expandedRowKeys:y,lastRenderedRowIndex:k,resetAfterIndex:x}),{bodyWidth:G,fixedTableHeight:U,mainTableHeight:H,leftTableWidth:O,rightTableWidth:D,headerWidth:Y,rowsHeight:Q,windowHeight:ee,footerHeight:oe,emptyStyle:Ne,rootStyle:pe,headerHeight:me}=hbe(e,{columnsTotalWidth:o,data:R,fixedColumnsOnLeft:i,fixedColumnsOnRight:s}),ce=nn(!1),Le=J(),Te=X(()=>{const re=c(R).length===0;return et(e.fixedData)?e.fixedData.length===0&&re:re});function xe(re){const{estimatedRowHeight:ye,rowHeight:ge,rowKey:Fe}=e;return ye?c(P)[c(R)[re][Fe]]||ye:ge}function _(){const{onEndReached:re}=e;if(!re)return;const{scrollTop:ye}=c(S),ge=c(Q),Fe=c(ee),Ae=ge-(ye+Fe)+e.hScrollbarSize;c(k)>=0&&ge===ye+c(H)-c(me)&&re(Ae)}return Ve(()=>e.expandedRowKeys,re=>y.value=re,{deep:!0}),{columns:a,containerRef:Le,mainTableRef:t,leftTableRef:n,rightTableRef:r,isDynamic:V,isResetting:T,isScrolling:ce,hoveringRowKey:W,hasFixedColumns:u,columnsStyles:l,columnsTotalWidth:o,data:R,expandedRowKeys:y,depthMap:Z,fixedColumnsOnLeft:i,fixedColumnsOnRight:s,mainColumns:d,bodyWidth:G,emptyStyle:Ne,rootStyle:pe,headerWidth:Y,footerHeight:oe,mainTableHeight:H,fixedTableHeight:U,leftTableWidth:O,rightTableWidth:D,showEmpty:Te,getRowHeight:xe,onColumnSorted:f,onRowHovered:L,onRowExpanded:g,onRowsRendered:w,onRowHeightChange:j,scrollTo:p,scrollToLeft:b,scrollToTop:A,scrollToRow:h,onScroll:m,onVerticalScroll:v}}const w2=Symbol("tableV2"),cK=String,kd={type:ve(Array),required:!0},j2={type:ve(Array)},dK={...j2,required:!0},ybe=String,dA={type:ve(Array),default:()=>An([])},Bo={type:Number,required:!0},fK={type:ve([String,Number,Symbol]),default:"id"},fA={type:ve(Object)},ri=Ie({class:String,columns:kd,columnsStyles:{type:ve(Object),required:!0},depth:Number,expandColumnKey:ybe,estimatedRowHeight:{...di.estimatedRowHeight,default:void 0},isScrolling:Boolean,onRowExpand:{type:ve(Function)},onRowHover:{type:ve(Function)},onRowHeightChange:{type:ve(Function)},rowData:{type:ve(Object),required:!0},rowEventHandlers:{type:ve(Object)},rowIndex:{type:Number,required:!0},rowKey:fK,style:{type:ve(Object)}}),Qb={type:Number,required:!0},L2=Ie({class:String,columns:kd,fixedHeaderData:{type:ve(Array)},headerData:{type:ve(Array),required:!0},headerHeight:{type:ve([Number,Array]),default:50},rowWidth:Qb,rowHeight:{type:Number,default:50},height:Qb,width:Qb}),Zf=Ie({columns:kd,data:dK,fixedData:j2,estimatedRowHeight:ri.estimatedRowHeight,width:Bo,height:Bo,headerWidth:Bo,headerHeight:L2.headerHeight,bodyWidth:Bo,rowHeight:Bo,cache:UT.cache,useIsScrolling:Boolean,scrollbarAlwaysOn:di.scrollbarAlwaysOn,scrollbarStartGap:di.scrollbarStartGap,scrollbarEndGap:di.scrollbarEndGap,class:cK,style:fA,containerStyle:fA,getRowHeight:{type:ve(Function),required:!0},rowKey:ri.rowKey,onRowsRendered:{type:ve(Function)},onScroll:{type:ve(Function)}}),Abe=Ie({cache:Zf.cache,estimatedRowHeight:ri.estimatedRowHeight,rowKey:fK,headerClass:{type:ve([String,Function])},headerProps:{type:ve([Object,Function])},headerCellProps:{type:ve([Object,Function])},headerHeight:L2.headerHeight,footerHeight:{type:Number,default:0},rowClass:{type:ve([String,Function])},rowProps:{type:ve([Object,Function])},rowHeight:{type:Number,default:50},cellProps:{type:ve([Object,Function])},columns:kd,data:dK,dataGetter:{type:ve(Function)},fixedData:j2,expandColumnKey:ri.expandColumnKey,expandedRowKeys:dA,defaultExpandedRowKeys:dA,class:cK,fixed:Boolean,style:{type:ve(Object)},width:Bo,height:Bo,maxHeight:Number,useIsScrolling:Boolean,indentSize:{type:Number,default:12},iconSize:{type:Number,default:12},hScrollbarSize:di.hScrollbarSize,vScrollbarSize:di.vScrollbarSize,scrollbarAlwaysOn:JT.alwaysOn,sortBy:{type:ve(Object),default:()=>({})},sortState:{type:ve(Object),default:void 0},onColumnSort:{type:ve(Function)},onExpandedRowsChange:{type:ve(Function)},onEndReached:{type:ve(Function)},onRowExpand:ri.onRowExpand,onScroll:Zf.onScroll,onRowsRendered:Zf.onRowsRendered,rowEventHandlers:ri.rowEventHandlers}),q2=(e,{slots:t})=>{var n;const{cellData:r,style:a}=e,l=((n=r==null?void 0:r.toString)==null?void 0:n.call(r))||"";return C("div",{class:e.class,title:l,style:a},[t.default?t.default(e):l])};q2.displayName="ElTableV2Cell";q2.inheritAttrs=!1;const U2=(e,{slots:t})=>{var n,r;return t.default?t.default(e):C("div",{class:e.class,title:(n=e.column)==null?void 0:n.title},[(r=e.column)==null?void 0:r.title])};U2.displayName="ElTableV2HeaderCell";U2.inheritAttrs=!1;const Wbe=Ie({class:String,columns:kd,columnsStyles:{type:ve(Object),required:!0},headerIndex:Number,style:{type:ve(Object)}}),kbe=$({name:"ElTableV2HeaderRow",props:Wbe,setup(e,{slots:t}){return()=>{const{columns:n,columnsStyles:r,headerIndex:a,style:l}=e;let o=n.map((i,s)=>t.cell({columns:n,column:i,columnIndex:s,headerIndex:a,style:r[i.key]}));return t.header&&(o=t.header({cells:o.map(i=>et(i)&&i.length===1?i[0]:i),columns:n,headerIndex:a})),C("div",{class:e.class,style:l,role:"row"},[o])}}}),Vbe="ElTableV2Header",Pbe=$({name:Vbe,props:L2,setup(e,{slots:t,expose:n}){const r=ze("table-v2"),a=J(),l=X(()=>so({width:e.width,height:e.height})),o=X(()=>so({width:e.rowWidth,height:e.height})),i=X(()=>Vi(c(e.headerHeight))),s=f=>{const p=c(a);at(()=>{p!=null&&p.scroll&&p.scroll({left:f})})},u=()=>{const f=r.e("fixed-header-row"),{columns:p,fixedHeaderData:b,rowHeight:A}=e;return b==null?void 0:b.map((h,m)=>{var v;const S=so({height:A,width:"100%"});return(v=t.fixed)==null?void 0:v.call(t,{class:f,columns:p,rowData:h,rowIndex:-(m+1),style:S})})},d=()=>{const f=r.e("dynamic-header-row"),{columns:p}=e;return c(i).map((b,A)=>{var h;const m=so({width:"100%",height:b});return(h=t.dynamic)==null?void 0:h.call(t,{class:f,columns:p,headerIndex:A,style:m})})};return n({scrollToLeft:s}),()=>{if(!(e.height<=0))return C("div",{ref:a,class:e.class,style:c(l),role:"rowgroup"},[C("div",{style:c(o),class:r.e("header")},[d(),u()])])}}}),Tbe=e=>{const{isScrolling:t}=tt(w2),n=J(!1),r=J(),a=X(()=>mt(e.estimatedRowHeight)&&e.rowIndex>=0),l=(s=!1)=>{const u=c(r);if(!u)return;const{columns:d,onRowHeightChange:f,rowKey:p,rowIndex:b,style:A}=e,{height:h}=u.getBoundingClientRect();n.value=!0,at(()=>{if(s||h!==Number.parseInt(A.height)){const m=d[0],v=(m==null?void 0:m.placeholderSign)===Hc;f==null||f({rowKey:p,height:h,rowIndex:b},m&&!v&&m.fixed)}})},o=X(()=>{const{rowData:s,rowIndex:u,rowKey:d,onRowHover:f}=e,p=e.rowEventHandlers||{},b={};return Object.entries(p).forEach(([A,h])=>{ht(h)&&(b[A]=m=>{h({event:m,rowData:s,rowIndex:u,rowKey:d})})}),f&&[{name:"onMouseleave",hovered:!1},{name:"onMouseenter",hovered:!0}].forEach(({name:A,hovered:h})=>{const m=b[A];b[A]=v=>{f({event:v,hovered:h,rowData:s,rowIndex:u,rowKey:d}),m==null||m(v)}}),b}),i=s=>{const{onRowExpand:u,rowData:d,rowIndex:f,rowKey:p}=e;u==null||u({expanded:s,rowData:d,rowIndex:f,rowKey:p})};return At(()=>{c(a)&&l(!0)}),{isScrolling:t,measurable:a,measured:n,rowRef:r,eventHandlers:o,onExpand:i}},Kbe="ElTableV2TableRow",Nbe=$({name:Kbe,props:ri,setup(e,{expose:t,slots:n,attrs:r}){const{eventHandlers:a,isScrolling:l,measurable:o,measured:i,rowRef:s,onExpand:u}=Tbe(e);return t({onExpand:u}),()=>{const{columns:d,columnsStyles:f,expandColumnKey:p,depth:b,rowData:A,rowIndex:h,style:m}=e;let v=d.map((S,y)=>{const W=et(A.children)&&A.children.length>0&&S.key===p;return n.cell({column:S,columns:d,columnIndex:y,depth:b,style:f[S.key],rowData:A,rowIndex:h,isScrolling:c(l),expandIconProps:W?{rowData:A,rowIndex:h,onExpand:u}:void 0})});if(n.row&&(v=n.row({cells:v.map(S=>et(S)&&S.length===1?S[0]:S),style:m,columns:d,depth:b,rowData:A,rowIndex:h,isScrolling:c(l)})),c(o)){const{height:S,...y}=m||{},W=c(i);return C("div",Ut({ref:s,class:e.class,style:W?m:y,role:"row"},r,c(a)),[v])}return C("div",Ut(r,{ref:s,class:e.class,style:m,role:"row"},c(a)),[v])}}}),xbe=e=>{const{sortOrder:t}=e;return C(it,{size:14,class:e.class},{default:()=>[t===Fc.ASC?C(GI,null,null):C(RI,null,null)]})},Xbe=e=>{const{expanded:t,expandable:n,onExpand:r,style:a,size:l}=e,o={onClick:n?()=>r(!t):void 0,class:e.class};return C(it,Ut(o,{size:l,style:a}),{default:()=>[C(Vr,null,null)]})},gbe="ElTableV2Grid",wbe=e=>{const t=J(),n=J(),r=X(()=>{const{data:h,rowHeight:m,estimatedRowHeight:v}=e;if(!v)return h.length*m}),a=X(()=>{const{fixedData:h,rowHeight:m}=e;return((h==null?void 0:h.length)||0)*m}),l=X(()=>Hf(e.headerHeight)),o=X(()=>{const{height:h}=e;return Math.max(0,h-c(l)-c(a))}),i=X(()=>c(l)+c(a)>0),s=({data:h,rowIndex:m})=>h[m][e.rowKey];function u({rowCacheStart:h,rowCacheEnd:m,rowVisibleStart:v,rowVisibleEnd:S}){var y;(y=e.onRowsRendered)==null||y.call(e,{rowCacheStart:h,rowCacheEnd:m,rowVisibleStart:v,rowVisibleEnd:S})}function d(h,m){var v;(v=n.value)==null||v.resetAfterRowIndex(h,m)}function f(h,m){const v=c(t),S=c(n);!v||!S||(Jt(h)?(v.scrollToLeft(h.scrollLeft),S.scrollTo(h)):(v.scrollToLeft(h),S.scrollTo({scrollLeft:h,scrollTop:m})))}function p(h){var m;(m=c(n))==null||m.scrollTo({scrollTop:h})}function b(h,m){var v;(v=c(n))==null||v.scrollToItem(h,1,m)}function A(){var h,m;(h=c(n))==null||h.$forceUpdate(),(m=c(t))==null||m.$forceUpdate()}return{bodyRef:n,forceUpdate:A,fixedRowHeight:a,gridHeight:o,hasHeader:i,headerHeight:l,headerRef:t,totalHeight:r,itemKey:s,onItemRendered:u,resetAfterRowIndex:d,scrollTo:f,scrollToTop:p,scrollToRow:b}},O2=$({name:gbe,props:Zf,setup(e,{slots:t,expose:n}){const{ns:r}=tt(w2),{bodyRef:a,fixedRowHeight:l,gridHeight:o,hasHeader:i,headerRef:s,headerHeight:u,totalHeight:d,forceUpdate:f,itemKey:p,onItemRendered:b,resetAfterRowIndex:A,scrollTo:h,scrollToTop:m,scrollToRow:v}=wbe(e);n({forceUpdate:f,totalHeight:d,scrollTo:h,scrollToTop:m,scrollToRow:v,resetAfterRowIndex:A});const S=()=>e.bodyWidth;return()=>{const{cache:y,columns:W,data:k,fixedData:V,useIsScrolling:T,scrollbarAlwaysOn:P,scrollbarEndGap:x,scrollbarStartGap:g,style:j,rowHeight:L,bodyWidth:w,estimatedRowHeight:R,headerWidth:Z,height:G,width:U,getRowHeight:H,onScroll:O}=e,D=mt(R),Y=D?sfe:afe,Q=c(u);return C("div",{role:"table",class:[r.e("table"),e.class],style:j},[C(Y,{ref:a,data:k,useIsScrolling:T,itemKey:p,columnCache:0,columnWidth:D?S:w,totalColumn:1,totalRow:k.length,rowCache:y,rowHeight:D?H:L,width:U,height:c(o),class:r.e("body"),role:"rowgroup",scrollbarStartGap:g,scrollbarEndGap:x,scrollbarAlwaysOn:P,onScroll:O,onItemRendered:b,perfMode:!1},{default:ee=>{var oe;const Ne=k[ee.rowIndex];return(oe=t.row)==null?void 0:oe.call(t,{...ee,columns:W,rowData:Ne})}}),c(i)&&C(Pbe,{ref:s,class:r.e("header-wrapper"),columns:W,headerData:k,headerHeight:e.headerHeight,fixedHeaderData:V,rowWidth:Z,rowHeight:L,width:U,height:Math.min(Q+c(l),G)},{dynamic:t.header,fixed:t.row})])}}});function jbe(e){return typeof e=="function"||Object.prototype.toString.call(e)==="[object Object]"&&!cn(e)}const Lbe=(e,{slots:t})=>{const{mainTableRef:n,...r}=e;return C(O2,Ut({ref:n},r),jbe(t)?t:{default:()=>[t]})};function qbe(e){return typeof e=="function"||Object.prototype.toString.call(e)==="[object Object]"&&!cn(e)}const Ube=(e,{slots:t})=>{if(!e.columns.length)return;const{leftTableRef:n,...r}=e;return C(O2,Ut({ref:n},r),qbe(t)?t:{default:()=>[t]})};function Obe(e){return typeof e=="function"||Object.prototype.toString.call(e)==="[object Object]"&&!cn(e)}const Rbe=(e,{slots:t})=>{if(!e.columns.length)return;const{rightTableRef:n,...r}=e;return C(O2,Ut({ref:n},r),Obe(t)?t:{default:()=>[t]})};function Jbe(e){return typeof e=="function"||Object.prototype.toString.call(e)==="[object Object]"&&!cn(e)}const Fbe=(e,{slots:t})=>{const{columns:n,columnsStyles:r,depthMap:a,expandColumnKey:l,expandedRowKeys:o,estimatedRowHeight:i,hasFixedColumns:s,hoveringRowKey:u,rowData:d,rowIndex:f,style:p,isScrolling:b,rowProps:A,rowClass:h,rowKey:m,rowEventHandlers:v,ns:S,onRowHovered:y,onRowExpanded:W}=e,k=Ti(h,{columns:n,rowData:d,rowIndex:f},""),V=Ti(A,{columns:n,rowData:d,rowIndex:f}),T=d[m],P=a[T]||0,x=Boolean(l),g=f<0,j=[S.e("row"),k,{[S.e(`row-depth-${P}`)]:x&&f>=0,[S.is("expanded")]:x&&o.includes(T),[S.is("hovered")]:!b&&T===u,[S.is("fixed")]:!P&&g,[S.is("customized")]:Boolean(t.row)}],L=s?y:void 0,w={...V,columns:n,columnsStyles:r,class:j,depth:P,expandColumnKey:l,estimatedRowHeight:g?void 0:i,isScrolling:b,rowIndex:f,rowData:d,rowKey:T,rowEventHandlers:v,style:p};return C(Nbe,Ut(w,{onRowHover:L,onRowExpand:W}),Jbe(t)?t:{default:()=>[t]})},qh=({columns:e,column:t,columnIndex:n,depth:r,expandIconProps:a,isScrolling:l,rowData:o,rowIndex:i,style:s,expandedRowKeys:u,ns:d,cellProps:f,expandColumnKey:p,indentSize:b,iconSize:A,rowKey:h},{slots:m})=>{const v=so(s);if(t.placeholderSign===Hc)return C("div",{class:d.em("row-cell","placeholder"),style:v},null);const{cellRenderer:S,dataKey:y,dataGetter:W}=t,V=uK(S)||m.default||(G=>C(q2,G,null)),T=ht(W)?W({columns:e,column:t,columnIndex:n,rowData:o,rowIndex:i}):jn(o,y!=null?y:""),P=Ti(f,{cellData:T,columns:e,column:t,columnIndex:n,rowIndex:i,rowData:o}),x={class:d.e("cell-text"),columns:e,column:t,columnIndex:n,cellData:T,isScrolling:l,rowData:o,rowIndex:i},g=V(x),j=[d.e("row-cell"),t.class,t.align===zc.CENTER&&d.is("align-center"),t.align===zc.RIGHT&&d.is("align-right")],L=i>=0&&p&&t.key===p,w=i>=0&&u.includes(o[h]);let R;const Z=`margin-inline-start: ${r*b}px;`;return L&&(Jt(a)?R=C(Xbe,Ut(a,{class:[d.e("expand-icon"),d.is("expanded",w)],size:A,expanded:w,style:Z,expandable:!0}),null):R=C("div",{style:[Z,`width: ${A}px; height: ${A}px;`].join(" ")},null)),C("div",Ut({class:j,style:v},P,{role:"cell"}),[R,g])};qh.inheritAttrs=!1;function zbe(e){return typeof e=="function"||Object.prototype.toString.call(e)==="[object Object]"&&!cn(e)}const Hbe=({columns:e,columnsStyles:t,headerIndex:n,style:r,headerClass:a,headerProps:l,ns:o},{slots:i})=>{const s={columns:e,headerIndex:n},u=[o.e("header-row"),Ti(a,s,""),{[o.is("customized")]:Boolean(i.header)}],d={...Ti(l,s),columnsStyles:t,class:u,columns:e,headerIndex:n,style:r};return C(kbe,d,zbe(i)?i:{default:()=>[i]})},pA=(e,{slots:t})=>{const{column:n,ns:r,style:a,onColumnSorted:l}=e,o=so(a);if(n.placeholderSign===Hc)return C("div",{class:r.em("header-row-cell","placeholder"),style:o},null);const{headerCellRenderer:i,headerClass:s,sortable:u}=n,d={...e,class:r.e("header-cell-text")},p=(uK(i)||t.default||(W=>C(U2,W,null)))(d),{sortBy:b,sortState:A,headerCellProps:h}=e;let m,v;if(A){const W=A[n.key];m=Boolean(Lh[W]),v=m?W:Fc.ASC}else m=n.key===b.key,v=m?b.order:Fc.ASC;const S=[r.e("header-cell"),Ti(s,e,""),n.align===zc.CENTER&&r.is("align-center"),n.align===zc.RIGHT&&r.is("align-right"),u&&r.is("sortable")],y={...Ti(h,e),onClick:n.sortable?l:void 0,class:S,style:o,["data-key"]:n.key};return C("div",Ut(y,{role:"columnheader"}),[p,u&&C(xbe,{class:[r.e("sort-icon"),m&&r.is("sorting")],sortOrder:v},null)])},pK=(e,{slots:t})=>{var n;return C("div",{class:e.class,style:e.style},[(n=t.default)==null?void 0:n.call(t)])};pK.displayName="ElTableV2Footer";const vK=(e,{slots:t})=>C("div",{class:e.class,style:e.style},[t.default?t.default():C(AT,null,null)]);vK.displayName="ElTableV2Empty";const bK=(e,{slots:t})=>{var n;return C("div",{class:e.class,style:e.style},[(n=t.default)==null?void 0:n.call(t)])};bK.displayName="ElTableV2Overlay";function gu(e){return typeof e=="function"||Object.prototype.toString.call(e)==="[object Object]"&&!cn(e)}const Zbe="ElTableV2",Gbe=$({name:Zbe,props:Abe,setup(e,{slots:t,expose:n}){const r=ze("table-v2"),{columnsStyles:a,fixedColumnsOnLeft:l,fixedColumnsOnRight:o,mainColumns:i,mainTableHeight:s,fixedTableHeight:u,leftTableWidth:d,rightTableWidth:f,data:p,depthMap:b,expandedRowKeys:A,hasFixedColumns:h,hoveringRowKey:m,mainTableRef:v,leftTableRef:S,rightTableRef:y,isDynamic:W,isResetting:k,isScrolling:V,bodyWidth:T,emptyStyle:P,rootStyle:x,headerWidth:g,footerHeight:j,showEmpty:L,scrollTo:w,scrollToLeft:R,scrollToTop:Z,scrollToRow:G,getRowHeight:U,onColumnSorted:H,onRowHeightChange:O,onRowHovered:D,onRowExpanded:Y,onRowsRendered:Q,onScroll:ee,onVerticalScroll:oe}=Sbe(e);return n({scrollTo:w,scrollToLeft:R,scrollToTop:Z,scrollToRow:G}),zt(w2,{ns:r,isResetting:k,hoveringRowKey:m,isScrolling:V}),()=>{const{cache:Ne,cellProps:pe,estimatedRowHeight:me,expandColumnKey:ce,fixedData:Le,headerHeight:Te,headerClass:xe,headerProps:_,headerCellProps:re,sortBy:ye,sortState:ge,rowHeight:Fe,rowClass:Ae,rowEventHandlers:Ze,rowKey:Ue,rowProps:Pe,scrollbarAlwaysOn:qe,indentSize:De,iconSize:Me,useIsScrolling:_e,vScrollbarSize:Re,width:$e}=e,dt=c(p),yt={cache:Ne,class:r.e("main"),columns:c(i),data:dt,fixedData:Le,estimatedRowHeight:me,bodyWidth:c(T)+Re,headerHeight:Te,headerWidth:c(g),height:c(s),mainTableRef:v,rowKey:Ue,rowHeight:Fe,scrollbarAlwaysOn:qe,scrollbarStartGap:2,scrollbarEndGap:Re,useIsScrolling:_e,width:$e,getRowHeight:U,onRowsRendered:Q,onScroll:ee},gt=c(d),ot=c(u),ke={cache:Ne,class:r.e("left"),columns:c(l),data:dt,estimatedRowHeight:me,leftTableRef:S,rowHeight:Fe,bodyWidth:gt,headerWidth:gt,headerHeight:Te,height:ot,rowKey:Ue,scrollbarAlwaysOn:qe,scrollbarStartGap:2,scrollbarEndGap:Re,useIsScrolling:_e,width:gt,getRowHeight:U,onScroll:oe},fe=c(f)+Re,Xe={cache:Ne,class:r.e("right"),columns:c(o),data:dt,estimatedRowHeight:me,rightTableRef:y,rowHeight:Fe,bodyWidth:fe,headerWidth:fe,headerHeight:Te,height:ot,rowKey:Ue,scrollbarAlwaysOn:qe,scrollbarStartGap:2,scrollbarEndGap:Re,width:fe,style:`--${c(r.namespace)}-table-scrollbar-size: ${Re}px`,useIsScrolling:_e,getRowHeight:U,onScroll:oe},ne=c(a),M={ns:r,depthMap:c(b),columnsStyles:ne,expandColumnKey:ce,expandedRowKeys:c(A),estimatedRowHeight:me,hasFixedColumns:c(h),hoveringRowKey:c(m),rowProps:Pe,rowClass:Ae,rowKey:Ue,rowEventHandlers:Ze,onRowHovered:D,onRowExpanded:Y,onRowHeightChange:O},Oe={cellProps:pe,expandColumnKey:ce,indentSize:De,iconSize:Me,rowKey:Ue,expandedRowKeys:c(A),ns:r},Ee={ns:r,headerClass:xe,headerProps:_,columnsStyles:ne},ft={ns:r,sortBy:ye,sortState:ge,headerCellProps:re,onColumnSorted:H},Se={row:le=>C(Fbe,Ut(le,M),{row:t.row,cell:He=>{let N;return t.cell?C(qh,Ut(He,Oe,{style:ne[He.column.key]}),gu(N=t.cell(He))?N:{default:()=>[N]}):C(qh,Ut(He,Oe,{style:ne[He.column.key]}),null)}}),header:le=>C(Hbe,Ut(le,Ee),{header:t.header,cell:He=>{let N;return t["header-cell"]?C(pA,Ut(He,ft,{style:ne[He.column.key]}),gu(N=t["header-cell"](He))?N:{default:()=>[N]}):C(pA,Ut(He,ft,{style:ne[He.column.key]}),null)}})},Ye=[e.class,r.b(),r.e("root"),{[r.is("dynamic")]:c(W)}],E={class:r.e("footer"),style:c(j)};return C("div",{class:Ye,style:c(x)},[C(Lbe,yt,gu(Se)?Se:{default:()=>[Se]}),C(Ube,ke,gu(Se)?Se:{default:()=>[Se]}),C(Rbe,Xe,gu(Se)?Se:{default:()=>[Se]}),t.footer&&C(pK,E,{default:t.footer}),c(L)&&C(vK,{class:r.e("empty"),style:c(P)},{default:t.empty}),t.overlay&&C(bK,{class:r.e("overlay")},{default:t.overlay})])}}}),Cbe=Ie({disableWidth:Boolean,disableHeight:Boolean,onResize:{type:ve(Function)}}),Mbe=$({name:"ElAutoResizer",props:Cbe,setup(e,{slots:t}){const n=ze("auto-resizer"),{height:r,width:a,sizer:l}=mbe(e),o={width:"100%",height:"100%"};return()=>{var i;return C("div",{ref:l,class:n.b(),style:o},[(i=t.default)==null?void 0:i.call(t,{height:r.value,width:a.value})])}}}),Dbe=qt(Gbe),Ebe=qt(Mbe),$v=Symbol("tabsRootContextKey"),Ibe=Ie({tabs:{type:ve(Array),default:()=>An([])}}),hK="ElTabBar",Bbe=$({name:hK}),Ybe=$({...Bbe,props:Ibe,setup(e,{expose:t}){const n=e,r=Tt(),a=tt($v);a||Gn(hK,"<el-tabs><el-tab-bar /></el-tabs>");const l=ze("tabs"),o=J(),i=J(),s=()=>{let d=0,f=0;const p=["top","bottom"].includes(a.props.tabPosition)?"width":"height",b=p==="width"?"x":"y",A=b==="x"?"left":"top";return n.tabs.every(h=>{var m,v;const S=(v=(m=r.parent)==null?void 0:m.refs)==null?void 0:v[`tab-${h.uid}`];if(!S)return!1;if(!h.active)return!0;d=S[`offset${Da(A)}`],f=S[`client${Da(p)}`];const y=window.getComputedStyle(S);return p==="width"&&(n.tabs.length>1&&(f-=Number.parseFloat(y.paddingLeft)+Number.parseFloat(y.paddingRight)),d+=Number.parseFloat(y.paddingLeft)),!1}),{[p]:`${f}px`,transform:`translate${Da(b)}(${d}px)`}},u=()=>i.value=s();return Ve(()=>n.tabs,async()=>{await at(),u()},{immediate:!0}),hr(o,()=>u()),t({ref:o,update:u}),(d,f)=>(K(),F("div",{ref_key:"barRef",ref:o,class:q([c(l).e("active-bar"),c(l).is(c(a).props.tabPosition)]),style:lt(i.value)},null,6))}});var Qbe=Be(Ybe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tabs/src/tab-bar.vue"]]);const _be=Ie({panes:{type:ve(Array),default:()=>An([])},currentName:{type:[String,Number],default:""},editable:Boolean,type:{type:String,values:["card","border-card",""],default:""},stretch:Boolean}),$be={tabClick:(e,t,n)=>n instanceof Event,tabRemove:(e,t)=>t instanceof Event},vA="ElTabNav",e1e=$({name:vA,props:_be,emits:$be,setup(e,{expose:t,emit:n}){const r=Tt(),a=tt($v);a||Gn(vA,"<el-tabs><tab-nav /></el-tabs>");const l=ze("tabs"),o=rL(),i=mL(),s=J(),u=J(),d=J(),f=J(),p=J(!1),b=J(0),A=J(!1),h=J(!0),m=X(()=>["top","bottom"].includes(a.props.tabPosition)?"width":"height"),v=X(()=>({transform:`translate${m.value==="width"?"X":"Y"}(-${b.value}px)`})),S=()=>{if(!s.value)return;const x=s.value[`offset${Da(m.value)}`],g=b.value;if(!g)return;const j=g>x?g-x:0;b.value=j},y=()=>{if(!s.value||!u.value)return;const x=u.value[`offset${Da(m.value)}`],g=s.value[`offset${Da(m.value)}`],j=b.value;if(x-j<=g)return;const L=x-j>g*2?j+g:x-g;b.value=L},W=async()=>{const x=u.value;if(!p.value||!d.value||!s.value||!x)return;await at();const g=d.value.querySelector(".is-active");if(!g)return;const j=s.value,L=["top","bottom"].includes(a.props.tabPosition),w=g.getBoundingClientRect(),R=j.getBoundingClientRect(),Z=L?x.offsetWidth-R.width:x.offsetHeight-R.height,G=b.value;let U=G;L?(w.left<R.left&&(U=G-(R.left-w.left)),w.right>R.right&&(U=G+w.right-R.right)):(w.top<R.top&&(U=G-(R.top-w.top)),w.bottom>R.bottom&&(U=G+(w.bottom-R.bottom))),U=Math.max(U,0),b.value=Math.min(U,Z)},k=()=>{var x;if(!u.value||!s.value)return;e.stretch&&((x=f.value)==null||x.update());const g=u.value[`offset${Da(m.value)}`],j=s.value[`offset${Da(m.value)}`],L=b.value;j<g?(p.value=p.value||{},p.value.prev=L,p.value.next=L+j<g,g-L<j&&(b.value=g-j)):(p.value=!1,L>0&&(b.value=0))},V=x=>{const g=x.code,{up:j,down:L,left:w,right:R}=ut;if(![j,L,w,R].includes(g))return;const Z=Array.from(x.currentTarget.querySelectorAll("[role=tab]:not(.is-disabled)")),G=Z.indexOf(x.target);let U;g===w||g===j?G===0?U=Z.length-1:U=G-1:G<Z.length-1?U=G+1:U=0,Z[U].focus({preventScroll:!0}),Z[U].click(),T()},T=()=>{h.value&&(A.value=!0)},P=()=>A.value=!1;return Ve(o,x=>{x==="hidden"?h.value=!1:x==="visible"&&setTimeout(()=>h.value=!0,50)}),Ve(i,x=>{x?setTimeout(()=>h.value=!0,50):h.value=!1}),hr(d,k),At(()=>setTimeout(()=>W(),0)),la(()=>k()),t({scrollToActiveTab:W,removeFocus:P}),Ve(()=>e.panes,()=>r.update(),{flush:"post",deep:!0}),()=>{const x=p.value?[C("span",{class:[l.e("nav-prev"),l.is("disabled",!p.value.prev)],onClick:S},[C(it,null,{default:()=>[C(Wo,null,null)]})]),C("span",{class:[l.e("nav-next"),l.is("disabled",!p.value.next)],onClick:y},[C(it,null,{default:()=>[C(Vr,null,null)]})])]:null,g=e.panes.map((j,L)=>{var w,R,Z,G;const U=j.uid,H=j.props.disabled,O=(R=(w=j.props.name)!=null?w:j.index)!=null?R:`${L}`,D=!H&&(j.isClosable||e.editable);j.index=`${L}`;const Y=D?C(it,{class:"is-icon-close",onClick:oe=>n("tabRemove",j,oe)},{default:()=>[C(ma,null,null)]}):null,Q=((G=(Z=j.slots).label)==null?void 0:G.call(Z))||j.props.label,ee=!H&&j.active?0:-1;return C("div",{ref:`tab-${U}`,class:[l.e("item"),l.is(a.props.tabPosition),l.is("active",j.active),l.is("disabled",H),l.is("closable",D),l.is("focus",A.value)],id:`tab-${O}`,key:`tab-${U}`,"aria-controls":`pane-${O}`,role:"tab","aria-selected":j.active,tabindex:ee,onFocus:()=>T(),onBlur:()=>P(),onClick:oe=>{P(),n("tabClick",j,O,oe)},onKeydown:oe=>{D&&(oe.code===ut.delete||oe.code===ut.backspace)&&n("tabRemove",j,oe)}},[Q,Y])});return C("div",{ref:d,class:[l.e("nav-wrap"),l.is("scrollable",!!p.value),l.is(a.props.tabPosition)]},[x,C("div",{class:l.e("nav-scroll"),ref:s},[C("div",{class:[l.e("nav"),l.is(a.props.tabPosition),l.is("stretch",e.stretch&&["top","bottom"].includes(a.props.tabPosition))],ref:u,style:v.value,role:"tablist",onKeydown:V},[e.type?null:C(Qbe,{ref:f,tabs:[...e.panes]},null),g])])])}}}),t1e=Ie({type:{type:String,values:["card","border-card",""],default:""},activeName:{type:[String,Number]},closable:Boolean,addable:Boolean,modelValue:{type:[String,Number]},editable:Boolean,tabPosition:{type:String,values:["top","right","bottom","left"],default:"top"},beforeLeave:{type:ve(Function),default:()=>!0},stretch:Boolean}),_b=e=>Pt(e)||mt(e),n1e={[Rt]:e=>_b(e),tabClick:(e,t)=>t instanceof Event,tabChange:e=>_b(e),edit:(e,t)=>["remove","add"].includes(t),tabRemove:e=>_b(e),tabAdd:()=>!0},r1e=$({name:"ElTabs",props:t1e,emits:n1e,setup(e,{emit:t,slots:n,expose:r}){var a,l;const o=ze("tabs"),{children:i,addChild:s,removeChild:u}=l2(Tt(),"ElTabPane"),d=J(),f=J((l=(a=e.modelValue)!=null?a:e.activeName)!=null?l:"0"),p=async(m,v=!1)=>{var S,y,W;if(!(f.value===m||Hn(m)))try{await((S=e.beforeLeave)==null?void 0:S.call(e,m,f.value))!==!1&&(f.value=m,v&&(t(Rt,m),t("tabChange",m)),(W=(y=d.value)==null?void 0:y.removeFocus)==null||W.call(y))}catch{}},b=(m,v,S)=>{m.props.disabled||(p(v,!0),t("tabClick",m,S))},A=(m,v)=>{m.props.disabled||Hn(m.props.name)||(v.stopPropagation(),t("edit",m.props.name,"remove"),t("tabRemove",m.props.name))},h=()=>{t("edit",void 0,"add"),t("tabAdd")};return rl({from:'"activeName"',replacement:'"model-value" or "v-model"',scope:"ElTabs",version:"2.3.0",ref:"https://element-plus.org/en-US/component/tabs.html#attributes",type:"Attribute"},X(()=>!!e.activeName)),Ve(()=>e.activeName,m=>p(m)),Ve(()=>e.modelValue,m=>p(m)),Ve(f,async()=>{var m;await at(),(m=d.value)==null||m.scrollToActiveTab()}),zt($v,{props:e,currentName:f,registerPane:s,unregisterPane:u}),r({currentName:f}),()=>{const m=n.addIcon,v=e.editable||e.addable?C("span",{class:o.e("new-tab"),tabindex:"0",onClick:h,onKeydown:W=>{W.code===ut.enter&&h()}},[m?ue(n,"addIcon"):C(it,{class:o.is("icon-plus")},{default:()=>[C(zm,null,null)]})]):null,S=C("div",{class:[o.e("header"),o.is(e.tabPosition)]},[v,C(e1e,{ref:d,currentName:f.value,editable:e.editable,type:e.type,panes:i.value,stretch:e.stretch,onTabClick:b,onTabRemove:A},null)]),y=C("div",{class:o.e("content")},[ue(n,"default")]);return C("div",{class:[o.b(),o.m(e.tabPosition),{[o.m("card")]:e.type==="card",[o.m("border-card")]:e.type==="border-card"}]},[...e.tabPosition!=="bottom"?[S,y]:[y,S]])}}}),a1e=Ie({label:{type:String,default:""},name:{type:[String,Number]},closable:Boolean,disabled:Boolean,lazy:Boolean}),l1e=["id","aria-hidden","aria-labelledby"],mK="ElTabPane",o1e=$({name:mK}),i1e=$({...o1e,props:a1e,setup(e){const t=e,n=Tt(),r=er(),a=tt($v);a||Gn(mK,"usage: <el-tabs><el-tab-pane /></el-tabs/>");const l=ze("tab-pane"),o=J(),i=X(()=>t.closable||a.props.closable),s=ly(()=>{var b;return a.currentName.value===((b=t.name)!=null?b:o.value)}),u=J(s.value),d=X(()=>{var b;return(b=t.name)!=null?b:o.value}),f=ly(()=>!t.lazy||u.value||s.value);Ve(s,b=>{b&&(u.value=!0)});const p=Bt({uid:n.uid,slots:r,props:t,paneName:d,active:s,index:o,isClosable:i});return At(()=>{a.registerPane(p)}),mr(()=>{a.unregisterPane(p.uid)}),(b,A)=>c(f)?Vt((K(),F("div",{key:0,id:`pane-${c(d)}`,class:q(c(l).b()),role:"tabpanel","aria-hidden":!c(s),"aria-labelledby":`tab-${c(d)}`},[ue(b.$slots,"default")],10,l1e)),[[Ct,c(s)]]):ae("v-if",!0)}});var SK=Be(i1e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tabs/src/tab-pane.vue"]]);const s1e=qt(r1e,{TabPane:SK}),u1e=Nn(SK),c1e=Ie({type:{type:String,values:["primary","success","info","warning","danger",""],default:""},size:{type:String,values:sl,default:""},truncated:{type:Boolean},lineClamp:{type:[String,Number]},tag:{type:String,default:"span"}}),d1e=$({name:"ElText"}),f1e=$({...d1e,props:c1e,setup(e){const t=e,n=Cn(),r=ze("text"),a=X(()=>[r.b(),r.m(t.type),r.m(n.value),r.is("truncated",t.truncated),r.is("line-clamp",!Hn(t.lineClamp))]);return(l,o)=>(K(),ie(Ot(l.tag),{class:q(c(a)),style:lt({"-webkit-line-clamp":l.lineClamp})},{default:B(()=>[ue(l.$slots,"default")]),_:3},8,["class","style"]))}});var p1e=Be(f1e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/text/src/text.vue"]]);const v1e=qt(p1e),b1e=Ie({format:{type:String,default:"HH:mm"},modelValue:String,disabled:Boolean,editable:{type:Boolean,default:!0},effect:{type:String,default:"light"},clearable:{type:Boolean,default:!0},size:ur,placeholder:String,start:{type:String,default:"09:00"},end:{type:String,default:"18:00"},step:{type:String,default:"00:30"},minTime:String,maxTime:String,name:String,prefixIcon:{type:ve([String,Object]),default:()=>zk},clearIcon:{type:ve([String,Object]),default:()=>qo}}),yl=e=>{const t=(e||"").split(":");if(t.length>=2){let n=Number.parseInt(t[0],10);const r=Number.parseInt(t[1],10),a=e.toUpperCase();return a.includes("AM")&&n===12?n=0:a.includes("PM")&&n!==12&&(n+=12),{hours:n,minutes:r}}return null},$b=(e,t)=>{const n=yl(e);if(!n)return-1;const r=yl(t);if(!r)return-1;const a=n.minutes+n.hours*60,l=r.minutes+r.hours*60;return a===l?0:a>l?1:-1},bA=e=>`${e}`.padStart(2,"0"),os=e=>`${bA(e.hours)}:${bA(e.minutes)}`,h1e=(e,t)=>{const n=yl(e);if(!n)return"";const r=yl(t);if(!r)return"";const a={hours:n.hours,minutes:n.minutes};return a.minutes+=r.minutes,a.hours+=r.hours,a.hours+=Math.floor(a.minutes/60),a.minutes=a.minutes%60,os(a)},m1e=$({name:"ElTimeSelect"}),S1e=$({...m1e,props:b1e,emits:["change","blur","focus","update:modelValue"],setup(e,{expose:t}){const n=e;Lt.extend(d2);const{Option:r}=Pi,a=ze("input"),l=J(),o=Br(),{lang:i}=It(),s=X(()=>n.modelValue),u=X(()=>{const v=yl(n.start);return v?os(v):null}),d=X(()=>{const v=yl(n.end);return v?os(v):null}),f=X(()=>{const v=yl(n.step);return v?os(v):null}),p=X(()=>{const v=yl(n.minTime||"");return v?os(v):null}),b=X(()=>{const v=yl(n.maxTime||"");return v?os(v):null}),A=X(()=>{const v=[];if(n.start&&n.end&&n.step){let S=u.value,y;for(;S&&d.value&&$b(S,d.value)<=0;)y=Lt(S,"HH:mm").locale(i.value).format(n.format),v.push({value:y,disabled:$b(S,p.value||"-1:-1")<=0||$b(S,b.value||"100:100")>=0}),S=h1e(S,f.value)}return v});return t({blur:()=>{var v,S;(S=(v=l.value)==null?void 0:v.blur)==null||S.call(v)},focus:()=>{var v,S;(S=(v=l.value)==null?void 0:v.focus)==null||S.call(v)}}),(v,S)=>(K(),ie(c(Pi),{ref_key:"select",ref:l,"model-value":c(s),disabled:c(o),clearable:v.clearable,"clear-icon":v.clearIcon,size:v.size,effect:v.effect,placeholder:v.placeholder,"default-first-option":"",filterable:v.editable,"onUpdate:modelValue":S[0]||(S[0]=y=>v.$emit("update:modelValue",y)),onChange:S[1]||(S[1]=y=>v.$emit("change",y)),onBlur:S[2]||(S[2]=y=>v.$emit("blur",y)),onFocus:S[3]||(S[3]=y=>v.$emit("focus",y))},{prefix:B(()=>[v.prefixIcon?(K(),ie(c(it),{key:0,class:q(c(a).e("prefix-icon"))},{default:B(()=>[(K(),ie(Ot(v.prefixIcon)))]),_:1},8,["class"])):ae("v-if",!0)]),default:B(()=>[(K(!0),F(Qe,null,Nt(c(A),y=>(K(),ie(c(r),{key:y.value,label:y.value,value:y.value,disabled:y.disabled},null,8,["label","value","disabled"]))),128))]),_:1},8,["model-value","disabled","clearable","clear-icon","size","effect","placeholder","filterable"]))}});var Gf=Be(S1e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/time-select/src/time-select.vue"]]);Gf.install=e=>{e.component(Gf.name,Gf)};const y1e=Gf,A1e=y1e,W1e=$({name:"ElTimeline",setup(e,{slots:t}){const n=ze("timeline");return zt("timeline",t),()=>st("ul",{class:[n.b()]},[ue(t,"default")])}}),k1e=Ie({timestamp:{type:String,default:""},hideTimestamp:{type:Boolean,default:!1},center:{type:Boolean,default:!1},placement:{type:String,values:["top","bottom"],default:"bottom"},type:{type:String,values:["primary","success","warning","danger","info"],default:""},color:{type:String,default:""},size:{type:String,values:["normal","large"],default:"normal"},icon:{type:un},hollow:{type:Boolean,default:!1}}),V1e=$({name:"ElTimelineItem"}),P1e=$({...V1e,props:k1e,setup(e){const t=e,n=ze("timeline-item"),r=X(()=>[n.e("node"),n.em("node",t.size||""),n.em("node",t.type||""),n.is("hollow",t.hollow)]);return(a,l)=>(K(),F("li",{class:q([c(n).b(),{[c(n).e("center")]:a.center}])},[z("div",{class:q(c(n).e("tail"))},null,2),a.$slots.dot?ae("v-if",!0):(K(),F("div",{key:0,class:q(c(r)),style:lt({backgroundColor:a.color})},[a.icon?(K(),ie(c(it),{key:0,class:q(c(n).e("icon"))},{default:B(()=>[(K(),ie(Ot(a.icon)))]),_:1},8,["class"])):ae("v-if",!0)],6)),a.$slots.dot?(K(),F("div",{key:1,class:q(c(n).e("dot"))},[ue(a.$slots,"dot")],2)):ae("v-if",!0),z("div",{class:q(c(n).e("wrapper"))},[!a.hideTimestamp&&a.placement==="top"?(K(),F("div",{key:0,class:q([c(n).e("timestamp"),c(n).is("top")])},je(a.timestamp),3)):ae("v-if",!0),z("div",{class:q(c(n).e("content"))},[ue(a.$slots,"default")],2),!a.hideTimestamp&&a.placement==="bottom"?(K(),F("div",{key:1,class:q([c(n).e("timestamp"),c(n).is("bottom")])},je(a.timestamp),3)):ae("v-if",!0)],2)],2))}});var yK=Be(P1e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/timeline/src/timeline-item.vue"]]);const T1e=qt(W1e,{TimelineItem:yK}),K1e=Nn(yK),AK=Ie({nowrap:Boolean});var WK=(e=>(e.top="top",e.bottom="bottom",e.left="left",e.right="right",e))(WK||{});const N1e=Object.values(WK),R2=Ie({width:{type:Number,default:10},height:{type:Number,default:10},style:{type:ve(Object),default:null}}),x1e=Ie({side:{type:ve(String),values:N1e,required:!0}}),X1e=["absolute","fixed"],g1e=["top-start","top-end","top","bottom-start","bottom-end","bottom","left-start","left-end","left","right-start","right-end","right"],J2=Ie({ariaLabel:String,arrowPadding:{type:ve(Number),default:5},effect:{type:String,default:""},contentClass:String,placement:{type:ve(String),values:g1e,default:"bottom"},reference:{type:ve(Object),default:null},offset:{type:Number,default:8},strategy:{type:ve(String),values:X1e,default:"absolute"},showArrow:{type:Boolean,default:!1}}),F2=Ie({delayDuration:{type:Number,default:300},defaultOpen:Boolean,open:{type:Boolean,default:void 0},onOpenChange:{type:ve(Function)},"onUpdate:open":{type:ve(Function)}}),Yi={type:ve(Function)},z2=Ie({onBlur:Yi,onClick:Yi,onFocus:Yi,onMouseDown:Yi,onMouseEnter:Yi,onMouseLeave:Yi}),w1e=Ie({...F2,...R2,...z2,...J2,alwaysOn:Boolean,fullTransition:Boolean,transitionProps:{type:ve(Object),default:null},teleported:Boolean,to:{type:ve(String),default:"body"}}),eb=Symbol("tooltipV2"),kK=Symbol("tooltipV2Content"),e1="tooltip_v2.open",j1e=$({name:"ElTooltipV2Root"}),L1e=$({...j1e,props:F2,setup(e,{expose:t}){const n=e,r=J(n.defaultOpen),a=J(null),l=X({get:()=>XC(n.open)?r.value:n.open,set:m=>{var v;r.value=m,(v=n["onUpdate:open"])==null||v.call(n,m)}}),o=X(()=>mt(n.delayDuration)&&n.delayDuration>0),{start:i,stop:s}=Ao(()=>{l.value=!0},X(()=>n.delayDuration),{immediate:!1}),u=ze("tooltip-v2"),d=Cr(),f=()=>{s(),l.value=!0},p=()=>{c(o)?i():f()},b=f,A=()=>{s(),l.value=!1};return Ve(l,m=>{var v;m&&(document.dispatchEvent(new CustomEvent(e1)),b()),(v=n.onOpenChange)==null||v.call(n,m)}),At(()=>{document.addEventListener(e1,A)}),tn(()=>{s(),document.removeEventListener(e1,A)}),zt(eb,{contentId:d,triggerRef:a,ns:u,onClose:A,onDelayOpen:p,onOpen:b}),t({onOpen:b,onClose:A}),(m,v)=>ue(m.$slots,"default",{open:c(l)})}});var q1e=Be(L1e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/root.vue"]]);const U1e=$({name:"ElTooltipV2Arrow"}),O1e=$({...U1e,props:{...R2,...x1e},setup(e){const t=e,{ns:n}=tt(eb),{arrowRef:r}=tt(kK),a=X(()=>{const{style:l,width:o,height:i}=t,s=n.namespace.value;return{[`--${s}-tooltip-v2-arrow-width`]:`${o}px`,[`--${s}-tooltip-v2-arrow-height`]:`${i}px`,[`--${s}-tooltip-v2-arrow-border-width`]:`${o/2}px`,[`--${s}-tooltip-v2-arrow-cover-width`]:o/2-1,...l||{}}});return(l,o)=>(K(),F("span",{ref_key:"arrowRef",ref:r,style:lt(c(a)),class:q(c(n).e("arrow"))},null,6))}});var hA=Be(O1e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/arrow.vue"]]);const R1e=Ie({style:{type:ve([String,Object,Array]),default:()=>({})}}),J1e=$({name:"ElVisuallyHidden"}),F1e=$({...J1e,props:R1e,setup(e){const t=e,n=X(()=>[t.style,{position:"absolute",border:0,width:1,height:1,padding:0,margin:-1,overflow:"hidden",clip:"rect(0, 0, 0, 0)",whiteSpace:"nowrap",wordWrap:"normal"}]);return(r,a)=>(K(),F("span",Ut(r.$attrs,{style:c(n)}),[ue(r.$slots,"default")],16))}});var z1e=Be(F1e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/visual-hidden/src/visual-hidden.vue"]]);const H1e=["data-side"],Z1e=$({name:"ElTooltipV2Content"}),G1e=$({...Z1e,props:{...J2,...AK},setup(e){const t=e,{triggerRef:n,contentId:r}=tt(eb),a=J(t.placement),l=J(t.strategy),o=J(null),{referenceRef:i,contentRef:s,middlewareData:u,x:d,y:f,update:p}=KQ({placement:a,strategy:l,middleware:X(()=>{const y=[fQ(t.offset)];return t.showArrow&&y.push(NQ({arrowRef:o})),y})}),b=su().nextZIndex(),A=ze("tooltip-v2"),h=X(()=>a.value.split("-")[0]),m=X(()=>({position:c(l),top:`${c(f)||0}px`,left:`${c(d)||0}px`,zIndex:b})),v=X(()=>{if(!t.showArrow)return{};const{arrow:y}=c(u);return{[`--${A.namespace.value}-tooltip-v2-arrow-x`]:`${y==null?void 0:y.x}px`||"",[`--${A.namespace.value}-tooltip-v2-arrow-y`]:`${y==null?void 0:y.y}px`||""}}),S=X(()=>[A.e("content"),A.is("dark",t.effect==="dark"),A.is(c(l)),t.contentClass]);return Ve(o,()=>p()),Ve(()=>t.placement,y=>a.value=y),At(()=>{Ve(()=>t.reference||n.value,y=>{i.value=y||void 0},{immediate:!0})}),zt(kK,{arrowRef:o}),(y,W)=>(K(),F("div",{ref_key:"contentRef",ref:s,style:lt(c(m)),"data-tooltip-v2-root":""},[y.nowrap?ae("v-if",!0):(K(),F("div",{key:0,"data-side":c(h),class:q(c(S))},[ue(y.$slots,"default",{contentStyle:c(m),contentClass:c(S)}),C(c(z1e),{id:c(r),role:"tooltip"},{default:B(()=>[y.ariaLabel?(K(),F(Qe,{key:0},[Xt(je(y.ariaLabel),1)],64)):ue(y.$slots,"default",{key:1})]),_:3},8,["id"]),ue(y.$slots,"arrow",{style:lt(c(v)),side:c(h)})],10,H1e))],4))}});var mA=Be(G1e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/content.vue"]]);const C1e=Ie({setRef:{type:ve(Function),required:!0},onlyChild:Boolean});var M1e=$({props:C1e,setup(e,{slots:t}){const n=J(),r=Rv(n,a=>{a?e.setRef(a.nextElementSibling):e.setRef(null)});return()=>{var a;const[l]=((a=t.default)==null?void 0:a.call(t))||[],o=e.onlyChild?OB(l.children):l.children;return C(Qe,{ref:r},[o])}}});const D1e=$({name:"ElTooltipV2Trigger"}),E1e=$({...D1e,props:{...AK,...z2},setup(e){const t=e,{onClose:n,onOpen:r,onDelayOpen:a,triggerRef:l,contentId:o}=tt(eb);let i=!1;const s=S=>{l.value=S},u=()=>{i=!1},d=Pn(t.onMouseEnter,a),f=Pn(t.onMouseLeave,n),p=Pn(t.onMouseDown,()=>{n(),i=!0,document.addEventListener("mouseup",u,{once:!0})}),b=Pn(t.onFocus,()=>{i||r()}),A=Pn(t.onBlur,n),h=Pn(t.onClick,S=>{S.detail===0&&n()}),m={blur:A,click:h,focus:b,mousedown:p,mouseenter:d,mouseleave:f},v=(S,y,W)=>{S&&Object.entries(y).forEach(([k,V])=>{S[W](k,V)})};return Ve(l,(S,y)=>{v(S,m,"addEventListener"),v(y,m,"removeEventListener"),S&&S.setAttribute("aria-describedby",o.value)}),tn(()=>{v(l.value,m,"removeEventListener"),document.removeEventListener("mouseup",u)}),(S,y)=>S.nowrap?(K(),ie(c(M1e),{key:0,"set-ref":s,"only-child":""},{default:B(()=>[ue(S.$slots,"default")]),_:3})):(K(),F("button",Ut({key:1,ref_key:"triggerRef",ref:l},S.$attrs),[ue(S.$slots,"default")],16))}});var I1e=Be(E1e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/trigger.vue"]]);const B1e=$({name:"ElTooltipV2"}),Y1e=$({...B1e,props:w1e,setup(e){const n=Kn(e),r=Bt(kl(n,Object.keys(R2))),a=Bt(kl(n,Object.keys(J2))),l=Bt(kl(n,Object.keys(F2))),o=Bt(kl(n,Object.keys(z2)));return(i,s)=>(K(),ie(q1e,fa(nd(l)),{default:B(({open:u})=>[C(I1e,Ut(o,{nowrap:""}),{default:B(()=>[ue(i.$slots,"trigger")]),_:3},16),(K(),ie(au,{to:i.to,disabled:!i.teleported},[i.fullTransition?(K(),ie(fn,fa(Ut({key:0},i.transitionProps)),{default:B(()=>[i.alwaysOn||u?(K(),ie(mA,fa(Ut({key:0},a)),{arrow:B(({style:d,side:f})=>[i.showArrow?(K(),ie(hA,Ut({key:0},r,{style:d,side:f}),null,16,["style","side"])):ae("v-if",!0)]),default:B(()=>[ue(i.$slots,"default")]),_:3},16)):ae("v-if",!0)]),_:2},1040)):(K(),F(Qe,{key:1},[i.alwaysOn||u?(K(),ie(mA,fa(Ut({key:0},a)),{arrow:B(({style:d,side:f})=>[i.showArrow?(K(),ie(hA,Ut({key:0},r,{style:d,side:f}),null,16,["style","side"])):ae("v-if",!0)]),default:B(()=>[ue(i.$slots,"default")]),_:3},16)):ae("v-if",!0)],64))],8,["to","disabled"]))]),_:3},16))}});var Q1e=Be(Y1e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/tooltip.vue"]]);const _1e=qt(Q1e),VK="left-check-change",PK="right-check-change",is=Ie({data:{type:ve(Array),default:()=>[]},titles:{type:ve(Array),default:()=>[]},buttonTexts:{type:ve(Array),default:()=>[]},filterPlaceholder:String,filterMethod:{type:ve(Function)},leftDefaultChecked:{type:ve(Array),default:()=>[]},rightDefaultChecked:{type:ve(Array),default:()=>[]},renderContent:{type:ve(Function)},modelValue:{type:ve(Array),default:()=>[]},format:{type:ve(Object),default:()=>({})},filterable:Boolean,props:{type:ve(Object),default:()=>An({label:"label",key:"key",disabled:"disabled"})},targetOrder:{type:String,values:["original","push","unshift"],default:"original"},validateEvent:{type:Boolean,default:!0}}),Uh=(e,t)=>[e,t].every(et)||et(e)&&On(t),$1e={[mn]:(e,t,n)=>[e,n].every(et)&&["left","right"].includes(t),[Rt]:e=>et(e),[VK]:Uh,[PK]:Uh},Oh="checked-change",ehe=Ie({data:is.data,optionRender:{type:ve(Function)},placeholder:String,title:String,filterable:Boolean,format:is.format,filterMethod:is.filterMethod,defaultChecked:is.leftDefaultChecked,props:is.props}),the={[Oh]:Uh},Vd=e=>{const t={label:"label",key:"key",disabled:"disabled"};return X(()=>({...t,...e.props}))},nhe=(e,t,n)=>{const r=Vd(e),a=X(()=>e.data.filter(d=>ht(e.filterMethod)?e.filterMethod(t.query,d):String(d[r.value.label]||d[r.value.key]).toLowerCase().includes(t.query.toLowerCase()))),l=X(()=>a.value.filter(d=>!d[r.value.disabled])),o=X(()=>{const d=t.checked.length,f=e.data.length,{noChecked:p,hasChecked:b}=e.format;return p&&b?d>0?b.replace(/\${checked}/g,d.toString()).replace(/\${total}/g,f.toString()):p.replace(/\${total}/g,f.toString()):`${d}/${f}`}),i=X(()=>{const d=t.checked.length;return d>0&&d<l.value.length}),s=()=>{const d=l.value.map(f=>f[r.value.key]);t.allChecked=d.length>0&&d.every(f=>t.checked.includes(f))},u=d=>{t.checked=d?l.value.map(f=>f[r.value.key]):[]};return Ve(()=>t.checked,(d,f)=>{if(s(),t.checkChangeByUser){const p=d.concat(f).filter(b=>!d.includes(b)||!f.includes(b));n(Oh,d,p)}else n(Oh,d),t.checkChangeByUser=!0}),Ve(l,()=>{s()}),Ve(()=>e.data,()=>{const d=[],f=a.value.map(p=>p[r.value.key]);t.checked.forEach(p=>{f.includes(p)&&d.push(p)}),t.checkChangeByUser=!1,t.checked=d}),Ve(()=>e.defaultChecked,(d,f)=>{if(f&&d.length===f.length&&d.every(A=>f.includes(A)))return;const p=[],b=l.value.map(A=>A[r.value.key]);d.forEach(A=>{b.includes(A)&&p.push(A)}),t.checkChangeByUser=!1,t.checked=p},{immediate:!0}),{filteredData:a,checkableData:l,checkedSummary:o,isIndeterminate:i,updateAllChecked:s,handleAllCheckedChange:u}},rhe=(e,t)=>({onSourceCheckedChange:(a,l)=>{e.leftChecked=a,l&&t(VK,a,l)},onTargetCheckedChange:(a,l)=>{e.rightChecked=a,l&&t(PK,a,l)}}),ahe=e=>{const t=Vd(e),n=X(()=>e.data.reduce((l,o)=>(l[o[t.value.key]]=o)&&l,{})),r=X(()=>e.data.filter(l=>!e.modelValue.includes(l[t.value.key]))),a=X(()=>e.targetOrder==="original"?e.data.filter(l=>e.modelValue.includes(l[t.value.key])):e.modelValue.reduce((l,o)=>{const i=n.value[o];return i&&l.push(i),l},[]));return{sourceData:r,targetData:a}},lhe=(e,t,n)=>{const r=Vd(e),a=(i,s,u)=>{n(Rt,i),n(mn,i,s,u)};return{addToLeft:()=>{const i=e.modelValue.slice();t.rightChecked.forEach(s=>{const u=i.indexOf(s);u>-1&&i.splice(u,1)}),a(i,"left",t.rightChecked)},addToRight:()=>{let i=e.modelValue.slice();const s=e.data.filter(u=>{const d=u[r.value.key];return t.leftChecked.includes(d)&&!e.modelValue.includes(d)}).map(u=>u[r.value.key]);i=e.targetOrder==="unshift"?s.concat(i):i.concat(s),e.targetOrder==="original"&&(i=e.data.filter(u=>i.includes(u[r.value.key])).map(u=>u[r.value.key])),a(i,"right",t.leftChecked)}}},ohe=$({name:"ElTransferPanel"}),ihe=$({...ohe,props:ehe,emits:the,setup(e,{expose:t,emit:n}){const r=e,a=er(),l=({option:y})=>y,{t:o}=It(),i=ze("transfer"),s=Bt({checked:[],allChecked:!1,query:"",checkChangeByUser:!0}),u=Vd(r),{filteredData:d,checkedSummary:f,isIndeterminate:p,handleAllCheckedChange:b}=nhe(r,s,n),A=X(()=>!da(s.query)&&da(d.value)),h=X(()=>!da(a.default()[0].children)),{checked:m,allChecked:v,query:S}=Kn(s);return t({query:S}),(y,W)=>(K(),F("div",{class:q(c(i).b("panel"))},[z("p",{class:q(c(i).be("panel","header"))},[C(c(Aa),{modelValue:c(v),"onUpdate:modelValue":W[0]||(W[0]=k=>Qt(v)?v.value=k:null),indeterminate:c(p),"validate-event":!1,onChange:c(b)},{default:B(()=>[Xt(je(y.title)+" ",1),z("span",null,je(c(f)),1)]),_:1},8,["modelValue","indeterminate","onChange"])],2),z("div",{class:q([c(i).be("panel","body"),c(i).is("with-footer",c(h))])},[y.filterable?(K(),ie(c(vr),{key:0,modelValue:c(S),"onUpdate:modelValue":W[1]||(W[1]=k=>Qt(S)?S.value=k:null),class:q(c(i).be("panel","filter")),size:"default",placeholder:y.placeholder,"prefix-icon":c(Ck),clearable:"","validate-event":!1},null,8,["modelValue","class","placeholder","prefix-icon"])):ae("v-if",!0),Vt(C(c(gP),{modelValue:c(m),"onUpdate:modelValue":W[2]||(W[2]=k=>Qt(m)?m.value=k:null),"validate-event":!1,class:q([c(i).is("filterable",y.filterable),c(i).be("panel","list")])},{default:B(()=>[(K(!0),F(Qe,null,Nt(c(d),k=>(K(),ie(c(Aa),{key:k[c(u).key],class:q(c(i).be("panel","item")),label:k[c(u).key],disabled:k[c(u).disabled],"validate-event":!1},{default:B(()=>{var V;return[C(l,{option:(V=y.optionRender)==null?void 0:V.call(y,k)},null,8,["option"])]}),_:2},1032,["class","label","disabled"]))),128))]),_:1},8,["modelValue","class"]),[[Ct,!c(A)&&!c(da)(y.data)]]),Vt(z("p",{class:q(c(i).be("panel","empty"))},je(c(A)?c(o)("el.transfer.noMatch"):c(o)("el.transfer.noData")),3),[[Ct,c(A)||c(da)(y.data)]])],2),c(h)?(K(),F("p",{key:0,class:q(c(i).be("panel","footer"))},[ue(y.$slots,"default")],2)):ae("v-if",!0)],2))}});var SA=Be(ihe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/transfer/src/transfer-panel.vue"]]);const she={key:0},uhe={key:0},che=$({name:"ElTransfer"}),dhe=$({...che,props:is,emits:$1e,setup(e,{expose:t,emit:n}){const r=e,a=er(),{t:l}=It(),o=ze("transfer"),{formItem:i}=wr(),s=Bt({leftChecked:[],rightChecked:[]}),u=Vd(r),{sourceData:d,targetData:f}=ahe(r),{onSourceCheckedChange:p,onTargetCheckedChange:b}=rhe(s,n),{addToLeft:A,addToRight:h}=lhe(r,s,n),m=J(),v=J(),S=P=>{switch(P){case"left":m.value.query="";break;case"right":v.value.query="";break}},y=X(()=>r.buttonTexts.length===2),W=X(()=>r.titles[0]||l("el.transfer.titles.0")),k=X(()=>r.titles[1]||l("el.transfer.titles.1")),V=X(()=>r.filterPlaceholder||l("el.transfer.filterPlaceholder"));Ve(()=>r.modelValue,()=>{var P;r.validateEvent&&((P=i==null?void 0:i.validate)==null||P.call(i,"change").catch(x=>void 0))});const T=X(()=>P=>r.renderContent?r.renderContent(st,P):a.default?a.default({option:P}):st("span",P[u.value.label]||P[u.value.key]));return t({clearQuery:S,leftPanel:m,rightPanel:v}),(P,x)=>(K(),F("div",{class:q(c(o).b())},[C(SA,{ref_key:"leftPanel",ref:m,data:c(d),"option-render":c(T),placeholder:c(V),title:c(W),filterable:P.filterable,format:P.format,"filter-method":P.filterMethod,"default-checked":P.leftDefaultChecked,props:r.props,onCheckedChange:c(p)},{default:B(()=>[ue(P.$slots,"left-footer")]),_:3},8,["data","option-render","placeholder","title","filterable","format","filter-method","default-checked","props","onCheckedChange"]),z("div",{class:q(c(o).e("buttons"))},[C(c(sr),{type:"primary",class:q([c(o).e("button"),c(o).is("with-texts",c(y))]),disabled:c(da)(s.rightChecked),onClick:c(A)},{default:B(()=>[C(c(it),null,{default:B(()=>[C(c(Wo))]),_:1}),c(Hn)(P.buttonTexts[0])?ae("v-if",!0):(K(),F("span",she,je(P.buttonTexts[0]),1))]),_:1},8,["class","disabled","onClick"]),C(c(sr),{type:"primary",class:q([c(o).e("button"),c(o).is("with-texts",c(y))]),disabled:c(da)(s.leftChecked),onClick:c(h)},{default:B(()=>[c(Hn)(P.buttonTexts[1])?ae("v-if",!0):(K(),F("span",uhe,je(P.buttonTexts[1]),1)),C(c(it),null,{default:B(()=>[C(c(Vr))]),_:1})]),_:1},8,["class","disabled","onClick"])],2),C(SA,{ref_key:"rightPanel",ref:v,data:c(f),"option-render":c(T),placeholder:c(V),filterable:P.filterable,format:P.format,"filter-method":P.filterMethod,title:c(k),"default-checked":P.rightDefaultChecked,props:r.props,onCheckedChange:c(b)},{default:B(()=>[ue(P.$slots,"right-footer")]),_:3},8,["data","option-render","placeholder","filterable","format","filter-method","title","default-checked","props","onCheckedChange"])],2))}});var fhe=Be(dhe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/transfer/src/transfer.vue"]]);const phe=qt(fhe),Ts="$treeNodeId",yA=function(e,t){!t||t[Ts]||Object.defineProperty(t,Ts,{value:e.id,enumerable:!1,configurable:!1,writable:!1})},H2=function(e,t){return e?t[e]:t[Ts]},Rh=(e,t,n)=>{const r=e.value.currentNode;n();const a=e.value.currentNode;r!==a&&t("current-change",a?a.data:null,a)},Jh=e=>{let t=!0,n=!0,r=!0;for(let a=0,l=e.length;a<l;a++){const o=e[a];(o.checked!==!0||o.indeterminate)&&(t=!1,o.disabled||(r=!1)),(o.checked!==!1||o.indeterminate)&&(n=!1)}return{all:t,none:n,allWithoutDisable:r,half:!t&&!n}},Cf=function(e){if(e.childNodes.length===0||e.loading)return;const{all:t,none:n,half:r}=Jh(e.childNodes);t?(e.checked=!0,e.indeterminate=!1):r?(e.checked=!1,e.indeterminate=!0):n&&(e.checked=!1,e.indeterminate=!1);const a=e.parent;!a||a.level===0||e.store.checkStrictly||Cf(a)},sf=function(e,t){const n=e.store.props,r=e.data||{},a=n[t];if(typeof a=="function")return a(r,e);if(typeof a=="string")return r[a];if(typeof a>"u"){const l=r[t];return l===void 0?"":l}};let vhe=0;class fi{constructor(t){this.id=vhe++,this.text=null,this.checked=!1,this.indeterminate=!1,this.data=null,this.expanded=!1,this.parent=null,this.visible=!0,this.isCurrent=!1,this.canFocus=!1;for(const n in t)Zt(t,n)&&(this[n]=t[n]);this.level=0,this.loaded=!1,this.childNodes=[],this.loading=!1,this.parent&&(this.level=this.parent.level+1)}initialize(){const t=this.store;if(!t)throw new Error("[Node]store is required!");t.registerNode(this);const n=t.props;if(n&&typeof n.isLeaf<"u"){const l=sf(this,"isLeaf");typeof l=="boolean"&&(this.isLeafByUser=l)}if(t.lazy!==!0&&this.data?(this.setData(this.data),t.defaultExpandAll&&(this.expanded=!0,this.canFocus=!0)):this.level>0&&t.lazy&&t.defaultExpandAll&&this.expand(),Array.isArray(this.data)||yA(this,this.data),!this.data)return;const r=t.defaultExpandedKeys,a=t.key;a&&r&&r.includes(this.key)&&this.expand(null,t.autoExpandParent),a&&t.currentNodeKey!==void 0&&this.key===t.currentNodeKey&&(t.currentNode=this,t.currentNode.isCurrent=!0),t.lazy&&t._initDefaultCheckedNode(this),this.updateLeafState(),this.parent&&(this.level===1||this.parent.expanded===!0)&&(this.canFocus=!0)}setData(t){Array.isArray(t)||yA(this,t),this.data=t,this.childNodes=[];let n;this.level===0&&Array.isArray(this.data)?n=this.data:n=sf(this,"children")||[];for(let r=0,a=n.length;r<a;r++)this.insertChild({data:n[r]})}get label(){return sf(this,"label")}get key(){const t=this.store.key;return this.data?this.data[t]:null}get disabled(){return sf(this,"disabled")}get nextSibling(){const t=this.parent;if(t){const n=t.childNodes.indexOf(this);if(n>-1)return t.childNodes[n+1]}return null}get previousSibling(){const t=this.parent;if(t){const n=t.childNodes.indexOf(this);if(n>-1)return n>0?t.childNodes[n-1]:null}return null}contains(t,n=!0){return(this.childNodes||[]).some(r=>r===t||n&&r.contains(t))}remove(){const t=this.parent;t&&t.removeChild(this)}insertChild(t,n,r){if(!t)throw new Error("InsertChild error: child is required.");if(!(t instanceof fi)){if(!r){const a=this.getChildren(!0);a.includes(t.data)||(typeof n>"u"||n<0?a.push(t.data):a.splice(n,0,t.data))}Object.assign(t,{parent:this,store:this.store}),t=Bt(new fi(t)),t instanceof fi&&t.initialize()}t.level=this.level+1,typeof n>"u"||n<0?this.childNodes.push(t):this.childNodes.splice(n,0,t),this.updateLeafState()}insertBefore(t,n){let r;n&&(r=this.childNodes.indexOf(n)),this.insertChild(t,r)}insertAfter(t,n){let r;n&&(r=this.childNodes.indexOf(n),r!==-1&&(r+=1)),this.insertChild(t,r)}removeChild(t){const n=this.getChildren()||[],r=n.indexOf(t.data);r>-1&&n.splice(r,1);const a=this.childNodes.indexOf(t);a>-1&&(this.store&&this.store.deregisterNode(t),t.parent=null,this.childNodes.splice(a,1)),this.updateLeafState()}removeChildByData(t){let n=null;for(let r=0;r<this.childNodes.length;r++)if(this.childNodes[r].data===t){n=this.childNodes[r];break}n&&this.removeChild(n)}expand(t,n){const r=()=>{if(n){let a=this.parent;for(;a.level>0;)a.expanded=!0,a=a.parent}this.expanded=!0,t&&t(),this.childNodes.forEach(a=>{a.canFocus=!0})};this.shouldLoadData()?this.loadData(a=>{Array.isArray(a)&&(this.checked?this.setChecked(!0,!0):this.store.checkStrictly||Cf(this),r())}):r()}doCreateChildren(t,n={}){t.forEach(r=>{this.insertChild(Object.assign({data:r},n),void 0,!0)})}collapse(){this.expanded=!1,this.childNodes.forEach(t=>{t.canFocus=!1})}shouldLoadData(){return this.store.lazy===!0&&this.store.load&&!this.loaded}updateLeafState(){if(this.store.lazy===!0&&this.loaded!==!0&&typeof this.isLeafByUser<"u"){this.isLeaf=this.isLeafByUser;return}const t=this.childNodes;if(!this.store.lazy||this.store.lazy===!0&&this.loaded===!0){this.isLeaf=!t||t.length===0;return}this.isLeaf=!1}setChecked(t,n,r,a){if(this.indeterminate=t==="half",this.checked=t===!0,this.store.checkStrictly)return;if(!(this.shouldLoadData()&&!this.store.checkDescendants)){const{all:o,allWithoutDisable:i}=Jh(this.childNodes);!this.isLeaf&&!o&&i&&(this.checked=!1,t=!1);const s=()=>{if(n){const u=this.childNodes;for(let p=0,b=u.length;p<b;p++){const A=u[p];a=a||t!==!1;const h=A.disabled?A.checked:a;A.setChecked(h,n,!0,a)}const{half:d,all:f}=Jh(u);f||(this.checked=f,this.indeterminate=d)}};if(this.shouldLoadData()){this.loadData(()=>{s(),Cf(this)},{checked:t!==!1});return}else s()}const l=this.parent;!l||l.level===0||r||Cf(l)}getChildren(t=!1){if(this.level===0)return this.data;const n=this.data;if(!n)return null;const r=this.store.props;let a="children";return r&&(a=r.children||"children"),n[a]===void 0&&(n[a]=null),t&&!n[a]&&(n[a]=[]),n[a]}updateChildren(){const t=this.getChildren()||[],n=this.childNodes.map(l=>l.data),r={},a=[];t.forEach((l,o)=>{const i=l[Ts];!!i&&n.findIndex(u=>u[Ts]===i)>=0?r[i]={index:o,data:l}:a.push({index:o,data:l})}),this.store.lazy||n.forEach(l=>{r[l[Ts]]||this.removeChildByData(l)}),a.forEach(({index:l,data:o})=>{this.insertChild({data:o},l)}),this.updateLeafState()}loadData(t,n={}){if(this.store.lazy===!0&&this.store.load&&!this.loaded&&(!this.loading||Object.keys(n).length)){this.loading=!0;const r=a=>{this.childNodes=[],this.doCreateChildren(a,n),this.loaded=!0,this.loading=!1,this.updateLeafState(),t&&t.call(this,a)};this.store.load(this,r)}else t&&t.call(this)}}class bhe{constructor(t){this.currentNode=null,this.currentNodeKey=null;for(const n in t)Zt(t,n)&&(this[n]=t[n]);this.nodesMap={}}initialize(){if(this.root=new fi({data:this.data,store:this}),this.root.initialize(),this.lazy&&this.load){const t=this.load;t(this.root,n=>{this.root.doCreateChildren(n),this._initDefaultCheckedNodes()})}else this._initDefaultCheckedNodes()}filter(t){const n=this.filterNodeMethod,r=this.lazy,a=function(l){const o=l.root?l.root.childNodes:l.childNodes;if(o.forEach(i=>{i.visible=n.call(i,t,i.data,i),a(i)}),!l.visible&&o.length){let i=!0;i=!o.some(s=>s.visible),l.root?l.root.visible=i===!1:l.visible=i===!1}!t||l.visible&&!l.isLeaf&&!r&&l.expand()};a(this)}setData(t){t!==this.root.data?(this.root.setData(t),this._initDefaultCheckedNodes()):this.root.updateChildren()}getNode(t){if(t instanceof fi)return t;const n=Jt(t)?H2(this.key,t):t;return this.nodesMap[n]||null}insertBefore(t,n){const r=this.getNode(n);r.parent.insertBefore({data:t},r)}insertAfter(t,n){const r=this.getNode(n);r.parent.insertAfter({data:t},r)}remove(t){const n=this.getNode(t);n&&n.parent&&(n===this.currentNode&&(this.currentNode=null),n.parent.removeChild(n))}append(t,n){const r=n?this.getNode(n):this.root;r&&r.insertChild({data:t})}_initDefaultCheckedNodes(){const t=this.defaultCheckedKeys||[],n=this.nodesMap;t.forEach(r=>{const a=n[r];a&&a.setChecked(!0,!this.checkStrictly)})}_initDefaultCheckedNode(t){(this.defaultCheckedKeys||[]).includes(t.key)&&t.setChecked(!0,!this.checkStrictly)}setDefaultCheckedKey(t){t!==this.defaultCheckedKeys&&(this.defaultCheckedKeys=t,this._initDefaultCheckedNodes())}registerNode(t){const n=this.key;!t||!t.data||(n?t.key!==void 0&&(this.nodesMap[t.key]=t):this.nodesMap[t.id]=t)}deregisterNode(t){!this.key||!t||!t.data||(t.childNodes.forEach(r=>{this.deregisterNode(r)}),delete this.nodesMap[t.key])}getCheckedNodes(t=!1,n=!1){const r=[],a=function(l){(l.root?l.root.childNodes:l.childNodes).forEach(i=>{(i.checked||n&&i.indeterminate)&&(!t||t&&i.isLeaf)&&r.push(i.data),a(i)})};return a(this),r}getCheckedKeys(t=!1){return this.getCheckedNodes(t).map(n=>(n||{})[this.key])}getHalfCheckedNodes(){const t=[],n=function(r){(r.root?r.root.childNodes:r.childNodes).forEach(l=>{l.indeterminate&&t.push(l.data),n(l)})};return n(this),t}getHalfCheckedKeys(){return this.getHalfCheckedNodes().map(t=>(t||{})[this.key])}_getAllNodes(){const t=[],n=this.nodesMap;for(const r in n)Zt(n,r)&&t.push(n[r]);return t}updateChildren(t,n){const r=this.nodesMap[t];if(!r)return;const a=r.childNodes;for(let l=a.length-1;l>=0;l--){const o=a[l];this.remove(o.data)}for(let l=0,o=n.length;l<o;l++){const i=n[l];this.append(i,r.data)}}_setCheckedKeys(t,n=!1,r){const a=this._getAllNodes().sort((i,s)=>s.level-i.level),l=Object.create(null),o=Object.keys(r);a.forEach(i=>i.setChecked(!1,!1));for(let i=0,s=a.length;i<s;i++){const u=a[i],d=u.data[t].toString();if(!o.includes(d)){u.checked&&!l[d]&&u.setChecked(!1,!1);continue}let p=u.parent;for(;p&&p.level>0;)l[p.data[t]]=!0,p=p.parent;if(u.isLeaf||this.checkStrictly){u.setChecked(!0,!1);continue}if(u.setChecked(!0,!0),n){u.setChecked(!1,!1);const b=function(A){A.childNodes.forEach(m=>{m.isLeaf||m.setChecked(!1,!1),b(m)})};b(u)}}}setCheckedNodes(t,n=!1){const r=this.key,a={};t.forEach(l=>{a[(l||{})[r]]=!0}),this._setCheckedKeys(r,n,a)}setCheckedKeys(t,n=!1){this.defaultCheckedKeys=t;const r=this.key,a={};t.forEach(l=>{a[l]=!0}),this._setCheckedKeys(r,n,a)}setDefaultExpandedKeys(t){t=t||[],this.defaultExpandedKeys=t,t.forEach(n=>{const r=this.getNode(n);r&&r.expand(null,this.autoExpandParent)})}setChecked(t,n,r){const a=this.getNode(t);a&&a.setChecked(!!n,r)}getCurrentNode(){return this.currentNode}setCurrentNode(t){const n=this.currentNode;n&&(n.isCurrent=!1),this.currentNode=t,this.currentNode.isCurrent=!0}setUserCurrentNode(t,n=!0){const r=t[this.key],a=this.nodesMap[r];this.setCurrentNode(a),n&&this.currentNode.level>1&&this.currentNode.parent.expand(null,!0)}setCurrentNodeKey(t,n=!0){if(t==null){this.currentNode&&(this.currentNode.isCurrent=!1),this.currentNode=null;return}const r=this.getNode(t);r&&(this.setCurrentNode(r),n&&this.currentNode.level>1&&this.currentNode.parent.expand(null,!0))}}const hhe=$({name:"ElTreeNodeContent",props:{node:{type:Object,required:!0},renderContent:Function},setup(e){const t=ze("tree"),n=tt("NodeInstance"),r=tt("RootTree");return()=>{const a=e.node,{data:l,store:o}=a;return e.renderContent?e.renderContent(st,{_self:n,node:a,data:l,store:o}):r.ctx.slots.default?r.ctx.slots.default({node:a,data:l}):st("span",{class:t.be("node","label")},[a.label])}}});var mhe=Be(hhe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node-content.vue"]]);function TK(e){const t=tt("TreeNodeMap",null),n={treeNodeExpand:r=>{e.node!==r&&e.node.collapse()},children:[]};return t&&t.children.push(n),zt("TreeNodeMap",n),{broadcastExpanded:r=>{if(!!e.accordion)for(const a of n.children)a.treeNodeExpand(r)}}}const KK=Symbol("dragEvents");function She({props:e,ctx:t,el$:n,dropIndicator$:r,store:a}){const l=ze("tree"),o=J({showDropIndicator:!1,draggingNode:null,dropNode:null,allowDrop:!0,dropType:null});return zt(KK,{treeNodeDragStart:({event:d,treeNode:f})=>{if(typeof e.allowDrag=="function"&&!e.allowDrag(f.node))return d.preventDefault(),!1;d.dataTransfer.effectAllowed="move";try{d.dataTransfer.setData("text/plain","")}catch{}o.value.draggingNode=f,t.emit("node-drag-start",f.node,d)},treeNodeDragOver:({event:d,treeNode:f})=>{const p=f,b=o.value.dropNode;b&&b.node.id!==p.node.id&&Hr(b.$el,l.is("drop-inner"));const A=o.value.draggingNode;if(!A||!p)return;let h=!0,m=!0,v=!0,S=!0;typeof e.allowDrop=="function"&&(h=e.allowDrop(A.node,p.node,"prev"),S=m=e.allowDrop(A.node,p.node,"inner"),v=e.allowDrop(A.node,p.node,"next")),d.dataTransfer.dropEffect=m||h||v?"move":"none",(h||m||v)&&(b==null?void 0:b.node.id)!==p.node.id&&(b&&t.emit("node-drag-leave",A.node,b.node,d),t.emit("node-drag-enter",A.node,p.node,d)),(h||m||v)&&(o.value.dropNode=p),p.node.nextSibling===A.node&&(v=!1),p.node.previousSibling===A.node&&(h=!1),p.node.contains(A.node,!1)&&(m=!1),(A.node===p.node||A.node.contains(p.node))&&(h=!1,m=!1,v=!1);const y=p.$el.querySelector(`.${l.be("node","content")}`).getBoundingClientRect(),W=n.value.getBoundingClientRect();let k;const V=h?m?.25:v?.45:1:-1,T=v?m?.75:h?.55:0:1;let P=-9999;const x=d.clientY-y.top;x<y.height*V?k="before":x>y.height*T?k="after":m?k="inner":k="none";const g=p.$el.querySelector(`.${l.be("node","expand-icon")}`).getBoundingClientRect(),j=r.value;k==="before"?P=g.top-W.top:k==="after"&&(P=g.bottom-W.top),j.style.top=`${P}px`,j.style.left=`${g.right-W.left}px`,k==="inner"?Ea(p.$el,l.is("drop-inner")):Hr(p.$el,l.is("drop-inner")),o.value.showDropIndicator=k==="before"||k==="after",o.value.allowDrop=o.value.showDropIndicator||S,o.value.dropType=k,t.emit("node-drag-over",A.node,p.node,d)},treeNodeDragEnd:d=>{const{draggingNode:f,dropType:p,dropNode:b}=o.value;if(d.preventDefault(),d.dataTransfer.dropEffect="move",f&&b){const A={data:f.node.data};p!=="none"&&f.node.remove(),p==="before"?b.node.parent.insertBefore(A,b.node):p==="after"?b.node.parent.insertAfter(A,b.node):p==="inner"&&b.node.insertChild(A),p!=="none"&&a.value.registerNode(A),Hr(b.$el,l.is("drop-inner")),t.emit("node-drag-end",f.node,b.node,p,d),p!=="none"&&t.emit("node-drop",f.node,b.node,p,d)}f&&!b&&t.emit("node-drag-end",f.node,null,p,d),o.value.showDropIndicator=!1,o.value.draggingNode=null,o.value.dropNode=null,o.value.allowDrop=!0}}),{dragState:o}}const yhe=$({name:"ElTreeNode",components:{ElCollapseTransition:Yv,ElCheckbox:Aa,NodeContent:mhe,ElIcon:it,Loading:Uo},props:{node:{type:fi,default:()=>({})},props:{type:Object,default:()=>({})},accordion:Boolean,renderContent:Function,renderAfterExpand:Boolean,showCheckbox:{type:Boolean,default:!1}},emits:["node-expand"],setup(e,t){const n=ze("tree"),{broadcastExpanded:r}=TK(e),a=tt("RootTree"),l=J(!1),o=J(!1),i=J(null),s=J(null),u=J(null),d=tt(KK),f=Tt();zt("NodeInstance",f),e.node.expanded&&(l.value=!0,o.value=!0);const p=a.props.props.children||"children";Ve(()=>{const x=e.node.data[p];return x&&[...x]},()=>{e.node.updateChildren()}),Ve(()=>e.node.indeterminate,x=>{h(e.node.checked,x)}),Ve(()=>e.node.checked,x=>{h(x,e.node.indeterminate)}),Ve(()=>e.node.expanded,x=>{at(()=>l.value=x),x&&(o.value=!0)});const b=x=>H2(a.props.nodeKey,x.data),A=x=>{const g=e.props.class;if(!g)return{};let j;if(ht(g)){const{data:L}=x;j=g(L,x)}else j=g;return Pt(j)?{[j]:!0}:j},h=(x,g)=>{(i.value!==x||s.value!==g)&&a.ctx.emit("check-change",e.node.data,x,g),i.value=x,s.value=g},m=x=>{Rh(a.store,a.ctx.emit,()=>a.store.value.setCurrentNode(e.node)),a.currentNode.value=e.node,a.props.expandOnClickNode&&S(),a.props.checkOnClickNode&&!e.node.disabled&&y(null,{target:{checked:!e.node.checked}}),a.ctx.emit("node-click",e.node.data,e.node,f,x)},v=x=>{a.instance.vnode.props.onNodeContextmenu&&(x.stopPropagation(),x.preventDefault()),a.ctx.emit("node-contextmenu",x,e.node.data,e.node,f)},S=()=>{e.node.isLeaf||(l.value?(a.ctx.emit("node-collapse",e.node.data,e.node,f),e.node.collapse()):(e.node.expand(),t.emit("node-expand",e.node.data,e.node,f)))},y=(x,g)=>{e.node.setChecked(g.target.checked,!a.props.checkStrictly),at(()=>{const j=a.store.value;a.ctx.emit("check",e.node.data,{checkedNodes:j.getCheckedNodes(),checkedKeys:j.getCheckedKeys(),halfCheckedNodes:j.getHalfCheckedNodes(),halfCheckedKeys:j.getHalfCheckedKeys()})})};return{ns:n,node$:u,tree:a,expanded:l,childNodeRendered:o,oldChecked:i,oldIndeterminate:s,getNodeKey:b,getNodeClass:A,handleSelectChange:h,handleClick:m,handleContextMenu:v,handleExpandIconClick:S,handleCheckChange:y,handleChildNodeExpand:(x,g,j)=>{r(g),a.ctx.emit("node-expand",x,g,j)},handleDragStart:x=>{!a.props.draggable||d.treeNodeDragStart({event:x,treeNode:e})},handleDragOver:x=>{x.preventDefault(),a.props.draggable&&d.treeNodeDragOver({event:x,treeNode:{$el:u.value,node:e.node}})},handleDrop:x=>{x.preventDefault()},handleDragEnd:x=>{!a.props.draggable||d.treeNodeDragEnd(x)},CaretRight:Fk}}}),Ahe=["aria-expanded","aria-disabled","aria-checked","draggable","data-key"],Whe=["aria-expanded"];function khe(e,t,n,r,a,l){const o=rt("el-icon"),i=rt("el-checkbox"),s=rt("loading"),u=rt("node-content"),d=rt("el-tree-node"),f=rt("el-collapse-transition");return Vt((K(),F("div",{ref:"node$",class:q([e.ns.b("node"),e.ns.is("expanded",e.expanded),e.ns.is("current",e.node.isCurrent),e.ns.is("hidden",!e.node.visible),e.ns.is("focusable",!e.node.disabled),e.ns.is("checked",!e.node.disabled&&e.node.checked),e.getNodeClass(e.node)]),role:"treeitem",tabindex:"-1","aria-expanded":e.expanded,"aria-disabled":e.node.disabled,"aria-checked":e.node.checked,draggable:e.tree.props.draggable,"data-key":e.getNodeKey(e.node),onClick:t[1]||(t[1]=pt((...p)=>e.handleClick&&e.handleClick(...p),["stop"])),onContextmenu:t[2]||(t[2]=(...p)=>e.handleContextMenu&&e.handleContextMenu(...p)),onDragstart:t[3]||(t[3]=pt((...p)=>e.handleDragStart&&e.handleDragStart(...p),["stop"])),onDragover:t[4]||(t[4]=pt((...p)=>e.handleDragOver&&e.handleDragOver(...p),["stop"])),onDragend:t[5]||(t[5]=pt((...p)=>e.handleDragEnd&&e.handleDragEnd(...p),["stop"])),onDrop:t[6]||(t[6]=pt((...p)=>e.handleDrop&&e.handleDrop(...p),["stop"]))},[z("div",{class:q(e.ns.be("node","content")),style:lt({paddingLeft:(e.node.level-1)*e.tree.props.indent+"px"})},[e.tree.props.icon||e.CaretRight?(K(),ie(o,{key:0,class:q([e.ns.be("node","expand-icon"),e.ns.is("leaf",e.node.isLeaf),{expanded:!e.node.isLeaf&&e.expanded}]),onClick:pt(e.handleExpandIconClick,["stop"])},{default:B(()=>[(K(),ie(Ot(e.tree.props.icon||e.CaretRight)))]),_:1},8,["class","onClick"])):ae("v-if",!0),e.showCheckbox?(K(),ie(i,{key:1,"model-value":e.node.checked,indeterminate:e.node.indeterminate,disabled:!!e.node.disabled,onClick:t[0]||(t[0]=pt(()=>{},["stop"])),onChange:e.handleCheckChange},null,8,["model-value","indeterminate","disabled","onChange"])):ae("v-if",!0),e.node.loading?(K(),ie(o,{key:2,class:q([e.ns.be("node","loading-icon"),e.ns.is("loading")])},{default:B(()=>[C(s)]),_:1},8,["class"])):ae("v-if",!0),C(u,{node:e.node,"render-content":e.renderContent},null,8,["node","render-content"])],6),C(f,null,{default:B(()=>[!e.renderAfterExpand||e.childNodeRendered?Vt((K(),F("div",{key:0,class:q(e.ns.be("node","children")),role:"group","aria-expanded":e.expanded},[(K(!0),F(Qe,null,Nt(e.node.childNodes,p=>(K(),ie(d,{key:e.getNodeKey(p),"render-content":e.renderContent,"render-after-expand":e.renderAfterExpand,"show-checkbox":e.showCheckbox,node:p,accordion:e.accordion,props:e.props,onNodeExpand:e.handleChildNodeExpand},null,8,["render-content","render-after-expand","show-checkbox","node","accordion","props","onNodeExpand"]))),128))],10,Whe)),[[Ct,e.expanded]]):ae("v-if",!0)]),_:1})],42,Ahe)),[[Ct,e.node.visible]])}var Vhe=Be(yhe,[["render",khe],["__file","/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node.vue"]]);function Phe({el$:e},t){const n=ze("tree"),r=nn([]),a=nn([]);At(()=>{o()}),la(()=>{r.value=Array.from(e.value.querySelectorAll("[role=treeitem]")),a.value=Array.from(e.value.querySelectorAll("input[type=checkbox]"))}),Ve(a,i=>{i.forEach(s=>{s.setAttribute("tabindex","-1")})}),hn(e,"keydown",i=>{const s=i.target;if(!s.className.includes(n.b("node")))return;const u=i.code;r.value=Array.from(e.value.querySelectorAll(`.${n.is("focusable")}[role=treeitem]`));const d=r.value.indexOf(s);let f;if([ut.up,ut.down].includes(u)){if(i.preventDefault(),u===ut.up){f=d===-1?0:d!==0?d-1:r.value.length-1;const b=f;for(;!t.value.getNode(r.value[f].dataset.key).canFocus;){if(f--,f===b){f=-1;break}f<0&&(f=r.value.length-1)}}else{f=d===-1?0:d<r.value.length-1?d+1:0;const b=f;for(;!t.value.getNode(r.value[f].dataset.key).canFocus;){if(f++,f===b){f=-1;break}f>=r.value.length&&(f=0)}}f!==-1&&r.value[f].focus()}[ut.left,ut.right].includes(u)&&(i.preventDefault(),s.click());const p=s.querySelector('[type="checkbox"]');[ut.enter,ut.space].includes(u)&&p&&(i.preventDefault(),p.click())});const o=()=>{var i;r.value=Array.from(e.value.querySelectorAll(`.${n.is("focusable")}[role=treeitem]`)),a.value=Array.from(e.value.querySelectorAll("input[type=checkbox]"));const s=e.value.querySelectorAll(`.${n.is("checked")}[role=treeitem]`);if(s.length){s[0].setAttribute("tabindex","0");return}(i=r.value[0])==null||i.setAttribute("tabindex","0")}}const The=$({name:"ElTree",components:{ElTreeNode:Vhe},props:{data:{type:Array,default:()=>[]},emptyText:{type:String},renderAfterExpand:{type:Boolean,default:!0},nodeKey:String,checkStrictly:Boolean,defaultExpandAll:Boolean,expandOnClickNode:{type:Boolean,default:!0},checkOnClickNode:Boolean,checkDescendants:{type:Boolean,default:!1},autoExpandParent:{type:Boolean,default:!0},defaultCheckedKeys:Array,defaultExpandedKeys:Array,currentNodeKey:[String,Number],renderContent:Function,showCheckbox:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},allowDrag:Function,allowDrop:Function,props:{type:Object,default:()=>({children:"children",label:"label",disabled:"disabled"})},lazy:{type:Boolean,default:!1},highlightCurrent:Boolean,load:Function,filterNodeMethod:Function,accordion:Boolean,indent:{type:Number,default:18},icon:{type:un}},emits:["check-change","current-change","node-click","node-contextmenu","node-collapse","node-expand","check","node-drag-start","node-drag-end","node-drop","node-drag-leave","node-drag-enter","node-drag-over"],setup(e,t){const{t:n}=It(),r=ze("tree"),a=J(new bhe({key:e.nodeKey,data:e.data,lazy:e.lazy,props:e.props,load:e.load,currentNodeKey:e.currentNodeKey,checkStrictly:e.checkStrictly,checkDescendants:e.checkDescendants,defaultCheckedKeys:e.defaultCheckedKeys,defaultExpandedKeys:e.defaultExpandedKeys,autoExpandParent:e.autoExpandParent,defaultExpandAll:e.defaultExpandAll,filterNodeMethod:e.filterNodeMethod}));a.value.initialize();const l=J(a.value.root),o=J(null),i=J(null),s=J(null),{broadcastExpanded:u}=TK(e),{dragState:d}=She({props:e,ctx:t,el$:i,dropIndicator$:s,store:a});Phe({el$:i},a);const f=X(()=>{const{childNodes:U}=l.value;return!U||U.length===0||U.every(({visible:H})=>!H)});Ve(()=>e.currentNodeKey,U=>{a.value.setCurrentNodeKey(U)}),Ve(()=>e.defaultCheckedKeys,U=>{a.value.setDefaultCheckedKey(U)}),Ve(()=>e.defaultExpandedKeys,U=>{a.value.setDefaultExpandedKeys(U)}),Ve(()=>e.data,U=>{a.value.setData(U)},{deep:!0}),Ve(()=>e.checkStrictly,U=>{a.value.checkStrictly=U});const p=U=>{if(!e.filterNodeMethod)throw new Error("[Tree] filterNodeMethod is required when filter");a.value.filter(U)},b=U=>H2(e.nodeKey,U.data),A=U=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in getNodePath");const H=a.value.getNode(U);if(!H)return[];const O=[H.data];let D=H.parent;for(;D&&D!==l.value;)O.push(D.data),D=D.parent;return O.reverse()},h=(U,H)=>a.value.getCheckedNodes(U,H),m=U=>a.value.getCheckedKeys(U),v=()=>{const U=a.value.getCurrentNode();return U?U.data:null},S=()=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in getCurrentKey");const U=v();return U?U[e.nodeKey]:null},y=(U,H)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCheckedNodes");a.value.setCheckedNodes(U,H)},W=(U,H)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCheckedKeys");a.value.setCheckedKeys(U,H)},k=(U,H,O)=>{a.value.setChecked(U,H,O)},V=()=>a.value.getHalfCheckedNodes(),T=()=>a.value.getHalfCheckedKeys(),P=(U,H=!0)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCurrentNode");Rh(a,t.emit,()=>a.value.setUserCurrentNode(U,H))},x=(U,H=!0)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCurrentKey");Rh(a,t.emit,()=>a.value.setCurrentNodeKey(U,H))},g=U=>a.value.getNode(U),j=U=>{a.value.remove(U)},L=(U,H)=>{a.value.append(U,H)},w=(U,H)=>{a.value.insertBefore(U,H)},R=(U,H)=>{a.value.insertAfter(U,H)},Z=(U,H,O)=>{u(H),t.emit("node-expand",U,H,O)},G=(U,H)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in updateKeyChild");a.value.updateChildren(U,H)};return zt("RootTree",{ctx:t,props:e,store:a,root:l,currentNode:o,instance:Tt()}),zt(ll,void 0),{ns:r,store:a,root:l,currentNode:o,dragState:d,el$:i,dropIndicator$:s,isEmpty:f,filter:p,getNodeKey:b,getNodePath:A,getCheckedNodes:h,getCheckedKeys:m,getCurrentNode:v,getCurrentKey:S,setCheckedNodes:y,setCheckedKeys:W,setChecked:k,getHalfCheckedNodes:V,getHalfCheckedKeys:T,setCurrentNode:P,setCurrentKey:x,t:n,getNode:g,remove:j,append:L,insertBefore:w,insertAfter:R,handleNodeExpand:Z,updateKeyChildren:G}}});function Khe(e,t,n,r,a,l){const o=rt("el-tree-node");return K(),F("div",{ref:"el$",class:q([e.ns.b(),e.ns.is("dragging",!!e.dragState.draggingNode),e.ns.is("drop-not-allow",!e.dragState.allowDrop),e.ns.is("drop-inner",e.dragState.dropType==="inner"),{[e.ns.m("highlight-current")]:e.highlightCurrent}]),role:"tree"},[(K(!0),F(Qe,null,Nt(e.root.childNodes,i=>(K(),ie(o,{key:e.getNodeKey(i),node:i,props:e.props,accordion:e.accordion,"render-after-expand":e.renderAfterExpand,"show-checkbox":e.showCheckbox,"render-content":e.renderContent,onNodeExpand:e.handleNodeExpand},null,8,["node","props","accordion","render-after-expand","show-checkbox","render-content","onNodeExpand"]))),128)),e.isEmpty?(K(),F("div",{key:0,class:q(e.ns.e("empty-block"))},[ue(e.$slots,"empty",{},()=>{var i;return[z("span",{class:q(e.ns.e("empty-text"))},je((i=e.emptyText)!=null?i:e.t("el.tree.emptyText")),3)]})],2)):ae("v-if",!0),Vt(z("div",{ref:"dropIndicator$",class:q(e.ns.e("drop-indicator"))},null,2),[[Ct,e.dragState.showDropIndicator]])],2)}var Mf=Be(The,[["render",Khe],["__file","/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree.vue"]]);Mf.install=e=>{e.component(Mf.name,Mf)};const zp=Mf,Nhe=zp,xhe=(e,{attrs:t},{tree:n,key:r})=>{const a=ze("tree-select"),l={...kl(Kn(e),Object.keys(Pi.props)),...t,valueKey:r,popperClass:X(()=>{const o=[a.e("popper")];return e.popperClass&&o.push(e.popperClass),o.join(" ")}),filterMethod:(o="")=>{e.filterMethod&&e.filterMethod(o),at(()=>{var i;(i=n.value)==null||i.filter(o)})},onVisibleChange:o=>{var i;(i=t.onVisibleChange)==null||i.call(t,o),e.filterable&&o&&l.filterMethod()}};return l},Xhe=$({extends:jp,setup(e,t){const n=jp.setup(e,t);delete n.selectOptionClick;const r=Tt().proxy;return at(()=>{n.select.cachedOptions.get(r.value)||n.select.onOptionCreate(r)}),n},methods:{selectOptionClick(){this.$el.parentElement.click()}}});function Fh(e){return e||e===0}function Z2(e){return Array.isArray(e)&&e.length}function wu(e){return Array.isArray(e)?e:Fh(e)?[e]:[]}function Df(e,t,n,r,a){for(let l=0;l<e.length;l++){const o=e[l];if(t(o,l,e,a))return r?r(o,l,e,a):o;{const i=n(o);if(Z2(i)){const s=Df(i,t,n,r,o);if(s)return s}}}}function NK(e,t,n,r){for(let a=0;a<e.length;a++){const l=e[a];t(l,a,e,r);const o=n(l);Z2(o)&&NK(o,t,n,l)}}const ghe=(e,{attrs:t,slots:n,emit:r},{select:a,tree:l,key:o})=>{Ve(()=>e.modelValue,()=>{e.showCheckbox&&at(()=>{const p=l.value;p&&!zr(p.getCheckedKeys(),wu(e.modelValue))&&p.setCheckedKeys(wu(e.modelValue))})},{immediate:!0,deep:!0});const i=X(()=>({value:o.value,label:"label",children:"children",disabled:"disabled",isLeaf:"isLeaf",...e.props})),s=(p,b)=>{var A;const h=i.value[p];return ht(h)?h(b,(A=l.value)==null?void 0:A.getNode(s("value",b))):b[h]},u=wu(e.modelValue).map(p=>Df(e.data||[],b=>s("value",b)===p,b=>s("children",b),(b,A,h,m)=>m&&s("value",m))).filter(p=>Fh(p)),d=X(()=>{if(!e.renderAfterExpand&&!e.lazy)return[];const p=[];return NK(e.data.concat(e.cacheData),b=>{const A=s("value",b);p.push({value:A,currentLabel:s("label",b),isDisabled:s("disabled",b)})},b=>s("children",b)),p}),f=X(()=>d.value.reduce((p,b)=>({...p,[b.value]:b}),{}));return{...kl(Kn(e),Object.keys(zp.props)),...t,nodeKey:o,expandOnClickNode:X(()=>!e.checkStrictly&&e.expandOnClickNode),defaultExpandedKeys:X(()=>e.defaultExpandedKeys?e.defaultExpandedKeys.concat(u):u),renderContent:(p,{node:b,data:A,store:h})=>p(Xhe,{value:s("value",A),label:s("label",A),disabled:s("disabled",A)},e.renderContent?()=>e.renderContent(p,{node:b,data:A,store:h}):n.default?()=>n.default({node:b,data:A,store:h}):void 0),filterNodeMethod:(p,b,A)=>{var h;return e.filterNodeMethod?e.filterNodeMethod(p,b,A):p?(h=s("label",b))==null?void 0:h.includes(p):!0},onNodeClick:(p,b,A)=>{var h,m,v;if((h=t.onNodeClick)==null||h.call(t,p,b,A),!(e.showCheckbox&&e.checkOnClickNode))if(!e.showCheckbox&&(e.checkStrictly||b.isLeaf)){if(!s("disabled",p)){const S=(m=a.value)==null?void 0:m.options.get(s("value",p));(v=a.value)==null||v.handleOptionSelect(S)}}else e.expandOnClickNode&&A.proxy.handleExpandIconClick()},onCheck:(p,b)=>{if(!e.showCheckbox)return;const A=s("value",p),h=b.checkedKeys,m=e.multiple?wu(e.modelValue).filter(S=>S in f.value&&!l.value.getNode(S)&&!h.includes(S)):[],v=h.concat(m);if(e.checkStrictly)r(Rt,e.multiple?v:v.includes(A)?A:void 0);else if(e.multiple)r(Rt,l.value.getCheckedKeys(!0));else{const S=Df([p],k=>!Z2(s("children",k))&&!s("disabled",k),k=>s("children",k)),y=S?s("value",S):void 0,W=Fh(e.modelValue)&&!!Df([p],k=>s("value",k)===e.modelValue,k=>s("children",k));r(Rt,y===e.modelValue||W?void 0:y)}at(()=>{var S;const y=wu(e.modelValue);l.value.setCheckedKeys(y),(S=t.onCheck)==null||S.call(t,p,{checkedKeys:l.value.getCheckedKeys(),checkedNodes:l.value.getCheckedNodes(),halfCheckedKeys:l.value.getHalfCheckedKeys(),halfCheckedNodes:l.value.getHalfCheckedNodes()})})},cacheOptions:d}};var whe=$({props:{data:{type:Array,default:()=>[]}},setup(e){const t=tt(Wd);return Ve(()=>e.data,()=>{var n;e.data.forEach(a=>{t.cachedOptions.has(a.value)||t.cachedOptions.set(a.value,a)});const r=((n=t.selectWrapper)==null?void 0:n.querySelectorAll("input"))||[];Array.from(r).includes(document.activeElement)||t.setSelected()},{flush:"post",immediate:!0}),()=>{}}});const jhe=$({name:"ElTreeSelect",inheritAttrs:!1,props:{...Pi.props,...zp.props,cacheData:{type:Array,default:()=>[]}},setup(e,t){const{slots:n,expose:r}=t,a=J(),l=J(),o=X(()=>e.nodeKey||e.valueKey||"value"),i=xhe(e,t,{select:a,tree:l,key:o}),{cacheOptions:s,...u}=ghe(e,t,{select:a,tree:l,key:o}),d=Bt({});return r(d),At(()=>{Object.assign(d,{...kl(l.value,["filter","updateKeyChildren","getCheckedNodes","setCheckedNodes","getCheckedKeys","setCheckedKeys","setChecked","getHalfCheckedNodes","getHalfCheckedKeys","getCurrentKey","getCurrentNode","setCurrentKey","setCurrentNode","getNode","remove","append","insertBefore","insertAfter"]),...kl(a.value,["focus","blur"])})}),()=>st(Pi,Bt({...i,ref:f=>a.value=f}),{...n,default:()=>[st(whe,{data:s.value}),st(zp,Bt({...u,ref:f=>l.value=f}))]})}});var Ef=Be(jhe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tree-select/src/tree-select.vue"]]);Ef.install=e=>{e.component(Ef.name,Ef)};const Lhe=Ef,qhe=Lhe,G2=Symbol(),Uhe={key:-1,level:-1,data:{}};var Uu=(e=>(e.KEY="id",e.LABEL="label",e.CHILDREN="children",e.DISABLED="disabled",e))(Uu||{}),zh=(e=>(e.ADD="add",e.DELETE="delete",e))(zh||{});const xK={type:Number,default:26},Ohe=Ie({data:{type:ve(Array),default:()=>An([])},emptyText:{type:String},height:{type:Number,default:200},props:{type:ve(Object),default:()=>An({children:"children",label:"label",disabled:"disabled",value:"id"})},highlightCurrent:{type:Boolean,default:!1},showCheckbox:{type:Boolean,default:!1},defaultCheckedKeys:{type:ve(Array),default:()=>An([])},checkStrictly:{type:Boolean,default:!1},defaultExpandedKeys:{type:ve(Array),default:()=>An([])},indent:{type:Number,default:16},itemSize:xK,icon:{type:un},expandOnClickNode:{type:Boolean,default:!0},checkOnClickNode:{type:Boolean,default:!1},currentNodeKey:{type:ve([String,Number])},accordion:{type:Boolean,default:!1},filterMethod:{type:ve(Function)},perfMode:{type:Boolean,default:!0}}),Rhe=Ie({node:{type:ve(Object),default:()=>An(Uhe)},expanded:{type:Boolean,default:!1},checked:{type:Boolean,default:!1},indeterminate:{type:Boolean,default:!1},showCheckbox:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},current:{type:Boolean,default:!1},hiddenExpandIcon:{type:Boolean,default:!1},itemSize:xK}),Jhe=Ie({node:{type:ve(Object),required:!0}}),XK="node-click",gK="node-expand",wK="node-collapse",jK="current-change",LK="check",qK="check-change",UK="node-contextmenu",Fhe={[XK]:(e,t,n)=>e&&t&&n,[gK]:(e,t)=>e&&t,[wK]:(e,t)=>e&&t,[jK]:(e,t)=>e&&t,[LK]:(e,t)=>e&&t,[qK]:(e,t)=>e&&typeof t=="boolean",[UK]:(e,t,n)=>e&&t&&n},zhe={click:(e,t)=>!!(e&&t),toggle:e=>!!e,check:(e,t)=>e&&typeof t=="boolean"};function Hhe(e,t){const n=J(new Set),r=J(new Set),{emit:a}=Tt();Ve([()=>t.value,()=>e.defaultCheckedKeys],()=>at(()=>{S(e.defaultCheckedKeys)}),{immediate:!0});const l=()=>{if(!t.value||!e.showCheckbox||e.checkStrictly)return;const{levelTreeNodeMap:y,maxLevel:W}=t.value,k=n.value,V=new Set;for(let T=W-1;T>=1;--T){const P=y.get(T);!P||P.forEach(x=>{const g=x.children;if(g){let j=!0,L=!1;for(const w of g){const R=w.key;if(k.has(R))L=!0;else if(V.has(R)){j=!1,L=!0;break}else j=!1}j?k.add(x.key):L?(V.add(x.key),k.delete(x.key)):(k.delete(x.key),V.delete(x.key))}})}r.value=V},o=y=>n.value.has(y.key),i=y=>r.value.has(y.key),s=(y,W,k=!0)=>{const V=n.value,T=(P,x)=>{V[x?zh.ADD:zh.DELETE](P.key);const g=P.children;!e.checkStrictly&&g&&g.forEach(j=>{j.disabled||T(j,x)})};T(y,W),l(),k&&u(y,W)},u=(y,W)=>{const{checkedNodes:k,checkedKeys:V}=A(),{halfCheckedNodes:T,halfCheckedKeys:P}=h();a(LK,y.data,{checkedKeys:V,checkedNodes:k,halfCheckedKeys:P,halfCheckedNodes:T}),a(qK,y.data,W)};function d(y=!1){return A(y).checkedKeys}function f(y=!1){return A(y).checkedNodes}function p(){return h().halfCheckedKeys}function b(){return h().halfCheckedNodes}function A(y=!1){const W=[],k=[];if((t==null?void 0:t.value)&&e.showCheckbox){const{treeNodeMap:V}=t.value;n.value.forEach(T=>{const P=V.get(T);P&&(!y||y&&P.isLeaf)&&(k.push(T),W.push(P.data))})}return{checkedKeys:k,checkedNodes:W}}function h(){const y=[],W=[];if((t==null?void 0:t.value)&&e.showCheckbox){const{treeNodeMap:k}=t.value;r.value.forEach(V=>{const T=k.get(V);T&&(W.push(V),y.push(T.data))})}return{halfCheckedNodes:y,halfCheckedKeys:W}}function m(y){n.value.clear(),r.value.clear(),S(y)}function v(y,W){if((t==null?void 0:t.value)&&e.showCheckbox){const k=t.value.treeNodeMap.get(y);k&&s(k,W,!1)}}function S(y){if(t!=null&&t.value){const{treeNodeMap:W}=t.value;if(e.showCheckbox&&W&&y)for(const k of y){const V=W.get(k);V&&!o(V)&&s(V,!0,!1)}}}return{updateCheckedKeys:l,toggleCheckbox:s,isChecked:o,isIndeterminate:i,getCheckedKeys:d,getCheckedNodes:f,getHalfCheckedKeys:p,getHalfCheckedNodes:b,setChecked:v,setCheckedKeys:m}}function Zhe(e,t){const n=J(new Set([])),r=J(new Set([])),a=X(()=>ht(e.filterMethod));function l(i){var s;if(!a.value)return;const u=new Set,d=r.value,f=n.value,p=[],b=((s=t.value)==null?void 0:s.treeNodes)||[],A=e.filterMethod;f.clear();function h(m){m.forEach(v=>{p.push(v),A!=null&&A(i,v.data)?p.forEach(y=>{u.add(y.key)}):v.isLeaf&&f.add(v.key);const S=v.children;if(S&&h(S),!v.isLeaf){if(!u.has(v.key))f.add(v.key);else if(S){let y=!0;for(const W of S)if(!f.has(W.key)){y=!1;break}y?d.add(v.key):d.delete(v.key)}}p.pop()})}return h(b),u}function o(i){return r.value.has(i.key)}return{hiddenExpandIconKeySet:r,hiddenNodeKeySet:n,doFilter:l,isForceHiddenExpandIcon:o}}function Ghe(e,t){const n=J(new Set(e.defaultExpandedKeys)),r=J(),a=nn();Ve(()=>e.currentNodeKey,ce=>{r.value=ce},{immediate:!0}),Ve(()=>e.data,ce=>{pe(ce)},{immediate:!0});const{isIndeterminate:l,isChecked:o,toggleCheckbox:i,getCheckedKeys:s,getCheckedNodes:u,getHalfCheckedKeys:d,getHalfCheckedNodes:f,setChecked:p,setCheckedKeys:b}=Hhe(e,a),{doFilter:A,hiddenNodeKeySet:h,isForceHiddenExpandIcon:m}=Zhe(e,a),v=X(()=>{var ce;return((ce=e.props)==null?void 0:ce.value)||Uu.KEY}),S=X(()=>{var ce;return((ce=e.props)==null?void 0:ce.children)||Uu.CHILDREN}),y=X(()=>{var ce;return((ce=e.props)==null?void 0:ce.disabled)||Uu.DISABLED}),W=X(()=>{var ce;return((ce=e.props)==null?void 0:ce.label)||Uu.LABEL}),k=X(()=>{const ce=n.value,Le=h.value,Te=[],xe=a.value&&a.value.treeNodes||[];function _(){const re=[];for(let ye=xe.length-1;ye>=0;--ye)re.push(xe[ye]);for(;re.length;){const ye=re.pop();if(!!ye&&(Le.has(ye.key)||Te.push(ye),ce.has(ye.key))){const ge=ye.children;if(ge){const Fe=ge.length;for(let Ae=Fe-1;Ae>=0;--Ae)re.push(ge[Ae])}}}}return _(),Te}),V=X(()=>k.value.length>0);function T(ce){const Le=new Map,Te=new Map;let xe=1;function _(ye,ge=1,Fe=void 0){var Ae;const Ze=[];for(const Ue of ye){const Pe=g(Ue),qe={level:ge,key:Pe,data:Ue};qe.label=L(Ue),qe.parent=Fe;const De=x(Ue);qe.disabled=j(Ue),qe.isLeaf=!De||De.length===0,De&&De.length&&(qe.children=_(De,ge+1,qe)),Ze.push(qe),Le.set(Pe,qe),Te.has(ge)||Te.set(ge,[]),(Ae=Te.get(ge))==null||Ae.push(qe)}return ge>xe&&(xe=ge),Ze}const re=_(ce);return{treeNodeMap:Le,levelTreeNodeMap:Te,maxLevel:xe,treeNodes:re}}function P(ce){const Le=A(ce);Le&&(n.value=Le)}function x(ce){return ce[S.value]}function g(ce){return ce?ce[v.value]:""}function j(ce){return ce[y.value]}function L(ce){return ce[W.value]}function w(ce){n.value.has(ce.key)?O(ce):H(ce)}function R(ce){n.value=new Set(ce)}function Z(ce,Le){t(XK,ce.data,ce,Le),G(ce),e.expandOnClickNode&&w(ce),e.showCheckbox&&e.checkOnClickNode&&!ce.disabled&&i(ce,!o(ce),!0)}function G(ce){Q(ce)||(r.value=ce.key,t(jK,ce.data,ce))}function U(ce,Le){i(ce,Le)}function H(ce){const Le=n.value;if(a.value&&e.accordion){const{treeNodeMap:Te}=a.value;Le.forEach(xe=>{const _=Te.get(xe);ce&&ce.level===(_==null?void 0:_.level)&&Le.delete(xe)})}Le.add(ce.key),t(gK,ce.data,ce)}function O(ce){n.value.delete(ce.key),t(wK,ce.data,ce)}function D(ce){return n.value.has(ce.key)}function Y(ce){return!!ce.disabled}function Q(ce){const Le=r.value;return Le!==void 0&&Le===ce.key}function ee(){var ce,Le;if(!!r.value)return(Le=(ce=a.value)==null?void 0:ce.treeNodeMap.get(r.value))==null?void 0:Le.data}function oe(){return r.value}function Ne(ce){r.value=ce}function pe(ce){at(()=>a.value=T(ce))}function me(ce){var Le;const Te=Jt(ce)?g(ce):ce;return(Le=a.value)==null?void 0:Le.treeNodeMap.get(Te)}return{tree:a,flattenTree:k,isNotEmpty:V,getKey:g,getChildren:x,toggleExpand:w,toggleCheckbox:i,isExpanded:D,isChecked:o,isIndeterminate:l,isDisabled:Y,isCurrent:Q,isForceHiddenExpandIcon:m,handleNodeClick:Z,handleNodeCheck:U,getCurrentNode:ee,getCurrentKey:oe,setCurrentKey:Ne,getCheckedKeys:s,getCheckedNodes:u,getHalfCheckedKeys:d,getHalfCheckedNodes:f,setChecked:p,setCheckedKeys:b,filter:P,setData:pe,getNode:me,expandNode:H,collapseNode:O,setExpandedKeys:R}}var Che=$({name:"ElTreeNodeContent",props:Jhe,setup(e){const t=tt(G2),n=ze("tree");return()=>{const r=e.node,{data:a}=r;return t!=null&&t.ctx.slots.default?t.ctx.slots.default({node:r,data:a}):st("span",{class:n.be("node","label")},[r==null?void 0:r.label])}}});const Mhe=["aria-expanded","aria-disabled","aria-checked","data-key","onClick"],Dhe=$({name:"ElTreeNode"}),Ehe=$({...Dhe,props:Rhe,emits:zhe,setup(e,{emit:t}){const n=e,r=tt(G2),a=ze("tree"),l=X(()=>{var f;return(f=r==null?void 0:r.props.indent)!=null?f:16}),o=X(()=>{var f;return(f=r==null?void 0:r.props.icon)!=null?f:Fk}),i=f=>{t("click",n.node,f)},s=()=>{t("toggle",n.node)},u=f=>{t("check",n.node,f)},d=f=>{var p,b,A,h;(A=(b=(p=r==null?void 0:r.instance)==null?void 0:p.vnode)==null?void 0:b.props)!=null&&A.onNodeContextmenu&&(f.stopPropagation(),f.preventDefault()),r==null||r.ctx.emit(UK,f,(h=n.node)==null?void 0:h.data,n.node)};return(f,p)=>{var b,A,h;return K(),F("div",{ref:"node$",class:q([c(a).b("node"),c(a).is("expanded",f.expanded),c(a).is("current",f.current),c(a).is("focusable",!f.disabled),c(a).is("checked",!f.disabled&&f.checked)]),role:"treeitem",tabindex:"-1","aria-expanded":f.expanded,"aria-disabled":f.disabled,"aria-checked":f.checked,"data-key":(b=f.node)==null?void 0:b.key,onClick:pt(i,["stop"]),onContextmenu:d},[z("div",{class:q(c(a).be("node","content")),style:lt({paddingLeft:`${(f.node.level-1)*c(l)}px`,height:f.itemSize+"px"})},[c(o)?(K(),ie(c(it),{key:0,class:q([c(a).is("leaf",!!((A=f.node)!=null&&A.isLeaf)),c(a).is("hidden",f.hiddenExpandIcon),{expanded:!((h=f.node)!=null&&h.isLeaf)&&f.expanded},c(a).be("node","expand-icon")]),onClick:pt(s,["stop"])},{default:B(()=>[(K(),ie(Ot(c(o))))]),_:1},8,["class","onClick"])):ae("v-if",!0),f.showCheckbox?(K(),ie(c(Aa),{key:1,"model-value":f.checked,indeterminate:f.indeterminate,disabled:f.disabled,onChange:u,onClick:p[0]||(p[0]=pt(()=>{},["stop"]))},null,8,["model-value","indeterminate","disabled"])):ae("v-if",!0),C(c(Che),{node:f.node},null,8,["node"])],6)],42,Mhe)}}});var Ihe=Be(Ehe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tree-v2/src/tree-node.vue"]]);const Bhe=$({name:"ElTreeV2"}),Yhe=$({...Bhe,props:Ohe,emits:Fhe,setup(e,{expose:t,emit:n}){const r=e,a=er(),l=X(()=>r.itemSize);zt(G2,{ctx:{emit:n,slots:a},props:r,instance:Tt()}),zt(ll,void 0);const{t:o}=It(),i=ze("tree"),{flattenTree:s,isNotEmpty:u,toggleExpand:d,isExpanded:f,isIndeterminate:p,isChecked:b,isDisabled:A,isCurrent:h,isForceHiddenExpandIcon:m,handleNodeClick:v,handleNodeCheck:S,toggleCheckbox:y,getCurrentNode:W,getCurrentKey:k,setCurrentKey:V,getCheckedKeys:T,getCheckedNodes:P,getHalfCheckedKeys:x,getHalfCheckedNodes:g,setChecked:j,setCheckedKeys:L,filter:w,setData:R,getNode:Z,expandNode:G,collapseNode:U,setExpandedKeys:H}=Ghe(r,n);return t({toggleCheckbox:y,getCurrentNode:W,getCurrentKey:k,setCurrentKey:V,getCheckedKeys:T,getCheckedNodes:P,getHalfCheckedKeys:x,getHalfCheckedNodes:g,setChecked:j,setCheckedKeys:L,filter:w,setData:R,getNode:Z,expandNode:G,collapseNode:U,setExpandedKeys:H}),(O,D)=>{var Y;return K(),F("div",{class:q([c(i).b(),{[c(i).m("highlight-current")]:O.highlightCurrent}]),role:"tree"},[c(u)?(K(),ie(c(zT),{key:0,"class-name":c(i).b("virtual-list"),data:c(s),total:c(s).length,height:O.height,"item-size":c(l),"perf-mode":O.perfMode},{default:B(({data:Q,index:ee,style:oe})=>[(K(),ie(Ihe,{key:Q[ee].key,style:lt(oe),node:Q[ee],expanded:c(f)(Q[ee]),"show-checkbox":O.showCheckbox,checked:c(b)(Q[ee]),indeterminate:c(p)(Q[ee]),"item-size":c(l),disabled:c(A)(Q[ee]),current:c(h)(Q[ee]),"hidden-expand-icon":c(m)(Q[ee]),onClick:c(v),onToggle:c(d),onCheck:c(S)},null,8,["style","node","expanded","show-checkbox","checked","indeterminate","item-size","disabled","current","hidden-expand-icon","onClick","onToggle","onCheck"]))]),_:1},8,["class-name","data","total","height","item-size","perf-mode"])):(K(),F("div",{key:1,class:q(c(i).e("empty-block"))},[z("span",{class:q(c(i).e("empty-text"))},je((Y=O.emptyText)!=null?Y:c(o)("el.tree.emptyText")),3)],2))],2)}}});var Qhe=Be(Yhe,[["__file","/home/runner/work/element-plus/element-plus/packages/components/tree-v2/src/tree.vue"]]);const _he=qt(Qhe),OK=Symbol("uploadContextKey"),$he="ElUpload";class e0e extends Error{constructor(t,n,r,a){super(t),this.name="UploadAjaxError",this.status=n,this.method=r,this.url=a}}function AA(e,t,n){let r;return n.response?r=`${n.response.error||n.response}`:n.responseText?r=`${n.responseText}`:r=`fail to ${t.method} ${e} ${n.status}`,new e0e(r,n.status,t.method,e)}function t0e(e){const t=e.responseText||e.response;if(!t)return t;try{return JSON.parse(t)}catch{return t}}const n0e=e=>{typeof XMLHttpRequest>"u"&&Gn($he,"XMLHttpRequest is undefined");const t=new XMLHttpRequest,n=e.action;t.upload&&t.upload.addEventListener("progress",l=>{const o=l;o.percent=l.total>0?l.loaded/l.total*100:0,e.onProgress(o)});const r=new FormData;if(e.data)for(const[l,o]of Object.entries(e.data))et(o)&&o.length?r.append(l,...o):r.append(l,o);r.append(e.filename,e.file,e.file.name),t.addEventListener("error",()=>{e.onError(AA(n,e,t))}),t.addEventListener("load",()=>{if(t.status<200||t.status>=300)return e.onError(AA(n,e,t));e.onSuccess(t0e(t))}),t.open(e.method,n,!0),e.withCredentials&&"withCredentials"in t&&(t.withCredentials=!0);const a=e.headers||{};if(a instanceof Headers)a.forEach((l,o)=>t.setRequestHeader(o,l));else for(const[l,o]of Object.entries(a))On(o)||t.setRequestHeader(l,String(o));return t.send(r),t},RK=["text","picture","picture-card"];let r0e=1;const Hh=()=>Date.now()+r0e++,JK=Ie({action:{type:String,default:"#"},headers:{type:ve(Object)},method:{type:String,default:"post"},data:{type:ve([Object,Function,Promise]),default:()=>An({})},multiple:{type:Boolean,default:!1},name:{type:String,default:"file"},drag:{type:Boolean,default:!1},withCredentials:Boolean,showFileList:{type:Boolean,default:!0},accept:{type:String,default:""},fileList:{type:ve(Array),default:()=>An([])},autoUpload:{type:Boolean,default:!0},listType:{type:String,values:RK,default:"text"},httpRequest:{type:ve(Function),default:n0e},disabled:Boolean,limit:Number}),a0e=Ie({...JK,beforeUpload:{type:ve(Function),default:en},beforeRemove:{type:ve(Function)},onRemove:{type:ve(Function),default:en},onChange:{type:ve(Function),default:en},onPreview:{type:ve(Function),default:en},onSuccess:{type:ve(Function),default:en},onProgress:{type:ve(Function),default:en},onError:{type:ve(Function),default:en},onExceed:{type:ve(Function),default:en}}),l0e=Ie({files:{type:ve(Array),default:()=>An([])},disabled:{type:Boolean,default:!1},handlePreview:{type:ve(Function),default:en},listType:{type:String,values:RK,default:"text"}}),o0e={remove:e=>!!e},i0e=["onKeydown"],s0e=["src"],u0e=["onClick"],c0e=["title"],d0e=["onClick"],f0e=["onClick"],p0e=$({name:"ElUploadList"}),v0e=$({...p0e,props:l0e,emits:o0e,setup(e,{emit:t}){const n=e,{t:r}=It(),a=ze("upload"),l=ze("icon"),o=ze("list"),i=Br(),s=J(!1),u=X(()=>[a.b("list"),a.bm("list",n.listType),a.is("disabled",n.disabled)]),d=f=>{t("remove",f)};return(f,p)=>(K(),ie(bv,{tag:"ul",class:q(c(u)),name:c(o).b()},{default:B(()=>[(K(!0),F(Qe,null,Nt(f.files,b=>(K(),F("li",{key:b.uid||b.name,class:q([c(a).be("list","item"),c(a).is(b.status),{focusing:s.value}]),tabindex:"0",onKeydown:Dt(A=>!c(i)&&d(b),["delete"]),onFocus:p[0]||(p[0]=A=>s.value=!0),onBlur:p[1]||(p[1]=A=>s.value=!1),onClick:p[2]||(p[2]=A=>s.value=!1)},[ue(f.$slots,"default",{file:b},()=>[f.listType==="picture"||b.status!=="uploading"&&f.listType==="picture-card"?(K(),F("img",{key:0,class:q(c(a).be("list","item-thumbnail")),src:b.url,alt:""},null,10,s0e)):ae("v-if",!0),b.status==="uploading"||f.listType!=="picture-card"?(K(),F("div",{key:1,class:q(c(a).be("list","item-info"))},[z("a",{class:q(c(a).be("list","item-name")),onClick:pt(A=>f.handlePreview(b),["prevent"])},[C(c(it),{class:q(c(l).m("document"))},{default:B(()=>[C(c(XD))]),_:1},8,["class"]),z("span",{class:q(c(a).be("list","item-file-name")),title:b.name},je(b.name),11,c0e)],10,u0e),b.status==="uploading"?(K(),ie(c(wT),{key:0,type:f.listType==="picture-card"?"circle":"line","stroke-width":f.listType==="picture-card"?6:2,percentage:Number(b.percentage),style:lt(f.listType==="picture-card"?"":"margin-top: 0.5rem")},null,8,["type","stroke-width","percentage","style"])):ae("v-if",!0)],2)):ae("v-if",!0),z("label",{class:q(c(a).be("list","item-status-label"))},[f.listType==="text"?(K(),ie(c(it),{key:0,class:q([c(l).m("upload-success"),c(l).m("circle-check")])},{default:B(()=>[C(c(Rm))]),_:1},8,["class"])):["picture-card","picture"].includes(f.listType)?(K(),ie(c(it),{key:1,class:q([c(l).m("upload-success"),c(l).m("check")])},{default:B(()=>[C(c(hd))]),_:1},8,["class"])):ae("v-if",!0)],2),c(i)?ae("v-if",!0):(K(),ie(c(it),{key:2,class:q(c(l).m("close")),onClick:A=>d(b)},{default:B(()=>[C(c(ma))]),_:2},1032,["class","onClick"])),ae(" Due to close btn only appears when li gets focused disappears after li gets blurred, thus keyboard navigation can never reach close btn"),ae(" This is a bug which needs to be fixed "),ae(" TODO: Fix the incorrect navigation interaction "),c(i)?ae("v-if",!0):(K(),F("i",{key:3,class:q(c(l).m("close-tip"))},je(c(r)("el.upload.deleteTip")),3)),f.listType==="picture-card"?(K(),F("span",{key:4,class:q(c(a).be("list","item-actions"))},[z("span",{class:q(c(a).be("list","item-preview")),onClick:A=>f.handlePreview(b)},[C(c(it),{class:q(c(l).m("zoom-in"))},{default:B(()=>[C(c(Dk))]),_:1},8,["class"])],10,d0e),c(i)?ae("v-if",!0):(K(),F("span",{key:0,class:q(c(a).be("list","item-delete")),onClick:A=>d(b)},[C(c(it),{class:q(c(l).m("delete"))},{default:B(()=>[C(c(Hk))]),_:1},8,["class"])],10,f0e))],2)):ae("v-if",!0)])],42,i0e))),128)),ue(f.$slots,"append")]),_:3},8,["class","name"]))}});var WA=Be(v0e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload-list.vue"]]);const b0e=Ie({disabled:{type:Boolean,default:!1}}),h0e={file:e=>et(e)},m0e=["onDrop","onDragover"],FK="ElUploadDrag",S0e=$({name:FK}),y0e=$({...S0e,props:b0e,emits:h0e,setup(e,{emit:t}){const n=tt(OK);n||Gn(FK,"usage: <el-upload><el-upload-dragger /></el-upload>");const r=ze("upload"),a=J(!1),l=Br(),o=s=>{if(l.value)return;a.value=!1,s.stopPropagation();const u=Array.from(s.dataTransfer.files),d=n.accept.value;if(!d){t("file",u);return}const f=u.filter(p=>{const{type:b,name:A}=p,h=A.includes(".")?`.${A.split(".").pop()}`:"",m=b.replace(/\/.*$/,"");return d.split(",").map(v=>v.trim()).filter(v=>v).some(v=>v.startsWith(".")?h===v:/\/\*$/.test(v)?m===v.replace(/\/\*$/,""):/^[^/]+\/[^/]+$/.test(v)?b===v:!1)});t("file",f)},i=()=>{l.value||(a.value=!0)};return(s,u)=>(K(),F("div",{class:q([c(r).b("dragger"),c(r).is("dragover",a.value)]),onDrop:pt(o,["prevent"]),onDragover:pt(i,["prevent"]),onDragleave:u[0]||(u[0]=pt(d=>a.value=!1,["prevent"]))},[ue(s.$slots,"default")],42,m0e))}});var A0e=Be(y0e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload-dragger.vue"]]);const W0e=Ie({...JK,beforeUpload:{type:ve(Function),default:en},onRemove:{type:ve(Function),default:en},onStart:{type:ve(Function),default:en},onSuccess:{type:ve(Function),default:en},onProgress:{type:ve(Function),default:en},onError:{type:ve(Function),default:en},onExceed:{type:ve(Function),default:en}}),k0e=["onKeydown"],V0e=["name","multiple","accept"],P0e=$({name:"ElUploadContent",inheritAttrs:!1}),T0e=$({...P0e,props:W0e,setup(e,{expose:t}){const n=e,r=ze("upload"),a=Br(),l=nn({}),o=nn(),i=h=>{if(h.length===0)return;const{autoUpload:m,limit:v,fileList:S,multiple:y,onStart:W,onExceed:k}=n;if(v&&S.length+h.length>v){k(h,S);return}y||(h=h.slice(0,1));for(const V of h){const T=V;T.uid=Hh(),W(T),m&&s(T)}},s=async h=>{if(o.value.value="",!n.beforeUpload)return d(h);let m,v={};try{const y=n.data,W=n.beforeUpload(h);v=ep(n.data)?Tp(n.data):n.data,m=await W,ep(n.data)&&zr(y,v)&&(v=Tp(n.data))}catch{m=!1}if(m===!1){n.onRemove(h);return}let S=h;m instanceof Blob&&(m instanceof File?S=m:S=new File([m],h.name,{type:h.type})),d(Object.assign(S,{uid:h.uid}),v)},u=async(h,m)=>ht(h)?h(m):h,d=async(h,m)=>{const{headers:v,data:S,method:y,withCredentials:W,name:k,action:V,onProgress:T,onSuccess:P,onError:x,httpRequest:g}=n;try{m=await u(m!=null?m:S,h)}catch{n.onRemove(h);return}const{uid:j}=h,L={headers:v||{},withCredentials:W,file:h,data:m,method:y,filename:k,action:V,onProgress:R=>{T(R,h)},onSuccess:R=>{P(R,h),delete l.value[j]},onError:R=>{x(R,h),delete l.value[j]}},w=g(L);l.value[j]=w,w instanceof Promise&&w.then(L.onSuccess,L.onError)},f=h=>{const m=h.target.files;!m||i(Array.from(m))},p=()=>{a.value||(o.value.value="",o.value.click())},b=()=>{p()};return t({abort:h=>{wC(l.value).filter(h?([v])=>String(h.uid)===v:()=>!0).forEach(([v,S])=>{S instanceof XMLHttpRequest&&S.abort(),delete l.value[v]})},upload:s}),(h,m)=>(K(),F("div",{class:q([c(r).b(),c(r).m(h.listType),c(r).is("drag",h.drag)]),tabindex:"0",onClick:p,onKeydown:Dt(pt(b,["self"]),["enter","space"])},[h.drag?(K(),ie(A0e,{key:0,disabled:c(a),onFile:i},{default:B(()=>[ue(h.$slots,"default")]),_:3},8,["disabled"])):ue(h.$slots,"default",{key:1}),z("input",{ref_key:"inputRef",ref:o,class:q(c(r).e("input")),name:h.name,multiple:h.multiple,accept:h.accept,type:"file",onChange:f,onClick:m[0]||(m[0]=pt(()=>{},["stop"]))},null,42,V0e)],42,k0e))}});var kA=Be(T0e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload-content.vue"]]);const VA="ElUpload",PA=e=>{var t;(t=e.url)!=null&&t.startsWith("blob:")&&URL.revokeObjectURL(e.url)},K0e=(e,t)=>{const n=hL(e,"fileList",void 0,{passive:!0}),r=p=>n.value.find(b=>b.uid===p.uid);function a(p){var b;(b=t.value)==null||b.abort(p)}function l(p=["ready","uploading","success","fail"]){n.value=n.value.filter(b=>!p.includes(b.status))}const o=(p,b)=>{const A=r(b);!A||(console.error(p),A.status="fail",n.value.splice(n.value.indexOf(A),1),e.onError(p,A,n.value),e.onChange(A,n.value))},i=(p,b)=>{const A=r(b);!A||(e.onProgress(p,A,n.value),A.status="uploading",A.percentage=Math.round(p.percent))},s=(p,b)=>{const A=r(b);!A||(A.status="success",A.response=p,e.onSuccess(p,A,n.value),e.onChange(A,n.value))},u=p=>{On(p.uid)&&(p.uid=Hh());const b={name:p.name,percentage:0,status:"ready",size:p.size,raw:p,uid:p.uid};if(e.listType==="picture-card"||e.listType==="picture")try{b.url=URL.createObjectURL(p)}catch(A){A.message,e.onError(A,b,n.value)}n.value=[...n.value,b],e.onChange(b,n.value)},d=async p=>{const b=p instanceof File?r(p):p;b||Gn(VA,"file to be removed not found");const A=h=>{a(h);const m=n.value;m.splice(m.indexOf(h),1),e.onRemove(h,m),PA(h)};e.beforeRemove?await e.beforeRemove(b,n.value)!==!1&&A(b):A(b)};function f(){n.value.filter(({status:p})=>p==="ready").forEach(({raw:p})=>{var b;return p&&((b=t.value)==null?void 0:b.upload(p))})}return Ve(()=>e.listType,p=>{p!=="picture-card"&&p!=="picture"||(n.value=n.value.map(b=>{const{raw:A,url:h}=b;if(!h&&A)try{b.url=URL.createObjectURL(A)}catch(m){e.onError(m,b,n.value)}return b}))}),Ve(n,p=>{for(const b of p)b.uid||(b.uid=Hh()),b.status||(b.status="success")},{immediate:!0,deep:!0}),{uploadFiles:n,abort:a,clearFiles:l,handleError:o,handleProgress:i,handleStart:u,handleSuccess:s,handleRemove:d,submit:f,revokeFileObjectURL:PA}},N0e=$({name:"ElUpload"}),x0e=$({...N0e,props:a0e,setup(e,{expose:t}){const n=e,r=Br(),a=nn(),{abort:l,submit:o,clearFiles:i,uploadFiles:s,handleStart:u,handleError:d,handleRemove:f,handleSuccess:p,handleProgress:b,revokeFileObjectURL:A}=K0e(n,a),h=X(()=>n.listType==="picture-card"),m=X(()=>({...n,fileList:s.value,onStart:u,onProgress:b,onSuccess:p,onError:d,onRemove:f}));return tn(()=>{s.value.forEach(A)}),zt(OK,{accept:bn(n,"accept")}),t({abort:l,submit:o,clearFiles:i,handleStart:u,handleRemove:f}),(v,S)=>(K(),F("div",null,[c(h)&&v.showFileList?(K(),ie(WA,{key:0,disabled:c(r),"list-type":v.listType,files:c(s),"handle-preview":v.onPreview,onRemove:c(f)},tl({append:B(()=>[C(kA,Ut({ref_key:"uploadRef",ref:a},c(m)),{default:B(()=>[v.$slots.trigger?ue(v.$slots,"trigger",{key:0}):ae("v-if",!0),!v.$slots.trigger&&v.$slots.default?ue(v.$slots,"default",{key:1}):ae("v-if",!0)]),_:3},16)]),_:2},[v.$slots.file?{name:"default",fn:B(({file:y})=>[ue(v.$slots,"file",{file:y})])}:void 0]),1032,["disabled","list-type","files","handle-preview","onRemove"])):ae("v-if",!0),!c(h)||c(h)&&!v.showFileList?(K(),ie(kA,Ut({key:1,ref_key:"uploadRef",ref:a},c(m)),{default:B(()=>[v.$slots.trigger?ue(v.$slots,"trigger",{key:0}):ae("v-if",!0),!v.$slots.trigger&&v.$slots.default?ue(v.$slots,"default",{key:1}):ae("v-if",!0)]),_:3},16)):ae("v-if",!0),v.$slots.trigger?ue(v.$slots,"default",{key:2}):ae("v-if",!0),ue(v.$slots,"tip"),!c(h)&&v.showFileList?(K(),ie(WA,{key:3,disabled:c(r),"list-type":v.listType,files:c(s),"handle-preview":v.onPreview,onRemove:c(f)},tl({_:2},[v.$slots.file?{name:"default",fn:B(({file:y})=>[ue(v.$slots,"file",{file:y})])}:void 0]),1032,["disabled","list-type","files","handle-preview","onRemove"])):ae("v-if",!0)]))}});var X0e=Be(x0e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload.vue"]]);const g0e=qt(X0e),w0e=Ie({zIndex:{type:Number,default:9},rotate:{type:Number,default:-22},width:Number,height:Number,image:String,content:{type:ve([String,Array]),default:"Element Plus"},font:{type:ve(Object)},gap:{type:ve(Array),default:()=>[100,100]},offset:{type:ve(Array)}});function j0e(e){return e.replace(/([A-Z])/g,"-$1").toLowerCase()}function L0e(e){return Object.keys(e).map(t=>`${j0e(t)}: ${e[t]};`).join(" ")}function q0e(){return window.devicePixelRatio||1}const U0e=(e,t)=>{let n=!1;return e.removedNodes.length&&t&&(n=Array.from(e.removedNodes).includes(t)),e.type==="attributes"&&e.target===t&&(n=!0),n},zK=3;function t1(e,t,n=1){const r=document.createElement("canvas"),a=r.getContext("2d"),l=e*n,o=t*n;return r.setAttribute("width",`${l}px`),r.setAttribute("height",`${o}px`),a.save(),[a,r,l,o]}function O0e(){function e(t,n,r,a,l,o,i,s){const[u,d,f,p]=t1(a,l,r);if(t instanceof HTMLImageElement)u.drawImage(t,0,0,f,p);else{const{color:Y,fontSize:Q,fontStyle:ee,fontWeight:oe,fontFamily:Ne}=o,pe=Number(Q)*r;u.font=`${ee} normal ${oe} ${pe}px/${l}px ${Ne}`,u.fillStyle=Y,u.textAlign="center",u.textBaseline="top";const me=Array.isArray(t)?t:[t];me==null||me.forEach((ce,Le)=>{u.fillText(ce!=null?ce:"",f/2,Le*(pe+zK*r))})}const b=Math.PI/180*Number(n),A=Math.max(a,l),[h,m,v]=t1(A,A,r);h.translate(v/2,v/2),h.rotate(b),f>0&&p>0&&h.drawImage(d,-f/2,-p/2);function S(Y,Q){const ee=Y*Math.cos(b)-Q*Math.sin(b),oe=Y*Math.sin(b)+Q*Math.cos(b);return[ee,oe]}let y=0,W=0,k=0,V=0;const T=f/2,P=p/2;[[0-T,0-P],[0+T,0-P],[0+T,0+P],[0-T,0+P]].forEach(([Y,Q])=>{const[ee,oe]=S(Y,Q);y=Math.min(y,ee),W=Math.max(W,ee),k=Math.min(k,oe),V=Math.max(V,oe)});const g=y+v/2,j=k+v/2,L=W-y,w=V-k,R=i*r,Z=s*r,G=(L+R)*2,U=w+Z,[H,O]=t1(G,U);function D(Y=0,Q=0){H.drawImage(m,g,j,L,w,Y,Q,L,w)}return D(),D(L+R,-w/2-Z/2),D(L+R,+w/2+Z/2),[O.toDataURL(),G/r,U/r]}return e}const R0e=$({name:"ElWatermark"}),J0e=$({...R0e,props:w0e,setup(e){const t=e,n={position:"relative"},r=X(()=>{var P,x;return(x=(P=t.font)==null?void 0:P.color)!=null?x:"rgba(0,0,0,.15)"}),a=X(()=>{var P,x;return(x=(P=t.font)==null?void 0:P.fontSize)!=null?x:16}),l=X(()=>{var P,x;return(x=(P=t.font)==null?void 0:P.fontWeight)!=null?x:"normal"}),o=X(()=>{var P,x;return(x=(P=t.font)==null?void 0:P.fontStyle)!=null?x:"normal"}),i=X(()=>{var P,x;return(x=(P=t.font)==null?void 0:P.fontFamily)!=null?x:"sans-serif"}),s=X(()=>t.gap[0]),u=X(()=>t.gap[1]),d=X(()=>s.value/2),f=X(()=>u.value/2),p=X(()=>{var P,x;return(x=(P=t.offset)==null?void 0:P[0])!=null?x:d.value}),b=X(()=>{var P,x;return(x=(P=t.offset)==null?void 0:P[1])!=null?x:f.value}),A=()=>{const P={zIndex:t.zIndex,position:"absolute",left:0,top:0,width:"100%",height:"100%",pointerEvents:"none",backgroundRepeat:"repeat"};let x=p.value-d.value,g=b.value-f.value;return x>0&&(P.left=`${x}px`,P.width=`calc(100% - ${x}px)`,x=0),g>0&&(P.top=`${g}px`,P.height=`calc(100% - ${g}px)`,g=0),P.backgroundPosition=`${x}px ${g}px`,P},h=nn(null),m=nn(),v=J(!1),S=()=>{m.value&&(m.value.remove(),m.value=void 0)},y=(P,x)=>{var g;h.value&&m.value&&(v.value=!0,m.value.setAttribute("style",L0e({...A(),backgroundImage:`url('${P}')`,backgroundSize:`${Math.floor(x)}px`})),(g=h.value)==null||g.append(m.value),setTimeout(()=>{v.value=!1}))},W=P=>{let x=120,g=64;const j=t.image,L=t.content,w=t.width,R=t.height;if(!j&&P.measureText){P.font=`${Number(a.value)}px ${i.value}`;const Z=Array.isArray(L)?L:[L],G=Z.map(U=>{const H=P.measureText(U);return[H.width,H.fontBoundingBoxAscent+H.fontBoundingBoxDescent]});x=Math.ceil(Math.max(...G.map(U=>U[0]))),g=Math.ceil(Math.max(...G.map(U=>U[1])))*Z.length+(Z.length-1)*zK}return[w!=null?w:x,R!=null?R:g]},k=O0e(),V=()=>{const x=document.createElement("canvas").getContext("2d"),g=t.image,j=t.content,L=t.rotate;if(x){m.value||(m.value=document.createElement("div"));const w=q0e(),[R,Z]=W(x),G=U=>{const[H,O]=k(U||"",L,w,R,Z,{color:r.value,fontSize:a.value,fontStyle:o.value,fontWeight:l.value,fontFamily:i.value},s.value,u.value);y(H,O)};if(g){const U=new Image;U.onload=()=>{G(U)},U.onerror=()=>{G(j)},U.crossOrigin="anonymous",U.referrerPolicy="no-referrer",U.src=g}else G(j)}};return At(()=>{V()}),Ve(()=>t,()=>{V()},{deep:!0,flush:"post"}),tn(()=>{S()}),cL(h,P=>{v.value||P.forEach(x=>{U0e(x,m.value)&&(S(),V())})},{attributes:!0}),(P,x)=>(K(),F("div",{ref_key:"containerRef",ref:h,style:lt([n])},[ue(P.$slots,"default")],4))}});var F0e=Be(J0e,[["__file","/home/runner/work/element-plus/element-plus/packages/components/watermark/src/watermark.vue"]]);const z0e=qt(F0e);var H0e=[ZQ,$Q,Tee,Ebe,jee,Fee,BV,_ee,$ee,sr,nP,bne,Ane,qne,Une,Ire,qre,eae,Aa,ere,gP,fae,gae,wae,kae,ile,qQ,yle,Ale,Wle,kle,Vle,Roe,Ioe,Boe,die,dT,Tie,hse,mse,Sse,AT,D_,E_,it,cue,WT,vr,kT,Pue,Cue,Mue,Due,Eue,ece,ode,fde,Wde,DV,wT,RP,hre,bre,Jde,Gde,iae,Cl,Pi,jp,jce,Lfe,Hfe,Zfe,Spe,Vpe,YT,qpe,Gpe,Cpe,tve,sbe,ube,Dbe,s1e,u1e,Lc,v1e,Ite,A1e,T1e,K1e,Xr,_1e,phe,Nhe,qhe,_he,g0e,z0e];const Na="ElInfiniteScroll",Z0e=50,G0e=200,C0e=0,M0e={delay:{type:Number,default:G0e},distance:{type:Number,default:C0e},disabled:{type:Boolean,default:!1},immediate:{type:Boolean,default:!0}},C2=(e,t)=>Object.entries(M0e).reduce((n,[r,a])=>{var l,o;const{type:i,default:s}=a,u=e.getAttribute(`infinite-scroll-${r}`);let d=(o=(l=t[u])!=null?l:u)!=null?o:s;return d=d==="false"?!1:d,d=i(d),n[r]=Number.isNaN(d)?s:d,n},{}),HK=e=>{const{observer:t}=e[Na];t&&(t.disconnect(),delete e[Na].observer)},D0e=(e,t)=>{const{container:n,containerEl:r,instance:a,observer:l,lastScrollTop:o}=e[Na],{disabled:i,distance:s}=C2(e,a),{clientHeight:u,scrollHeight:d,scrollTop:f}=r,p=f-o;if(e[Na].lastScrollTop=f,l||i||p<0)return;let b=!1;if(n===e)b=d-(u+f)<=s;else{const{clientTop:A,scrollHeight:h}=e,m=WJ(e,r);b=f+u>=m+A+h-s}b&&t.call(a)};function n1(e,t){const{containerEl:n,instance:r}=e[Na],{disabled:a}=C2(e,r);a||n.clientHeight===0||(n.scrollHeight<=n.clientHeight?t.call(r):HK(e))}const E0e={async mounted(e,t){const{instance:n,value:r}=t;ht(r)||Gn(Na,"'v-infinite-scroll' binding value must be a function"),await at();const{delay:a,immediate:l}=C2(e,n),o=Om(e,!0),i=o===window?document.documentElement:o,s=si(D0e.bind(null,e,r),a);if(!!o){if(e[Na]={instance:n,container:o,containerEl:i,delay:a,cb:r,onScroll:s,lastScrollTop:i.scrollTop},l){const u=new MutationObserver(si(n1.bind(null,e,r),Z0e));e[Na].observer=u,u.observe(e,{childList:!0,subtree:!0}),n1(e,r)}o.addEventListener("scroll",s)}},unmounted(e){const{container:t,onScroll:n}=e[Na];t==null||t.removeEventListener("scroll",n),HK(e)},async updated(e){if(!e[Na])await at();else{const{containerEl:t,cb:n,observer:r}=e[Na];t.clientHeight&&r&&n1(e,n)}}},Zh=E0e;Zh.install=e=>{e.directive("InfiniteScroll",Zh)};const I0e=Zh;function B0e(e){let t;const n=J(!1),r=Bt({...e,originalPosition:"",originalOverflow:"",visible:!1});function a(p){r.text=p}function l(){const p=r.parent,b=f.ns;if(!p.vLoadingAddClassList){let A=p.getAttribute("loading-number");A=Number.parseInt(A)-1,A?p.setAttribute("loading-number",A.toString()):(Hr(p,b.bm("parent","relative")),p.removeAttribute("loading-number")),Hr(p,b.bm("parent","hidden"))}o(),d.unmount()}function o(){var p,b;(b=(p=f.$el)==null?void 0:p.parentNode)==null||b.removeChild(f.$el)}function i(){var p;e.beforeClose&&!e.beforeClose()||(n.value=!0,clearTimeout(t),t=window.setTimeout(s,400),r.visible=!1,(p=e.closed)==null||p.call(e))}function s(){if(!n.value)return;const p=r.parent;n.value=!1,p.vLoadingAddClassList=void 0,l()}const u=$({name:"ElLoading",setup(p,{expose:b}){const{ns:A,zIndex:h}=Dv("loading");return b({ns:A,zIndex:h}),()=>{const m=r.spinner||r.svg,v=st("svg",{class:"circular",viewBox:r.svgViewBox?r.svgViewBox:"0 0 50 50",...m?{innerHTML:m}:{}},[st("circle",{class:"path",cx:"25",cy:"25",r:"20",fill:"none"})]),S=r.text?st("p",{class:A.b("text")},[r.text]):void 0;return st(fn,{name:A.b("fade"),onAfterLeave:s},{default:B(()=>[Vt(C("div",{style:{backgroundColor:r.background||""},class:[A.b("mask"),r.customClass,r.fullscreen?"is-fullscreen":""]},[st("div",{class:A.b("spinner")},[v,S])]),[[Ct,r.visible]])])})}}}),d=G0(u),f=d.mount(document.createElement("div"));return{...Kn(r),setText:a,removeElLoadingChild:o,close:i,handleAfterLeave:s,vm:f,get $el(){return f.$el}}}let uf;const Gh=function(e={}){if(!Mt)return;const t=Y0e(e);if(t.fullscreen&&uf)return uf;const n=B0e({...t,closed:()=>{var a;(a=t.closed)==null||a.call(t),t.fullscreen&&(uf=void 0)}});Q0e(t,t.parent,n),TA(t,t.parent,n),t.parent.vLoadingAddClassList=()=>TA(t,t.parent,n);let r=t.parent.getAttribute("loading-number");return r?r=`${Number.parseInt(r)+1}`:r="1",t.parent.setAttribute("loading-number",r),t.parent.appendChild(n.$el),at(()=>n.visible.value=t.visible),t.fullscreen&&(uf=n),n},Y0e=e=>{var t,n,r,a;let l;return Pt(e.target)?l=(t=document.querySelector(e.target))!=null?t:document.body:l=e.target||document.body,{parent:l===document.body||e.body?document.body:l,background:e.background||"",svg:e.svg||"",svgViewBox:e.svgViewBox||"",spinner:e.spinner||!1,text:e.text||"",fullscreen:l===document.body&&((n=e.fullscreen)!=null?n:!0),lock:(r=e.lock)!=null?r:!1,customClass:e.customClass||"",visible:(a=e.visible)!=null?a:!0,target:l}},Q0e=async(e,t,n)=>{const{nextZIndex:r}=n.vm.zIndex||n.vm._.exposed.zIndex,a={};if(e.fullscreen)n.originalPosition.value=ao(document.body,"position"),n.originalOverflow.value=ao(document.body,"overflow"),a.zIndex=r();else if(e.parent===document.body){n.originalPosition.value=ao(document.body,"position"),await at();for(const l of["top","left"]){const o=l==="top"?"scrollTop":"scrollLeft";a[l]=`${e.target.getBoundingClientRect()[l]+document.body[o]+document.documentElement[o]-Number.parseInt(ao(document.body,`margin-${l}`),10)}px`}for(const l of["height","width"])a[l]=`${e.target.getBoundingClientRect()[l]}px`}else n.originalPosition.value=ao(t,"position");for(const[l,o]of Object.entries(a))n.$el.style[l]=o},TA=(e,t,n)=>{const r=n.vm.ns||n.vm._.exposed.ns;["absolute","fixed","sticky"].includes(n.originalPosition.value)?Hr(t,r.bm("parent","relative")):Ea(t,r.bm("parent","relative")),e.fullscreen&&e.lock?Ea(t,r.bm("parent","hidden")):Hr(t,r.bm("parent","hidden"))},Ch=Symbol("ElLoading"),KA=(e,t)=>{var n,r,a,l;const o=t.instance,i=p=>Jt(t.value)?t.value[p]:void 0,s=p=>{const b=Pt(p)&&(o==null?void 0:o[p])||p;return b&&J(b)},u=p=>s(i(p)||e.getAttribute(`element-loading-${ga(p)}`)),d=(n=i("fullscreen"))!=null?n:t.modifiers.fullscreen,f={text:u("text"),svg:u("svg"),svgViewBox:u("svgViewBox"),spinner:u("spinner"),background:u("background"),customClass:u("customClass"),fullscreen:d,target:(r=i("target"))!=null?r:d?void 0:e,body:(a=i("body"))!=null?a:t.modifiers.body,lock:(l=i("lock"))!=null?l:t.modifiers.lock};e[Ch]={options:f,instance:Gh(f)}},_0e=(e,t)=>{for(const n of Object.keys(t))Qt(t[n])&&(t[n].value=e[n])},NA={mounted(e,t){t.value&&KA(e,t)},updated(e,t){const n=e[Ch];t.oldValue!==t.value&&(t.value&&!t.oldValue?KA(e,t):t.value&&t.oldValue?Jt(t.value)&&_0e(t.value,n.options):n==null||n.instance.close())},unmounted(e){var t;(t=e[Ch])==null||t.instance.close()}},$0e={install(e){e.directive("loading",NA),e.config.globalProperties.$loading=Gh},directive:NA,service:Gh},ZK=["success","info","warning","error"],qr=An({customClass:"",center:!1,dangerouslyUseHTMLString:!1,duration:3e3,icon:void 0,id:"",message:"",onClose:void 0,showClose:!1,type:"info",offset:16,zIndex:0,grouping:!1,repeatNum:1,appendTo:Mt?document.body:void 0}),eme=Ie({customClass:{type:String,default:qr.customClass},center:{type:Boolean,default:qr.center},dangerouslyUseHTMLString:{type:Boolean,default:qr.dangerouslyUseHTMLString},duration:{type:Number,default:qr.duration},icon:{type:un,default:qr.icon},id:{type:String,default:qr.id},message:{type:ve([String,Object,Function]),default:qr.message},onClose:{type:ve(Function),required:!1},showClose:{type:Boolean,default:qr.showClose},type:{type:String,values:ZK,default:qr.type},offset:{type:Number,default:qr.offset},zIndex:{type:Number,default:qr.zIndex},grouping:{type:Boolean,default:qr.grouping},repeatNum:{type:Number,default:qr.repeatNum}}),tme={destroy:()=>!0},Xa=V0([]),nme=e=>{const t=Xa.findIndex(a=>a.id===e),n=Xa[t];let r;return t>0&&(r=Xa[t-1]),{current:n,prev:r}},rme=e=>{const{prev:t}=nme(e);return t?t.vm.exposed.bottom.value:0},ame=(e,t)=>Xa.findIndex(r=>r.id===e)>0?20:t,lme=["id"],ome=["innerHTML"],ime=$({name:"ElMessage"}),sme=$({...ime,props:eme,emits:tme,setup(e,{expose:t}){const n=e,{Close:r}=Hm,{ns:a,zIndex:l}=Dv("message"),{currentZIndex:o,nextZIndex:i}=l,s=J(),u=J(!1),d=J(0);let f;const p=X(()=>n.type?n.type==="error"?"danger":n.type:"info"),b=X(()=>{const T=n.type;return{[a.bm("icon",T)]:T&&ko[T]}}),A=X(()=>n.icon||ko[n.type]||""),h=X(()=>rme(n.id)),m=X(()=>ame(n.id,n.offset)+h.value),v=X(()=>d.value+m.value),S=X(()=>({top:`${m.value}px`,zIndex:o.value}));function y(){n.duration!==0&&({stop:f}=Ao(()=>{k()},n.duration))}function W(){f==null||f()}function k(){u.value=!1}function V({code:T}){T===ut.esc&&k()}return At(()=>{y(),i(),u.value=!0}),Ve(()=>n.repeatNum,()=>{W(),y()}),hn(document,"keydown",V),hr(s,()=>{d.value=s.value.getBoundingClientRect().height}),t({visible:u,bottom:v,close:k}),(T,P)=>(K(),ie(fn,{name:c(a).b("fade"),onBeforeLeave:T.onClose,onAfterLeave:P[0]||(P[0]=x=>T.$emit("destroy")),persisted:""},{default:B(()=>[Vt(z("div",{id:T.id,ref_key:"messageRef",ref:s,class:q([c(a).b(),{[c(a).m(T.type)]:T.type&&!T.icon},c(a).is("center",T.center),c(a).is("closable",T.showClose),T.customClass]),style:lt(c(S)),role:"alert",onMouseenter:W,onMouseleave:y},[T.repeatNum>1?(K(),ie(c(BV),{key:0,value:T.repeatNum,type:c(p),class:q(c(a).e("badge"))},null,8,["value","type","class"])):ae("v-if",!0),c(A)?(K(),ie(c(it),{key:1,class:q([c(a).e("icon"),c(b)])},{default:B(()=>[(K(),ie(Ot(c(A))))]),_:1},8,["class"])):ae("v-if",!0),ue(T.$slots,"default",{},()=>[T.dangerouslyUseHTMLString?(K(),F(Qe,{key:1},[ae(" Caution here, message could've been compromised, never use user's input as message "),z("p",{class:q(c(a).e("content")),innerHTML:T.message},null,10,ome)],2112)):(K(),F("p",{key:0,class:q(c(a).e("content"))},je(T.message),3))]),T.showClose?(K(),ie(c(it),{key:2,class:q(c(a).e("closeBtn")),onClick:pt(k,["stop"])},{default:B(()=>[C(c(r))]),_:1},8,["class","onClick"])):ae("v-if",!0)],46,lme),[[Ct,u.value]])]),_:3},8,["name","onBeforeLeave"]))}});var ume=Be(sme,[["__file","/home/runner/work/element-plus/element-plus/packages/components/message/src/message.vue"]]);let cme=1;const GK=e=>{const t=!e||Pt(e)||cn(e)||ht(e)?{message:e}:e,n={...qr,...t};if(!n.appendTo)n.appendTo=document.body;else if(Pt(n.appendTo)){let r=document.querySelector(n.appendTo);ha(r)||(r=document.body),n.appendTo=r}return n},dme=e=>{const t=Xa.indexOf(e);if(t===-1)return;Xa.splice(t,1);const{handler:n}=e;n.close()},fme=({appendTo:e,...t},n)=>{const r=`message_${cme++}`,a=t.onClose,l=document.createElement("div"),o={...t,id:r,onClose:()=>{a==null||a(),dme(d)},onDestroy:()=>{gl(null,l)}},i=C(ume,o,ht(o.message)||cn(o.message)?{default:ht(o.message)?o.message:()=>o.message}:null);i.appContext=n||_s._context,gl(i,l),e.appendChild(l.firstElementChild);const s=i.component,d={id:r,vnode:i,vm:s,handler:{close:()=>{s.exposed.visible.value=!1}},props:i.component.props};return d},_s=(e={},t)=>{if(!Mt)return{close:()=>{}};if(mt(Q1.max)&&Xa.length>=Q1.max)return{close:()=>{}};const n=GK(e);if(n.grouping&&Xa.length){const a=Xa.find(({vnode:l})=>{var o;return((o=l.props)==null?void 0:o.message)===n.message});if(a)return a.props.repeatNum+=1,a.props.type=n.type,a.handler}const r=fme(n,t);return Xa.push(r),r.handler};ZK.forEach(e=>{_s[e]=(t={},n)=>{const r=GK(t);return _s({...r,type:e},n)}});function pme(e){for(const t of Xa)(!e||e===t.props.type)&&t.handler.close()}_s.closeAll=pme;_s._context=null;const vme=Bk(_s,"$message"),bme=$({name:"ElMessageBox",directives:{TrapFocus:gte},components:{ElButton:sr,ElFocusTrap:Iv,ElInput:vr,ElOverlay:S2,ElIcon:it,...Hm},inheritAttrs:!1,props:{buttonSize:{type:String,validator:Jv},modal:{type:Boolean,default:!0},lockScroll:{type:Boolean,default:!0},showClose:{type:Boolean,default:!0},closeOnClickModal:{type:Boolean,default:!0},closeOnPressEscape:{type:Boolean,default:!0},closeOnHashChange:{type:Boolean,default:!0},center:Boolean,draggable:Boolean,roundButton:{default:!1,type:Boolean},container:{type:String,default:"body"},boxType:{type:String,default:""}},emits:["vanish","action"],setup(e,{emit:t}){const{locale:n,zIndex:r,ns:a,size:l}=Dv("message-box",X(()=>e.buttonSize)),{t:o}=n,{nextZIndex:i}=r,s=J(!1),u=Bt({autofocus:!0,beforeClose:null,callback:null,cancelButtonText:"",cancelButtonClass:"",confirmButtonText:"",confirmButtonClass:"",customClass:"",customStyle:{},dangerouslyUseHTMLString:!1,distinguishCancelAndClose:!1,icon:"",inputPattern:null,inputPlaceholder:"",inputType:"text",inputValue:null,inputValidator:null,inputErrorMessage:"",message:null,modalFade:!0,modalClass:"",showCancelButton:!1,showConfirmButton:!0,type:"",title:void 0,showInput:!1,action:"",confirmButtonLoading:!1,cancelButtonLoading:!1,confirmButtonDisabled:!1,editorErrorMessage:"",validateError:!1,zIndex:i()}),d=X(()=>{const Z=u.type;return{[a.bm("icon",Z)]:Z&&ko[Z]}}),f=Cr(),p=Cr(),b=X(()=>u.icon||ko[u.type]||""),A=X(()=>!!u.message),h=J(),m=J(),v=J(),S=J(),y=J(),W=X(()=>u.confirmButtonClass);Ve(()=>u.inputValue,async Z=>{await at(),e.boxType==="prompt"&&Z!==null&&j()},{immediate:!0}),Ve(()=>s.value,Z=>{var G,U;Z&&(e.boxType!=="prompt"&&(u.autofocus?v.value=(U=(G=y.value)==null?void 0:G.$el)!=null?U:h.value:v.value=h.value),u.zIndex=i()),e.boxType==="prompt"&&(Z?at().then(()=>{var H;S.value&&S.value.$el&&(u.autofocus?v.value=(H=L())!=null?H:h.value:v.value=h.value)}):(u.editorErrorMessage="",u.validateError=!1))});const k=X(()=>e.draggable);Yk(h,m,k),At(async()=>{await at(),e.closeOnHashChange&&window.addEventListener("hashchange",V)}),tn(()=>{e.closeOnHashChange&&window.removeEventListener("hashchange",V)});function V(){!s.value||(s.value=!1,at(()=>{u.action&&t("action",u.action)}))}const T=()=>{e.closeOnClickModal&&g(u.distinguishCancelAndClose?"close":"cancel")},P=$m(T),x=Z=>{if(u.inputType!=="textarea")return Z.preventDefault(),g("confirm")},g=Z=>{var G;e.boxType==="prompt"&&Z==="confirm"&&!j()||(u.action=Z,u.beforeClose?(G=u.beforeClose)==null||G.call(u,Z,u,V):V())},j=()=>{if(e.boxType==="prompt"){const Z=u.inputPattern;if(Z&&!Z.test(u.inputValue||""))return u.editorErrorMessage=u.inputErrorMessage||o("el.messagebox.error"),u.validateError=!0,!1;const G=u.inputValidator;if(typeof G=="function"){const U=G(u.inputValue);if(U===!1)return u.editorErrorMessage=u.inputErrorMessage||o("el.messagebox.error"),u.validateError=!0,!1;if(typeof U=="string")return u.editorErrorMessage=U,u.validateError=!0,!1}}return u.editorErrorMessage="",u.validateError=!1,!0},L=()=>{const Z=S.value.$refs;return Z.input||Z.textarea},w=()=>{g("close")},R=()=>{e.closeOnPressEscape&&w()};return e.lockScroll&&$k(s),{...Kn(u),ns:a,overlayEvent:P,visible:s,hasMessage:A,typeClass:d,contentId:f,inputId:p,btnSize:l,iconComponent:b,confirmButtonClasses:W,rootRef:h,focusStartRef:v,headerRef:m,inputRef:S,confirmRef:y,doClose:V,handleClose:w,onCloseRequested:R,handleWrapperClick:T,handleInputEnter:x,handleAction:g,t:o}}}),hme=["aria-label","aria-describedby"],mme=["aria-label"],Sme=["id"];function yme(e,t,n,r,a,l){const o=rt("el-icon"),i=rt("close"),s=rt("el-input"),u=rt("el-button"),d=rt("el-focus-trap"),f=rt("el-overlay");return K(),ie(fn,{name:"fade-in-linear",onAfterLeave:t[11]||(t[11]=p=>e.$emit("vanish")),persisted:""},{default:B(()=>[Vt(C(f,{"z-index":e.zIndex,"overlay-class":[e.ns.is("message-box"),e.modalClass],mask:e.modal},{default:B(()=>[z("div",{role:"dialog","aria-label":e.title,"aria-modal":"true","aria-describedby":e.showInput?void 0:e.contentId,class:q(`${e.ns.namespace.value}-overlay-message-box`),onClick:t[8]||(t[8]=(...p)=>e.overlayEvent.onClick&&e.overlayEvent.onClick(...p)),onMousedown:t[9]||(t[9]=(...p)=>e.overlayEvent.onMousedown&&e.overlayEvent.onMousedown(...p)),onMouseup:t[10]||(t[10]=(...p)=>e.overlayEvent.onMouseup&&e.overlayEvent.onMouseup(...p))},[C(d,{loop:"",trapped:e.visible,"focus-trap-el":e.rootRef,"focus-start-el":e.focusStartRef,onReleaseRequested:e.onCloseRequested},{default:B(()=>[z("div",{ref:"rootRef",class:q([e.ns.b(),e.customClass,e.ns.is("draggable",e.draggable),{[e.ns.m("center")]:e.center}]),style:lt(e.customStyle),tabindex:"-1",onClick:t[7]||(t[7]=pt(()=>{},["stop"]))},[e.title!==null&&e.title!==void 0?(K(),F("div",{key:0,ref:"headerRef",class:q(e.ns.e("header"))},[z("div",{class:q(e.ns.e("title"))},[e.iconComponent&&e.center?(K(),ie(o,{key:0,class:q([e.ns.e("status"),e.typeClass])},{default:B(()=>[(K(),ie(Ot(e.iconComponent)))]),_:1},8,["class"])):ae("v-if",!0),z("span",null,je(e.title),1)],2),e.showClose?(K(),F("button",{key:0,type:"button",class:q(e.ns.e("headerbtn")),"aria-label":e.t("el.messagebox.close"),onClick:t[0]||(t[0]=p=>e.handleAction(e.distinguishCancelAndClose?"close":"cancel")),onKeydown:t[1]||(t[1]=Dt(pt(p=>e.handleAction(e.distinguishCancelAndClose?"close":"cancel"),["prevent"]),["enter"]))},[C(o,{class:q(e.ns.e("close"))},{default:B(()=>[C(i)]),_:1},8,["class"])],42,mme)):ae("v-if",!0)],2)):ae("v-if",!0),z("div",{id:e.contentId,class:q(e.ns.e("content"))},[z("div",{class:q(e.ns.e("container"))},[e.iconComponent&&!e.center&&e.hasMessage?(K(),ie(o,{key:0,class:q([e.ns.e("status"),e.typeClass])},{default:B(()=>[(K(),ie(Ot(e.iconComponent)))]),_:1},8,["class"])):ae("v-if",!0),e.hasMessage?(K(),F("div",{key:1,class:q(e.ns.e("message"))},[ue(e.$slots,"default",{},()=>[e.dangerouslyUseHTMLString?(K(),ie(Ot(e.showInput?"label":"p"),{key:1,for:e.showInput?e.inputId:void 0,innerHTML:e.message},null,8,["for","innerHTML"])):(K(),ie(Ot(e.showInput?"label":"p"),{key:0,for:e.showInput?e.inputId:void 0},{default:B(()=>[Xt(je(e.dangerouslyUseHTMLString?"":e.message),1)]),_:1},8,["for"]))])],2)):ae("v-if",!0)],2),Vt(z("div",{class:q(e.ns.e("input"))},[C(s,{id:e.inputId,ref:"inputRef",modelValue:e.inputValue,"onUpdate:modelValue":t[2]||(t[2]=p=>e.inputValue=p),type:e.inputType,placeholder:e.inputPlaceholder,"aria-invalid":e.validateError,class:q({invalid:e.validateError}),onKeydown:Dt(e.handleInputEnter,["enter"])},null,8,["id","modelValue","type","placeholder","aria-invalid","class","onKeydown"]),z("div",{class:q(e.ns.e("errormsg")),style:lt({visibility:e.editorErrorMessage?"visible":"hidden"})},je(e.editorErrorMessage),7)],2),[[Ct,e.showInput]])],10,Sme),z("div",{class:q(e.ns.e("btns"))},[e.showCancelButton?(K(),ie(u,{key:0,loading:e.cancelButtonLoading,class:q([e.cancelButtonClass]),round:e.roundButton,size:e.btnSize,onClick:t[3]||(t[3]=p=>e.handleAction("cancel")),onKeydown:t[4]||(t[4]=Dt(pt(p=>e.handleAction("cancel"),["prevent"]),["enter"]))},{default:B(()=>[Xt(je(e.cancelButtonText||e.t("el.messagebox.cancel")),1)]),_:1},8,["loading","class","round","size"])):ae("v-if",!0),Vt(C(u,{ref:"confirmRef",type:"primary",loading:e.confirmButtonLoading,class:q([e.confirmButtonClasses]),round:e.roundButton,disabled:e.confirmButtonDisabled,size:e.btnSize,onClick:t[5]||(t[5]=p=>e.handleAction("confirm")),onKeydown:t[6]||(t[6]=Dt(pt(p=>e.handleAction("confirm"),["prevent"]),["enter"]))},{default:B(()=>[Xt(je(e.confirmButtonText||e.t("el.messagebox.confirm")),1)]),_:1},8,["loading","class","round","disabled","size"]),[[Ct,e.showConfirmButton]])],2)],6)]),_:3},8,["trapped","focus-trap-el","focus-start-el","onReleaseRequested"])],42,hme)]),_:3},8,["z-index","overlay-class","mask"]),[[Ct,e.visible]])]),_:3})}var Ame=Be(bme,[["render",yme],["__file","/home/runner/work/element-plus/element-plus/packages/components/message-box/src/index.vue"]]);const Zc=new Map,Wme=e=>{let t=document.body;return e.appendTo&&(Pt(e.appendTo)&&(t=document.querySelector(e.appendTo)),ha(e.appendTo)&&(t=e.appendTo),ha(t)||(t=document.body)),t},kme=(e,t,n=null)=>{const r=C(Ame,e,ht(e.message)||cn(e.message)?{default:ht(e.message)?e.message:()=>e.message}:null);return r.appContext=n,gl(r,t),Wme(e).appendChild(t.firstElementChild),r.component},Vme=()=>document.createElement("div"),Pme=(e,t)=>{const n=Vme();e.onVanish=()=>{gl(null,n),Zc.delete(a)},e.onAction=l=>{const o=Zc.get(a);let i;e.showInput?i={value:a.inputValue,action:l}:i=l,e.callback?e.callback(i,r.proxy):l==="cancel"||l==="close"?e.distinguishCancelAndClose&&l!=="cancel"?o.reject("close"):o.reject("cancel"):o.resolve(i)};const r=kme(e,n,t),a=r.proxy;for(const l in e)Zt(e,l)&&!Zt(a.$props,l)&&(a[l]=e[l]);return a.visible=!0,a};function cu(e,t=null){if(!Mt)return Promise.reject();let n;return Pt(e)||cn(e)?e={message:e}:n=e.callback,new Promise((r,a)=>{const l=Pme(e,t!=null?t:cu._context);Zc.set(l,{options:e,callback:n,resolve:r,reject:a})})}const Tme=["alert","confirm","prompt"],Kme={alert:{closeOnPressEscape:!1,closeOnClickModal:!1},confirm:{showCancelButton:!0},prompt:{showCancelButton:!0,showInput:!0}};Tme.forEach(e=>{cu[e]=Nme(e)});function Nme(e){return(t,n,r,a)=>{let l="";return Jt(n)?(r=n,l=""):Hn(n)?l="":l=n,cu(Object.assign({title:l,message:t,type:"",...Kme[e]},r,{boxType:e}),a)}}cu.close=()=>{Zc.forEach((e,t)=>{t.doClose()}),Zc.clear()};cu._context=null;const $l=cu;$l.install=e=>{$l._context=e._context,e.config.globalProperties.$msgbox=$l,e.config.globalProperties.$messageBox=$l,e.config.globalProperties.$alert=$l.alert,e.config.globalProperties.$confirm=$l.confirm,e.config.globalProperties.$prompt=$l.prompt};const xme=$l,CK=["success","info","warning","error"],Xme=Ie({customClass:{type:String,default:""},dangerouslyUseHTMLString:{type:Boolean,default:!1},duration:{type:Number,default:4500},icon:{type:un},id:{type:String,default:""},message:{type:ve([String,Object]),default:""},offset:{type:Number,default:0},onClick:{type:ve(Function),default:()=>{}},onClose:{type:ve(Function),required:!0},position:{type:String,values:["top-right","top-left","bottom-right","bottom-left"],default:"top-right"},showClose:{type:Boolean,default:!0},title:{type:String,default:""},type:{type:String,values:[...CK,""],default:""},zIndex:Number}),gme={destroy:()=>!0},wme=["id"],jme=["textContent"],Lme={key:0},qme=["innerHTML"],Ume=$({name:"ElNotification"}),Ome=$({...Ume,props:Xme,emits:gme,setup(e,{expose:t}){const n=e,{ns:r,zIndex:a}=Dv("notification"),{nextZIndex:l,currentZIndex:o}=a,{Close:i}=Ik,s=J(!1);let u;const d=X(()=>{const y=n.type;return y&&ko[n.type]?r.m(y):""}),f=X(()=>n.type&&ko[n.type]||n.icon),p=X(()=>n.position.endsWith("right")?"right":"left"),b=X(()=>n.position.startsWith("top")?"top":"bottom"),A=X(()=>{var y;return{[b.value]:`${n.offset}px`,zIndex:(y=n.zIndex)!=null?y:o.value}});function h(){n.duration>0&&({stop:u}=Ao(()=>{s.value&&v()},n.duration))}function m(){u==null||u()}function v(){s.value=!1}function S({code:y}){y===ut.delete||y===ut.backspace?m():y===ut.esc?s.value&&v():h()}return At(()=>{h(),l(),s.value=!0}),hn(document,"keydown",S),t({visible:s,close:v}),(y,W)=>(K(),ie(fn,{name:c(r).b("fade"),onBeforeLeave:y.onClose,onAfterLeave:W[1]||(W[1]=k=>y.$emit("destroy")),persisted:""},{default:B(()=>[Vt(z("div",{id:y.id,class:q([c(r).b(),y.customClass,c(p)]),style:lt(c(A)),role:"alert",onMouseenter:m,onMouseleave:h,onClick:W[0]||(W[0]=(...k)=>y.onClick&&y.onClick(...k))},[c(f)?(K(),ie(c(it),{key:0,class:q([c(r).e("icon"),c(d)])},{default:B(()=>[(K(),ie(Ot(c(f))))]),_:1},8,["class"])):ae("v-if",!0),z("div",{class:q(c(r).e("group"))},[z("h2",{class:q(c(r).e("title")),textContent:je(y.title)},null,10,jme),Vt(z("div",{class:q(c(r).e("content")),style:lt(y.title?void 0:{margin:0})},[ue(y.$slots,"default",{},()=>[y.dangerouslyUseHTMLString?(K(),F(Qe,{key:1},[ae(" Caution here, message could've been compromised, never use user's input as message "),z("p",{innerHTML:y.message},null,8,qme)],2112)):(K(),F("p",Lme,je(y.message),1))])],6),[[Ct,y.message]]),y.showClose?(K(),ie(c(it),{key:0,class:q(c(r).e("closeBtn")),onClick:pt(v,["stop"])},{default:B(()=>[C(c(i))]),_:1},8,["class","onClick"])):ae("v-if",!0)],2)],46,wme),[[Ct,s.value]])]),_:3},8,["name","onBeforeLeave"]))}});var Rme=Be(Ome,[["__file","/home/runner/work/element-plus/element-plus/packages/components/notification/src/notification.vue"]]);const Hp={"top-left":[],"top-right":[],"bottom-left":[],"bottom-right":[]},Mh=16;let Jme=1;const $s=function(e={},t=null){if(!Mt)return{close:()=>{}};(typeof e=="string"||cn(e))&&(e={message:e});const n=e.position||"top-right";let r=e.offset||0;Hp[n].forEach(({vm:d})=>{var f;r+=(((f=d.el)==null?void 0:f.offsetHeight)||0)+Mh}),r+=Mh;const a=`notification_${Jme++}`,l=e.onClose,o={...e,offset:r,id:a,onClose:()=>{Fme(a,n,l)}};let i=document.body;ha(e.appendTo)?i=e.appendTo:Pt(e.appendTo)&&(i=document.querySelector(e.appendTo)),ha(i)||(i=document.body);const s=document.createElement("div"),u=C(Rme,o,cn(o.message)?{default:()=>o.message}:null);return u.appContext=t!=null?t:$s._context,u.props.onDestroy=()=>{gl(null,s)},gl(u,s),Hp[n].push({vm:u}),i.appendChild(s.firstElementChild),{close:()=>{u.component.exposed.visible.value=!1}}};CK.forEach(e=>{$s[e]=(t={})=>((typeof t=="string"||cn(t))&&(t={message:t}),$s({...t,type:e}))});function Fme(e,t,n){const r=Hp[t],a=r.findIndex(({vm:u})=>{var d;return((d=u.component)==null?void 0:d.props.id)===e});if(a===-1)return;const{vm:l}=r[a];if(!l)return;n==null||n(l);const o=l.el.offsetHeight,i=t.split("-")[0];r.splice(a,1);const s=r.length;if(!(s<1))for(let u=a;u<s;u++){const{el:d,component:f}=r[u].vm,p=Number.parseInt(d.style[i],10)-o-Mh;f.props.offset=p}}function zme(){for(const e of Object.values(Hp))e.forEach(({vm:t})=>{t.component.exposed.visible.value=!1})}$s.closeAll=zme;$s._context=null;const Hme=Bk($s,"$notify");var Zme=[I0e,$0e,vme,xme,Hme,gT],Gme=OQ([...H0e,...Zme]);const Cme={id:"left"},Mme=["title"],Dme={id:"right"},Eme={__name:"Titlebar",props:{backdrop:{default:!1,type:Boolean},title:{default:"vue-reader",type:String}},setup(e){const t=e,n=(o,i)=>o.length>i?`${o.substr(0,i-3)}...`:o,r=()=>{},a=()=>{document.exitFullscreen?document.exitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen?document.webkitCancelFullScreen():document.msExitFullscreen&&document.msExitFullscreen(),typeof cfs<"u"&&cfs&&cfs.call(el)},l=()=>{const o=document.documentElement,i=o.requestFullScreen||o.webkitRequestFullScreen||o.mozRequestFullScreen||o.msRequestFullscreen;typeof i<"u"&&i&&i.call(o)};return(o,i)=>{const s=rt("el-button"),u=rt("el-header");return K(),ie(u,{height:"40px",class:q({backdrop:t.backdrop})},{default:B(()=>[z("span",Cme,[ue(o.$slots,"default",{},void 0,!0)]),z("span",{id:"center",title:t.title},je(n(t.title,15)),9,Mme),z("span",Dme,[C(s,{size:"small",icon:c(Gk),circle:"",onClick:a},null,8,["icon"]),C(s,{size:"small",icon:c(Zk),circle:"",onClick:l},null,8,["icon"]),C(s,{size:"small",icon:c(ma),circle:"",onClick:r},null,8,["icon"])])]),_:3},8,["class"])}}},MK=xt(Eme,[["__scopeId","data-v-d9fe909d"]]);var DK={exports:{}};(function(e,t){(function(n,r){r()})(Tn,function(){function n(u,d){return typeof d>"u"?d={autoBom:!1}:typeof d!="object"&&(console.warn("Deprecated: Expected third argument to be a object"),d={autoBom:!d}),d.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(u.type)?new Blob(["\uFEFF",u],{type:u.type}):u}function r(u,d,f){var p=new XMLHttpRequest;p.open("GET",u),p.responseType="blob",p.onload=function(){s(p.response,d,f)},p.onerror=function(){console.error("could not download file")},p.send()}function a(u){var d=new XMLHttpRequest;d.open("HEAD",u,!1);try{d.send()}catch{}return 200<=d.status&&299>=d.status}function l(u){try{u.dispatchEvent(new MouseEvent("click"))}catch{var d=document.createEvent("MouseEvents");d.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),u.dispatchEvent(d)}}var o=typeof window=="object"&&window.window===window?window:typeof self=="object"&&self.self===self?self:typeof Tn=="object"&&Tn.global===Tn?Tn:void 0,i=o.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),s=o.saveAs||(typeof window!="object"||window!==o?function(){}:"download"in HTMLAnchorElement.prototype&&!i?function(u,d,f){var p=o.URL||o.webkitURL,b=document.createElement("a");d=d||u.name||"download",b.download=d,b.rel="noopener",typeof u=="string"?(b.href=u,b.origin===location.origin?l(b):a(b.href)?r(u,d,f):l(b,b.target="_blank")):(b.href=p.createObjectURL(u),setTimeout(function(){p.revokeObjectURL(b.href)},4e4),setTimeout(function(){l(b)},0))}:"msSaveOrOpenBlob"in navigator?function(u,d,f){if(d=d||u.name||"download",typeof u!="string")navigator.msSaveOrOpenBlob(n(u,f),d);else if(a(u))r(u,d,f);else{var p=document.createElement("a");p.href=u,p.target="_blank",setTimeout(function(){l(p)})}}:function(u,d,f,p){if(p=p||open("","_blank"),p&&(p.document.title=p.document.body.innerText="downloading..."),typeof u=="string")return r(u,d,f);var b=u.type==="application/octet-stream",A=/constructor/i.test(o.HTMLElement)||o.safari,h=/CriOS\/[\d]+/.test(navigator.userAgent);if((h||b&&A||i)&&typeof FileReader<"u"){var m=new FileReader;m.onloadend=function(){var y=m.result;y=h?y:y.replace(/^data:[^;]*;/,"data:attachment/file;"),p?p.location.href=y:location=y,p=null},m.readAsDataURL(u)}else{var v=o.URL||o.webkitURL,S=v.createObjectURL(u);p?p.location=S:location.href=S,p=null,setTimeout(function(){v.revokeObjectURL(S)},4e4)}});o.saveAs=s.saveAs=s,e.exports=s})})(DK);const Ime=DK.exports;/*! *****************************************************************************
Copyright (c) Microsoft Corporation.
Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.
THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */var ln=function(){return ln=Object.assign||function(t){for(var n,r=1,a=arguments.length;r<a;r++){n=arguments[r];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(t[l]=n[l])}return t},ln.apply(this,arguments)};function Dh(e,t,n){if(n||arguments.length===2)for(var r=0,a=t.length,l;r<a;r++)(l||!(r in t))&&(l||(l=Array.prototype.slice.call(t,0,r)),l[r]=t[r]);return e.concat(l||Array.prototype.slice.call(t))}var Xn=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,En=Object.keys,br=Array.isArray;typeof Promise<"u"&&!Xn.Promise&&(Xn.Promise=Promise);function gr(e,t){return typeof t!="object"||En(t).forEach(function(n){e[n]=t[n]}),e}var Gc=Object.getPrototypeOf,Bme={}.hasOwnProperty;function aa(e,t){return Bme.call(e,t)}function eu(e,t){typeof t=="function"&&(t=t(Gc(e))),(typeof Reflect>"u"?En:Reflect.ownKeys)(t).forEach(function(n){Jl(e,n,t[n])})}var EK=Object.defineProperty;function Jl(e,t,n,r){EK(e,t,gr(n&&aa(n,"get")&&typeof n.get=="function"?{get:n.get,set:n.set,configurable:!0}:{value:n,configurable:!0,writable:!0},r))}function du(e){return{from:function(t){return e.prototype=Object.create(t.prototype),Jl(e.prototype,"constructor",e),{extend:eu.bind(null,e.prototype)}}}}var Yme=Object.getOwnPropertyDescriptor;function M2(e,t){var n=Yme(e,t),r;return n||(r=Gc(e))&&M2(r,t)}var Qme=[].slice;function tb(e,t,n){return Qme.call(e,t,n)}function IK(e,t){return t(e)}function Ou(e){if(!e)throw new Error("Assertion Failed")}function BK(e){Xn.setImmediate?setImmediate(e):setTimeout(e,0)}function YK(e,t){return e.reduce(function(n,r,a){var l=t(r,a);return l&&(n[l[0]]=l[1]),n},{})}function _me(e,t,n){try{e.apply(null,n)}catch(r){t&&t(r)}}function Nl(e,t){if(aa(e,t))return e[t];if(!t)return e;if(typeof t!="string"){for(var n=[],r=0,a=t.length;r<a;++r){var l=Nl(e,t[r]);n.push(l)}return n}var o=t.indexOf(".");if(o!==-1){var i=e[t.substr(0,o)];return i===void 0?void 0:Nl(i,t.substr(o+1))}}function qa(e,t,n){if(!(!e||t===void 0)&&!("isFrozen"in Object&&Object.isFrozen(e)))if(typeof t!="string"&&"length"in t){Ou(typeof n!="string"&&"length"in n);for(var r=0,a=t.length;r<a;++r)qa(e,t[r],n[r])}else{var l=t.indexOf(".");if(l!==-1){var o=t.substr(0,l),i=t.substr(l+1);if(i==="")n===void 0?br(e)&&!isNaN(parseInt(o))?e.splice(o,1):delete e[o]:e[o]=n;else{var s=e[o];(!s||!aa(e,o))&&(s=e[o]={}),qa(s,i,n)}}else n===void 0?br(e)&&!isNaN(parseInt(t))?e.splice(t,1):delete e[t]:e[t]=n}}function $me(e,t){typeof t=="string"?qa(e,t,void 0):"length"in t&&[].map.call(t,function(n){qa(e,n,void 0)})}function QK(e){var t={};for(var n in e)aa(e,n)&&(t[n]=e[n]);return t}var e2e=[].concat;function _K(e){return e2e.apply([],e)}var $K="Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey".split(",").concat(_K([8,16,32,64].map(function(e){return["Int","Uint","Float"].map(function(t){return t+e+"Array"})}))).filter(function(e){return Xn[e]}),t2e=$K.map(function(e){return Xn[e]});YK($K,function(e){return[e,!0]});var ro=null;function Pd(e){ro=typeof WeakMap<"u"&&new WeakMap;var t=Eh(e);return ro=null,t}function Eh(e){if(!e||typeof e!="object")return e;var t=ro&&ro.get(e);if(t)return t;if(br(e)){t=[],ro&&ro.set(e,t);for(var n=0,r=e.length;n<r;++n)t.push(Eh(e[n]))}else if(t2e.indexOf(e.constructor)>=0)t=e;else{var a=Gc(e);t=a===Object.prototype?{}:Object.create(a),ro&&ro.set(e,t);for(var l in e)aa(e,l)&&(t[l]=Eh(e[l]))}return t}var n2e={}.toString;function Ih(e){return n2e.call(e).slice(8,-1)}var Bh=typeof Symbol<"u"?Symbol.iterator:"@@iterator",r2e=typeof Bh=="symbol"?function(e){var t;return e!=null&&(t=e[Bh])&&t.apply(e)}:function(){return null},ss={};function Al(e){var t,n,r,a;if(arguments.length===1){if(br(e))return e.slice();if(this===ss&&typeof e=="string")return[e];if(a=r2e(e)){for(n=[];r=a.next(),!r.done;)n.push(r.value);return n}if(e==null)return[e];if(t=e.length,typeof t=="number"){for(n=new Array(t);t--;)n[t]=e[t];return n}return[e]}for(t=arguments.length,n=new Array(t);t--;)n[t]=arguments[t];return n}var D2=typeof Symbol<"u"?function(e){return e[Symbol.toStringTag]==="AsyncFunction"}:function(){return!1},cl=typeof location<"u"&&/^(http|https):\/\/(localhost|127\.0\.0\.1)/.test(location.href);function eN(e,t){cl=e,tN=t}var tN=function(){return!0},a2e=!new Error("").stack;function Ri(){if(a2e)try{throw Ri.arguments,new Error}catch(e){return e}return new Error}function Yh(e,t){var n=e.stack;return n?(t=t||0,n.indexOf(e.name)===0&&(t+=(e.name+e.message).split(`
`).length),n.split(`
`).slice(t).filter(tN).map(function(r){return`
`+r}).join("")):""}var l2e=["Modify","Bulk","OpenFailed","VersionChange","Schema","Upgrade","InvalidTable","MissingAPI","NoSuchDatabase","InvalidArgument","SubTransaction","Unsupported","Internal","DatabaseClosed","PrematureCommit","ForeignAwait"],nN=["Unknown","Constraint","Data","TransactionInactive","ReadOnly","Version","NotFound","InvalidState","InvalidAccess","Abort","Timeout","QuotaExceeded","Syntax","DataClone"],E2=l2e.concat(nN),o2e={VersionChanged:"Database version changed by other database connection",DatabaseClosed:"Database has been closed",Abort:"Transaction aborted",TransactionInactive:"Transaction has already completed or failed",MissingAPI:"IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb"};function fu(e,t){this._e=Ri(),this.name=e,this.message=t}du(fu).from(Error).extend({stack:{get:function(){return this._stack||(this._stack=this.name+": "+this.message+Yh(this._e,2))}},toString:function(){return this.name+": "+this.message}});function rN(e,t){return e+". Errors: "+Object.keys(t).map(function(n){return t[n].toString()}).filter(function(n,r,a){return a.indexOf(n)===r}).join(`
`)}function Zp(e,t,n,r){this._e=Ri(),this.failures=t,this.failedKeys=r,this.successCount=n,this.message=rN(e,t)}du(Zp).from(fu);function ac(e,t){this._e=Ri(),this.name="BulkError",this.failures=Object.keys(t).map(function(n){return t[n]}),this.failuresByPos=t,this.message=rN(e,t)}du(ac).from(fu);var I2=E2.reduce(function(e,t){return e[t]=t+"Error",e},{}),i2e=fu,Et=E2.reduce(function(e,t){var n=t+"Error";function r(a,l){this._e=Ri(),this.name=n,a?typeof a=="string"?(this.message=""+a+(l?`
 `+l:""),this.inner=l||null):typeof a=="object"&&(this.message=a.name+" "+a.message,this.inner=a):(this.message=o2e[t]||n,this.inner=null)}return du(r).from(i2e),e[t]=r,e},{});Et.Syntax=SyntaxError;Et.Type=TypeError;Et.Range=RangeError;var xA=nN.reduce(function(e,t){return e[t+"Error"]=Et[t],e},{});function s2e(e,t){if(!e||e instanceof fu||e instanceof TypeError||e instanceof SyntaxError||!e.name||!xA[e.name])return e;var n=new xA[e.name](t||e.message,e);return"stack"in e&&Jl(n,"stack",{get:function(){return this.inner.stack}}),n}var nb=E2.reduce(function(e,t){return["Syntax","Type","Range"].indexOf(t)===-1&&(e[t+"Error"]=Et[t]),e},{});nb.ModifyError=Zp;nb.DexieError=fu;nb.BulkError=ac;function kn(){}function Td(e){return e}function u2e(e,t){return e==null||e===Td?t:function(n){return t(e(n))}}function Ki(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}function c2e(e,t){return e===kn?t:function(){var n=e.apply(this,arguments);n!==void 0&&(arguments[0]=n);var r=this.onsuccess,a=this.onerror;this.onsuccess=null,this.onerror=null;var l=t.apply(this,arguments);return r&&(this.onsuccess=this.onsuccess?Ki(r,this.onsuccess):r),a&&(this.onerror=this.onerror?Ki(a,this.onerror):a),l!==void 0?l:n}}function d2e(e,t){return e===kn?t:function(){e.apply(this,arguments);var n=this.onsuccess,r=this.onerror;this.onsuccess=this.onerror=null,t.apply(this,arguments),n&&(this.onsuccess=this.onsuccess?Ki(n,this.onsuccess):n),r&&(this.onerror=this.onerror?Ki(r,this.onerror):r)}}function f2e(e,t){return e===kn?t:function(n){var r=e.apply(this,arguments);gr(n,r);var a=this.onsuccess,l=this.onerror;this.onsuccess=null,this.onerror=null;var o=t.apply(this,arguments);return a&&(this.onsuccess=this.onsuccess?Ki(a,this.onsuccess):a),l&&(this.onerror=this.onerror?Ki(l,this.onerror):l),r===void 0?o===void 0?void 0:o:gr(r,o)}}function p2e(e,t){return e===kn?t:function(){return t.apply(this,arguments)===!1?!1:e.apply(this,arguments)}}function B2(e,t){return e===kn?t:function(){var n=e.apply(this,arguments);if(n&&typeof n.then=="function"){for(var r=this,a=arguments.length,l=new Array(a);a--;)l[a]=arguments[a];return n.then(function(){return t.apply(r,l)})}return t.apply(this,arguments)}}var Cc={},v2e=100,b2e=20,aN=100,Y2=typeof Promise>"u"?[]:function(){var e=Promise.resolve();if(typeof crypto>"u"||!crypto.subtle)return[e,Gc(e),e];var t=crypto.subtle.digest("SHA-512",new Uint8Array([0]));return[t,Gc(t),e]}(),Qh=Y2[0],Gp=Y2[1],_h=Y2[2],lN=Gp&&Gp.then,If=Qh&&Qh.constructor,Q2=!!_h,$h=!1,h2e=_h?function(){_h.then(cf)}:Xn.setImmediate?setImmediate.bind(null,cf):Xn.MutationObserver?function(){var e=document.createElement("div");new MutationObserver(function(){cf(),e=null}).observe(e,{attributes:!0}),e.setAttribute("i","1")}:function(){setTimeout(cf,0)},Mc=function(e,t){Ru.push([e,t]),Cp&&(h2e(),Cp=!1)},e0=!0,Cp=!0,pi=[],Bf=[],t0=null,n0=Td,Ks={id:"global",global:!0,ref:0,unhandleds:[],onunhandled:wA,pgp:!1,env:{},finalize:function(){this.unhandleds.forEach(function(e){try{wA(e[0],e[1])}catch{}})}},Ht=Ks,Ru=[],vi=0,Yf=[];function jt(e){if(typeof this!="object")throw new TypeError("Promises must be constructed via new");this._listeners=[],this.onuncatched=kn,this._lib=!1;var t=this._PSD=Ht;if(cl&&(this._stackHolder=Ri(),this._prev=null,this._numPrev=0),typeof e!="function"){if(e!==Cc)throw new TypeError("Not a function");this._state=arguments[1],this._value=arguments[2],this._state===!1&&a0(this,this._value);return}this._state=null,this._value=null,++t.ref,iN(this,e)}var r0={get:function(){var e=Ht,t=Mp;function n(r,a){var l=this,o=!e.global&&(e!==Ht||t!==Mp),i=o&&!Fl(),s=new jt(function(u,d){_2(l,new oN(Ep(r,e,o,i),Ep(a,e,o,i),u,d,e))});return cl&&cN(s,this),s}return n.prototype=Cc,n},set:function(e){Jl(this,"then",e&&e.prototype===Cc?r0:{get:function(){return e},set:r0.set})}};eu(jt.prototype,{then:r0,_then:function(e,t){_2(this,new oN(null,null,e,t,Ht))},catch:function(e){if(arguments.length===1)return this.then(null,e);var t=arguments[0],n=arguments[1];return typeof t=="function"?this.then(null,function(r){return r instanceof t?n(r):Qf(r)}):this.then(null,function(r){return r&&r.name===t?n(r):Qf(r)})},finally:function(e){return this.then(function(t){return e(),t},function(t){return e(),Qf(t)})},stack:{get:function(){if(this._stack)return this._stack;try{$h=!0;var e=uN(this,[],b2e),t=e.join(`
From previous: `);return this._state!==null&&(this._stack=t),t}finally{$h=!1}}},timeout:function(e,t){var n=this;return e<1/0?new jt(function(r,a){var l=setTimeout(function(){return a(new Et.Timeout(t))},e);n.then(r,a).finally(clearTimeout.bind(null,l))}):this}});typeof Symbol<"u"&&Symbol.toStringTag&&Jl(jt.prototype,Symbol.toStringTag,"Dexie.Promise");Ks.env=dN();function oN(e,t,n,r,a){this.onFulfilled=typeof e=="function"?e:null,this.onRejected=typeof t=="function"?t:null,this.resolve=n,this.reject=r,this.psd=a}eu(jt,{all:function(){var e=Al.apply(null,arguments).map(Dp);return new jt(function(t,n){e.length===0&&t([]);var r=e.length;e.forEach(function(a,l){return jt.resolve(a).then(function(o){e[l]=o,--r||t(e)},n)})})},resolve:function(e){if(e instanceof jt)return e;if(e&&typeof e.then=="function")return new jt(function(n,r){e.then(n,r)});var t=new jt(Cc,!0,e);return cN(t,t0),t},reject:Qf,race:function(){var e=Al.apply(null,arguments).map(Dp);return new jt(function(t,n){e.map(function(r){return jt.resolve(r).then(t,n)})})},PSD:{get:function(){return Ht},set:function(e){return Ht=e}},totalEchoes:{get:function(){return Mp}},newPSD:To,usePSD:vu,scheduler:{get:function(){return Mc},set:function(e){Mc=e}},rejectionMapper:{get:function(){return n0},set:function(e){n0=e}},follow:function(e,t){return new jt(function(n,r){return To(function(a,l){var o=Ht;o.unhandleds=[],o.onunhandled=l,o.finalize=Ki(function(){var i=this;S2e(function(){i.unhandleds.length===0?a():l(i.unhandleds[0])})},o.finalize),e()},t,n,r)})}});If&&(If.allSettled&&Jl(jt,"allSettled",function(){var e=Al.apply(null,arguments).map(Dp);return new jt(function(t){e.length===0&&t([]);var n=e.length,r=new Array(n);e.forEach(function(a,l){return jt.resolve(a).then(function(o){return r[l]={status:"fulfilled",value:o}},function(o){return r[l]={status:"rejected",reason:o}}).then(function(){return--n||t(r)})})})}),If.any&&typeof AggregateError<"u"&&Jl(jt,"any",function(){var e=Al.apply(null,arguments).map(Dp);return new jt(function(t,n){e.length===0&&n(new AggregateError([]));var r=e.length,a=new Array(r);e.forEach(function(l,o){return jt.resolve(l).then(function(i){return t(i)},function(i){a[o]=i,--r||n(new AggregateError(a))})})})}));function iN(e,t){try{t(function(n){if(e._state===null){if(n===e)throw new TypeError("A promise cannot be resolved with itself.");var r=e._lib&&Kd();n&&typeof n.then=="function"?iN(e,function(a,l){n instanceof jt?n._then(a,l):n.then(a,l)}):(e._state=!0,e._value=n,sN(e)),r&&Nd()}},a0.bind(null,e))}catch(n){a0(e,n)}}function a0(e,t){if(Bf.push(t),e._state===null){var n=e._lib&&Kd();t=n0(t),e._state=!1,e._value=t,cl&&t!==null&&typeof t=="object"&&!t._promise&&_me(function(){var r=M2(t,"stack");t._promise=e,Jl(t,"stack",{get:function(){return $h?r&&(r.get?r.get.apply(t):r.value):e.stack}})}),y2e(e),sN(e),n&&Nd()}}function sN(e){var t=e._listeners;e._listeners=[];for(var n=0,r=t.length;n<r;++n)_2(e,t[n]);var a=e._PSD;--a.ref||a.finalize(),vi===0&&(++vi,Mc(function(){--vi===0&&$2()},[]))}function _2(e,t){if(e._state===null){e._listeners.push(t);return}var n=e._state?t.onFulfilled:t.onRejected;if(n===null)return(e._state?t.resolve:t.reject)(e._value);++t.psd.ref,++vi,Mc(m2e,[n,e,t])}function m2e(e,t,n){try{t0=t;var r,a=t._value;t._state?r=e(a):(Bf.length&&(Bf=[]),r=e(a),Bf.indexOf(a)===-1&&A2e(t)),n.resolve(r)}catch(l){n.reject(l)}finally{t0=null,--vi===0&&$2(),--n.psd.ref||n.psd.finalize()}}function uN(e,t,n){if(t.length===n)return t;var r="";if(e._state===!1){var a=e._value,l,o;a!=null?(l=a.name||"Error",o=a.message||a,r=Yh(a,0)):(l=a,o=""),t.push(l+(o?": "+o:"")+r)}return cl&&(r=Yh(e._stackHolder,2),r&&t.indexOf(r)===-1&&t.push(r),e._prev&&uN(e._prev,t,n)),t}function cN(e,t){var n=t?t._numPrev+1:0;n<v2e&&(e._prev=t,e._numPrev=n)}function cf(){Kd()&&Nd()}function Kd(){var e=e0;return e0=!1,Cp=!1,e}function Nd(){var e,t,n;do for(;Ru.length>0;)for(e=Ru,Ru=[],n=e.length,t=0;t<n;++t){var r=e[t];r[0].apply(null,r[1])}while(Ru.length>0);e0=!0,Cp=!0}function $2(){var e=pi;pi=[],e.forEach(function(r){r._PSD.onunhandled.call(null,r._value,r)});for(var t=Yf.slice(0),n=t.length;n;)t[--n]()}function S2e(e){function t(){e(),Yf.splice(Yf.indexOf(t),1)}Yf.push(t),++vi,Mc(function(){--vi===0&&$2()},[])}function y2e(e){pi.some(function(t){return t._value===e._value})||pi.push(e)}function A2e(e){for(var t=pi.length;t;)if(pi[--t]._value===e._value){pi.splice(t,1);return}}function Qf(e){return new jt(Cc,!1,e)}function wn(e,t){var n=Ht;return function(){var r=Kd(),a=Ht;try{return Ko(n,!0),e.apply(this,arguments)}catch(l){t&&t(l)}finally{Ko(a,!1),r&&Nd()}}}var fr={awaits:0,echoes:0,id:0},W2e=0,_f=[],r1=0,Mp=0,k2e=0;function To(e,t,n,r){var a=Ht,l=Object.create(a);l.parent=a,l.ref=0,l.global=!1,l.id=++k2e;var o=Ks.env;l.env=Q2?{Promise:jt,PromiseProp:{value:jt,configurable:!0,writable:!0},all:jt.all,race:jt.race,allSettled:jt.allSettled,any:jt.any,resolve:jt.resolve,reject:jt.reject,nthen:XA(o.nthen,l),gthen:XA(o.gthen,l)}:{},t&&gr(l,t),++a.ref,l.finalize=function(){--this.parent.ref||this.parent.finalize()};var i=vu(l,e,n,r);return l.ref===0&&l.finalize(),i}function pu(){return fr.id||(fr.id=++W2e),++fr.awaits,fr.echoes+=aN,fr.id}function Fl(){return fr.awaits?(--fr.awaits===0&&(fr.id=0),fr.echoes=fr.awaits*aN,!0):!1}(""+lN).indexOf("[native code]")===-1&&(pu=Fl=kn);function Dp(e){return fr.echoes&&e&&e.constructor===If?(pu(),e.then(function(t){return Fl(),t},function(t){return Fl(),_n(t)})):e}function V2e(e){++Mp,(!fr.echoes||--fr.echoes===0)&&(fr.echoes=fr.id=0),_f.push(Ht),Ko(e,!0)}function P2e(){var e=_f[_f.length-1];_f.pop(),Ko(e,!1)}function Ko(e,t){var n=Ht;if((t?fr.echoes&&(!r1++||e!==Ht):r1&&(!--r1||e!==Ht))&&fN(t?V2e.bind(null,e):P2e),e!==Ht&&(Ht=e,n===Ks&&(Ks.env=dN()),Q2)){var r=Ks.env.Promise,a=e.env;Gp.then=a.nthen,r.prototype.then=a.gthen,(n.global||e.global)&&(Object.defineProperty(Xn,"Promise",a.PromiseProp),r.all=a.all,r.race=a.race,r.resolve=a.resolve,r.reject=a.reject,a.allSettled&&(r.allSettled=a.allSettled),a.any&&(r.any=a.any))}}function dN(){var e=Xn.Promise;return Q2?{Promise:e,PromiseProp:Object.getOwnPropertyDescriptor(Xn,"Promise"),all:e.all,race:e.race,allSettled:e.allSettled,any:e.any,resolve:e.resolve,reject:e.reject,nthen:Gp.then,gthen:e.prototype.then}:{}}function vu(e,t,n,r,a){var l=Ht;try{return Ko(e,!0),t(n,r,a)}finally{Ko(l,!1)}}function fN(e){lN.call(Qh,e)}function Ep(e,t,n,r){return typeof e!="function"?e:function(){var a=Ht;n&&pu(),Ko(t,!0);try{return e.apply(this,arguments)}finally{Ko(a,!1),r&&fN(Fl)}}}function XA(e,t){return function(n,r){return e.call(this,Ep(n,t),Ep(r,t))}}var gA="unhandledrejection";function wA(e,t){var n;try{n=t.onuncatched(e)}catch{}if(n!==!1)try{var r,a={promise:t,reason:e};if(Xn.document&&document.createEvent?(r=document.createEvent("Event"),r.initEvent(gA,!0,!0),gr(r,a)):Xn.CustomEvent&&(r=new CustomEvent(gA,{detail:a}),gr(r,a)),r&&Xn.dispatchEvent&&(dispatchEvent(r),!Xn.PromiseRejectionEvent&&Xn.onunhandledrejection))try{Xn.onunhandledrejection(r)}catch{}cl&&r&&!r.defaultPrevented&&console.warn("Unhandled rejection: "+(e.stack||e))}catch{}}var _n=jt.reject;function l0(e,t,n,r){if(!e.idbdb||!e._state.openComplete&&!Ht.letThrough&&!e._vip){if(e._state.openComplete)return _n(new Et.DatabaseClosed(e._state.dbOpenError));if(!e._state.isBeingOpened){if(!e._options.autoOpen)return _n(new Et.DatabaseClosed);e.open().catch(kn)}return e._state.dbReadyPromise.then(function(){return l0(e,t,n,r)})}else{var a=e._createTransaction(t,n,e._dbSchema);try{a.create(),e._state.PR1398_maxLoop=3}catch(l){return l.name===I2.InvalidState&&e.isOpen()&&--e._state.PR1398_maxLoop>0?(console.warn("Dexie: Need to reopen db"),e._close(),e.open().then(function(){return l0(e,t,n,r)})):_n(l)}return a._promise(t,function(l,o){return To(function(){return Ht.trans=a,r(l,o,a)})}).then(function(l){return a._completion.then(function(){return l})})}}var jA="3.2.4",ai=String.fromCharCode(65535),o0=-1/0,fl="Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.",pN="String expected.",lc=[],rb=typeof navigator<"u"&&/(MSIE|Trident|Edge)/.test(navigator.userAgent),T2e=rb,K2e=rb,vN=function(e){return!/(dexie\.js|dexie\.min\.js)/.test(e)},ab="__dbnames",a1="readonly",l1="readwrite";function Ni(e,t){return e?t?function(){return e.apply(this,arguments)&&t.apply(this,arguments)}:e:t}var bN={type:3,lower:-1/0,lowerOpen:!1,upper:[[]],upperOpen:!1};function df(e){return typeof e=="string"&&!/\./.test(e)?function(t){return t[e]===void 0&&e in t&&(t=Pd(t),delete t[e]),t}:function(t){return t}}var N2e=function(){function e(){}return e.prototype._trans=function(t,n,r){var a=this._tx||Ht.trans,l=this.name;function o(s,u,d){if(!d.schema[l])throw new Et.NotFound("Table "+l+" not part of transaction");return n(d.idbtrans,d)}var i=Kd();try{return a&&a.db===this.db?a===Ht.trans?a._promise(t,o,r):To(function(){return a._promise(t,o,r)},{trans:a,transless:Ht.transless||Ht}):l0(this.db,t,[this.name],o)}finally{i&&Nd()}},e.prototype.get=function(t,n){var r=this;return t&&t.constructor===Object?this.where(t).first(n):this._trans("readonly",function(a){return r.core.get({trans:a,key:t}).then(function(l){return r.hook.reading.fire(l)})}).then(n)},e.prototype.where=function(t){if(typeof t=="string")return new this.db.WhereClause(this,t);if(br(t))return new this.db.WhereClause(this,"["+t.join("+")+"]");var n=En(t);if(n.length===1)return this.where(n[0]).equals(t[n[0]]);var r=this.schema.indexes.concat(this.schema.primKey).filter(function(d){return d.compound&&n.every(function(f){return d.keyPath.indexOf(f)>=0})&&d.keyPath.every(function(f){return n.indexOf(f)>=0})})[0];if(r&&this.db._maxKey!==ai)return this.where(r.name).equals(r.keyPath.map(function(d){return t[d]}));!r&&cl&&console.warn("The query "+JSON.stringify(t)+" on "+this.name+" would benefit of a "+("compound index ["+n.join("+")+"]"));var a=this.schema.idxByName,l=this.db._deps.indexedDB;function o(d,f){try{return l.cmp(d,f)===0}catch{return!1}}var i=n.reduce(function(d,f){var p=d[0],b=d[1],A=a[f],h=t[f];return[p||A,p||!A?Ni(b,A&&A.multi?function(m){var v=Nl(m,f);return br(v)&&v.some(function(S){return o(h,S)})}:function(m){return o(h,Nl(m,f))}):b]},[null,null]),s=i[0],u=i[1];return s?this.where(s.name).equals(t[s.keyPath]).filter(u):r?this.filter(u):this.where(n).equals("")},e.prototype.filter=function(t){return this.toCollection().and(t)},e.prototype.count=function(t){return this.toCollection().count(t)},e.prototype.offset=function(t){return this.toCollection().offset(t)},e.prototype.limit=function(t){return this.toCollection().limit(t)},e.prototype.each=function(t){return this.toCollection().each(t)},e.prototype.toArray=function(t){return this.toCollection().toArray(t)},e.prototype.toCollection=function(){return new this.db.Collection(new this.db.WhereClause(this))},e.prototype.orderBy=function(t){return new this.db.Collection(new this.db.WhereClause(this,br(t)?"["+t.join("+")+"]":t))},e.prototype.reverse=function(){return this.toCollection().reverse()},e.prototype.mapToClass=function(t){this.schema.mappedClass=t;var n=function(r){if(!r)return r;var a=Object.create(t.prototype);for(var l in r)if(aa(r,l))try{a[l]=r[l]}catch{}return a};return this.schema.readHook&&this.hook.reading.unsubscribe(this.schema.readHook),this.schema.readHook=n,this.hook("reading",n),t},e.prototype.defineClass=function(){function t(n){gr(this,n)}return this.mapToClass(t)},e.prototype.add=function(t,n){var r=this,a=this.schema.primKey,l=a.auto,o=a.keyPath,i=t;return o&&l&&(i=df(o)(t)),this._trans("readwrite",function(s){return r.core.mutate({trans:s,type:"add",keys:n!=null?[n]:null,values:[i]})}).then(function(s){return s.numFailures?jt.reject(s.failures[0]):s.lastResult}).then(function(s){if(o)try{qa(t,o,s)}catch{}return s})},e.prototype.update=function(t,n){if(typeof t=="object"&&!br(t)){var r=Nl(t,this.schema.primKey.keyPath);if(r===void 0)return _n(new Et.InvalidArgument("Given object does not contain its primary key"));try{typeof n!="function"?En(n).forEach(function(a){qa(t,a,n[a])}):n(t,{value:t,primKey:r})}catch{}return this.where(":id").equals(r).modify(n)}else return this.where(":id").equals(t).modify(n)},e.prototype.put=function(t,n){var r=this,a=this.schema.primKey,l=a.auto,o=a.keyPath,i=t;return o&&l&&(i=df(o)(t)),this._trans("readwrite",function(s){return r.core.mutate({trans:s,type:"put",values:[i],keys:n!=null?[n]:null})}).then(function(s){return s.numFailures?jt.reject(s.failures[0]):s.lastResult}).then(function(s){if(o)try{qa(t,o,s)}catch{}return s})},e.prototype.delete=function(t){var n=this;return this._trans("readwrite",function(r){return n.core.mutate({trans:r,type:"delete",keys:[t]})}).then(function(r){return r.numFailures?jt.reject(r.failures[0]):void 0})},e.prototype.clear=function(){var t=this;return this._trans("readwrite",function(n){return t.core.mutate({trans:n,type:"deleteRange",range:bN})}).then(function(n){return n.numFailures?jt.reject(n.failures[0]):void 0})},e.prototype.bulkGet=function(t){var n=this;return this._trans("readonly",function(r){return n.core.getMany({keys:t,trans:r}).then(function(a){return a.map(function(l){return n.hook.reading.fire(l)})})})},e.prototype.bulkAdd=function(t,n,r){var a=this,l=Array.isArray(n)?n:void 0;r=r||(l?void 0:n);var o=r?r.allKeys:void 0;return this._trans("readwrite",function(i){var s=a.schema.primKey,u=s.auto,d=s.keyPath;if(d&&l)throw new Et.InvalidArgument("bulkAdd(): keys argument invalid on tables with inbound keys");if(l&&l.length!==t.length)throw new Et.InvalidArgument("Arguments objects and keys must have the same length");var f=t.length,p=d&&u?t.map(df(d)):t;return a.core.mutate({trans:i,type:"add",keys:l,values:p,wantResults:o}).then(function(b){var A=b.numFailures,h=b.results,m=b.lastResult,v=b.failures,S=o?h:m;if(A===0)return S;throw new ac(a.name+".bulkAdd(): "+A+" of "+f+" operations failed",v)})})},e.prototype.bulkPut=function(t,n,r){var a=this,l=Array.isArray(n)?n:void 0;r=r||(l?void 0:n);var o=r?r.allKeys:void 0;return this._trans("readwrite",function(i){var s=a.schema.primKey,u=s.auto,d=s.keyPath;if(d&&l)throw new Et.InvalidArgument("bulkPut(): keys argument invalid on tables with inbound keys");if(l&&l.length!==t.length)throw new Et.InvalidArgument("Arguments objects and keys must have the same length");var f=t.length,p=d&&u?t.map(df(d)):t;return a.core.mutate({trans:i,type:"put",keys:l,values:p,wantResults:o}).then(function(b){var A=b.numFailures,h=b.results,m=b.lastResult,v=b.failures,S=o?h:m;if(A===0)return S;throw new ac(a.name+".bulkPut(): "+A+" of "+f+" operations failed",v)})})},e.prototype.bulkDelete=function(t){var n=this,r=t.length;return this._trans("readwrite",function(a){return n.core.mutate({trans:a,type:"delete",keys:t})}).then(function(a){var l=a.numFailures,o=a.lastResult,i=a.failures;if(l===0)return o;throw new ac(n.name+".bulkDelete(): "+l+" of "+r+" operations failed",i)})},e}();function xd(e){var t={},n=function(i,s){if(s){for(var u=arguments.length,d=new Array(u-1);--u;)d[u-1]=arguments[u];return t[i].subscribe.apply(null,d),e}else if(typeof i=="string")return t[i]};n.addEventType=l;for(var r=1,a=arguments.length;r<a;++r)l(arguments[r]);return n;function l(i,s,u){if(typeof i=="object")return o(i);s||(s=p2e),u||(u=kn);var d={subscribers:[],fire:u,subscribe:function(f){d.subscribers.indexOf(f)===-1&&(d.subscribers.push(f),d.fire=s(d.fire,f))},unsubscribe:function(f){d.subscribers=d.subscribers.filter(function(p){return p!==f}),d.fire=d.subscribers.reduce(s,u)}};return t[i]=n[i]=d,d}function o(i){En(i).forEach(function(s){var u=i[s];if(br(u))l(s,i[s][0],i[s][1]);else if(u==="asap")var d=l(s,Td,function(){for(var p=arguments.length,b=new Array(p);p--;)b[p]=arguments[p];d.subscribers.forEach(function(A){BK(function(){A.apply(null,b)})})});else throw new Et.InvalidArgument("Invalid event config")})}}function Xd(e,t){return du(t).from({prototype:e}),t}function x2e(e){return Xd(N2e.prototype,function(n,r,a){this.db=e,this._tx=a,this.name=n,this.schema=r,this.hook=e._allTables[n]?e._allTables[n].hook:xd(null,{creating:[c2e,kn],reading:[u2e,Td],updating:[f2e,kn],deleting:[d2e,kn]})})}function Qi(e,t){return!(e.filter||e.algorithm||e.or)&&(t?e.justLimit:!e.replayFilter)}function o1(e,t){e.filter=Ni(e.filter,t)}function i1(e,t,n){var r=e.replayFilter;e.replayFilter=r?function(){return Ni(r(),t())}:t,e.justLimit=n&&!r}function X2e(e,t){e.isMatch=Ni(e.isMatch,t)}function $f(e,t){if(e.isPrimKey)return t.primaryKey;var n=t.getIndexByKeyPath(e.index);if(!n)throw new Et.Schema("KeyPath "+e.index+" on object store "+t.name+" is not indexed");return n}function LA(e,t,n){var r=$f(e,t.schema);return t.openCursor({trans:n,values:!e.keysOnly,reverse:e.dir==="prev",unique:!!e.unique,query:{index:r,range:e.range}})}function ff(e,t,n,r){var a=e.replayFilter?Ni(e.filter,e.replayFilter()):e.filter;if(e.or){var l={},o=function(i,s,u){if(!a||a(s,u,function(p){return s.stop(p)},function(p){return s.fail(p)})){var d=s.primaryKey,f=""+d;f==="[object ArrayBuffer]"&&(f=""+new Uint8Array(d)),aa(l,f)||(l[f]=!0,t(i,s,u))}};return Promise.all([e.or._iterate(o,n),qA(LA(e,r,n),e.algorithm,o,!e.keysOnly&&e.valueMapper)])}else return qA(LA(e,r,n),Ni(e.algorithm,a),t,!e.keysOnly&&e.valueMapper)}function qA(e,t,n,r){var a=r?function(o,i,s){return n(r(o),i,s)}:n,l=wn(a);return e.then(function(o){if(o)return o.start(function(){var i=function(){return o.continue()};(!t||t(o,function(s){return i=s},function(s){o.stop(s),i=kn},function(s){o.fail(s),i=kn}))&&l(o.value,o,function(s){return i=s}),i()})})}function Wr(e,t){try{var n=UA(e),r=UA(t);if(n!==r)return n==="Array"?1:r==="Array"?-1:n==="binary"?1:r==="binary"?-1:n==="string"?1:r==="string"?-1:n==="Date"?1:r!=="Date"?NaN:-1;switch(n){case"number":case"Date":case"string":return e>t?1:e<t?-1:0;case"binary":return w2e(OA(e),OA(t));case"Array":return g2e(e,t)}}catch{}return NaN}function g2e(e,t){for(var n=e.length,r=t.length,a=n<r?n:r,l=0;l<a;++l){var o=Wr(e[l],t[l]);if(o!==0)return o}return n===r?0:n<r?-1:1}function w2e(e,t){for(var n=e.length,r=t.length,a=n<r?n:r,l=0;l<a;++l)if(e[l]!==t[l])return e[l]<t[l]?-1:1;return n===r?0:n<r?-1:1}function UA(e){var t=typeof e;if(t!=="object")return t;if(ArrayBuffer.isView(e))return"binary";var n=Ih(e);return n==="ArrayBuffer"?"binary":n}function OA(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):new Uint8Array(e)}var j2e=function(){function e(){}return e.prototype._read=function(t,n){var r=this._ctx;return r.error?r.table._trans(null,_n.bind(null,r.error)):r.table._trans("readonly",t).then(n)},e.prototype._write=function(t){var n=this._ctx;return n.error?n.table._trans(null,_n.bind(null,n.error)):n.table._trans("readwrite",t,"locked")},e.prototype._addAlgorithm=function(t){var n=this._ctx;n.algorithm=Ni(n.algorithm,t)},e.prototype._iterate=function(t,n){return ff(this._ctx,t,n,this._ctx.table.core)},e.prototype.clone=function(t){var n=Object.create(this.constructor.prototype),r=Object.create(this._ctx);return t&&gr(r,t),n._ctx=r,n},e.prototype.raw=function(){return this._ctx.valueMapper=null,this},e.prototype.each=function(t){var n=this._ctx;return this._read(function(r){return ff(n,t,r,n.table.core)})},e.prototype.count=function(t){var n=this;return this._read(function(r){var a=n._ctx,l=a.table.core;if(Qi(a,!0))return l.count({trans:r,query:{index:$f(a,l.schema),range:a.range}}).then(function(i){return Math.min(i,a.limit)});var o=0;return ff(a,function(){return++o,!1},r,l).then(function(){return o})}).then(t)},e.prototype.sortBy=function(t,n){var r=t.split(".").reverse(),a=r[0],l=r.length-1;function o(u,d){return d?o(u[r[d]],d-1):u[a]}var i=this._ctx.dir==="next"?1:-1;function s(u,d){var f=o(u,l),p=o(d,l);return f<p?-i:f>p?i:0}return this.toArray(function(u){return u.sort(s)}).then(n)},e.prototype.toArray=function(t){var n=this;return this._read(function(r){var a=n._ctx;if(a.dir==="next"&&Qi(a,!0)&&a.limit>0){var l=a.valueMapper,o=$f(a,a.table.core.schema);return a.table.core.query({trans:r,limit:a.limit,values:!0,query:{index:o,range:a.range}}).then(function(s){var u=s.result;return l?u.map(l):u})}else{var i=[];return ff(a,function(s){return i.push(s)},r,a.table.core).then(function(){return i})}},t)},e.prototype.offset=function(t){var n=this._ctx;return t<=0?this:(n.offset+=t,Qi(n)?i1(n,function(){var r=t;return function(a,l){return r===0?!0:r===1?(--r,!1):(l(function(){a.advance(r),r=0}),!1)}}):i1(n,function(){var r=t;return function(){return--r<0}}),this)},e.prototype.limit=function(t){return this._ctx.limit=Math.min(this._ctx.limit,t),i1(this._ctx,function(){var n=t;return function(r,a,l){return--n<=0&&a(l),n>=0}},!0),this},e.prototype.until=function(t,n){return o1(this._ctx,function(r,a,l){return t(r.value)?(a(l),n):!0}),this},e.prototype.first=function(t){return this.limit(1).toArray(function(n){return n[0]}).then(t)},e.prototype.last=function(t){return this.reverse().first(t)},e.prototype.filter=function(t){return o1(this._ctx,function(n){return t(n.value)}),X2e(this._ctx,t),this},e.prototype.and=function(t){return this.filter(t)},e.prototype.or=function(t){return new this.db.WhereClause(this._ctx.table,t,this)},e.prototype.reverse=function(){return this._ctx.dir=this._ctx.dir==="prev"?"next":"prev",this._ondirectionchange&&this._ondirectionchange(this._ctx.dir),this},e.prototype.desc=function(){return this.reverse()},e.prototype.eachKey=function(t){var n=this._ctx;return n.keysOnly=!n.isMatch,this.each(function(r,a){t(a.key,a)})},e.prototype.eachUniqueKey=function(t){return this._ctx.unique="unique",this.eachKey(t)},e.prototype.eachPrimaryKey=function(t){var n=this._ctx;return n.keysOnly=!n.isMatch,this.each(function(r,a){t(a.primaryKey,a)})},e.prototype.keys=function(t){var n=this._ctx;n.keysOnly=!n.isMatch;var r=[];return this.each(function(a,l){r.push(l.key)}).then(function(){return r}).then(t)},e.prototype.primaryKeys=function(t){var n=this._ctx;if(n.dir==="next"&&Qi(n,!0)&&n.limit>0)return this._read(function(a){var l=$f(n,n.table.core.schema);return n.table.core.query({trans:a,values:!1,limit:n.limit,query:{index:l,range:n.range}})}).then(function(a){var l=a.result;return l}).then(t);n.keysOnly=!n.isMatch;var r=[];return this.each(function(a,l){r.push(l.primaryKey)}).then(function(){return r}).then(t)},e.prototype.uniqueKeys=function(t){return this._ctx.unique="unique",this.keys(t)},e.prototype.firstKey=function(t){return this.limit(1).keys(function(n){return n[0]}).then(t)},e.prototype.lastKey=function(t){return this.reverse().firstKey(t)},e.prototype.distinct=function(){var t=this._ctx,n=t.index&&t.table.schema.idxByName[t.index];if(!n||!n.multi)return this;var r={};return o1(this._ctx,function(a){var l=a.primaryKey.toString(),o=aa(r,l);return r[l]=!0,!o}),this},e.prototype.modify=function(t){var n=this,r=this._ctx;return this._write(function(a){var l;if(typeof t=="function")l=t;else{var o=En(t),i=o.length;l=function(v){for(var S=!1,y=0;y<i;++y){var W=o[y],k=t[W];Nl(v,W)!==k&&(qa(v,W,k),S=!0)}return S}}var s=r.table.core,u=s.schema.primaryKey,d=u.outbound,f=u.extractKey,p=n.db._options.modifyChunkSize||200,b=[],A=0,h=[],m=function(v,S){var y=S.failures,W=S.numFailures;A+=v-W;for(var k=0,V=En(y);k<V.length;k++){var T=V[k];b.push(y[T])}};return n.clone().primaryKeys().then(function(v){var S=function(y){var W=Math.min(p,v.length-y);return s.getMany({trans:a,keys:v.slice(y,y+W),cache:"immutable"}).then(function(k){for(var V=[],T=[],P=d?[]:null,x=[],g=0;g<W;++g){var j=k[g],L={value:Pd(j),primKey:v[y+g]};l.call(L,L.value,L)!==!1&&(L.value==null?x.push(v[y+g]):!d&&Wr(f(j),f(L.value))!==0?(x.push(v[y+g]),V.push(L.value)):(T.push(L.value),d&&P.push(v[y+g])))}var w=Qi(r)&&r.limit===1/0&&(typeof t!="function"||t===s1)&&{index:r.index,range:r.range};return Promise.resolve(V.length>0&&s.mutate({trans:a,type:"add",values:V}).then(function(R){for(var Z in R.failures)x.splice(parseInt(Z),1);m(V.length,R)})).then(function(){return(T.length>0||w&&typeof t=="object")&&s.mutate({trans:a,type:"put",keys:P,values:T,criteria:w,changeSpec:typeof t!="function"&&t}).then(function(R){return m(T.length,R)})}).then(function(){return(x.length>0||w&&t===s1)&&s.mutate({trans:a,type:"delete",keys:x,criteria:w}).then(function(R){return m(x.length,R)})}).then(function(){return v.length>y+W&&S(y+p)})})};return S(0).then(function(){if(b.length>0)throw new Zp("Error modifying one or more objects",b,A,h);return v.length})})})},e.prototype.delete=function(){var t=this._ctx,n=t.range;return Qi(t)&&(t.isPrimKey&&!K2e||n.type===3)?this._write(function(r){var a=t.table.core.schema.primaryKey,l=n;return t.table.core.count({trans:r,query:{index:a,range:l}}).then(function(o){return t.table.core.mutate({trans:r,type:"deleteRange",range:l}).then(function(i){var s=i.failures;i.lastResult,i.results;var u=i.numFailures;if(u)throw new Zp("Could not delete some values",Object.keys(s).map(function(d){return s[d]}),o-u);return o-u})})}):this.modify(s1)},e}(),s1=function(e,t){return t.value=null};function L2e(e){return Xd(j2e.prototype,function(n,r){this.db=e;var a=bN,l=null;if(r)try{a=r()}catch(u){l=u}var o=n._ctx,i=o.table,s=i.hook.reading.fire;this._ctx={table:i,index:o.index,isPrimKey:!o.index||i.schema.primKey.keyPath&&o.index===i.schema.primKey.name,range:a,keysOnly:!1,dir:"next",unique:"",algorithm:null,filter:null,replayFilter:null,justLimit:!0,isMatch:null,offset:0,limit:1/0,error:l,or:o.or,valueMapper:s!==Td?s:null}})}function q2e(e,t){return e<t?-1:e===t?0:1}function U2e(e,t){return e>t?-1:e===t?0:1}function Qr(e,t,n){var r=e instanceof mN?new e.Collection(e):e;return r._ctx.error=n?new n(t):new TypeError(t),r}function _i(e){return new e.Collection(e,function(){return hN("")}).limit(0)}function O2e(e){return e==="next"?function(t){return t.toUpperCase()}:function(t){return t.toLowerCase()}}function R2e(e){return e==="next"?function(t){return t.toLowerCase()}:function(t){return t.toUpperCase()}}function J2e(e,t,n,r,a,l){for(var o=Math.min(e.length,r.length),i=-1,s=0;s<o;++s){var u=t[s];if(u!==r[s])return a(e[s],n[s])<0?e.substr(0,s)+n[s]+n.substr(s+1):a(e[s],r[s])<0?e.substr(0,s)+r[s]+n.substr(s+1):i>=0?e.substr(0,i)+t[i]+n.substr(i+1):null;a(e[s],u)<0&&(i=s)}return o<r.length&&l==="next"?e+n.substr(e.length):o<e.length&&l==="prev"?e.substr(0,n.length):i<0?null:e.substr(0,i)+r[i]+n.substr(i+1)}function pf(e,t,n,r){var a,l,o,i,s,u,d,f=n.length;if(!n.every(function(h){return typeof h=="string"}))return Qr(e,pN);function p(h){a=O2e(h),l=R2e(h),o=h==="next"?q2e:U2e;var m=n.map(function(v){return{lower:l(v),upper:a(v)}}).sort(function(v,S){return o(v.lower,S.lower)});i=m.map(function(v){return v.upper}),s=m.map(function(v){return v.lower}),u=h,d=h==="next"?"":r}p("next");var b=new e.Collection(e,function(){return eo(i[0],s[f-1]+r)});b._ondirectionchange=function(h){p(h)};var A=0;return b._addAlgorithm(function(h,m,v){var S=h.key;if(typeof S!="string")return!1;var y=l(S);if(t(y,s,A))return!0;for(var W=null,k=A;k<f;++k){var V=J2e(S,y,i[k],s[k],o,u);V===null&&W===null?A=k+1:(W===null||o(W,V)>0)&&(W=V)}return m(W!==null?function(){h.continue(W+d)}:v),!1}),b}function eo(e,t,n,r){return{type:2,lower:e,upper:t,lowerOpen:n,upperOpen:r}}function hN(e){return{type:1,lower:e,upper:e}}var mN=function(){function e(){}return Object.defineProperty(e.prototype,"Collection",{get:function(){return this._ctx.table.db.Collection},enumerable:!1,configurable:!0}),e.prototype.between=function(t,n,r,a){r=r!==!1,a=a===!0;try{return this._cmp(t,n)>0||this._cmp(t,n)===0&&(r||a)&&!(r&&a)?_i(this):new this.Collection(this,function(){return eo(t,n,!r,!a)})}catch{return Qr(this,fl)}},e.prototype.equals=function(t){return t==null?Qr(this,fl):new this.Collection(this,function(){return hN(t)})},e.prototype.above=function(t){return t==null?Qr(this,fl):new this.Collection(this,function(){return eo(t,void 0,!0)})},e.prototype.aboveOrEqual=function(t){return t==null?Qr(this,fl):new this.Collection(this,function(){return eo(t,void 0,!1)})},e.prototype.below=function(t){return t==null?Qr(this,fl):new this.Collection(this,function(){return eo(void 0,t,!1,!0)})},e.prototype.belowOrEqual=function(t){return t==null?Qr(this,fl):new this.Collection(this,function(){return eo(void 0,t)})},e.prototype.startsWith=function(t){return typeof t!="string"?Qr(this,pN):this.between(t,t+ai,!0,!0)},e.prototype.startsWithIgnoreCase=function(t){return t===""?this.startsWith(t):pf(this,function(n,r){return n.indexOf(r[0])===0},[t],ai)},e.prototype.equalsIgnoreCase=function(t){return pf(this,function(n,r){return n===r[0]},[t],"")},e.prototype.anyOfIgnoreCase=function(){var t=Al.apply(ss,arguments);return t.length===0?_i(this):pf(this,function(n,r){return r.indexOf(n)!==-1},t,"")},e.prototype.startsWithAnyOfIgnoreCase=function(){var t=Al.apply(ss,arguments);return t.length===0?_i(this):pf(this,function(n,r){return r.some(function(a){return n.indexOf(a)===0})},t,ai)},e.prototype.anyOf=function(){var t=this,n=Al.apply(ss,arguments),r=this._cmp;try{n.sort(r)}catch{return Qr(this,fl)}if(n.length===0)return _i(this);var a=new this.Collection(this,function(){return eo(n[0],n[n.length-1])});a._ondirectionchange=function(o){r=o==="next"?t._ascending:t._descending,n.sort(r)};var l=0;return a._addAlgorithm(function(o,i,s){for(var u=o.key;r(u,n[l])>0;)if(++l,l===n.length)return i(s),!1;return r(u,n[l])===0?!0:(i(function(){o.continue(n[l])}),!1)}),a},e.prototype.notEqual=function(t){return this.inAnyRange([[o0,t],[t,this.db._maxKey]],{includeLowers:!1,includeUppers:!1})},e.prototype.noneOf=function(){var t=Al.apply(ss,arguments);if(t.length===0)return new this.Collection(this);try{t.sort(this._ascending)}catch{return Qr(this,fl)}var n=t.reduce(function(r,a){return r?r.concat([[r[r.length-1][1],a]]):[[o0,a]]},null);return n.push([t[t.length-1],this.db._maxKey]),this.inAnyRange(n,{includeLowers:!1,includeUppers:!1})},e.prototype.inAnyRange=function(t,n){var r=this,a=this._cmp,l=this._ascending,o=this._descending,i=this._min,s=this._max;if(t.length===0)return _i(this);if(!t.every(function(k){return k[0]!==void 0&&k[1]!==void 0&&l(k[0],k[1])<=0}))return Qr(this,"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower",Et.InvalidArgument);var u=!n||n.includeLowers!==!1,d=n&&n.includeUppers===!0;function f(k,V){for(var T=0,P=k.length;T<P;++T){var x=k[T];if(a(V[0],x[1])<0&&a(V[1],x[0])>0){x[0]=i(x[0],V[0]),x[1]=s(x[1],V[1]);break}}return T===P&&k.push(V),k}var p=l;function b(k,V){return p(k[0],V[0])}var A;try{A=t.reduce(f,[]),A.sort(b)}catch{return Qr(this,fl)}var h=0,m=d?function(k){return l(k,A[h][1])>0}:function(k){return l(k,A[h][1])>=0},v=u?function(k){return o(k,A[h][0])>0}:function(k){return o(k,A[h][0])>=0};function S(k){return!m(k)&&!v(k)}var y=m,W=new this.Collection(this,function(){return eo(A[0][0],A[A.length-1][1],!u,!d)});return W._ondirectionchange=function(k){k==="next"?(y=m,p=l):(y=v,p=o),A.sort(b)},W._addAlgorithm(function(k,V,T){for(var P=k.key;y(P);)if(++h,h===A.length)return V(T),!1;return S(P)?!0:(r._cmp(P,A[h][1])===0||r._cmp(P,A[h][0])===0||V(function(){p===l?k.continue(A[h][0]):k.continue(A[h][1])}),!1)}),W},e.prototype.startsWithAnyOf=function(){var t=Al.apply(ss,arguments);return t.every(function(n){return typeof n=="string"})?t.length===0?_i(this):this.inAnyRange(t.map(function(n){return[n,n+ai]})):Qr(this,"startsWithAnyOf() only works with strings")},e}();function F2e(e){return Xd(mN.prototype,function(n,r,a){this.db=e,this._ctx={table:n,index:r===":id"?null:r,or:a};var l=e._deps.indexedDB;if(!l)throw new Et.MissingAPI;this._cmp=this._ascending=l.cmp.bind(l),this._descending=function(o,i){return l.cmp(i,o)},this._max=function(o,i){return l.cmp(o,i)>0?o:i},this._min=function(o,i){return l.cmp(o,i)<0?o:i},this._IDBKeyRange=e._deps.IDBKeyRange})}function Ga(e){return wn(function(t){return Dc(t),e(t.target.error),!1})}function Dc(e){e.stopPropagation&&e.stopPropagation(),e.preventDefault&&e.preventDefault()}var Ec="storagemutated",uo="x-storagemutated-1",No=xd(null,Ec),z2e=function(){function e(){}return e.prototype._lock=function(){return Ou(!Ht.global),++this._reculock,this._reculock===1&&!Ht.global&&(Ht.lockOwnerFor=this),this},e.prototype._unlock=function(){if(Ou(!Ht.global),--this._reculock===0)for(Ht.global||(Ht.lockOwnerFor=null);this._blockedFuncs.length>0&&!this._locked();){var t=this._blockedFuncs.shift();try{vu(t[1],t[0])}catch{}}return this},e.prototype._locked=function(){return this._reculock&&Ht.lockOwnerFor!==this},e.prototype.create=function(t){var n=this;if(!this.mode)return this;var r=this.db.idbdb,a=this.db._state.dbOpenError;if(Ou(!this.idbtrans),!t&&!r)switch(a&&a.name){case"DatabaseClosedError":throw new Et.DatabaseClosed(a);case"MissingAPIError":throw new Et.MissingAPI(a.message,a);default:throw new Et.OpenFailed(a)}if(!this.active)throw new Et.TransactionInactive;return Ou(this._completion._state===null),t=this.idbtrans=t||(this.db.core?this.db.core.transaction(this.storeNames,this.mode,{durability:this.chromeTransactionDurability}):r.transaction(this.storeNames,this.mode,{durability:this.chromeTransactionDurability})),t.onerror=wn(function(l){Dc(l),n._reject(t.error)}),t.onabort=wn(function(l){Dc(l),n.active&&n._reject(new Et.Abort(t.error)),n.active=!1,n.on("abort").fire(l)}),t.oncomplete=wn(function(){n.active=!1,n._resolve(),"mutatedParts"in t&&No.storagemutated.fire(t.mutatedParts)}),this},e.prototype._promise=function(t,n,r){var a=this;if(t==="readwrite"&&this.mode!=="readwrite")return _n(new Et.ReadOnly("Transaction is readonly"));if(!this.active)return _n(new Et.TransactionInactive);if(this._locked())return new jt(function(o,i){a._blockedFuncs.push([function(){a._promise(t,n,r).then(o,i)},Ht])});if(r)return To(function(){var o=new jt(function(i,s){a._lock();var u=n(i,s,a);u&&u.then&&u.then(i,s)});return o.finally(function(){return a._unlock()}),o._lib=!0,o});var l=new jt(function(o,i){var s=n(o,i,a);s&&s.then&&s.then(o,i)});return l._lib=!0,l},e.prototype._root=function(){return this.parent?this.parent._root():this},e.prototype.waitFor=function(t){var n=this._root(),r=jt.resolve(t);if(n._waitingFor)n._waitingFor=n._waitingFor.then(function(){return r});else{n._waitingFor=r,n._waitingQueue=[];var a=n.idbtrans.objectStore(n.storeNames[0]);(function o(){for(++n._spinCount;n._waitingQueue.length;)n._waitingQueue.shift()();n._waitingFor&&(a.get(-1/0).onsuccess=o)})()}var l=n._waitingFor;return new jt(function(o,i){r.then(function(s){return n._waitingQueue.push(wn(o.bind(null,s)))},function(s){return n._waitingQueue.push(wn(i.bind(null,s)))}).finally(function(){n._waitingFor===l&&(n._waitingFor=null)})})},e.prototype.abort=function(){this.active&&(this.active=!1,this.idbtrans&&this.idbtrans.abort(),this._reject(new Et.Abort))},e.prototype.table=function(t){var n=this._memoizedTables||(this._memoizedTables={});if(aa(n,t))return n[t];var r=this.schema[t];if(!r)throw new Et.NotFound("Table "+t+" not part of transaction");var a=new this.db.Table(t,r,this);return a.core=this.db.core.table(t),n[t]=a,a},e}();function H2e(e){return Xd(z2e.prototype,function(n,r,a,l,o){var i=this;this.db=e,this.mode=n,this.storeNames=r,this.schema=a,this.chromeTransactionDurability=l,this.idbtrans=null,this.on=xd(this,"complete","error","abort"),this.parent=o||null,this.active=!0,this._reculock=0,this._blockedFuncs=[],this._resolve=null,this._reject=null,this._waitingFor=null,this._waitingQueue=null,this._spinCount=0,this._completion=new jt(function(s,u){i._resolve=s,i._reject=u}),this._completion.then(function(){i.active=!1,i.on.complete.fire()},function(s){var u=i.active;return i.active=!1,i.on.error.fire(s),i.parent?i.parent._reject(s):u&&i.idbtrans&&i.idbtrans.abort(),_n(s)})})}function i0(e,t,n,r,a,l,o){return{name:e,keyPath:t,unique:n,multi:r,auto:a,compound:l,src:(n&&!o?"&":"")+(r?"*":"")+(a?"++":"")+SN(t)}}function SN(e){return typeof e=="string"?e:e?"["+[].join.call(e,"+")+"]":""}function yN(e,t,n){return{name:e,primKey:t,indexes:n,mappedClass:null,idxByName:YK(n,function(r){return[r.name,r]})}}function Z2e(e){return e.length===1?e[0]:e}var Ic=function(e){try{return e.only([[]]),Ic=function(){return[[]]},[[]]}catch{return Ic=function(){return ai},ai}};function s0(e){return e==null?function(){}:typeof e=="string"?G2e(e):function(t){return Nl(t,e)}}function G2e(e){var t=e.split(".");return t.length===1?function(n){return n[e]}:function(n){return Nl(n,e)}}function RA(e){return[].slice.call(e)}var C2e=0;function oc(e){return e==null?":id":typeof e=="string"?e:"["+e.join("+")+"]"}function M2e(e,t,n){function r(f,p){var b=RA(f.objectStoreNames);return{schema:{name:f.name,tables:b.map(function(A){return p.objectStore(A)}).map(function(A){var h=A.keyPath,m=A.autoIncrement,v=br(h),S=h==null,y={},W={name:A.name,primaryKey:{name:null,isPrimaryKey:!0,outbound:S,compound:v,keyPath:h,autoIncrement:m,unique:!0,extractKey:s0(h)},indexes:RA(A.indexNames).map(function(k){return A.index(k)}).map(function(k){var V=k.name,T=k.unique,P=k.multiEntry,x=k.keyPath,g=br(x),j={name:V,compound:g,keyPath:x,unique:T,multiEntry:P,extractKey:s0(x)};return y[oc(x)]=j,j}),getIndexByKeyPath:function(k){return y[oc(k)]}};return y[":id"]=W.primaryKey,h!=null&&(y[oc(h)]=W.primaryKey),W})},hasGetAll:b.length>0&&"getAll"in p.objectStore(b[0])&&!(typeof navigator<"u"&&/Safari/.test(navigator.userAgent)&&!/(Chrome\/|Edge\/)/.test(navigator.userAgent)&&[].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1]<604)}}function a(f){if(f.type===3)return null;if(f.type===4)throw new Error("Cannot convert never type to IDBKeyRange");var p=f.lower,b=f.upper,A=f.lowerOpen,h=f.upperOpen,m=p===void 0?b===void 0?null:t.upperBound(b,!!h):b===void 0?t.lowerBound(p,!!A):t.bound(p,b,!!A,!!h);return m}function l(f){var p=f.name;function b(m){var v=m.trans,S=m.type,y=m.keys,W=m.values,k=m.range;return new Promise(function(V,T){V=wn(V);var P=v.objectStore(p),x=P.keyPath==null,g=S==="put"||S==="add";if(!g&&S!=="delete"&&S!=="deleteRange")throw new Error("Invalid operation type: "+S);var j=(y||W||{length:1}).length;if(y&&W&&y.length!==W.length)throw new Error("Given keys array must have same length as given values array.");if(j===0)return V({numFailures:0,failures:{},results:[],lastResult:void 0});var L,w=[],R=[],Z=0,G=function(Q){++Z,Dc(Q)};if(S==="deleteRange"){if(k.type===4)return V({numFailures:Z,failures:R,results:[],lastResult:void 0});k.type===3?w.push(L=P.clear()):w.push(L=P.delete(a(k)))}else{var U=g?x?[W,y]:[W,null]:[y,null],H=U[0],O=U[1];if(g)for(var D=0;D<j;++D)w.push(L=O&&O[D]!==void 0?P[S](H[D],O[D]):P[S](H[D])),L.onerror=G;else for(var D=0;D<j;++D)w.push(L=P[S](H[D])),L.onerror=G}var Y=function(Q){var ee=Q.target.result;w.forEach(function(oe,Ne){return oe.error!=null&&(R[Ne]=oe.error)}),V({numFailures:Z,failures:R,results:S==="delete"?y:w.map(function(oe){return oe.result}),lastResult:ee})};L.onerror=function(Q){G(Q),Y(Q)},L.onsuccess=Y})}function A(m){var v=m.trans,S=m.values,y=m.query,W=m.reverse,k=m.unique;return new Promise(function(V,T){V=wn(V);var P=y.index,x=y.range,g=v.objectStore(p),j=P.isPrimaryKey?g:g.index(P.name),L=W?k?"prevunique":"prev":k?"nextunique":"next",w=S||!("openKeyCursor"in j)?j.openCursor(a(x),L):j.openKeyCursor(a(x),L);w.onerror=Ga(T),w.onsuccess=wn(function(R){var Z=w.result;if(!Z){V(null);return}Z.___id=++C2e,Z.done=!1;var G=Z.continue.bind(Z),U=Z.continuePrimaryKey;U&&(U=U.bind(Z));var H=Z.advance.bind(Z),O=function(){throw new Error("Cursor not started")},D=function(){throw new Error("Cursor not stopped")};Z.trans=v,Z.stop=Z.continue=Z.continuePrimaryKey=Z.advance=O,Z.fail=wn(T),Z.next=function(){var Y=this,Q=1;return this.start(function(){return Q--?Y.continue():Y.stop()}).then(function(){return Y})},Z.start=function(Y){var Q=new Promise(function(oe,Ne){oe=wn(oe),w.onerror=Ga(Ne),Z.fail=Ne,Z.stop=function(pe){Z.stop=Z.continue=Z.continuePrimaryKey=Z.advance=D,oe(pe)}}),ee=function(){if(w.result)try{Y()}catch(oe){Z.fail(oe)}else Z.done=!0,Z.start=function(){throw new Error("Cursor behind last entry")},Z.stop()};return w.onsuccess=wn(function(oe){w.onsuccess=ee,ee()}),Z.continue=G,Z.continuePrimaryKey=U,Z.advance=H,ee(),Q},V(Z)},T)})}function h(m){return function(v){return new Promise(function(S,y){S=wn(S);var W=v.trans,k=v.values,V=v.limit,T=v.query,P=V===1/0?void 0:V,x=T.index,g=T.range,j=W.objectStore(p),L=x.isPrimaryKey?j:j.index(x.name),w=a(g);if(V===0)return S({result:[]});if(m){var R=k?L.getAll(w,P):L.getAllKeys(w,P);R.onsuccess=function(H){return S({result:H.target.result})},R.onerror=Ga(y)}else{var Z=0,G=k||!("openKeyCursor"in L)?L.openCursor(w):L.openKeyCursor(w),U=[];G.onsuccess=function(H){var O=G.result;if(!O)return S({result:U});if(U.push(k?O.value:O.primaryKey),++Z===V)return S({result:U});O.continue()},G.onerror=Ga(y)}})}}return{name:p,schema:f,mutate:b,getMany:function(m){var v=m.trans,S=m.keys;return new Promise(function(y,W){y=wn(y);for(var k=v.objectStore(p),V=S.length,T=new Array(V),P=0,x=0,g,j=function(Z){var G=Z.target;(T[G._pos]=G.result)!=null,++x===P&&y(T)},L=Ga(W),w=0;w<V;++w){var R=S[w];R!=null&&(g=k.get(S[w]),g._pos=w,g.onsuccess=j,g.onerror=L,++P)}P===0&&y(T)})},get:function(m){var v=m.trans,S=m.key;return new Promise(function(y,W){y=wn(y);var k=v.objectStore(p),V=k.get(S);V.onsuccess=function(T){return y(T.target.result)},V.onerror=Ga(W)})},query:h(s),openCursor:A,count:function(m){var v=m.query,S=m.trans,y=v.index,W=v.range;return new Promise(function(k,V){var T=S.objectStore(p),P=y.isPrimaryKey?T:T.index(y.name),x=a(W),g=x?P.count(x):P.count();g.onsuccess=wn(function(j){return k(j.target.result)}),g.onerror=Ga(V)})}}}var o=r(e,n),i=o.schema,s=o.hasGetAll,u=i.tables.map(function(f){return l(f)}),d={};return u.forEach(function(f){return d[f.name]=f}),{stack:"dbcore",transaction:e.transaction.bind(e),table:function(f){var p=d[f];if(!p)throw new Error("Table '"+f+"' not found");return d[f]},MIN_KEY:-1/0,MAX_KEY:Ic(t),schema:i}}function D2e(e,t){return t.reduce(function(n,r){var a=r.create;return ln(ln({},n),a(n))},e)}function E2e(e,t,n,r){var a=n.IDBKeyRange;n.indexedDB;var l=D2e(M2e(t,a,r),e.dbcore);return{dbcore:l}}function eS(e,t){var n=e._novip,r=t.db,a=E2e(n._middlewares,r,n._deps,t);n.core=a.dbcore,n.tables.forEach(function(l){var o=l.name;n.core.schema.tables.some(function(i){return i.name===o})&&(l.core=n.core.table(o),n[o]instanceof n.Table&&(n[o].core=l.core))})}function Ip(e,t,n,r){var a=e._novip;n.forEach(function(l){var o=r[l];t.forEach(function(i){var s=M2(i,l);(!s||"value"in s&&s.value===void 0)&&(i===a.Transaction.prototype||i instanceof a.Transaction?Jl(i,l,{get:function(){return this.table(l)},set:function(u){EK(this,l,{value:u,writable:!0,configurable:!0,enumerable:!0})}}):i[l]=new a.Table(l,o))})})}function u0(e,t){var n=e._novip;t.forEach(function(r){for(var a in r)r[a]instanceof n.Table&&delete r[a]})}function I2e(e,t){return e._cfg.version-t._cfg.version}function B2e(e,t,n,r){var a=e._dbSchema,l=e._createTransaction("readwrite",e._storeNames,a);l.create(n),l._completion.catch(r);var o=l._reject.bind(l),i=Ht.transless||Ht;To(function(){Ht.trans=l,Ht.transless=i,t===0?(En(a).forEach(function(s){tS(n,s,a[s].primKey,a[s].indexes)}),eS(e,n),jt.follow(function(){return e.on.populate.fire(l)}).catch(o)):Y2e(e,t,l,n).catch(o)})}function Y2e(e,t,n,r){var a=e._novip,l=[],o=a._versions,i=a._dbSchema=nS(a,a.idbdb,r),s=!1,u=o.filter(function(f){return f._cfg.version>=t});u.forEach(function(f){l.push(function(){var p=i,b=f._cfg.dbschema;d0(a,p,r),d0(a,b,r),i=a._dbSchema=b;var A=AN(p,b);A.add.forEach(function(W){tS(r,W[0],W[1].primKey,W[1].indexes)}),A.change.forEach(function(W){if(W.recreate)throw new Et.Upgrade("Not yet support for changing primary key");var k=r.objectStore(W.name);W.add.forEach(function(V){return c0(k,V)}),W.change.forEach(function(V){k.deleteIndex(V.name),c0(k,V)}),W.del.forEach(function(V){return k.deleteIndex(V)})});var h=f._cfg.contentUpgrade;if(h&&f._cfg.version>t){eS(a,r),n._memoizedTables={},s=!0;var m=QK(b);A.del.forEach(function(W){m[W]=p[W]}),u0(a,[a.Transaction.prototype]),Ip(a,[a.Transaction.prototype],En(m),m),n.schema=m;var v=D2(h);v&&pu();var S,y=jt.follow(function(){if(S=h(n),S&&v){var W=Fl.bind(null,null);S.then(W,W)}});return S&&typeof S.then=="function"?jt.resolve(S):y.then(function(){return S})}}),l.push(function(p){if(!s||!T2e){var b=f._cfg.dbschema;_2e(b,p)}u0(a,[a.Transaction.prototype]),Ip(a,[a.Transaction.prototype],a._storeNames,a._dbSchema),n.schema=a._dbSchema})});function d(){return l.length?jt.resolve(l.shift()(n.idbtrans)).then(d):jt.resolve()}return d().then(function(){Q2e(i,r)})}function AN(e,t){var n={del:[],add:[],change:[]},r;for(r in e)t[r]||n.del.push(r);for(r in t){var a=e[r],l=t[r];if(!a)n.add.push([r,l]);else{var o={name:r,def:l,recreate:!1,del:[],add:[],change:[]};if(""+(a.primKey.keyPath||"")!=""+(l.primKey.keyPath||"")||a.primKey.auto!==l.primKey.auto&&!rb)o.recreate=!0,n.change.push(o);else{var i=a.idxByName,s=l.idxByName,u=void 0;for(u in i)s[u]||o.del.push(u);for(u in s){var d=i[u],f=s[u];d?d.src!==f.src&&o.change.push(f):o.add.push(f)}(o.del.length>0||o.add.length>0||o.change.length>0)&&n.change.push(o)}}}return n}function tS(e,t,n,r){var a=e.db.createObjectStore(t,n.keyPath?{keyPath:n.keyPath,autoIncrement:n.auto}:{autoIncrement:n.auto});return r.forEach(function(l){return c0(a,l)}),a}function Q2e(e,t){En(e).forEach(function(n){t.db.objectStoreNames.contains(n)||tS(t,n,e[n].primKey,e[n].indexes)})}function _2e(e,t){[].slice.call(t.db.objectStoreNames).forEach(function(n){return e[n]==null&&t.db.deleteObjectStore(n)})}function c0(e,t){e.createIndex(t.name,t.keyPath,{unique:t.unique,multiEntry:t.multi})}function nS(e,t,n){var r={},a=tb(t.objectStoreNames,0);return a.forEach(function(l){for(var o=n.objectStore(l),i=o.keyPath,s=i0(SN(i),i||"",!1,!1,!!o.autoIncrement,i&&typeof i!="string",!0),u=[],d=0;d<o.indexNames.length;++d){var f=o.index(o.indexNames[d]);i=f.keyPath;var p=i0(f.name,i,!!f.unique,!!f.multiEntry,!1,i&&typeof i!="string",!1);u.push(p)}r[l]=yN(l,s,u)}),r}function $2e(e,t,n){var r=e._novip;r.verno=t.version/10;var a=r._dbSchema=nS(r,t,n);r._storeNames=tb(t.objectStoreNames,0),Ip(r,[r._allTables],En(a),a)}function eSe(e,t){var n=nS(e,e.idbdb,t),r=AN(n,e._dbSchema);return!(r.add.length||r.change.some(function(a){return a.add.length||a.change.length}))}function d0(e,t,n){for(var r=e._novip,a=n.db.objectStoreNames,l=0;l<a.length;++l){var o=a[l],i=n.objectStore(o);r._hasGetAll="getAll"in i;for(var s=0;s<i.indexNames.length;++s){var u=i.indexNames[s],d=i.index(u).keyPath,f=typeof d=="string"?d:"["+tb(d).join("+")+"]";if(t[o]){var p=t[o].idxByName[f];p&&(p.name=u,delete t[o].idxByName[f],t[o].idxByName[u]=p)}}}typeof navigator<"u"&&/Safari/.test(navigator.userAgent)&&!/(Chrome\/|Edge\/)/.test(navigator.userAgent)&&Xn.WorkerGlobalScope&&Xn instanceof Xn.WorkerGlobalScope&&[].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1]<604&&(r._hasGetAll=!1)}function tSe(e){return e.split(",").map(function(t,n){t=t.trim();var r=t.replace(/([&*]|\+\+)/g,""),a=/^\[/.test(r)?r.match(/^\[(.*)\]$/)[1].split("+"):r;return i0(r,a||null,/\&/.test(t),/\*/.test(t),/\+\+/.test(t),br(a),n===0)})}var nSe=function(){function e(){}return e.prototype._parseStoresSpec=function(t,n){En(t).forEach(function(r){if(t[r]!==null){var a=tSe(t[r]),l=a.shift();if(l.multi)throw new Et.Schema("Primary key cannot be multi-valued");a.forEach(function(o){if(o.auto)throw new Et.Schema("Only primary key can be marked as autoIncrement (++)");if(!o.keyPath)throw new Et.Schema("Index must have a name and cannot be an empty string")}),n[r]=yN(r,l,a)}})},e.prototype.stores=function(t){var n=this.db;this._cfg.storesSource=this._cfg.storesSource?gr(this._cfg.storesSource,t):t;var r=n._versions,a={},l={};return r.forEach(function(o){gr(a,o._cfg.storesSource),l=o._cfg.dbschema={},o._parseStoresSpec(a,l)}),n._dbSchema=l,u0(n,[n._allTables,n,n.Transaction.prototype]),Ip(n,[n._allTables,n,n.Transaction.prototype,this._cfg.tables],En(l),l),n._storeNames=En(l),this},e.prototype.upgrade=function(t){return this._cfg.contentUpgrade=B2(this._cfg.contentUpgrade||kn,t),this},e}();function rSe(e){return Xd(nSe.prototype,function(n){this.db=e,this._cfg={version:n,storesSource:null,dbschema:{},tables:{},contentUpgrade:null}})}function rS(e,t){var n=e._dbNamesDB;return n||(n=e._dbNamesDB=new iS(ab,{addons:[],indexedDB:e,IDBKeyRange:t}),n.version(1).stores({dbnames:"name"})),n.table("dbnames")}function aS(e){return e&&typeof e.databases=="function"}function aSe(e){var t=e.indexedDB,n=e.IDBKeyRange;return aS(t)?Promise.resolve(t.databases()).then(function(r){return r.map(function(a){return a.name}).filter(function(a){return a!==ab})}):rS(t,n).toCollection().primaryKeys()}function lSe(e,t){var n=e.indexedDB,r=e.IDBKeyRange;!aS(n)&&t!==ab&&rS(n,r).put({name:t}).catch(kn)}function oSe(e,t){var n=e.indexedDB,r=e.IDBKeyRange;!aS(n)&&t!==ab&&rS(n,r).delete(t).catch(kn)}function f0(e){return To(function(){return Ht.letThrough=!0,e()})}function iSe(){var e=!navigator.userAgentData&&/Safari\//.test(navigator.userAgent)&&!/Chrom(e|ium)\//.test(navigator.userAgent);if(!e||!indexedDB.databases)return Promise.resolve();var t;return new Promise(function(n){var r=function(){return indexedDB.databases().finally(n)};t=setInterval(r,100),r()}).finally(function(){return clearInterval(t)})}function sSe(e){var t=e._state,n=e._deps.indexedDB;if(t.isBeingOpened||e.idbdb)return t.dbReadyPromise.then(function(){return t.dbOpenError?_n(t.dbOpenError):e});cl&&(t.openCanceller._stackHolder=Ri()),t.isBeingOpened=!0,t.dbOpenError=null,t.openComplete=!1;var r=t.openCanceller;function a(){if(t.openCanceller!==r)throw new Et.DatabaseClosed("db.open() was cancelled")}var l=t.dbReadyResolve,o=null,i=!1;return jt.race([r,(typeof navigator>"u"?jt.resolve():iSe()).then(function(){return new jt(function(s,u){if(a(),!n)throw new Et.MissingAPI;var d=e.name,f=t.autoSchema?n.open(d):n.open(d,Math.round(e.verno*10));if(!f)throw new Et.MissingAPI;f.onerror=Ga(u),f.onblocked=wn(e._fireOnBlocked),f.onupgradeneeded=wn(function(p){if(o=f.transaction,t.autoSchema&&!e._options.allowEmptyDB){f.onerror=Dc,o.abort(),f.result.close();var b=n.deleteDatabase(d);b.onsuccess=b.onerror=wn(function(){u(new Et.NoSuchDatabase("Database "+d+" doesnt exist"))})}else{o.onerror=Ga(u);var A=p.oldVersion>Math.pow(2,62)?0:p.oldVersion;i=A<1,e._novip.idbdb=f.result,B2e(e,A/10,o,u)}},u),f.onsuccess=wn(function(){o=null;var p=e._novip.idbdb=f.result,b=tb(p.objectStoreNames);if(b.length>0)try{var A=p.transaction(Z2e(b),"readonly");t.autoSchema?$2e(e,p,A):(d0(e,e._dbSchema,A),eSe(e,A)||console.warn("Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Some queries may fail.")),eS(e,A)}catch{}lc.push(e),p.onversionchange=wn(function(h){t.vcFired=!0,e.on("versionchange").fire(h)}),p.onclose=wn(function(h){e.on("close").fire(h)}),i&&lSe(e._deps,d),s()},u)})})]).then(function(){return a(),t.onReadyBeingFired=[],jt.resolve(f0(function(){return e.on.ready.fire(e.vip)})).then(function s(){if(t.onReadyBeingFired.length>0){var u=t.onReadyBeingFired.reduce(B2,kn);return t.onReadyBeingFired=[],jt.resolve(f0(function(){return u(e.vip)})).then(s)}})}).finally(function(){t.onReadyBeingFired=null,t.isBeingOpened=!1}).then(function(){return e}).catch(function(s){t.dbOpenError=s;try{o&&o.abort()}catch{}return r===t.openCanceller&&e._close(),_n(s)}).finally(function(){t.openComplete=!0,l()})}function p0(e){var t=function(o){return e.next(o)},n=function(o){return e.throw(o)},r=l(t),a=l(n);function l(o){return function(i){var s=o(i),u=s.value;return s.done?u:!u||typeof u.then!="function"?br(u)?Promise.all(u).then(r,a):r(u):u.then(r,a)}}return l(t)()}function uSe(e,t,n){var r=arguments.length;if(r<2)throw new Et.InvalidArgument("Too few arguments");for(var a=new Array(r-1);--r;)a[r-1]=arguments[r];n=a.pop();var l=_K(a);return[e,l,n]}function WN(e,t,n,r,a){return jt.resolve().then(function(){var l=Ht.transless||Ht,o=e._createTransaction(t,n,e._dbSchema,r),i={trans:o,transless:l};if(r)o.idbtrans=r.idbtrans;else try{o.create(),e._state.PR1398_maxLoop=3}catch(f){return f.name===I2.InvalidState&&e.isOpen()&&--e._state.PR1398_maxLoop>0?(console.warn("Dexie: Need to reopen db"),e._close(),e.open().then(function(){return WN(e,t,n,null,a)})):_n(f)}var s=D2(a);s&&pu();var u,d=jt.follow(function(){if(u=a.call(o,o),u)if(s){var f=Fl.bind(null,null);u.then(f,f)}else typeof u.next=="function"&&typeof u.throw=="function"&&(u=p0(u))},i);return(u&&typeof u.then=="function"?jt.resolve(u).then(function(f){return o.active?f:_n(new Et.PrematureCommit("Transaction committed too early. See http://bit.ly/2kdckMn"))}):d.then(function(){return u})).then(function(f){return r&&o._resolve(),o._completion.then(function(){return f})}).catch(function(f){return o._reject(f),_n(f)})})}function vf(e,t,n){for(var r=br(e)?e.slice():[e],a=0;a<n;++a)r.push(t);return r}function cSe(e){return ln(ln({},e),{table:function(t){var n=e.table(t),r=n.schema,a={},l=[];function o(h,m,v){var S=oc(h),y=a[S]=a[S]||[],W=h==null?0:typeof h=="string"?1:h.length,k=m>0,V=ln(ln({},v),{isVirtual:k,keyTail:m,keyLength:W,extractKey:s0(h),unique:!k&&v.unique});if(y.push(V),V.isPrimaryKey||l.push(V),W>1){var T=W===2?h[0]:h.slice(0,W-1);o(T,m+1,v)}return y.sort(function(P,x){return P.keyTail-x.keyTail}),V}var i=o(r.primaryKey.keyPath,0,r.primaryKey);a[":id"]=[i];for(var s=0,u=r.indexes;s<u.length;s++){var d=u[s];o(d.keyPath,0,d)}function f(h){var m=a[oc(h)];return m&&m[0]}function p(h,m){return{type:h.type===1?2:h.type,lower:vf(h.lower,h.lowerOpen?e.MAX_KEY:e.MIN_KEY,m),lowerOpen:!0,upper:vf(h.upper,h.upperOpen?e.MIN_KEY:e.MAX_KEY,m),upperOpen:!0}}function b(h){var m=h.query.index;return m.isVirtual?ln(ln({},h),{query:{index:m,range:p(h.query.range,m.keyTail)}}):h}var A=ln(ln({},n),{schema:ln(ln({},r),{primaryKey:i,indexes:l,getIndexByKeyPath:f}),count:function(h){return n.count(b(h))},query:function(h){return n.query(b(h))},openCursor:function(h){var m=h.query.index,v=m.keyTail,S=m.isVirtual,y=m.keyLength;if(!S)return n.openCursor(h);function W(k){function V(P){P!=null?k.continue(vf(P,h.reverse?e.MAX_KEY:e.MIN_KEY,v)):h.unique?k.continue(k.key.slice(0,y).concat(h.reverse?e.MIN_KEY:e.MAX_KEY,v)):k.continue()}var T=Object.create(k,{continue:{value:V},continuePrimaryKey:{value:function(P,x){k.continuePrimaryKey(vf(P,e.MAX_KEY,v),x)}},primaryKey:{get:function(){return k.primaryKey}},key:{get:function(){var P=k.key;return y===1?P[0]:P.slice(0,y)}},value:{get:function(){return k.value}}});return T}return n.openCursor(b(h)).then(function(k){return k&&W(k)})}});return A}})}var dSe={stack:"dbcore",name:"VirtualIndexMiddleware",level:1,create:cSe};function lS(e,t,n,r){return n=n||{},r=r||"",En(e).forEach(function(a){if(!aa(t,a))n[r+a]=void 0;else{var l=e[a],o=t[a];if(typeof l=="object"&&typeof o=="object"&&l&&o){var i=Ih(l),s=Ih(o);i!==s?n[r+a]=t[a]:i==="Object"?lS(l,o,n,r+a+"."):l!==o&&(n[r+a]=t[a])}else l!==o&&(n[r+a]=t[a])}}),En(t).forEach(function(a){aa(e,a)||(n[r+a]=t[a])}),n}function fSe(e,t){return t.type==="delete"?t.keys:t.keys||t.values.map(e.extractKey)}var pSe={stack:"dbcore",name:"HooksMiddleware",level:2,create:function(e){return ln(ln({},e),{table:function(t){var n=e.table(t),r=n.schema.primaryKey,a=ln(ln({},n),{mutate:function(l){var o=Ht.trans,i=o.table(t).hook,s=i.deleting,u=i.creating,d=i.updating;switch(l.type){case"add":if(u.fire===kn)break;return o._promise("readwrite",function(){return f(l)},!0);case"put":if(u.fire===kn&&d.fire===kn)break;return o._promise("readwrite",function(){return f(l)},!0);case"delete":if(s.fire===kn)break;return o._promise("readwrite",function(){return f(l)},!0);case"deleteRange":if(s.fire===kn)break;return o._promise("readwrite",function(){return p(l)},!0)}return n.mutate(l);function f(A){var h=Ht.trans,m=A.keys||fSe(r,A);if(!m)throw new Error("Keys missing");return A=A.type==="add"||A.type==="put"?ln(ln({},A),{keys:m}):ln({},A),A.type!=="delete"&&(A.values=Dh([],A.values,!0)),A.keys&&(A.keys=Dh([],A.keys,!0)),vSe(n,A,m).then(function(v){var S=m.map(function(y,W){var k=v[W],V={onerror:null,onsuccess:null};if(A.type==="delete")s.fire.call(V,y,k,h);else if(A.type==="add"||k===void 0){var T=u.fire.call(V,y,A.values[W],h);y==null&&T!=null&&(y=T,A.keys[W]=y,r.outbound||qa(A.values[W],r.keyPath,y))}else{var P=lS(k,A.values[W]),x=d.fire.call(V,P,y,k,h);if(x){var g=A.values[W];Object.keys(x).forEach(function(j){aa(g,j)?g[j]=x[j]:qa(g,j,x[j])})}}return V});return n.mutate(A).then(function(y){for(var W=y.failures,k=y.results,V=y.numFailures,T=y.lastResult,P=0;P<m.length;++P){var x=k?k[P]:m[P],g=S[P];x==null?g.onerror&&g.onerror(W[P]):g.onsuccess&&g.onsuccess(A.type==="put"&&v[P]?A.values[P]:x)}return{failures:W,results:k,numFailures:V,lastResult:T}}).catch(function(y){return S.forEach(function(W){return W.onerror&&W.onerror(y)}),Promise.reject(y)})})}function p(A){return b(A.trans,A.range,1e4)}function b(A,h,m){return n.query({trans:A,values:!1,query:{index:r,range:h},limit:m}).then(function(v){var S=v.result;return f({type:"delete",keys:S,trans:A}).then(function(y){return y.numFailures>0?Promise.reject(y.failures[0]):S.length<m?{failures:[],numFailures:0,lastResult:void 0}:b(A,ln(ln({},h),{lower:S[S.length-1],lowerOpen:!0}),m)})})}}});return a}})}};function vSe(e,t,n){return t.type==="add"?Promise.resolve([]):e.getMany({trans:t.trans,keys:n,cache:"immutable"})}function kN(e,t,n){try{if(!t||t.keys.length<e.length)return null;for(var r=[],a=0,l=0;a<t.keys.length&&l<e.length;++a)Wr(t.keys[a],e[l])===0&&(r.push(n?Pd(t.values[a]):t.values[a]),++l);return r.length===e.length?r:null}catch{return null}}var bSe={stack:"dbcore",level:-1,create:function(e){return{table:function(t){var n=e.table(t);return ln(ln({},n),{getMany:function(r){if(!r.cache)return n.getMany(r);var a=kN(r.keys,r.trans._cache,r.cache==="clone");return a?jt.resolve(a):n.getMany(r).then(function(l){return r.trans._cache={keys:r.keys,values:r.cache==="clone"?Pd(l):l},l})},mutate:function(r){return r.type!=="add"&&(r.trans._cache=null),n.mutate(r)}})}}}},u1;function oS(e){return!("from"in e)}var ml=function(e,t){if(this)gr(this,arguments.length?{d:1,from:e,to:arguments.length>1?t:e}:{d:0});else{var n=new ml;return e&&"d"in e&&gr(n,e),n}};eu(ml.prototype,(u1={add:function(e){return Bp(this,e),this},addKey:function(e){return Bc(this,e,e),this},addKeys:function(e){var t=this;return e.forEach(function(n){return Bc(t,n,n)}),this}},u1[Bh]=function(){return v0(this)},u1));function Bc(e,t,n){var r=Wr(t,n);if(!isNaN(r)){if(r>0)throw RangeError();if(oS(e))return gr(e,{from:t,to:n,d:1});var a=e.l,l=e.r;if(Wr(n,e.from)<0)return a?Bc(a,t,n):e.l={from:t,to:n,d:1,l:null,r:null},JA(e);if(Wr(t,e.to)>0)return l?Bc(l,t,n):e.r={from:t,to:n,d:1,l:null,r:null},JA(e);Wr(t,e.from)<0&&(e.from=t,e.l=null,e.d=l?l.d+1:1),Wr(n,e.to)>0&&(e.to=n,e.r=null,e.d=e.l?e.l.d+1:1);var o=!e.r;a&&!e.l&&Bp(e,a),l&&o&&Bp(e,l)}}function Bp(e,t){function n(r,a){var l=a.from,o=a.to,i=a.l,s=a.r;Bc(r,l,o),i&&n(r,i),s&&n(r,s)}oS(t)||n(e,t)}function hSe(e,t){var n=v0(t),r=n.next();if(r.done)return!1;for(var a=r.value,l=v0(e),o=l.next(a.from),i=o.value;!r.done&&!o.done;){if(Wr(i.from,a.to)<=0&&Wr(i.to,a.from)>=0)return!0;Wr(a.from,i.from)<0?a=(r=n.next(i.from)).value:i=(o=l.next(a.from)).value}return!1}function v0(e){var t=oS(e)?null:{s:0,n:e};return{next:function(n){for(var r=arguments.length>0;t;)switch(t.s){case 0:if(t.s=1,r)for(;t.n.l&&Wr(n,t.n.from)<0;)t={up:t,n:t.n.l,s:1};else for(;t.n.l;)t={up:t,n:t.n.l,s:1};case 1:if(t.s=2,!r||Wr(n,t.n.to)<=0)return{value:t.n,done:!1};case 2:if(t.n.r){t.s=3,t={up:t,n:t.n.r,s:0};continue}case 3:t=t.up}return{done:!0}}}}function JA(e){var t,n,r=(((t=e.r)===null||t===void 0?void 0:t.d)||0)-(((n=e.l)===null||n===void 0?void 0:n.d)||0),a=r>1?"r":r<-1?"l":"";if(a){var l=a==="r"?"l":"r",o=ln({},e),i=e[a];e.from=i.from,e.to=i.to,e[a]=i[a],o[a]=i[l],e[l]=o,o.d=FA(o)}e.d=FA(e)}function FA(e){var t=e.r,n=e.l;return(t?n?Math.max(t.d,n.d):t.d:n?n.d:0)+1}var mSe={stack:"dbcore",level:0,create:function(e){var t=e.schema.name,n=new ml(e.MIN_KEY,e.MAX_KEY);return ln(ln({},e),{table:function(r){var a=e.table(r),l=a.schema,o=l.primaryKey,i=o.extractKey,s=o.outbound,u=ln(ln({},a),{mutate:function(p){var b=p.trans,A=b.mutatedParts||(b.mutatedParts={}),h=function(T){var P="idb://"+t+"/"+r+"/"+T;return A[P]||(A[P]=new ml)},m=h(""),v=h(":dels"),S=p.type,y=p.type==="deleteRange"?[p.range]:p.type==="delete"?[p.keys]:p.values.length<50?[[],p.values]:[],W=y[0],k=y[1],V=p.trans._cache;return a.mutate(p).then(function(T){if(br(W)){S!=="delete"&&(W=T.results),m.addKeys(W);var P=kN(W,V);!P&&S!=="add"&&v.addKeys(W),(P||k)&&SSe(h,l,P,k)}else if(W){var x={from:W.lower,to:W.upper};v.add(x),m.add(x)}else m.add(n),v.add(n),l.indexes.forEach(function(g){return h(g.name).add(n)});return T})}}),d=function(p){var b,A,h=p.query,m=h.index,v=h.range;return[m,new ml((b=v.lower)!==null&&b!==void 0?b:e.MIN_KEY,(A=v.upper)!==null&&A!==void 0?A:e.MAX_KEY)]},f={get:function(p){return[o,new ml(p.key)]},getMany:function(p){return[o,new ml().addKeys(p.keys)]},count:d,query:d,openCursor:d};return En(f).forEach(function(p){u[p]=function(b){var A=Ht.subscr;if(A){var h=function(V){var T="idb://"+t+"/"+r+"/"+V;return A[T]||(A[T]=new ml)},m=h(""),v=h(":dels"),S=f[p](b),y=S[0],W=S[1];if(h(y.name||"").add(W),!y.isPrimaryKey)if(p==="count")v.add(n);else{var k=p==="query"&&s&&b.values&&a.query(ln(ln({},b),{values:!1}));return a[p].apply(this,arguments).then(function(V){if(p==="query"){if(s&&b.values)return k.then(function(g){var j=g.result;return m.addKeys(j),V});var T=b.values?V.result.map(i):V.result;b.values?m.addKeys(T):v.addKeys(T)}else if(p==="openCursor"){var P=V,x=b.values;return P&&Object.create(P,{key:{get:function(){return v.addKey(P.primaryKey),P.key}},primaryKey:{get:function(){var g=P.primaryKey;return v.addKey(g),g}},value:{get:function(){return x&&m.addKey(P.primaryKey),P.value}}})}return V})}}return a[p].apply(this,arguments)}}),u}})}};function SSe(e,t,n,r){function a(l){var o=e(l.name||"");function i(u){return u!=null?l.extractKey(u):null}var s=function(u){return l.multiEntry&&br(u)?u.forEach(function(d){return o.addKey(d)}):o.addKey(u)};(n||r).forEach(function(u,d){var f=n&&i(n[d]),p=r&&i(r[d]);Wr(f,p)!==0&&(f!=null&&s(f),p!=null&&s(p))})}t.indexes.forEach(a)}var iS=function(){function e(t,n){var r=this;this._middlewares={},this.verno=0;var a=e.dependencies;this._options=n=ln({addons:e.addons,autoOpen:!0,indexedDB:a.indexedDB,IDBKeyRange:a.IDBKeyRange},n),this._deps={indexedDB:n.indexedDB,IDBKeyRange:n.IDBKeyRange};var l=n.addons;this._dbSchema={},this._versions=[],this._storeNames=[],this._allTables={},this.idbdb=null,this._novip=this;var o={dbOpenError:null,isBeingOpened:!1,onReadyBeingFired:null,openComplete:!1,dbReadyResolve:kn,dbReadyPromise:null,cancelOpen:kn,openCanceller:null,autoSchema:!0,PR1398_maxLoop:3};o.dbReadyPromise=new jt(function(i){o.dbReadyResolve=i}),o.openCanceller=new jt(function(i,s){o.cancelOpen=s}),this._state=o,this.name=t,this.on=xd(this,"populate","blocked","versionchange","close",{ready:[B2,kn]}),this.on.ready.subscribe=IK(this.on.ready.subscribe,function(i){return function(s,u){e.vip(function(){var d=r._state;if(d.openComplete)d.dbOpenError||jt.resolve().then(s),u&&i(s);else if(d.onReadyBeingFired)d.onReadyBeingFired.push(s),u&&i(s);else{i(s);var f=r;u||i(function p(){f.on.ready.unsubscribe(s),f.on.ready.unsubscribe(p)})}})}}),this.Collection=L2e(this),this.Table=x2e(this),this.Transaction=H2e(this),this.Version=rSe(this),this.WhereClause=F2e(this),this.on("versionchange",function(i){i.newVersion>0?console.warn("Another connection wants to upgrade database '"+r.name+"'. Closing db now to resume the upgrade."):console.warn("Another connection wants to delete database '"+r.name+"'. Closing db now to resume the delete request."),r.close()}),this.on("blocked",function(i){!i.newVersion||i.newVersion<i.oldVersion?console.warn("Dexie.delete('"+r.name+"') was blocked"):console.warn("Upgrade '"+r.name+"' blocked by other connection holding version "+i.oldVersion/10)}),this._maxKey=Ic(n.IDBKeyRange),this._createTransaction=function(i,s,u,d){return new r.Transaction(i,s,u,r._options.chromeTransactionDurability,d)},this._fireOnBlocked=function(i){r.on("blocked").fire(i),lc.filter(function(s){return s.name===r.name&&s!==r&&!s._state.vcFired}).map(function(s){return s.on("versionchange").fire(i)})},this.use(dSe),this.use(pSe),this.use(mSe),this.use(bSe),this.vip=Object.create(this,{_vip:{value:!0}}),l.forEach(function(i){return i(r)})}return e.prototype.version=function(t){if(isNaN(t)||t<.1)throw new Et.Type("Given version is not a positive number");if(t=Math.round(t*10)/10,this.idbdb||this._state.isBeingOpened)throw new Et.Schema("Cannot add version when database is open");this.verno=Math.max(this.verno,t);var n=this._versions,r=n.filter(function(a){return a._cfg.version===t})[0];return r||(r=new this.Version(t),n.push(r),n.sort(I2e),r.stores({}),this._state.autoSchema=!1,r)},e.prototype._whenReady=function(t){var n=this;return this.idbdb&&(this._state.openComplete||Ht.letThrough||this._vip)?t():new jt(function(r,a){if(n._state.openComplete)return a(new Et.DatabaseClosed(n._state.dbOpenError));if(!n._state.isBeingOpened){if(!n._options.autoOpen){a(new Et.DatabaseClosed);return}n.open().catch(kn)}n._state.dbReadyPromise.then(r,a)}).then(t)},e.prototype.use=function(t){var n=t.stack,r=t.create,a=t.level,l=t.name;l&&this.unuse({stack:n,name:l});var o=this._middlewares[n]||(this._middlewares[n]=[]);return o.push({stack:n,create:r,level:a==null?10:a,name:l}),o.sort(function(i,s){return i.level-s.level}),this},e.prototype.unuse=function(t){var n=t.stack,r=t.name,a=t.create;return n&&this._middlewares[n]&&(this._middlewares[n]=this._middlewares[n].filter(function(l){return a?l.create!==a:r?l.name!==r:!1})),this},e.prototype.open=function(){return sSe(this)},e.prototype._close=function(){var t=this._state,n=lc.indexOf(this);if(n>=0&&lc.splice(n,1),this.idbdb){try{this.idbdb.close()}catch{}this._novip.idbdb=null}t.dbReadyPromise=new jt(function(r){t.dbReadyResolve=r}),t.openCanceller=new jt(function(r,a){t.cancelOpen=a})},e.prototype.close=function(){this._close();var t=this._state;this._options.autoOpen=!1,t.dbOpenError=new Et.DatabaseClosed,t.isBeingOpened&&t.cancelOpen(t.dbOpenError)},e.prototype.delete=function(){var t=this,n=arguments.length>0,r=this._state;return new jt(function(a,l){var o=function(){t.close();var i=t._deps.indexedDB.deleteDatabase(t.name);i.onsuccess=wn(function(){oSe(t._deps,t.name),a()}),i.onerror=Ga(l),i.onblocked=t._fireOnBlocked};if(n)throw new Et.InvalidArgument("Arguments not allowed in db.delete()");r.isBeingOpened?r.dbReadyPromise.then(o):o()})},e.prototype.backendDB=function(){return this.idbdb},e.prototype.isOpen=function(){return this.idbdb!==null},e.prototype.hasBeenClosed=function(){var t=this._state.dbOpenError;return t&&t.name==="DatabaseClosed"},e.prototype.hasFailed=function(){return this._state.dbOpenError!==null},e.prototype.dynamicallyOpened=function(){return this._state.autoSchema},Object.defineProperty(e.prototype,"tables",{get:function(){var t=this;return En(this._allTables).map(function(n){return t._allTables[n]})},enumerable:!1,configurable:!0}),e.prototype.transaction=function(){var t=uSe.apply(this,arguments);return this._transaction.apply(this,t)},e.prototype._transaction=function(t,n,r){var a=this,l=Ht.trans;(!l||l.db!==this||t.indexOf("!")!==-1)&&(l=null);var o=t.indexOf("?")!==-1;t=t.replace("!","").replace("?","");var i,s;try{if(s=n.map(function(d){var f=d instanceof a.Table?d.name:d;if(typeof f!="string")throw new TypeError("Invalid table argument to Dexie.transaction(). Only Table or String are allowed");return f}),t=="r"||t===a1)i=a1;else if(t=="rw"||t==l1)i=l1;else throw new Et.InvalidArgument("Invalid transaction mode: "+t);if(l){if(l.mode===a1&&i===l1)if(o)l=null;else throw new Et.SubTransaction("Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY");l&&s.forEach(function(d){if(l&&l.storeNames.indexOf(d)===-1)if(o)l=null;else throw new Et.SubTransaction("Table "+d+" not included in parent transaction.")}),o&&l&&!l.active&&(l=null)}}catch(d){return l?l._promise(null,function(f,p){p(d)}):_n(d)}var u=WN.bind(null,this,i,s,l,r);return l?l._promise(i,u,"lock"):Ht.trans?vu(Ht.transless,function(){return a._whenReady(u)}):this._whenReady(u)},e.prototype.table=function(t){if(!aa(this._allTables,t))throw new Et.InvalidTable("Table "+t+" does not exist");return this._allTables[t]},e}(),ySe=typeof Symbol<"u"&&"observable"in Symbol?Symbol.observable:"@@observable",ASe=function(){function e(t){this._subscribe=t}return e.prototype.subscribe=function(t,n,r){return this._subscribe(!t||typeof t=="function"?{next:t,error:n,complete:r}:t)},e.prototype[ySe]=function(){return this},e}();function VN(e,t){return En(t).forEach(function(n){var r=e[n]||(e[n]=new ml);Bp(r,t[n])}),e}function WSe(e){var t=!1,n=void 0,r=new ASe(function(a){var l=D2(e);function o(m){l&&pu();var v=function(){return To(e,{subscr:m,trans:null})},S=Ht.trans?vu(Ht.transless,v):v();return l&&S.then(Fl,Fl),S}var i=!1,s={},u={},d={get closed(){return i},unsubscribe:function(){i=!0,No.storagemutated.unsubscribe(A)}};a.start&&a.start(d);var f=!1,p=!1;function b(){return En(u).some(function(m){return s[m]&&hSe(s[m],u[m])})}var A=function(m){VN(s,m),b()&&h()},h=function(){if(!(f||i)){s={};var m={},v=o(m);p||(No(Ec,A),p=!0),f=!0,Promise.resolve(v).then(function(S){t=!0,n=S,f=!1,!i&&(b()?h():(s={},u=m,a.next&&a.next(S)))},function(S){f=!1,t=!1,a.error&&a.error(S),d.unsubscribe()})}};return h(),d});return r.hasValue=function(){return t},r.getValue=function(){return n},r}var b0;try{b0={indexedDB:Xn.indexedDB||Xn.mozIndexedDB||Xn.webkitIndexedDB||Xn.msIndexedDB,IDBKeyRange:Xn.IDBKeyRange||Xn.webkitIDBKeyRange}}catch{b0={indexedDB:null,IDBKeyRange:null}}var Yo=iS;eu(Yo,ln(ln({},nb),{delete:function(e){var t=new Yo(e,{addons:[]});return t.delete()},exists:function(e){return new Yo(e,{addons:[]}).open().then(function(t){return t.close(),!0}).catch("NoSuchDatabaseError",function(){return!1})},getDatabaseNames:function(e){try{return aSe(Yo.dependencies).then(e)}catch{return _n(new Et.MissingAPI)}},defineClass:function(){function e(t){gr(this,t)}return e},ignoreTransaction:function(e){return Ht.trans?vu(Ht.transless,e):e()},vip:f0,async:function(e){return function(){try{var t=p0(e.apply(this,arguments));return!t||typeof t.then!="function"?jt.resolve(t):t}catch(n){return _n(n)}}},spawn:function(e,t,n){try{var r=p0(e.apply(n,t||[]));return!r||typeof r.then!="function"?jt.resolve(r):r}catch(a){return _n(a)}},currentTransaction:{get:function(){return Ht.trans||null}},waitFor:function(e,t){var n=jt.resolve(typeof e=="function"?Yo.ignoreTransaction(e):e).timeout(t||6e4);return Ht.trans?Ht.trans.waitFor(n):n},Promise:jt,debug:{get:function(){return cl},set:function(e){eN(e,e==="dexie"?function(){return!0}:vN)}},derive:du,extend:gr,props:eu,override:IK,Events:xd,on:No,liveQuery:WSe,extendObservabilitySet:VN,getByKeyPath:Nl,setByKeyPath:qa,delByKeyPath:$me,shallowClone:QK,deepClone:Pd,getObjectDiff:lS,cmp:Wr,asap:BK,minKey:o0,addons:[],connections:lc,errnames:I2,dependencies:b0,semVer:jA,version:jA.split(".").map(function(e){return parseInt(e)}).reduce(function(e,t,n){return e+t/Math.pow(10,n*2)})}));Yo.maxKey=Ic(Yo.dependencies.IDBKeyRange);typeof dispatchEvent<"u"&&typeof addEventListener<"u"&&(No(Ec,function(e){if(!Vl){var t;rb?(t=document.createEvent("CustomEvent"),t.initCustomEvent(uo,!0,!0,e)):t=new CustomEvent(uo,{detail:e}),Vl=!0,dispatchEvent(t),Vl=!1}}),addEventListener(uo,function(e){var t=e.detail;Vl||Yp(t)}));function Yp(e){var t=Vl;try{Vl=!0,No.storagemutated.fire(e)}finally{Vl=t}}var Vl=!1;if(typeof BroadcastChannel<"u"){var bf=new BroadcastChannel(uo);typeof bf.unref=="function"&&bf.unref(),No(Ec,function(e){Vl||bf.postMessage(e)}),bf.onmessage=function(e){e.data&&Yp(e.data)}}else if(typeof self<"u"&&typeof navigator<"u"){No(Ec,function(e){try{Vl||(typeof localStorage<"u"&&localStorage.setItem(uo,JSON.stringify({trig:Math.random(),changedParts:e})),typeof self.clients=="object"&&Dh([],self.clients.matchAll({includeUncontrolled:!0}),!0).forEach(function(t){return t.postMessage({type:uo,changedParts:e})}))}catch{}}),typeof addEventListener<"u"&&addEventListener("storage",function(e){if(e.key===uo){var t=JSON.parse(e.newValue);t&&Yp(t.changedParts)}});var zA=self.document&&navigator.serviceWorker;zA&&zA.addEventListener("message",kSe)}function kSe(e){var t=e.data;t&&t.type===uo&&Yp(t.changedParts)}jt.rejectionMapper=s2e;eN(cl,vN);const VSe=new iS("library");VSe.version(1).stores({books:"++id, name, buffer, md5 ,size"});var PSe={exports:{}};(function(e,t){(function(n){e.exports=n()})(function(n){var r=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];function a(v,S){var y=v[0],W=v[1],k=v[2],V=v[3];y+=(W&k|~W&V)+S[0]-680876936|0,y=(y<<7|y>>>25)+W|0,V+=(y&W|~y&k)+S[1]-389564586|0,V=(V<<12|V>>>20)+y|0,k+=(V&y|~V&W)+S[2]+606105819|0,k=(k<<17|k>>>15)+V|0,W+=(k&V|~k&y)+S[3]-1044525330|0,W=(W<<22|W>>>10)+k|0,y+=(W&k|~W&V)+S[4]-176418897|0,y=(y<<7|y>>>25)+W|0,V+=(y&W|~y&k)+S[5]+1200080426|0,V=(V<<12|V>>>20)+y|0,k+=(V&y|~V&W)+S[6]-1473231341|0,k=(k<<17|k>>>15)+V|0,W+=(k&V|~k&y)+S[7]-45705983|0,W=(W<<22|W>>>10)+k|0,y+=(W&k|~W&V)+S[8]+1770035416|0,y=(y<<7|y>>>25)+W|0,V+=(y&W|~y&k)+S[9]-1958414417|0,V=(V<<12|V>>>20)+y|0,k+=(V&y|~V&W)+S[10]-42063|0,k=(k<<17|k>>>15)+V|0,W+=(k&V|~k&y)+S[11]-1990404162|0,W=(W<<22|W>>>10)+k|0,y+=(W&k|~W&V)+S[12]+1804603682|0,y=(y<<7|y>>>25)+W|0,V+=(y&W|~y&k)+S[13]-40341101|0,V=(V<<12|V>>>20)+y|0,k+=(V&y|~V&W)+S[14]-1502002290|0,k=(k<<17|k>>>15)+V|0,W+=(k&V|~k&y)+S[15]+1236535329|0,W=(W<<22|W>>>10)+k|0,y+=(W&V|k&~V)+S[1]-165796510|0,y=(y<<5|y>>>27)+W|0,V+=(y&k|W&~k)+S[6]-1069501632|0,V=(V<<9|V>>>23)+y|0,k+=(V&W|y&~W)+S[11]+643717713|0,k=(k<<14|k>>>18)+V|0,W+=(k&y|V&~y)+S[0]-373897302|0,W=(W<<20|W>>>12)+k|0,y+=(W&V|k&~V)+S[5]-701558691|0,y=(y<<5|y>>>27)+W|0,V+=(y&k|W&~k)+S[10]+38016083|0,V=(V<<9|V>>>23)+y|0,k+=(V&W|y&~W)+S[15]-660478335|0,k=(k<<14|k>>>18)+V|0,W+=(k&y|V&~y)+S[4]-405537848|0,W=(W<<20|W>>>12)+k|0,y+=(W&V|k&~V)+S[9]+568446438|0,y=(y<<5|y>>>27)+W|0,V+=(y&k|W&~k)+S[14]-1019803690|0,V=(V<<9|V>>>23)+y|0,k+=(V&W|y&~W)+S[3]-187363961|0,k=(k<<14|k>>>18)+V|0,W+=(k&y|V&~y)+S[8]+1163531501|0,W=(W<<20|W>>>12)+k|0,y+=(W&V|k&~V)+S[13]-1444681467|0,y=(y<<5|y>>>27)+W|0,V+=(y&k|W&~k)+S[2]-51403784|0,V=(V<<9|V>>>23)+y|0,k+=(V&W|y&~W)+S[7]+1735328473|0,k=(k<<14|k>>>18)+V|0,W+=(k&y|V&~y)+S[12]-1926607734|0,W=(W<<20|W>>>12)+k|0,y+=(W^k^V)+S[5]-378558|0,y=(y<<4|y>>>28)+W|0,V+=(y^W^k)+S[8]-2022574463|0,V=(V<<11|V>>>21)+y|0,k+=(V^y^W)+S[11]+1839030562|0,k=(k<<16|k>>>16)+V|0,W+=(k^V^y)+S[14]-35309556|0,W=(W<<23|W>>>9)+k|0,y+=(W^k^V)+S[1]-1530992060|0,y=(y<<4|y>>>28)+W|0,V+=(y^W^k)+S[4]+1272893353|0,V=(V<<11|V>>>21)+y|0,k+=(V^y^W)+S[7]-155497632|0,k=(k<<16|k>>>16)+V|0,W+=(k^V^y)+S[10]-1094730640|0,W=(W<<23|W>>>9)+k|0,y+=(W^k^V)+S[13]+681279174|0,y=(y<<4|y>>>28)+W|0,V+=(y^W^k)+S[0]-358537222|0,V=(V<<11|V>>>21)+y|0,k+=(V^y^W)+S[3]-722521979|0,k=(k<<16|k>>>16)+V|0,W+=(k^V^y)+S[6]+76029189|0,W=(W<<23|W>>>9)+k|0,y+=(W^k^V)+S[9]-640364487|0,y=(y<<4|y>>>28)+W|0,V+=(y^W^k)+S[12]-421815835|0,V=(V<<11|V>>>21)+y|0,k+=(V^y^W)+S[15]+530742520|0,k=(k<<16|k>>>16)+V|0,W+=(k^V^y)+S[2]-995338651|0,W=(W<<23|W>>>9)+k|0,y+=(k^(W|~V))+S[0]-198630844|0,y=(y<<6|y>>>26)+W|0,V+=(W^(y|~k))+S[7]+1126891415|0,V=(V<<10|V>>>22)+y|0,k+=(y^(V|~W))+S[14]-1416354905|0,k=(k<<15|k>>>17)+V|0,W+=(V^(k|~y))+S[5]-57434055|0,W=(W<<21|W>>>11)+k|0,y+=(k^(W|~V))+S[12]+1700485571|0,y=(y<<6|y>>>26)+W|0,V+=(W^(y|~k))+S[3]-1894986606|0,V=(V<<10|V>>>22)+y|0,k+=(y^(V|~W))+S[10]-1051523|0,k=(k<<15|k>>>17)+V|0,W+=(V^(k|~y))+S[1]-2054922799|0,W=(W<<21|W>>>11)+k|0,y+=(k^(W|~V))+S[8]+1873313359|0,y=(y<<6|y>>>26)+W|0,V+=(W^(y|~k))+S[15]-30611744|0,V=(V<<10|V>>>22)+y|0,k+=(y^(V|~W))+S[6]-1560198380|0,k=(k<<15|k>>>17)+V|0,W+=(V^(k|~y))+S[13]+1309151649|0,W=(W<<21|W>>>11)+k|0,y+=(k^(W|~V))+S[4]-145523070|0,y=(y<<6|y>>>26)+W|0,V+=(W^(y|~k))+S[11]-1120210379|0,V=(V<<10|V>>>22)+y|0,k+=(y^(V|~W))+S[2]+718787259|0,k=(k<<15|k>>>17)+V|0,W+=(V^(k|~y))+S[9]-343485551|0,W=(W<<21|W>>>11)+k|0,v[0]=y+v[0]|0,v[1]=W+v[1]|0,v[2]=k+v[2]|0,v[3]=V+v[3]|0}function l(v){var S=[],y;for(y=0;y<64;y+=4)S[y>>2]=v.charCodeAt(y)+(v.charCodeAt(y+1)<<8)+(v.charCodeAt(y+2)<<16)+(v.charCodeAt(y+3)<<24);return S}function o(v){var S=[],y;for(y=0;y<64;y+=4)S[y>>2]=v[y]+(v[y+1]<<8)+(v[y+2]<<16)+(v[y+3]<<24);return S}function i(v){var S=v.length,y=[1732584193,-271733879,-1732584194,271733878],W,k,V,T,P,x;for(W=64;W<=S;W+=64)a(y,l(v.substring(W-64,W)));for(v=v.substring(W-64),k=v.length,V=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],W=0;W<k;W+=1)V[W>>2]|=v.charCodeAt(W)<<(W%4<<3);if(V[W>>2]|=128<<(W%4<<3),W>55)for(a(y,V),W=0;W<16;W+=1)V[W]=0;return T=S*8,T=T.toString(16).match(/(.*?)(.{0,8})$/),P=parseInt(T[2],16),x=parseInt(T[1],16)||0,V[14]=P,V[15]=x,a(y,V),y}function s(v){var S=v.length,y=[1732584193,-271733879,-1732584194,271733878],W,k,V,T,P,x;for(W=64;W<=S;W+=64)a(y,o(v.subarray(W-64,W)));for(v=W-64<S?v.subarray(W-64):new Uint8Array(0),k=v.length,V=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],W=0;W<k;W+=1)V[W>>2]|=v[W]<<(W%4<<3);if(V[W>>2]|=128<<(W%4<<3),W>55)for(a(y,V),W=0;W<16;W+=1)V[W]=0;return T=S*8,T=T.toString(16).match(/(.*?)(.{0,8})$/),P=parseInt(T[2],16),x=parseInt(T[1],16)||0,V[14]=P,V[15]=x,a(y,V),y}function u(v){var S="",y;for(y=0;y<4;y+=1)S+=r[v>>y*8+4&15]+r[v>>y*8&15];return S}function d(v){var S;for(S=0;S<v.length;S+=1)v[S]=u(v[S]);return v.join("")}d(i("hello")),typeof ArrayBuffer<"u"&&!ArrayBuffer.prototype.slice&&function(){function v(S,y){return S=S|0||0,S<0?Math.max(S+y,0):Math.min(S,y)}ArrayBuffer.prototype.slice=function(S,y){var W=this.byteLength,k=v(S,W),V=W,T,P,x,g;return y!==n&&(V=v(y,W)),k>V?new ArrayBuffer(0):(T=V-k,P=new ArrayBuffer(T),x=new Uint8Array(P),g=new Uint8Array(this,k,T),x.set(g),P)}}();function f(v){return/[\u0080-\uFFFF]/.test(v)&&(v=unescape(encodeURIComponent(v))),v}function p(v,S){var y=v.length,W=new ArrayBuffer(y),k=new Uint8Array(W),V;for(V=0;V<y;V+=1)k[V]=v.charCodeAt(V);return S?k:W}function b(v){return String.fromCharCode.apply(null,new Uint8Array(v))}function A(v,S,y){var W=new Uint8Array(v.byteLength+S.byteLength);return W.set(new Uint8Array(v)),W.set(new Uint8Array(S),v.byteLength),y?W:W.buffer}function h(v){var S=[],y=v.length,W;for(W=0;W<y-1;W+=2)S.push(parseInt(v.substr(W,2),16));return String.fromCharCode.apply(String,S)}function m(){this.reset()}return m.prototype.append=function(v){return this.appendBinary(f(v)),this},m.prototype.appendBinary=function(v){this._buff+=v,this._length+=v.length;var S=this._buff.length,y;for(y=64;y<=S;y+=64)a(this._hash,l(this._buff.substring(y-64,y)));return this._buff=this._buff.substring(y-64),this},m.prototype.end=function(v){var S=this._buff,y=S.length,W,k=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],V;for(W=0;W<y;W+=1)k[W>>2]|=S.charCodeAt(W)<<(W%4<<3);return this._finish(k,y),V=d(this._hash),v&&(V=h(V)),this.reset(),V},m.prototype.reset=function(){return this._buff="",this._length=0,this._hash=[1732584193,-271733879,-1732584194,271733878],this},m.prototype.getState=function(){return{buff:this._buff,length:this._length,hash:this._hash.slice()}},m.prototype.setState=function(v){return this._buff=v.buff,this._length=v.length,this._hash=v.hash,this},m.prototype.destroy=function(){delete this._hash,delete this._buff,delete this._length},m.prototype._finish=function(v,S){var y=S,W,k,V;if(v[y>>2]|=128<<(y%4<<3),y>55)for(a(this._hash,v),y=0;y<16;y+=1)v[y]=0;W=this._length*8,W=W.toString(16).match(/(.*?)(.{0,8})$/),k=parseInt(W[2],16),V=parseInt(W[1],16)||0,v[14]=k,v[15]=V,a(this._hash,v)},m.hash=function(v,S){return m.hashBinary(f(v),S)},m.hashBinary=function(v,S){var y=i(v),W=d(y);return S?h(W):W},m.ArrayBuffer=function(){this.reset()},m.ArrayBuffer.prototype.append=function(v){var S=A(this._buff.buffer,v,!0),y=S.length,W;for(this._length+=v.byteLength,W=64;W<=y;W+=64)a(this._hash,o(S.subarray(W-64,W)));return this._buff=W-64<y?new Uint8Array(S.buffer.slice(W-64)):new Uint8Array(0),this},m.ArrayBuffer.prototype.end=function(v){var S=this._buff,y=S.length,W=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],k,V;for(k=0;k<y;k+=1)W[k>>2]|=S[k]<<(k%4<<3);return this._finish(W,y),V=d(this._hash),v&&(V=h(V)),this.reset(),V},m.ArrayBuffer.prototype.reset=function(){return this._buff=new Uint8Array(0),this._length=0,this._hash=[1732584193,-271733879,-1732584194,271733878],this},m.ArrayBuffer.prototype.getState=function(){var v=m.prototype.getState.call(this);return v.buff=b(v.buff),v},m.ArrayBuffer.prototype.setState=function(v){return v.buff=p(v.buff,!0),m.prototype.setState.call(this,v)},m.ArrayBuffer.prototype.destroy=m.prototype.destroy,m.ArrayBuffer.prototype._finish=m.prototype._finish,m.ArrayBuffer.hash=function(v,S){var y=s(new Uint8Array(v)),W=d(y);return S?h(W):W},m})})(PSe);const TSe=[{ISBN:"9787533950057",UUID:"715ED972-2AC3-4F1F-AE68-3FC720AA3D25",title:"\u751F\u541E",date:"2017-08-31T16:00:00+00:00",publisher:"\u6D59\u6C5F\u6587\u827A\u51FA\u7248\u793E",creator:"\u90D1\u6267, ePUBw.COM",creatorFileAs:"\u672A\u77E5",language:"und","calibre:timestamp":"2019-01-30T03:53:15.689000+00:00",cover:"cover",id:"8c5cc656049351ea1176658b9ec84696",coverPath:"/books/cover/\u751F\u541E.jpg",url:"\u751F\u541E.epub",bgColorFromCover:"#734511",size:275288,from:"url",coverBase64:""},{date:"2018-10-20T16:00:00+00:00",creator:"\u9648\u6D69\u57FA",creatorFileAs:"\u9648\u6D69\u57FA",UUID:"DB108833-1D43-4711-A2D0-240E07B37352",language:"zh",title:"13.67","calibre:timestamp":"2019-09-20T03:57:38.859000+00:00","calibre:title_sort":"13.67",cover:"cover",id:"54a785173f1a484c02e53418730b24b5",coverPath:"/books/cover/13.67.jpg",url:"13.67.epub",bgColorFromCover:"#076184",size:435507,from:"url",coverBase64:""},{language:"und",title:"\u6C38\u6052\u7684\u7EC8\u7ED3",ISBN:"9787539957173",UUID:"359D3657-DEE4-4F69-A804-670CBD50457C",creator:"\u3010\u7F8E\u3011\u827E\u8428\u514B\xB7\u963F\u897F\u83AB\u592B, ePUBw.COM",creatorFileAs:"\u672A\u77E5",date:"2017-05-13T16:00:00+00:00",publisher:"\u6C5F\u82CF\u6587\u827A\u51FA\u7248\u793E",cover:"cover","calibre:timestamp":"2019-01-29T17:53:06.871000+00:00",id:"4cad764df4e0d55d8cb5e9bb052aca70",coverPath:"/books/cover/\u6C38\u6052\u7684\u7EC8\u7ED3.jpg",url:"\u6C38\u6052\u7684\u7EC8\u7ED3.epub",bgColorFromCover:"#885b39",size:406928,from:"url",coverBase64:"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"},{date:"2022-06-14T16:00:00+00:00",creator:"J.G.\u5DF4\u62C9\u5FB7\uFF1B\u7B49",creatorFileAs:"J.G.\u5DF4\u62C9\u5FB7\uFF1B\u7B49",UUID:"5F97C4F7-2187-480F-B452-BD0D1DD4EC63",language:"zh",title:"\u7231\uFF0C\u6B7B\u4EA1\u548C\u673A\u5668\u4EBA\uFF08\u5168\u4E09\u5B63\uFF09(NetFlix\u73B0\u8C61\u7EA7\u540C\u540D\u795E\u5267\u539F\u8457\u5C0F\u8BF4\uFF0C\u5B98\u65B9\u552F\u4E00\u6388\u6743\u7ED3\u96C6\uFF0C\u4E91\u96C6\u661F\u4E91\u5956\u3001\u96E8\u679C\u5956\u3001\u5965\u65AF\u5361\u5956\u3001\u827E\u7F8E\u5956\u5F97\u4E3B\u7684\u60F3\u8C61\u529B\u76DB\u5BB4) (\u8BD1\u6797\u5E7B\u7CFB\u5217)",publisher:"\u8BD1\u6797\u51FA\u7248\u793E","calibre:title_sort":"\u7231\uFF0C\u6B7B\u4EA1\u548C\u673A\u5668\u4EBA\uFF08\u5168\u4E09\u5B63\uFF09(NetFlix\u73B0\u8C61\u7EA7\u540C\u540D\u795E\u5267\u539F\u8457\u5C0F\u8BF4\uFF0C\u5B98\u65B9\u552F\u4E00\u6388\u6743\u7ED3\u96C6\uFF0C\u4E91\u96C6\u661F\u4E91\u5956\u3001\u96E8\u679C\u5956\u3001\u5965\u65AF\u5361\u5956\u3001\u827E\u7F8E\u5956\u5F97\u4E3B\u7684\u60F3\u8C61\u529B\u76DB\u5BB4) (\u8BD1\u6797\u5E7B\u7CFB\u5217)","calibre:timestamp":"2022-06-04T04:03:38.551000+00:00",cover:"cover",id:"5ef7fcb3d6819e98409cf670031b4a32",coverPath:"/books/cover/\u7231\uFF0C\u6B7B\u4EA1\u548C\u673A\u5668\u4EBA\uFF08\u5168\u4E09\u5B63\uFF09.jpg",url:"\u7231\uFF0C\u6B7B\u4EA1\u548C\u673A\u5668\u4EBA\uFF08\u5168\u4E09\u5B63\uFF09.epub",bgColorFromCover:"#712c13",size:585565,from:"url",coverBase64:"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"},{publisher:"\u91CD\u5E86\u51FA\u7248\u793E",title:"\u4E09\u4F53\uFF08\u5168\u96C6\uFF09",language:"und",ISBN:"9787229042066",UUID:"F91EE84A-9AE9-4820-A2BD-F6B8D54958AD",date:"2015-12-31T16:00:00+00:00",creator:"\u5218\u6148\u6B23, ePUBw.COM",creatorFileAs:"\u672A\u77E5","calibre:timestamp":"2019-01-25T12:28:49.609000+00:00",cover:"cover",id:"615f6fd808422de813e4a8c45712d47d",coverPath:"/books/cover/\u4E09\u4F53\uFF08\u5168\u96C6\uFF09.jpg",url:"\u4E09\u4F53\uFF08\u5168\u96C6\uFF09.epub",bgColorFromCover:"#74341c",size:1382831,from:"url",coverBase64:""},{creator:"\u5F20\u5BD2\u5BFA",creatorFileAs:"\u5F20\u5BD2\u5BFA",language:"zh",UUID:"9DE68EB4-62CD-4E6C-B98D-1A04212594C5",title:"\u4E0D\u6B63\u5E38\u4EBA\u7C7B\u75C7\u5019\u7FA4",date:"2016-08-31T16:00:00+00:00",cover:"cover","calibre:title_sort":"\u4E0D\u6B63\u5E38\u4EBA\u7C7B\u75C7\u5019\u7FA4","calibre:timestamp":"2016-12-19T03:44:38.814000+00:00",id:"1c930b0e3d74aa6c51a812cc0e0742cb",coverPath:"/books/cover/\u4E0D\u6B63\u5E38\u4EBA\u7C7B\u75C7\u5019\u7FA4.jpg",url:"\u4E0D\u6B63\u5E38\u4EBA\u7C7B\u75C7\u5019\u7FA4.epub",bgColorFromCover:"#4c3c24",size:511179,from:"url",coverBase64:""},{title:"\u4E00\u4E2A\u964C\u751F\u5973\u4EBA\u7684\u6765\u4FE1",language:"zh",creator:"\u65AF\u8482\u82AC\u2022\u8328\u5A01\u683C",creatorFileAs:"sidifen?ciweige",publisher:"\u65F6\u4EE3\u51FA\u7248\u4F20\u5A92\u80A1\u4EFD\u6709\u9650\u516C\u53F8,\u5B89\u5FBD\u6559\u80B2\u51FA\u7248\u793E",date:"2012-04-01",cover:"x_cover-image","output encoding":"utf-8","primary-writing-mode":"horizontal-lr","Sigil version":"0.9.7",id:"18dc143fac312bc008324ac6e9aa734a",coverPath:"/books/cover/\u4E00\u4E2A\u964C\u751F\u5973\u4EBA\u7684\u6765\u4FE1.jpg",url:"\u4E00\u4E2A\u964C\u751F\u5973\u4EBA\u7684\u6765\u4FE1.epub",bgColorFromCover:"#7b3c08",size:2137733,from:"url",coverBase64:""},{subject:"\u2460\u7AE0\u56DE\u5C0F\u8BF4-\u4E2D\u56FD-\u73B0\u4EE3",language:"zh",title:"\u557C\u7B11\u56E0\u7F18\uFF08\u4E2D\u56FD\u73B0\u4EE3\u901A\u4FD7\u5C0F\u8BF4\u91CC\u7A0B\u7891\u4E4B\u4F5C\uFF0C\u5F20\u7231\u73B2\u7684\u6587\u575B\u5076\u50CF\uFF0C\u9E33\u9E2F\u8774\u8776\u6D3E\u6807\u6746\u4F5C\u5BB6\u5F20\u6068\u6C34\u4EE3\u8868\u4F5C\uFF01\uFF09",ISBN:"9787569521870",UUID:"18E9B813-7892-411D-9E7F-0F645409F613",date:"2021-09-30T16:00:00+00:00",creator:"\u5F20\u6068\u6C34",creatorFileAs:"\u5F20\u6068\u6C34",publisher:"\u9655\u897F\u5E08\u8303\u5927\u5B66\u51FA\u7248\u603B\u793E\u6709\u9650\u516C\u53F8",cover:"cover","calibre:timestamp":"2021-12-13T16:29:41.844000+00:00","calibre:title_sort":"\u557C\u7B11\u56E0\u7F18\uFF08\u4E2D\u56FD\u73B0\u4EE3\u901A\u4FD7\u5C0F\u8BF4\u91CC\u7A0B\u7891\u4E4B\u4F5C\uFF0C\u5F20\u7231\u73B2\u7684\u6587\u575B\u5076\u50CF\uFF0C\u9E33\u9E2F\u8774\u8776\u6D3E\u6807\u6746\u4F5C\u5BB6\u5F20\u6068\u6C34\u4EE3\u8868\u4F5C\uFF01\uFF09","primary-writing-mode":"horizontal-lr",id:"978f533ae68440b548ad8b50f4aecfac",coverPath:"/books/cover/\u557C\u7B11\u56E0\u7F18.jpg",url:"\u557C\u7B11\u56E0\u7F18.epub",bgColorFromCover:"#604523",size:528790,from:"url",coverBase64:""},{language:"zh",title:"\u88C2\u9699\u4E4B\u5916\uFF1A\u5168\u4E24\u518C\uFF08\u73B0\u8C61\u7EA7\u795E\u5267\u300A\u7231\uFF0C\u6B7B\u4EA1\u548C\u673A\u5668\u4EBA\u300B\u7B2C\u4E00\u5B63\u7B2C\u4E03\u96C6\u539F\u8457\uFF0C\u7B2C47\u5C4A\u661F\u4E91\u8D4F\u83B7\u5956\u4F5C\u54C1\uFF01\u300A\u51B0\u4E0E\u706B\u4E4B\u6B4C\u300B\u4F5C\u8005\u76DB\u8D5E\uFF01 \uFF09",creator:"\u3010\u82F1\u3011\u963F\u62C9\u65AF\u6CF0\u5C14\xB7\u96F7\u8BFA\u5179",creatorFileAs:"\u3010\u82F1\u3011\u963F\u62C9\u65AF\u6CF0\u5C14\xB7\u96F7\u8BFA\u5179",publisher:"\u6E56\u5357\u6587\u827A\u51FA\u7248\u793E",ISBN:"9787572605765",UUID:"1FF3D48A-C999-4108-893A-EC2C41E19594",date:"2022-02-28T16:00:00+00:00",subject:"-SanQiu.mobi","calibre:timestamp":"2022-11-06T13:06:24.047500+00:00","calibre:title_sort":"\u88C2\u9699\u4E4B\u5916\uFF1A\u5168\u4E24\u518C\uFF08\u73B0\u8C61\u7EA7\u795E\u5267\u300A\u7231\uFF0C\u6B7B\u4EA1\u548C\u673A\u5668\u4EBA\u300B\u7B2C\u4E00\u5B63\u7B2C\u4E03\u96C6\u539F\u8457\uFF0C\u7B2C47\u5C4A\u661F\u4E91\u8D4F\u83B7\u5956\u4F5C\u54C1\uFF01\u300A\u51B0\u4E0E\u706B\u4E4B\u6B4C\u300B\u4F5C\u8005\u76DB\u8D5E\uFF01 \uFF09",cover:"cover",id:"1d9f956edb2801c0acc86d5e2ecf2311",coverPath:"/books/cover/\u88C2\u9699\u4E4B\u5916\uFF1A\u5168\u4E24\u518C.jpg",url:"\u88C2\u9699\u4E4B\u5916\uFF1A\u5168\u4E24\u518C.epub",bgColorFromCover:"#262650",size:794673,from:"url",coverBase64:""},{title:"\u957F\u591C\u96BE\u660E",language:"zh",creator:"\u7D2B\u91D1\u9648",creatorFileAs:"\u7D2B\u91D1\u9648",publisher:"\u4E91\u5357\u4EBA\u6C11\u51FA\u7248\u793E",date:"2017-01-01",cover:"x_my_cover_image","output encoding":"utf-8","primary-writing-mode":"horizontal-lr",id:"f30211f2a60b051a1b5feb23c75f3539",coverPath:"/books/cover/\u957F\u591C\u96BE\u660E.jpg",url:"\u957F\u591C\u96BE\u660E.epub",bgColorFromCover:"#052473",size:372108,from:"url",coverBase64:"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"},{title:"\u8A00\u53F6\u4E4B\u5EAD",creator:"\u65B0\u6D77\u8BDA",creatorFileAs:"\u65B0\u6D77\u8BDA",publisher:"\u6085\u77E5\u6587\u5316",description:'<div><p class="description">\u5728\u300C\u7231\u300D\u6765\u4E34\u4E4B\u524D\uFF0C\u4EBA\u4EEC\u6000\u62B1\u7740\u300C\u5B64\u60B2\u300D\uFF0C\u56E0\u5B64\u72EC\u800C\u6E34\u6C42\u7740\u67D0\u4EBA\u7684\u6DF1\u5C42\u611F\u60C5\u3002<br>15\u5C81\u7684\u9AD8\u4E2D\u751F\u5B5D\u96C4\uFF0C\u6BCF\u5F53\u96E8\u5929\uFF0C\u4FBF\u4F1A\u7FD8\u8BFE\u5230\u65E5\u5F0F\u5EAD\u56ED\u7684\u51C9\u4EAD\u4E2D\uFF0C\u7ED8\u5236\u978B\u5B50\u7684\u7D20\u63CF\u3002\u67D0\u5929\uFF0C\u51FA\u73B0\u4E86\u72EC\u81EA\u4E00\u4EBA\u559D\u7740\u7F50\u88C5\u5564\u9152\u3001\u5403\u7740\u5DE7\u514B\u529B\u768427\u5C81\u8C1C\u6837\u5973\u6027\u96EA\u91CE\uFF0C\u6B64\u540E\uFF0C\u5373\u4FBF\u6CA1\u6709\u7279\u522B\u7EA6\u5B9A\uFF0C\u4E24\u4EBA\u5374\u603B\u662F\u5728\u4E0B\u7740\u96E8\u7684\u51C9\u4EAD\u4E00\u518D\u91CD\u9022\u3002\u65E5\u590D\u4E00\u65E5\uFF0C\u4E8E\u662F\uFF0C\u8DE8\u8D8A\u5E74\u9F84\u7684\u60C5\u6000\u5C31\u6B64\u5C55\u5F00\u3002<br> \u300C\u5BF9\u5979\u800C\u8A00\uFF0C15\u5C81\u7684\u6211\u53EA\u4E0D\u8FC7\u662F\u4E2A\u5B69\u5B50\u3002\u300D<br> \u300C27\u5C81\u7684\u6211\uFF0C\u4E1D\u6BEB\u4E0D\u6BD415\u5C81\u65F6\u7684\u6211\u806A\u660E\u3002\u300D<br> \u4E3A\u4E86\u5931\u53BB\u4EBA\u751F\u524D\u8FDB\u65B9\u5411\u7684\u96EA\u91CE\uFF0C\u5B5D\u96C4\u51B3\u5FC3\u6253\u9020\u51FA\u4E00\u53CC\u80FD\u966A\u4F34\u5979\u8D70\u5F97\u66F4\u8FDC\u7684\u978B\u3002\u7136\u800C\uFF0C\u6885\u96E8\u5B63\u8282\u50CF\u662F\u65E0\u89C6\u4E8E\u4E24\u4EBA\u7684\u5FC3\u610F\u822C\uFF0C\u6B63\u6084\u6084\u8FC8\u5165\u5C3E\u58F0\u2026\u2026<br> <br> \u6CA1\u6709\u7EA6\u5B9A\u7684\u9082\u9005\uFF0C<br> \u53EA\u5728\u4E0B\u7740\u96E8\u7684\u65E5\u5F0F\u5EAD\u9662\u3002<br> \u300A\u661F\u4E4B\u58F0\u300B\u300A\u79D2\u901F5\u516C\u5206\u300B\u300A\u8FFD\u9010\u7E41\u661F\u7684\u5B69\u5B50\u300B\u5BFC\u6F14\u65B0\u6D77\u8BDA\u6700\u5177\u4EE3\u8868\u7684\u9752\u6625\u604B\u7231\u7269\u8BED\u3002<br> <br>\u3000</p><hr><p class="description">\u3000<br> \u65B0\u6D77\u8BDA Makoto Shinkai<br> \u4E00\u4E5D\u4E03\u4E09\u5E74\u51FA\u751F\u4E8E\u957F\u91CE\u53BF\u3002\u52A8\u753B\u5BFC\u6F14\u3002<br> \u4E8C\u3007\u3007\u4E8C\u5E74\u63A8\u51FA\u51E0\u4E4E\u7531\u4ED6\u4E00\u4EBA\u5236\u4F5C\u7684\u77ED\u7BC7\u52A8\u753B\uFF08\u661F\u4E4B\u58F0\u300B\u800C\u5907\u53D7\u77A9\u76EE\uFF0C\u6B64\u540E\u9646\u7EED\u53D1\u8868\u300A\u4E91\u4E4B\u5F7C\u7AEF\uFF0C\u7EA6\u5B9A\u7684\u5730\u65B9\u3009\u3001\u300A\u79D2\u901F5\u516C\u5206\u300B\u3001\u300A\u8FFD\u9010\u7E41\u661F\u7684\u5B69\u5B50\u300B\u3001\uFF08\u8A00\u53F6\u4E4B\u5EAD\u3009\u7B49\u4F5C\u54C1\uFF0C\u6D77\u5185\u5916\u5BF9\u5176\u8BC4\u4EF7\u751A\u9AD8\u3002\u53E6\u6709\u5C0F\u8BF4\u4F5C\u54C1\uFF08\u5C0F\u8BF4\xB7\u79D2\u901F5\u516C\u5206\u3009\u3002<br> <br> <br> \u9EC4\u8587\u5AD4 \u8BD1\u8005<br> \u5728\u767E\u4E07\u4EBA\u53E3\u7684\u57CE\u5E02\u91CC\uFF0C\u4E0E\u56DB\u5468\u683C\u683C\u4E0D\u5165\u7684\u4E24\u4EBA,\u9082\u9005\u5728\u5BC2\u5BDE\u7684\u7684\u96E8\u4E2D\u3002\u4E0D\u662F\u4EE5\u4E16\u4FD7\u7ED9\u4ED6\u4EEC\u7684\u8EAB\u4EFD\uFF0C\u800C\u662F\u4EE5\u539F\u672C\u964D\u751F\u5730\u7403\u7684\u59FF\u6001\uFF0C\u5076\u7136\u76F8\u9022\u3002<br> <br> \u5E84\u96C5\u7EE3 \u8BD1\u8005<br> \u65E5\u672C\u6CD5\u653F\u5927\u5B66\u5927\u5B66\u9662\u6BD5\u4E1A\uFF0C\u73B0\u4E3A\u4E13\u804C\u8BD1\u8005\uFF0C\u8BD1\u6709\u300A\u7ED910\u5E74\u540E\u4E0D\u540E\u6094\u7684\u81EA\u5DF1\u300B\u3001\u300A\u4F20\u5947\u7B14\u8BB0\u672CMOLESKINE\uFF1A\u4E66\u5199\u4E2A\u6027\u4EBA\u751F\u768461\u5219\u624B\u5E10\u6D3B\u7528\u672F\u300B</p></div>',date:"2015-08-23T16:00:00+00:00",language:"zh-cn",ISBN:"9789865617165",cover:"cover-image","calibre:title_sort":"\u8A00\u53F6\u4E4B\u5EAD","calibre:author_link_map":'{"\u65B0\u6D77\u8BDA": ""}',id:"ddf81a2f2f684f0d7b6c03b80b86f0ad",coverPath:"/books/cover/\u8A00\u53F6\u4E4B\u5EAD.jpg",url:"\u8A00\u53F6\u4E4B\u5EAD.epub",bgColorFromCover:"#1c623a",size:6482840,from:"url",coverBase64:""}],bu=bJ("reader",{state:()=>({theme:"default",flow:"paginated",font:"",lineSpacing:1.5,fontSize:100,bookList:TSe}),actions:{setTheme(e){this.theme=e},reset(){this.theme="default",this.flow="paginated",this.font="",this.lineSpacing=1.5,this.fontSize=100},setBook(e,t){const n=this.bookList.findIndex(r=>r.id===e);n>-1&&(this.bookList[n]=t)},addBook(){},delBook(e){const t=this.bookList.findIndex(n=>e===n.id);t>-1&&this.bookList.splice(t,1)}},persist:!0});const KSe={class:"image-slot"},NSe={key:0},xSe={key:1},XSe={key:2},gSe=["title"],wSe={key:3},jSe={key:4},LSe={key:5},qSe={key:6},USe={__name:"Home",props:{useMin:{type:Boolean,default:!1},maxCols:{type:Number,default:1/0}},emits:["update:currentBook"],setup(e,{emit:t}){const n=e,r=bu(),a=r.bookList.sort((w,R)=>w.lastOpen&&R.lastOpen?R.lastOpen-w.lastOpen:1);console.log(a);const{saveAs:l}=Ime,o=J(null),i=J(null),s=Bt({maxColWidth:280,gap:32});let u=[];const{maxColWidth:d,gap:f}=Kn(s),{useMin:p,maxCols:b}=n;At(async()=>{!a.length||(m(),v(),window.addEventListener("resize",T))}),tn(()=>{window.removeEventListener("resize",T)});const A=(w,R)=>w.length>R?`${w.substr(0,R-3)}...`:w,h=w=>{const R=new Date(w),Z=R.getFullYear(),G=R.getMonth()+1,U=R.getDay();return`${Z}-${G}-${U}`},m=()=>{u=o.value.children,u.length!==0&&(i.value.$el.style.position="relative",Array.prototype.forEach.call(u,w=>{w.style.position="absolute",w.style.maxWidth=`${d.value}px`,w.style.transition="top 0.2s ease, left 0.2s ease, right 0.2s ease, buttom 0.2s ease"}))},v=()=>{if(u.length===0)return;let{cols:w,wSpace:R}=V();R=Math.floor(R/2),Array.prototype.forEach.call(u,(Z,G)=>{const U=S(w,G),H=U.index*y()+R;Z.style.left=`${H}px`,Z.style.top=`${U.height+U.top}px`,U.height+=U.top+Z.getBoundingClientRect().height,U.top=f.value}),i.value.$el.style.height=`${k(w).height}px`},S=(w,R)=>p?W(w):w[R%w.length],y=()=>u[0].getBoundingClientRect().width+f.value,W=w=>{let R=w[0];return w.forEach(Z=>{Z.height<R.height&&(R=Z)}),R},k=w=>{let R=w[0];return w.forEach(Z=>{Z.height>R.height&&(R=Z)}),R},V=()=>{const{width:w}=i.value.$el.getBoundingClientRect();let R=Math.floor(w/y())||1;const Z=[];b&&R>b&&(R=b);for(let U=0;U<R;U+=1)Z[U]={height:0,top:0,index:U};const G=w-R*y()+f.value;return{cols:Z,wSpace:G}},T=()=>{setTimeout(v(),200)},P=w=>w/1024/1024>1?parseFloat(w/1024/1024+"").toFixed(2)+"Mb":parseInt(w/1024+"")+"Kb",x=w=>{l("/books/"+w,w)},g=w=>{t("update:currentBook",w)},j=async w=>{const{raw:R,name:Z,size:G}=w,U=new FileReader;U.onerror=H=>{console.log(H)},U.onloadend=H=>{console.log(U),t("update:currentBook",U.result)},U.readAsArrayBuffer(R)},L=w=>{r.delBook(w)};return(w,R)=>{const Z=rt("el-button"),G=rt("el-upload"),U=rt("el-icon"),H=rt("el-image"),O=rt("el-divider"),D=rt("el-popover"),Y=rt("el-card"),Q=rt("el-main"),ee=rt("el-container");return K(),ie(ee,{direction:"vertical"},{default:B(()=>[C(MK,{backdrop:"",shadow:""},{default:B(()=>[C(G,{"auto-upload":!1,accept:".epub","on-change":j,multiple:!1,"show-file-list":!1},{default:B(()=>[C(Z,{size:"small",icon:c(zm),circle:"",title:"\u5BFC\u5165\u56FE\u4E66"},null,8,["icon"])]),_:1})]),_:1}),C(Q,{class:"main",ref_key:"main",ref:i},{default:B(()=>[z("div",{class:"grid",ref_key:"grid",ref:o},[(K(!0),F(Qe,null,Nt(c(a),(oe,Ne)=>(K(),F("div",{key:Ne},[C(Y,{onClick:pe=>g(oe),ref_for:!0,ref:"card",shadow:"hover",class:"box-card","body-style":{padding:"0px"}},{default:B(()=>[C(H,{lazy:!0,src:"data:image/png;base64,"+oe.coverBase64,fit:"fill",class:"el-image"},{error:B(()=>[z("div",KSe,[C(U,null,{default:B(()=>[C(c(CE))]),_:1})])]),_:2},1032,["src"]),C(D,{trigger:"hover",placement:"right"},{reference:B(()=>[z("div",{class:"title",style:lt({background:oe.bgColorFromCover?oe.bgColorFromCover:"#6d6d6d"})},je(A(oe.title,12)),5)]),default:B(()=>[z("div",null,[z("p",null,[C(Z,{type:"primary",round:"",icon:c(UD),onClick:pe=>x(oe.url)},{default:B(()=>[Xt("\u4E0B\u8F7D")]),_:2},1032,["icon","onClick"])]),z("p",null,[C(Z,{type:"primary",round:"",icon:c(Hk),onClick:pe=>L(oe.id)},{default:B(()=>[Xt("\u5220\u9664")]),_:2},1032,["icon","onClick"])]),C(O),oe.title?(K(),F("p",NSe,"\u4E66\u540D: "+je(oe.title),1)):ae("",!0),oe.creator?(K(),F("p",xSe,"\u4F5C\u8005: "+je(oe.creator),1)):ae("",!0),oe.description?(K(),F("p",XSe,[Xt(" \u63CF\u8FF0: "),z("span",{title:oe.description},je(A(oe.description,30)),9,gSe)])):ae("",!0),oe.publisher?(K(),F("p",wSe,"\u51FA\u7248\u793E: "+je(oe.publisher),1)):ae("",!0),oe.date?(K(),F("p",jSe,"\u51FA\u7248\u65E5\u671F: "+je(h(oe.date)||h(oe.publishDate)),1)):ae("",!0),oe.language?(K(),F("p",LSe,"\u8BED\u8A00: "+je(oe.language),1)):ae("",!0),oe.size?(K(),F("p",qSe,"\u6587\u4EF6\u5927\u5C0F: "+je(P(oe.size)),1)):ae("",!0)])]),_:2},1024)]),_:2},1032,["onClick"])]))),128))],512)]),_:1},512)]),_:1})}}},OSe=xt(USe,[["__scopeId","data-v-8a7b6a1b"]]);const RSe=e=>(Mr("data-v-805830fe"),e=e(),Dr(),e),JSe=RSe(()=>z("div",{class:"el-popover__title"}," Table of Content ",-1)),FSe={__name:"TocMenu",props:{toc:{default:()=>[],type:Array}},emits:["node-click"],setup(e,{emit:t}){const n=e,r=bu(),a=l=>{t("node-click",l)};return(l,o)=>{const i=rt("el-button"),s=rt("el-tree"),u=rt("el-popover");return K(),ie(u,{"popper-class":`popper ${c(r).theme}`,placement:"bottom",width:380,trigger:"hover","popper-style":{height:"85%"}},{reference:B(()=>[C(i,{size:"small",icon:c(sI),circle:""},null,8,["icon"])]),default:B(()=>[JSe,C(s,{data:n.toc,onNodeClick:a},null,8,["data"])]),_:1},8,["popper-class"])}}},zSe=xt(FSe,[["__scopeId","data-v-805830fe"]]),HSe={class:"el-popover__title"},ZSe={__name:"SearchMenu",props:{searchResult:{default:()=>[],type:Array}},emits:["search","node-click"],setup(e,{emit:t}){const n=e,r=bu(),{searchResult:a}=Kn(n),l=J(""),o=()=>{},i=()=>{l.value},s=d=>{t("node-click",d)};let u=null;return Ve(l,d=>{d.length!==0&&(clearTimeout(u),u=setTimeout(()=>{t("search",d)},1e3))}),Ve(a,()=>{i()}),(d,f)=>{const p=rt("el-button"),b=rt("el-input"),A=rt("el-table-column"),h=rt("el-table"),m=rt("el-popover");return K(),ie(m,{"popper-class":`popper reader-${c(r).theme}`,width:"350",trigger:"hover",onShow:i,onHide:o},{reference:B(()=>[C(p,{size:"small",icon:c(Ck),circle:""},null,8,["icon"])]),default:B(()=>[z("div",HSe,[C(b,{modelValue:l.value,"onUpdate:modelValue":f[0]||(f[0]=v=>l.value=v),size:"small",width:"300",placeholder:"search"},null,8,["modelValue"])]),(K(),ie(h,{key:c(a).length,"show-header":!1,data:c(a),onCellClick:s},{default:B(()=>[C(A,{prop:"label",width:"350"})]),_:1},8,["data"]))]),_:1},8,["popper-class"])}}};const hu=e=>(Mr("data-v-9a7c8f50"),e=e(),Dr(),e),GSe={class:"table"},CSe=hu(()=>z("td",null," Flow ",-1)),MSe=hu(()=>z("td",null," Theme ",-1)),DSe=hu(()=>z("td",null," Line Spacing ",-1)),ESe=hu(()=>z("td",null," Font Size ",-1)),ISe=hu(()=>z("td",null,"Font",-1)),BSe=hu(()=>z("td",null,"reset",-1)),YSe={__name:"ThemeMenu",emits:["style-change","theme-change","flow-change"],setup(e,{emit:t}){const n=bu(),{lineSpacing:r,theme:a,flow:l,font:o,fontSize:i}=hJ(n),s=()=>{const u={p:{"font-family":o.value!==""?`${o.value} !important`:"!invalid-hack","font-size":i.value!==""?`${i.value} !important`:"!invalid-hack"},body:{"font-family":o.value!==""?`${o.value} !important`:"!invalid-hack"},"*":{"line-height":`${r.value} !important`,"font-size":i.value!==""?`${i.value}% !important`:"!invalid-hack"}};t("style-change",u)};return At(()=>{s()}),Ve(()=>[r,o,i],()=>{s()},{deep:!0}),Ve(a,u=>{t("theme-change",u)}),Ve(l,u=>{t("flow-change",u)}),(u,d)=>{const f=rt("el-button"),p=rt("el-radio-button"),b=rt("el-radio-group"),A=rt("el-input-number"),h=rt("el-option"),m=rt("el-select"),v=rt("el-popover");return K(),ie(v,{"popper-class":c(a),trigger:"hover",width:270},{reference:B(()=>[C(f,{size:"small",icon:c(wE),circle:""},null,8,["icon"])]),default:B(()=>[z("table",GSe,[z("tr",null,[CSe,z("td",null,[C(b,{modelValue:c(l),"onUpdate:modelValue":d[0]||(d[0]=S=>Qt(l)?l.value=S:null),size:"small",style:{"flex-wrap":"nowrap"}},{default:B(()=>[C(p,{label:"paginated",border:""},{default:B(()=>[Xt(" Paged ")]),_:1}),C(p,{label:"scrolled-doc",border:""},{default:B(()=>[Xt(" Scrolled ")]),_:1})]),_:1},8,["modelValue"])])]),z("tr",null,[MSe,z("td",null,[C(b,{modelValue:c(a),"onUpdate:modelValue":d[1]||(d[1]=S=>Qt(a)?a.value=S:null),size:"small"},{default:B(()=>[C(p,{label:"default",border:""},{default:B(()=>[Xt(" Light ")]),_:1}),C(p,{label:"tan",border:""},{default:B(()=>[Xt(" Tan ")]),_:1}),C(p,{label:"dark",border:""},{default:B(()=>[Xt(" Dark ")]),_:1})]),_:1},8,["modelValue"])])]),z("tr",null,[DSe,z("td",null,[C(A,{modelValue:c(r),"onUpdate:modelValue":d[2]||(d[2]=S=>Qt(r)?r.value=S:null),precision:2,step:.1,min:1.3,max:2,size:"small"},null,8,["modelValue","step","min","max"])])]),z("tr",null,[ESe,z("td",null,[C(A,{modelValue:c(i),"onUpdate:modelValue":d[3]||(d[3]=S=>Qt(i)?i.value=S:null),step:2,min:10,max:300,size:"small"},null,8,["modelValue"])])]),z("tr",null,[ISe,z("td",null,[C(m,{teleported:!1,modelValue:c(o),"onUpdate:modelValue":d[4]||(d[4]=S=>Qt(o)?o.value=S:null),class:"font-select",width:"50",size:"small"},{default:B(()=>[C(h,{label:"Default",value:""}),C(h,{label:"Arial",value:"Arial"}),C(h,{label:"Times New Roman",value:"Times New Roman"})]),_:1},8,["modelValue"])])]),z("tr",null,[BSe,z("td",null,[C(f,{onClick:c(n).reset},{default:B(()=>[Xt("reset all")]),_:1},8,["onClick"])])])])]),_:1},8,["popper-class"])}}},QSe=xt(YSe,[["__scopeId","data-v-9a7c8f50"]]);const _Se={name:"BubleMenu",data(){return{isVisible:!1,translateTo:"gu",translatedText:"",text:""}},methods:{setProps(e,t,n){let r=this.$refs.popRef;r.style.left=e.left,r.style.top=e.top,r.style.width=e.width,r.style.height=e.height,console.log(e),this.text=t,this.cfiRange=n,this.translateText(),this.isVisible=!0},hide(){this.isVisible=!1,this.text="",this.translatedText="No Data",this.cfiRange=""},show(){this.isVisible=!0},onHLBtn(){this.cfiRange!==""&&this.$emit("highlight-btn-click",this.cfiRange)},copyText(){const e=document.createElement("textarea");e.style.position="absolute",e.style.left="-9999px",e.value=this.text,document.body.appendChild(e),e.select(),document.execCommand("copy"),document.body.removeChild(e)},translateText(){}}},$Se={class:"el-popover__title"},eye=z("template",{slot:"prepend"},[Xt(" Translate to ")],-1),tye={ref:"popRef",style:{position:"absolute",visibility:"hidden"}};function nye(e,t,n,r,a,l){const o=rt("el-button"),i=rt("el-button-group"),s=rt("el-input"),u=rt("el-popover"),d=ho("popover");return K(),ie(u,{modelValue:a.isVisible,"onUpdate:modelValue":t[1]||(t[1]=f=>a.isVisible=f),"popper-class":"buble",trigger:"manual"},{reference:B(()=>[z("span",tye,null,512)]),default:B(()=>[C(i,null,{default:B(()=>[C(o,{size:"small",icon:"brush",onClick:l.onHLBtn},null,8,["onClick"]),C(o,{size:"small",icon:"copy-document",onClick:l.copyText},null,8,["onClick"]),Vt(C(o,{size:"small",icon:"collection"},null,512),[[d,void 0,"translatePop"]])]),_:1}),C(u,{ref:"translatePop",width:"200",trigger:"hover"},{reference:B(()=>[Xt(je(a.translatedText),1)]),default:B(()=>[z("div",$Se,[C(s,{modelValue:a.translateTo,"onUpdate:modelValue":t[0]||(t[0]=f=>a.translateTo=f),placeholder:"Language Code",width:"30",size:"small"},{default:B(()=>[eye]),_:1},8,["modelValue"])])]),_:1},512)]),_:1},8,["modelValue"])}const rye=xt(_Se,[["render",nye]]),aye=async e=>{const{toc:t}=e.navigation,{spine:n}=e,r=s=>(s.startsWith("..")&&(s=s.substring(2)),s.startsWith("/")&&(s=s.substring(1)),s),a=s=>s.split("#")[0],l=s=>s.split("#")[1],o=[],i=async(s,u)=>{for(let d=0;d<s.length;d+=1){const f=r(s[d].href),p=a(f),b=l(f),A=n.get(p);await A.load(e.load.bind(e));const h=A.document.getElementById(b),m=A.cfiFromElement(h),v=e.locations.percentageFromCfi(m);u[d]={label:s[d].label.trim(),children:[],href:f,cfi:m,percentage:v},s[d].subitems&&await i(s[d].subitems,u[d].children)}};return await i(t,o),o},lye=async(e,t,n)=>{!e||typeof e!="string"||t.ready.then(()=>t.locations.generate()).then(async r=>{const a=t.package.metadata,l={title:a.title,author:a.creator,publisher:a.publisher,path:e,bookmarks:[],highlights:[],bgColorFromCover:"",toc:await aye(t),locations:r};n&&n(l,t)})},oye={body:{background:"#444 !important",color:"#fff !important"},"*":{color:"inherit !important",background:"inherit !important"},"a:link":{color:"#1e83d2 !important","text-decoration":"none !important"},"a:link:hover":{background:"rgba(0, 0, 0, 0.1) !important"}},iye={body:{background:"#fdf6e3 !important",color:"#002b36 !important"},"*":{color:"inherit !important",background:"inherit !important"},"a:link":{color:"#268bd2 !important","text-decoration":"none !important"},"a:link:hover":{background:"rgba(0, 0, 0, 0.1) !important"}};const sye={__name:"Reader",props:{bookInfo:{type:[Object,Number,ArrayBuffer]}},emits:["update:showReader","theme-change"],setup(e,{emit:t}){const n=e,r=bu(),a=J(!1),l=J({}),o=J(""),i=X(()=>n.bookInfo.url?`/vue-reader/books/${n.bookInfo.url}`:n.bookInfo);let s=null,u=null;const d=Y=>{s=Y;const Q=s.book;s.on("rendered",(ee,oe)=>{sJ(oe.document,s,O)}),s.on("relocated",ee=>{V.value.push(ee.start.cfi),m.value=Q.locations.percentageFromCfi(ee.start.cfi)}),s.hooks.content.register(Z),Q.ready.then(()=>{const ee=Q.package.metadata;return console.log(Q.package.metadata),o.value=ee.title,Q.locations.generate()}).then(async ee=>{s.themes.registerRules("dark",oye),s.themes.registerRules("tan",iye),s.ready=!0;const{theme:oe,flow:Ne}=r;j(oe),L(Ne),await lye(i.value,Q,pe=>{l.value=pe,u=function me(ce){return[].concat(...ce.map(Le=>[Le].concat(...me(Le.children))))}(pe.toc),u.sort((me,ce)=>me.percentage-ce.percentage)})}).then(()=>{a.value=!0}).then(()=>{a.value=!0})},f=J([]),p=J(""),b=(Y,Q)=>{let ee="n/a";return Y.some(oe=>{if(oe.subitems.length>0){const Ne=b(oe.subitems,Q);if(Ne!=="n/a")return ee=Ne,!0}else if(oe.href.includes(Q))return ee=oe.label,!0}),ee},A=Y=>{if(Y){const{displayed:Q,href:ee}=s.location.start;if(s.location.end,ee!=="titlepage.xhtml"){const oe=b(f.value,ee);p.value=`${Q.page}/${Q.total} ${oe}`}}};At(()=>{});const h=J(0),m=J(0),v=Y=>{let Q=S(Y);return Q?Q.label:""},S=Y=>{if(!u)return{};Y/=100;for(let Q=0;Q<u.length;Q+=1)if(u[Q].percentage>Y)return u[Q-1];return null},y=Y=>{let Q=s.book.locations.cfiFromPercentage(Y/100);s.display(Q)},W=J(0);(Y=>{var Q=XMLHttpRequest.prototype.open;XMLHttpRequest.prototype.open=function(){this.addEventListener("progress",function(ee){ee.lengthComputable&&Y(ee.loaded/ee.total)},!1),Q.apply(this,arguments)}})(Y=>{W.value=Math.round(Y*100)});const V=J([]),T=()=>{V.value.pop();let Y=V.value.pop();Y?s.display(Y):t("update:showReader",!1)},P=()=>{t("update:showReader",!1)},x=Y=>{console.log(Y.cfi,Y.href),s.display(Y.cfi||Y.href)},g=J({}),j=Y=>{s.themes.select(Y),r.theme=Y,R(),t("theme-change",Y)},L=Y=>{!s.ready||s.flow(Y)},w=Y=>{g.value=Y,Z(),R()},R=()=>{s&&s.manager&&s.start()},Z=()=>{!s||s.getContents().forEach(Y=>{Y.addStylesheetRules(g.value)})},G=J([]),U=Y=>{const Q=s.book;return Promise.all(Q.spine.spineItems.map(ee=>ee.load(Q.load.bind(Q)).then(ee.find.bind(ee,Y)).finally(ee.unload.bind(ee)))).then(ee=>ee.flat()).then(ee=>{G.value=ee.map(oe=>(oe.label=oe.excerpt,oe))}).then(()=>{})},H=J(null),O=(Y,Q,ee,oe)=>{if(Y==="cleared"){H.value.hide();return}console.log(H.value),H.value.setProps(Q,ee,oe),H.value.isBubleVisible=!0},D=Y=>{s.annotations.highlight(Y)};return(Y,Q)=>{const ee=rt("el-button"),oe=rt("el-button-group"),Ne=rt("el-progress"),pe=rt("el-main"),me=rt("el-slider"),ce=rt("el-footer"),Le=rt("el-container"),Te=ho("loading");return K(),ie(Le,{direction:"vertical"},{default:B(()=>[C(MK,{title:o.value},{default:B(()=>[C(oe,null,{default:B(()=>[C(ee,{size:"small",icon:c(Jk),circle:"",onClick:T},null,8,["icon"]),C(ee,{size:"small",icon:c(DD),circle:"",onClick:P},null,8,["icon"])]),_:1}),C(zSe,{toc:l.value.toc,onNodeClick:x},null,8,["toc"]),C(ZSe,{"search-result":G.value,onNodeClick:x,onSearch:U},null,8,["search-result"]),C(QSe,{onThemeChange:j,onFlowChange:L,onStyleChange:w})]),_:1},8,["title"]),C(pe,{class:"container"},{default:B(()=>[Vt((K(),ie(c(G4),{id:"reader",url:c(i),getRendition:d,title:p.value,epubOptions:{allowPopups:!0,allowScriptedContent:!0},"onUpdate:location":A},{loadingView:B(()=>[C(Ne,{percentage:W.value},null,8,["percentage"])]),_:1},8,["url","title"])),[[Te,!a.value]])]),_:1}),C(ce,{height:"45"},{default:B(()=>[C(me,{modelValue:h.value,"onUpdate:modelValue":Q[0]||(Q[0]=xe=>h.value=xe),step:.01,"format-tooltip":v,onChange:y},null,8,["modelValue","step"])]),_:1}),C(rye,{ref_key:"bubleMenu",ref:H,onHighlightBtnClick:D},null,512)]),_:1})}}},uye=xt(sye,[["__scopeId","data-v-29e6f5ff"]]);const cye={__name:"index",setup(e){const t=bu(),n=J(!1),r=J({}),a=l=>{r.value=l,n.value=!0};return(l,o)=>(K(),F("div",{id:"index",ref:"app",class:q("reader-"+c(t).theme)},[C(fn,{name:"el-fade-in-linear"},{default:B(()=>[n.value?ae("",!0):(K(),ie(OSe,{key:0,"onUpdate:currentBook":a,showReader:n.value,"onUpdate:showReader":o[0]||(o[0]=i=>n.value=i)},null,8,["showReader"]))]),_:1}),C(fn,{name:"el-fade-in-linear"},{default:B(()=>[n.value?(K(),ie(uye,{key:0,bookInfo:r.value,"onUpdate:showReader":o[1]||(o[1]=i=>n.value=i)},null,8,["bookInfo"])):ae("",!0)]),_:1})],2))}},dye=xt(cye,[["__scopeId","data-v-30716b1e"]]),PN=cJ();pW(()=>import("./chunks/index.4ab8aaf6.js"),[]).then(e=>{PN.use(e.default)});const Ns={...hy,enhanceApp(e){hy.enhanceApp(e);const{app:t,siteData:n}=e;t.component("VueReader",uJ),t.component("Demo",oU),t.component("DemoBlock",cU),t.use(Gme),t.use(PN),t.component("Reader",dye)}};function fye(e,t){let n=[],r=!0;const a=l=>{if(r){r=!1;return}n.forEach(o=>document.head.removeChild(o)),n=[],l.forEach(o=>{const i=pye(o);document.head.appendChild(i),n.push(i)})};Dn(()=>{const l=e.data,o=t.value,i=l&&l.description,s=l&&l.frontmatter.head||[];document.title=bW(o,l),document.querySelector("meta[name=description]").setAttribute("content",i||o.description),a(q6(o.head,bye(s)))})}function pye([e,t,n]){const r=document.createElement(e);for(const a in t)r.setAttribute(a,t[a]);return n&&(r.innerHTML=n),r}function vye(e){return e[0]==="meta"&&e[1]&&e[1].name==="description"}function bye(e){return e.filter(t=>!vye(t))}const c1=new Set,TN=()=>document.createElement("link"),hye=e=>{const t=TN();t.rel="prefetch",t.href=e,document.head.appendChild(t)},mye=e=>{const t=new XMLHttpRequest;t.open("GET",e,t.withCredentials=!0),t.send()};let hf;const Sye=Or&&(hf=TN())&&hf.relList&&hf.relList.supports&&hf.relList.supports("prefetch")?hye:mye;function yye(){if(!Or||!window.IntersectionObserver)return;let e;if((e=navigator.connection)&&(e.saveData||/2g/.test(e.effectiveType)))return;const t=window.requestIdleCallback||setTimeout;let n=null;const r=()=>{n&&n.disconnect(),n=new IntersectionObserver(l=>{l.forEach(o=>{if(o.isIntersecting){const i=o.target;n.unobserve(i);const{pathname:s}=i;if(!c1.has(s)){c1.add(s);const u=hW(s);Sye(u)}}})}),t(()=>{document.querySelectorAll("#app a").forEach(l=>{const{target:o,hostname:i,pathname:s}=l,u=s.match(/\.\w+$/);u&&u[0]!==".html"||o!=="_blank"&&i===location.hostname&&(s!==location.pathname?n.observe(l):c1.add(s))})})};At(r);const a=Hl();Ve(()=>a.path,r),mr(()=>{n&&n.disconnect()})}const Aye=$({setup(e,{slots:t}){const n=J(!1);return At(()=>{n.value=!0}),()=>n.value&&t.default?t.default():null}});function Wye(){if(Or){const e=new Map;window.addEventListener("click",t=>{var r;const n=t.target;if(n.matches('div[class*="language-"] > button.copy')){const a=n.parentElement,l=(r=n.nextElementSibling)==null?void 0:r.nextElementSibling;if(!a||!l)return;const o=/language-(shellscript|shell|bash|sh|zsh)/.test(a.className);let i="";l.querySelectorAll("span.line:not(.diff.remove)").forEach(s=>i+=(s.textContent||"")+`
`),i=i.slice(0,-1),o&&(i=i.replace(/^ *(\$|>) /gm,"").trim()),kye(i).then(()=>{n.classList.add("copied"),clearTimeout(e.get(n));const s=setTimeout(()=>{n.classList.remove("copied"),n.blur(),e.delete(n)},2e3);e.set(n,s)})}})}}async function kye(e){try{return navigator.clipboard.writeText(e)}catch{const t=document.createElement("textarea"),n=document.activeElement;t.value=e,t.setAttribute("readonly",""),t.style.contain="strict",t.style.position="absolute",t.style.left="-9999px",t.style.fontSize="12pt";const r=document.getSelection(),a=r?r.rangeCount>0&&r.getRangeAt(0):null;document.body.appendChild(t),t.select(),t.selectionStart=0,t.selectionEnd=e.length,document.execCommand("copy"),document.body.removeChild(t),a&&(r.removeAllRanges(),r.addRange(a)),n&&n.focus()}}const KN=Ns.NotFound||(()=>"404 Not Found"),Vye=$({name:"VitePressApp",setup(){const{site:e}=dn();return At(()=>{Ve(()=>e.value.lang,t=>{document.documentElement.lang=t},{immediate:!0})}),yye(),Wye(),Ns.setup&&Ns.setup(),()=>st(Ns.Layout)}});function Pye(){const e=Kye(),t=Tye();t.provide(SW,e);const n=J6(e.route);return t.provide(mW,n),t.provide("NotFound",KN),t.component("Content",Z6),t.component("ClientOnly",Aye),Object.defineProperty(t.config.globalProperties,"$frontmatter",{get(){return n.frontmatter.value}}),Ns.enhanceApp&&Ns.enhanceApp({app:t,router:e,siteData:Ls}),{app:t,router:e,data:n}}function Tye(){return dW(Vye)}function Kye(){let e=Or,t;return z6(n=>{let r=hW(n);return e&&(t=r),(e||t===r)&&(r=r.replace(/\.js$/,".lean.js")),Or&&(e=!1),pW(()=>import(r),[])},KN)}if(Or){const{app:e,router:t,data:n}=Pye();t.go().then(()=>{fye(t.route,n.site),e.mount("#app")})}export{xye as V,xt as _,z as a,C as b,F as c,Pye as createApp,F7 as d,Xt as e,K as o,rt as r,B as w};
